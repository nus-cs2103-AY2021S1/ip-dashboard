[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.6.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 32,
      "TCQian": 18
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "E | 1 | TDC Meeting | Sep 02 2020 10:00"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "D | 0 | TDC Tshirt Design | Sep 12 2020 23:59"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "T | 0 | CS2103T"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "E | 1 | choir meeting | Sep 2 2020 07:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "D | 0 | CS2106 Lab Assignment | Sep 05 2020 23:59"
      }
    ],
    "authorContributionMap": {
      "TCQian": 5
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Command class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Handle \"bye\" command."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String END \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks an object includes a list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui ui."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage the storage that working on data file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return END;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isExit to show stop reading user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return true to indicate an end."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 27
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Abstract class for handling different commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 7
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Contains a task description and a time."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor of Deadline object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param by the deadline of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Overloaded constructor of Deadline object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param isDone the status of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param by the deadline of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the description of the deadline task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return the description of the deadline task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the icon for corresponding status of task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return sign of tick or cross."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Marks the deadline task as done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return new Deadline object with true for isDone."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Deadline markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return new Deadline(this.description, true, this.by);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Turns task object into a string to be saved in data file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return string in the format of data in data file."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String toStringOfDatabase() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String number \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return \"D | \" + number + \" | \" + this.description + \" | \" + this.by;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Prints object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return string of object."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 73
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Handles \"deadline\" command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String ADD_TASK_TITLE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String[] input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DeadlineCommand(String[] input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks a list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui ui."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage the storage working on data file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws DeadlineException to show incorrect user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DeadlineException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        UndoStack.add(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        int index \u003d getIndexOfBy();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (input.length \u003d\u003d 1 || index \u003d\u003d 1) { //no description"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DeadlineException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (index \u003d\u003d input.length - 1 || index \u003d\u003d 0) { //no time"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DeadlineException(\"☹ OOPS!!! The time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String description \u003d getDescriptionFromUserInput(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Date date \u003d getDateFromUserInput(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Deadline newTask \u003d new Deadline(description, new SimpleDateFormat(\"MMM dd yyyy HH:mm\").format(date));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        store.add(newTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        storage.save(new TaskList(store));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return ADD_TASK_TITLE + \"\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                + newTask + \"\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                + \"Now you have \" + store.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Gets the index number of \"/by\"."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return index number of \"/by\"."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public int getIndexOfBy() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (int i \u003d 1; i \u003c input.length; i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            if (input[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                index \u003d i;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Get the description of the task from the user input."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param index index number of \"/by\"."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return description."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String getDescriptionFromUserInput(int index) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (int i \u003d 1; i \u003c index; i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            description \u003d description + input[i] + \" \";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        // trim is to remove the extra space at the end of the description"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        // caused when description is retrieved from user input"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return description.trim();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Get the time of the task from the user input."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param index index number of \"/by\"."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return time."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Date getDateFromUserInput(int index) throws DeadlineException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (int i \u003d index + 1; i \u003c input.length; i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            time \u003d time + input[i] + \" \";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        // trim is to remove the extra space at the end of the time"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        // caused when time is retrieved from user input"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        time \u003d time.trim();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            date \u003d formatter.parse(time);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DeadlineException(\" ☹ OOPS!!! The time of a deadline must be in the format of dd/M/yyyy hhmm.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isDone to stop user from entering command."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return false to continue to accept user input."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 110
    }
  },
  {
    "path": "src/main/java/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of TaskException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Shows error for deadline tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DeadlineException extends TaskException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DeadlineException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 9
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Handles \"delete\" command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String DELETE_TITLE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String[] input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * A subclass of command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DeleteCommand(String[] input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Execute the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks list of existing tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui Ui."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage storage of data."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws DeleteException exception for invalid input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DeleteException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        UndoStack.add(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (this.input.length \u003d\u003d 1) { //incomplete done command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DeleteException(\"☹ OOPS!!! The description of a delete cannot be empty.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        int indexOfMarkingTask \u003d Integer.parseInt(this.input[1]) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (indexOfMarkingTask + 1 \u003e store.size() || indexOfMarkingTask + 1 \u003c\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DeleteException(\"☹ OOPS!!! There is no such task.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        //complete done command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Task deletingTask \u003d store.get(indexOfMarkingTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        store.remove(indexOfMarkingTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        storage.save(new TaskList(store));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return DELETE_TITLE + \"\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                + deletingTask + \"\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                + \"Now you have \" + store.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isDone to stop user from entering command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return false to continue to accept user input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TCQian": 58
    }
  },
  {
    "path": "src/main/java/DeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of DukeException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Shows error for delete class."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DeleteException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DeleteException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 9
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 59
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Handles \"done\" command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String DONE_TITLE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String[] input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * A subclass of command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DoneCommand(String[] input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks list of existing tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui Ui."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage storage of the data."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws DoneException exception for invalid input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DoneException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        UndoStack.add(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (input.length \u003d\u003d 1) { //incomplete done command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DoneException(\"☹ OOPS!!! The description of a done cannot be empty.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        int indexOfMarkingTask \u003d Integer.parseInt(input[1]) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (indexOfMarkingTask + 1 \u003e store.size() || indexOfMarkingTask + 1 \u003c\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DoneException(\"☹ OOPS!!! There is no such task.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        //complete done command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Task markingTask \u003d store.get(indexOfMarkingTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Task markedTask \u003d markingTask.markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        store.set(indexOfMarkingTask, markedTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        storage.save(new TaskList(store));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return DONE_TITLE + \"\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                + markedTask;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isDone to stop user from entering command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return false to continue to accept user input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 57
    }
  },
  {
    "path": "src/main/java/DoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of DukeException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Shows error for done class."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DoneException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DoneException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 9
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Returns typing box to allow user to type command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Instantiates ui, read date from file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Acts as default state if no data file is to be read."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            UndoStack.initialize();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            storage \u003d new Storage(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            tasks \u003d new TaskList(null);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Instantiates ui, read date from file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param filePath file path of the file to be read."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            tasks \u003d new TaskList(null);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Reads the user input, parse it to parser, call correspond command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                System.out.println(c.execute(tasks, ui, storage));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        new Duke(\"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "TCQian": 70
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * An subclass of TaskException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Shows error for invalid input."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Contains a task description and a time."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor of Event object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param at the time of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor of Event object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param isDone the status of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param at the time of the event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the description of the deadline task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return the description of the deadline task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the icon for corresponding status of task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return sign of tick or cross."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Marks the event task as done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return new Deadline object with true for isDone."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Event markAsDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return new Event(this.description, true, this.at);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Turns task object into a string to be saved in data file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return string in the format of data in data file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String toStringOfDatabase() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String number \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return \"E | \" + number + \" | \" + this.description + \" | \" + this.at;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Prints object."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return string of object."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return \"[E]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 74
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Handles \"event\" command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String ADD_TASK_TITLE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String[] input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public EventCommand(String[] input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks a list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui ui."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage the storage working on data file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws EventException to show incorrect user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws EventException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        UndoStack.add(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        int index \u003d getIndexOfAt();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (input.length \u003d\u003d 1 || index \u003d\u003d 1) { // no description"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new EventException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (index \u003d\u003d input.length - 1 || index \u003d\u003d 0) { //no time"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new EventException(\"☹ OOPS!!! The time of a event cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String description \u003d getDescriptionFromUserInput(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Date date \u003d getDateFromUserInput(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Event newTask \u003d new Event(description, new SimpleDateFormat(\"MMM dd yyyy HH:mm\").format(date));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        store.add(newTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        storage.save(new TaskList(store));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return ADD_TASK_TITLE + \"\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                + newTask + \"\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                + \"Now you have \" + store.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Gets the index number of \"/at\"."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return index number of \"/at\"."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public int getIndexOfAt() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (int i \u003d 1; i \u003c input.length; i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            if (input[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                index \u003d i;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Get the description of the task from the user input."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param index index number of \"/at\"."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return description."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String getDescriptionFromUserInput(int index) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (int i \u003d 1; i \u003c index; i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            description \u003d description + input[i] + \" \";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        // trim is to remove the extra space at the end of the description"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        // caused when description is retrieved from user input"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return description.trim();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Get the time of the task from the user input."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param index index number of \"/at\"."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return time."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Date getDateFromUserInput(int index) throws EventException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (int i \u003d index + 1; i \u003c input.length; i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            time \u003d time + input[i] + \" \";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        // trim is to remove the extra space at the end of the time"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        // caused when time is retrieved from user input"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        time \u003d time.trim();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            date \u003d formatter.parse(time);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new EventException(\" ☹ OOPS!!! The time of a deadline must be in the format of dd/M/yyyy hhmm.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isDone to stop user from entering command."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return false to continue to accept user input."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 110
    }
  },
  {
    "path": "src/main/java/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * An subclass of TaskException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Shows error for event tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class EventException extends TaskException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public EventException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 9
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " *  A subclass of Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": " *  Handles \"find\" command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String FIND_TITLE \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String[] input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public FindCommand(String[] input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks a list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui ui."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage the storage working on data file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws FindException to show incorrect user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws FindException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (input.length \u003d\u003d 1) { //incomplete done command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new FindException(\" ☹ OOPS!!! The description of a find cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String keyword \u003d input[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (Task task : store) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            String[] description \u003d task.getDescription().split(\"\\\\s\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            boolean isFound \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            for (String word : description) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                if (word.equals(keyword)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                    isFound \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            if (isFound) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                filteredList.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (filteredList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new FindException(\"☹ OOPS!!! There is no task with this keyword.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String output \u003d FIND_TITLE + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (Task task : filteredList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            output +\u003d i++ + \".\" + task + \"\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isDone to stop user from entering command."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return false to continue to accept user input."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 68
    }
  },
  {
    "path": "src/main/java/FindException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of DukeException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Show error for find command."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class FindException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public FindException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 9
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Handles \"list\" command."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String LIST_TITLE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks a list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui ui."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage a storage working on data file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String output \u003d LIST_TITLE + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (Task task : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            output +\u003d i++ + \".\" + task + \"\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isDone to stop user from entering command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return false to continue to accept user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 32
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Initialises the GUI"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                DialogBox.getDukeDialog(\"Hello! I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\" , dukeImage)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Sets the duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param d duke."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 59
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Parser handles the user input and parse them to corresponding command class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Parses user input to corresponding command class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return the object of command class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws DukeException exception for invalid user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        assert input.length() \u003e 0 : \"There is no user input.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String[] words \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String firstWord \u003d words[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (input.equals(\"bye\")) { //bye command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (input.equals(\"list\")) { //list command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            System.out.println(\"list\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (input.equals(\"undo\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new UndoCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (firstWord.equals(\"find\")) { //find command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new FindCommand(words);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (firstWord.equals(\"done\")) { //done command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new DoneCommand(words);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (firstWord.equals(\"delete\")) { //done command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            System.out.println(\"delete\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new DeleteCommand(words);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (firstWord.equals(\"todo\")) { //todo command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            System.out.println(\"todo\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new TodoCommand(words);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (firstWord.equals(\"deadline\")) { //complete deadline command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new DeadlineCommand(words);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new EventCommand(words);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else { //exception handler"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 40
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A class to get data from and send data to the data file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param filePath the path of data file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        assert filePath.length() \u003e 0 : \"File Path should not be empty\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Reads data from data file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return a list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws DukeException to show error in reading the data file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            Scanner sc \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                String[] str \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                String title \u003d str[0].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                boolean isDone \u003d str[1].trim().equals(1 + \"\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                if (title.equals(\"T\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                    store.add(new Todo(str[2].trim(), isDone));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                } else if (title.equals(\"D\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                    store.add(new Deadline(str[2].trim(), isDone, str[3].trim()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                    store.add(new Event(str[2].trim(), isDone, str[3].trim()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return store;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DukeException(\"File not found\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Wrties data to the data file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks an updated list of tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        assert tasks !\u003d null : \"There is not task to be saved\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            for (Task task : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                fw.write(task.toStringOfDatabase() + \"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 66
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A abstract class of task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Contains abstract methods to be overridden by sub classes."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public abstract String getDescription();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public abstract String getStatusIcon();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public abstract Task markAsDone();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public abstract String toStringOfDatabase();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 10
    }
  },
  {
    "path": "src/main/java/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * An subclass of Exception."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Shows error for tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class TaskException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public TaskException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 9
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A class to handle the list of existing tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Overloaded constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks list of existing tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        assert tasks !\u003d null : \"Null should not be passed in to the constructor of TaskList.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the list of existing tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return the list of existing tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Set the tasks to the given list of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param taskList new list of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void setTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.tasks \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 40
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Contains a task description and a time."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor of Todo object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Overloaded constructor of Todo object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param isDone the status of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the description of the todo task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return the description of the todo task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the icon for corresponding status of task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return sign of tick or cross."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Marks the Todo task as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return new Todo object with true for isDone."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Todo markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return new Todo(this.description, true);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Turns task object into a string to be saved in data file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return string in the format of data in data file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String toStringOfDatabase() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String number \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return \"T | \" + number + \" | \" + this.description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Prints object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return string of object."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return \"[T]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 68
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Handles \"todo\" command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String ADD_TASK_TITLE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String[] input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public TodoCommand(String[] input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks a list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui ui."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage the storage working on data file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws TodoException to show incorrect user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws TodoException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        UndoStack.add(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new TodoException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (int i \u003d 1; i \u003c input.length; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            description \u003d description + input[i] + \" \";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Todo newTask \u003d new Todo(description.trim());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        store.add(newTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        storage.save(new TaskList(store));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return ADD_TASK_TITLE + \"\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                + newTask + \"\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                + \"Now you have \" + store.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isDone to stop user from entering command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return false to continue to accept user input."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 55
    }
  },
  {
    "path": "src/main/java/TodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * An subclass of TaskException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Shows error for todo tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class TodoException extends TaskException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public TodoException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 9
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A class of User Interface."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String TAB \u003d \"  \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String LINE_BREAKER \u003d TAB"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            + \"_________________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String GREET \u003d TAB + \" Hello! I\u0027m Duke\" + \"\\n\" + TAB + \" What can I do for you?\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    protected final Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Instantiate a scanner to read the user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the opening greeting."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(LINE_BREAKER);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(GREET);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(LINE_BREAKER);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the divider."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(LINE_BREAKER);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the error message of the loading issue."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(TAB + \"Loading fails\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the error message."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param msg error message from the exception."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void showError(String msg) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(TAB + msg);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Reads the user input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return the user input."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 60
    }
  },
  {
    "path": "src/main/java/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Handles \"undo\" command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String UNDO_TITLE \u003d \" I\u0027ve undo the action.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static Stack\u003cTaskList\u003e stack;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * A subclass of command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public UndoCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks list of existing tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui Ui."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage storage of the data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws UndoException exception for invalid input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws UndoException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        TaskList previousTaskList \u003d UndoStack.getPreviousTaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        tasks.setTaskList(previousTaskList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        storage.save(previousTaskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return UNDO_TITLE;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isDone to stop user from entering command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return false to continue to accept user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 41
    }
  },
  {
    "path": "src/main/java/UndoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * An subclass of DukeException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Shows error for todo tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class UndoException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public UndoException() { super(\"There is no previous action.\"); }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public UndoException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 10
    }
  },
  {
    "path": "src/main/java/UndoStack.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * The stack to store all lists of tasks after every action."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * This is for the undo action."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class UndoStack {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static Stack\u003cTaskList\u003e stack;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public UndoStack() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        stack \u003d new Stack\u003cTaskList\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns a static stack for undo action."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public static void initialize() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        new UndoStack();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Adds the current list of task into the stack."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param taskList current list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public static void add(TaskList taskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(\"stack added\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        stack.push(new TaskList(new ArrayList\u003cTask\u003e(taskList.getTaskList())));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Gets the previous list of tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return previous list of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws UndoException"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public static TaskList getPreviousTaskList() throws UndoException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (stack.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new UndoException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return stack.pop();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 47
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/10.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "      \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "TCQian": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "TCQian": 19
    }
  },
  {
    "path": "src/test/java/ByeCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "class ByeCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    void isExitTest_getIsExitOfByeCmd_returnsTrue() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        assertEquals(new ByeCommand().isExit(), true);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 12
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void dummyTest_checkTwoNumbers_returnsTrue() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 10
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    void toStringTest_getStringOfEventTask_returnsExpectedString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Event e1 \u003d new Event(\"party\", \"12-2-2020 2000\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String expected \u003d \"[E]\" + \"[\" + \"\\u2718\" + \"] \" + \"party\" + \" (at: 12-2-2020 2000)\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        assertEquals(e1.toString(), expected);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 12
    }
  },
  {
    "path": "src/test/java/TodoCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "class TodoCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    void isExitTest_getIsExitOfTodoCmd_returnsFalse() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String[] input \u003d \"test case\".split(\"\\\\s\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        assertEquals(new TodoCommand(input).isExit(), false);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 13
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TCQian": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "TCQian": 13
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "TCQian": 5
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/TaskList.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/EventCommand.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/EventException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/ByeCommand.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Storage.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/DeleteCommand.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/ListCommand.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Parser.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Command.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/TodoCommand.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/DeadlineException.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Ui.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/TaskException.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/DeleteException.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/DoneException.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/FindException.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/DeadlineCommand.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/TodoException.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/FindCommand.java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/DoneCommand.java"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "TCQian": 26
    }
  }
]
