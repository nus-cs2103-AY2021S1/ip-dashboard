[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 2,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "D | 0 | cs2103 project | 2020-06-26 2359"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 1
    }
  },
  {
    "path": "src/main/java/Command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.NoDateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.NoTaskException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.WrongDateTimeFormatException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes AddCommand class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public AddCommand(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws NoDateException, InvalidCommandException,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        NoTaskException, WrongDateTimeFormatException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            tasks \u003d tasks.add(this.command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            ui.showAddedTask(tasks.taskSize(), tasks.getAddedOrDeletedTask());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (WrongDateTimeFormatException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new WrongDateTimeFormatException(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Check if the current command is an exit command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else if (o instanceof AddCommand) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            AddCommand temp \u003d (AddCommand) o;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            if (temp.command.equals(this.command)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 59
    }
  },
  {
    "path": "src/main/java/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "abstract public class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    protected final String command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public Command(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Check if the current command is an exit command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 27
    }
  },
  {
    "path": "src/main/java/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.MissingSpecifiedDeleteError;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.WrongIndexError;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes DeleteCommand"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws MissingSpecifiedDeleteError, WrongIndexError {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            tasks \u003d tasks.delete(this.command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            ui.showDeletedTask(tasks.taskSize(), tasks.getAddedOrDeletedTask());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (MissingSpecifiedDeleteError e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new MissingSpecifiedDeleteError(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (WrongIndexError e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new WrongIndexError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Check if the current command is an exit command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Override the equals method from Object to handle DeleteCommand"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else if (o instanceof DeleteCommand) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            DeleteCommand temp \u003d (DeleteCommand) o;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            if (temp.command.equals(this.command)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 61
    }
  },
  {
    "path": "src/main/java/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.WrongIndexError;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes DoneCommand"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws WrongIndexError {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            tasks \u003d tasks.done(this.command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            ui.showDoneTask(tasks.getAddedOrDeletedTask());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (WrongIndexError e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new WrongIndexError(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Check if the current command is an exit command"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 41
    }
  },
  {
    "path": "src/main/java/Command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes ExitCommand"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public ExitCommand(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            storage.putToDatabase(tasks.getTaskList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            ui.showGoodBye();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Check if the current command is an exit command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Override the equals method from Object to handle ExitCommand"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else if (o instanceof ExitCommand) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            ExitCommand temp \u003d (ExitCommand) o;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            if (temp.command.equals(this.command)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 58
    }
  },
  {
    "path": "src/main/java/Command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.UnSpecifiedFind;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes FindCommand"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public FindCommand(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws UnSpecifiedFind {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            ui.showFoundTasks(tasks, this.command.substring(5));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new UnSpecifiedFind(\"☹ OOPS!!! Please specify the keyword to be found.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 36
    }
  },
  {
    "path": "src/main/java/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes ListCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        ui.showTasks(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Check if the current command is an exit command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 34
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The storage assigned to Duke"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The TaskList assigned to Duke"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The Ui interaction handler"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes Duke"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The main program of all file"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        new Duke(\"data\").run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Run the whole program"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 67,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes DukeException"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 14
    }
  },
  {
    "path": "src/main/java/Exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes InvalidCommandException"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 14
    }
  },
  {
    "path": "src/main/java/Exceptions/MissingSpecifiedDeleteError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class MissingSpecifiedDeleteError extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes MissingSpecifiedDeleteError"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public MissingSpecifiedDeleteError(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 14
    }
  },
  {
    "path": "src/main/java/Exceptions/NoDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class NoDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initialize NoDateException"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public NoDateException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 14
    }
  },
  {
    "path": "src/main/java/Exceptions/NoTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class NoTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes NoTaskException"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public NoTaskException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 14
    }
  },
  {
    "path": "src/main/java/Exceptions/UnSpecifiedDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class UnSpecifiedDate extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes UnSpecifiedDate"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public UnSpecifiedDate(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 14
    }
  },
  {
    "path": "src/main/java/Exceptions/UnSpecifiedFind.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class UnSpecifiedFind extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes UnspecifiedFind"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public UnSpecifiedFind(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 13
    }
  },
  {
    "path": "src/main/java/Exceptions/WrongDateTimeFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class WrongDateTimeFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes WrongDateTimeFormatException"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public WrongDateTimeFormatException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 13
    }
  },
  {
    "path": "src/main/java/Exceptions/WrongIndexError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class WrongIndexError extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes WrongIndexError"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public WrongIndexError(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 13
    }
  },
  {
    "path": "src/main/java/ParserStorageUi/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package parserstorageui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The exit command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private static String COMMAND_END \u003d \"bye\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The command to set the specified task in the list to done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private static String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The command to delete the specified task in the list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private static String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The command to show the users their current list of task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private static String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The command to find the task that matches the keyword in the list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private static String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param fullCommand"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @return the specified Command class"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        if (fullCommand.toLowerCase().contains(COMMAND_END)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return new ExitCommand(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else if (fullCommand.toLowerCase().contains(COMMAND_FIND)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return new FindCommand(fullCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else if (fullCommand.toLowerCase().contains(COMMAND_LIST)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return new ListCommand(fullCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else if (fullCommand.toLowerCase().contains(COMMAND_DONE)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else if (fullCommand.toLowerCase().contains(COMMAND_DELETE)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return new AddCommand(fullCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 57
    }
  },
  {
    "path": "src/main/java/ParserStorageUi/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package parserstorageui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The file path of the folder of duke.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The object file path for duke.txt"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private Path file;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes Storage with filePath as the parameter"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        initiateFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initiate the file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private void initiateFile() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            if (Files.notExists(Paths.get(filePath))) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                Files.createDirectory(Paths.get(filePath));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            if (Files.notExists(Paths.get(filePath + \"/duke.txt\"))) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                file \u003d Files.createFile(Paths.get(filePath + \"/duke.txt\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                file \u003d Paths.get(filePath + \"/duke.txt\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Load all the tasks from the save file to ArrayList\u003cTask\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            for (String task : Files.readAllLines(file)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                String type \u003d task.substring(0, 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                String name \u003d task.substring(8);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                int isDone \u003d Integer.parseInt(task.substring(4, 5));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                boolean isTaskDone \u003d isDone \u003d\u003d 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    temp.add(new Todo(name, isTaskDone));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    int indexOfLine \u003d name.indexOf(\"|\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    temp.add("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                        new Deadline(name.substring(0, indexOfLine - 1), isTaskDone, name.substring(indexOfLine + 2)));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    int iOL \u003d name.indexOf(\"|\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    temp.add(new Event(name.substring(0, iOL - 1), isTaskDone, name.substring(iOL + 2)));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Put back all tasks from ArrayList to the save file (duke.txt)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void putToDatabase(ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filePath + \"/duke.txt\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(fw);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    pw.println(task.getType() + \" | \" + task.isDone() + \" | \" + task.getName());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    pw.println(task.getType() + \" | \" + task.isDone() + \" | \" + task.getName() + \" | \" + task.getEnd());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 107
    }
  },
  {
    "path": "src/main/java/ParserStorageUi/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package parserstorageui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes Ui class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Show welcome message to the user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        String logo \u003d \"Hello I\u0027m Verzachtend \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            + \"BE YOURSELF, NEVER SURRENDER AND KEEP A SMILE ON YOUR FACE\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Receive input from user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return new Scanner(System.in).nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Show loading error to the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        System.out.println(\"No task found, please blablbalba\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Show error message to the user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Show line to the user"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        System.out.println(\"________________________________________________\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Show added task to the user"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void showAddedTask(int taskSize, Task added) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            + \" \" + added + \"\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            + \"Now you have \" + taskSize + \" tasks in the list.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Show deleted task to the user"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void showDeletedTask(int taskSize, Task deleted) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            + \"  \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            + deleted"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            + \"Now you have \" + taskSize + \" tasks in the list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Show the current tasks to the user"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void showTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        for (Task item : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            System.out.println(i + \". \" + item);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Show done tasks to the user"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void showDoneTask(Task done) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            + done);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Show the tasks that match the keyword"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void showFoundTasks(TaskList tasks, String keyword) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        for (Task item : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            if (item.isNameMatchKeyWord(keyword)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                System.out.println(i + \". \" + item);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Show goodbye message to the customer"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void showGoodBye() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 114
    }
  },
  {
    "path": "src/main/java/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.WrongDateTimeFormatException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The deadline of the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private final LocalDateTime deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes Deadline task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param end"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @throws WrongDateTimeFormatException"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public Deadline(String name, boolean isDone, String end) throws WrongDateTimeFormatException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            this.deadline \u003d LocalDate.parse(end.substring(0, 10)).atTime("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                Integer.parseInt(end.substring(11, 13)),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                Integer.parseInt(end.substring(13))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new WrongDateTimeFormatException("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                \"☹ OOPS!!! Please enter the deadline time in the right format. (YYYY-MM-DD HHmm)\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes deadline task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param deadline"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public Deadline(String name, boolean isDone, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Set the current task to done"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public Task setToTrue() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return new Deadline(this.name, true, this.deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Get the type of the current task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Get the deadline of the current task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public String getEnd() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return this.deadline.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Convert the task to string"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            ? \"[D][✓] \" + this.getName() + \" (by: \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            : \"[D][✗] \" + this.getName() + \" (by: \""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Override the equals from Object so that it can be used to handle deadline"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else if (o instanceof Deadline) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            Deadline temp \u003d (Deadline) o;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return this.name.equals(temp.name) \u0026\u0026 (this.isDone \u003d\u003d temp.isDone) \u0026\u0026 this.deadline.equals(temp.deadline);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 99
    }
  },
  {
    "path": "src/main/java/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.WrongDateTimeFormatException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The time of the event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private final LocalDateTime at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes event task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param end"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public Event(String name, boolean isDone, String end) throws WrongDateTimeFormatException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            this.at \u003d LocalDate.parse(end.substring(0, 10)).atTime("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                Integer.parseInt(end.substring(11, 13)),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                Integer.parseInt(end.substring(13))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new WrongDateTimeFormatException("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                \"☹ OOPS!!! Please enter the deadline time in the right format. (YYYY-MM-DD HHmm)\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public Event(String name, boolean isDone, LocalDateTime at) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Set the current event to done"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public Task setToTrue() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return new Event(this.name, true, this.at);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Get the type of the current task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Get the specific time when the event is going to be held"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public String getEnd() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return this.at.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Convert the current task to String"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            ?"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            \"[E][✓] \" + this.getName() + \" (by: \" + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            : \"[E][✗] \" + this.getName() + \" (by: \" + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            \")\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Override the equals from Object so that it can be used to handle event"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else if (o instanceof Event) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            Event temp \u003d (Event) o;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return this.name.equals(temp.name) \u0026\u0026 (this.isDone \u003d\u003d temp.isDone) \u0026\u0026 this.at.equals(temp.at);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 91
    }
  },
  {
    "path": "src/main/java/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "abstract public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The name of the current event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    protected final String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The status of the event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    protected final boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes current task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public Task(String name, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Get the name of the current task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Get the type of the current task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Check get the status of the event, return 1 if done, 0 if is not done"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public int isDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return isDone ? 1 : 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Set the current task to done"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public abstract Task setToTrue();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Get the specific time of the current task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public abstract String getEnd();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Check if the current task match the keyword"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public boolean isNameMatchKeyWord(String keyword) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return this.name.toLowerCase().contains(keyword);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 62
    }
  },
  {
    "path": "src/main/java/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.MissingSpecifiedDeleteError;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.NoDateException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.NoTaskException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.WrongDateTimeFormatException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.WrongIndexError;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The list of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * The task that have just been added or deleted or done from the list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private final Task addedOrDeletedTask;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initialize TaskList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        this.addedOrDeletedTask \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes the tasklist"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        this.addedOrDeletedTask \u003d null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes the tasklist"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param addedOrDeletedTask"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks, Task addedOrDeletedTask) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        this.addedOrDeletedTask \u003d addedOrDeletedTask;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private static Task assignTask(String type, String name)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        throws NoTaskException, InvalidCommandException, NoDateException, WrongDateTimeFormatException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    return new Todo(name.substring(5), false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    throw new NoTaskException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                int indexOfCommand \u003d name.indexOf(\"/\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                String deadline \u003d name.substring(indexOfCommand + 4);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                        String currname \u003d name.substring(9);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                        if (indexOfCommand \u003e -1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                                return new Deadline(name.substring(9, indexOfCommand - 1), false, deadline);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                            } catch (WrongDateTimeFormatException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                                throw new WrongDateTimeFormatException(e.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                            throw new NoDateException(\"☹ OOPS!!! Please specify the deadline!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                        throw new NoTaskException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                        String currname \u003d name.substring(6);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                        if (indexOfCommand \u003e -1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                            return new Event(name.substring(6, indexOfCommand - 1), false, deadline);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                            throw new NoDateException(\"☹ OOPS!!! Please specify when the event is going to be held!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                        throw new NoTaskException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new InvalidCommandException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private static int decideIndexDelete(String word) throws MissingSpecifiedDeleteError {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            index \u003d Integer.parseInt(word.substring(7));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new MissingSpecifiedDeleteError(\"☹ OOPS!!! Please specify which task you want to delete.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    private static Task deletedTask(int index, ArrayList\u003cTask\u003e tasks) throws WrongIndexError {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        Task curr \u003d null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            curr \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new WrongIndexError(\"☹ OOPS!!! You only have \" + tasks.size() + \" tasks in your list. \" +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                \"Please select a valid task to be deleted.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return curr;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Get the arraylist of tasks inside the TaskList"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Get the number of tasks currently from the list"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public int taskSize() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Get the task that has just been deleted or added or done from the list"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public Task getAddedOrDeletedTask() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return this.addedOrDeletedTask;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Delete the task from the list"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @throws WrongIndexError"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @throws MissingSpecifiedDeleteError"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public TaskList delete(String task) throws WrongIndexError, MissingSpecifiedDeleteError {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        int num \u003d 0;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        ArrayList\u003cTask\u003e tempTasks \u003d this.tasks;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        Task removed \u003d null;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            num \u003d decideIndexDelete(task);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                removed \u003d deletedTask(num, tasks);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                tempTasks.remove(num - 1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            } catch (WrongIndexError e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                throw new WrongIndexError(e.getMessage());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (MissingSpecifiedDeleteError e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new MissingSpecifiedDeleteError(e.getMessage());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return new TaskList(tempTasks, removed);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Add the specified task to the list"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @throws NoTaskException"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @throws InvalidCommandException"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @throws NoDateException"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @throws WrongDateTimeFormatException"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public TaskList add(String task)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        throws NoTaskException, InvalidCommandException, NoDateException, WrongDateTimeFormatException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        String firstWord \u003d task.toLowerCase().contains(\"todo\") ? \"todo\""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            : task.toLowerCase().contains(\"deadline\") ? \"deadline\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            : task.toLowerCase().contains(\"event\") ? \"event\""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            : null;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        Task curr \u003d null;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        ArrayList\u003cTask\u003e tempTasks \u003d this.tasks;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            curr \u003d assignTask(firstWord, task);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            tempTasks.add(curr);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (NoTaskException e) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new NoTaskException(e.getMessage());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new InvalidCommandException(e.getMessage());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (NoDateException e) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new NoDateException(e.getMessage());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (WrongDateTimeFormatException e) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new WrongDateTimeFormatException(e.getMessage());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return new TaskList(tempTasks, curr);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Set the specified task to done"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param done"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @throws WrongIndexError"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public TaskList done(String done) throws WrongIndexError {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            int num \u003d Integer.parseInt(done.substring(5));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            ArrayList\u003cTask\u003e tempTask \u003d this.tasks;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            Task curr \u003d tempTask.get(num - 1).setToTrue();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            tempTask.set(num - 1, curr);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            curr \u003d tasks.get(num - 1);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return new TaskList(tempTask, curr);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            throw new WrongIndexError(\"☹ OOPS!!! You only have \" + tasks.size() + \" tasks in your list. \" + \"\\n\""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                + \"Please select a valid task to be done.\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else if (o instanceof TaskList) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            TaskList temp \u003d (TaskList) o;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            if (this.taskSize() \u003d\u003d temp.taskSize()) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                boolean isEqual \u003d true;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                for (int i \u003d 0; i \u003c this.taskSize(); i++) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    if (!this.tasks.get(i).equals(temp.tasks.get(i))) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                return this.addedOrDeletedTask.equals(temp.addedOrDeletedTask);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 248
    }
  },
  {
    "path": "src/main/java/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes Todo task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(name, false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Initializes Todo task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public Todo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Set the task to true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public Task setToTrue() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return new Todo(this.name, true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Get the type of the task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Get the end of the task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public String getEnd() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Convert the current task to String"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            ? \"[T][✓] \" + this.getName()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            : \"[T][✗] \" + this.getName();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     * Override the equals from Object so that it can be used to handle Todo task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else if (o instanceof Todo) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            Todo temp \u003d (Todo) o;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return this.name.equals(temp.name) \u0026\u0026 (this.isDone \u003d\u003d temp.isDone);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 72
    }
  },
  {
    "path": "src/test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "D | 0 | cs2103 project | 2020-06-26 2359"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "E | 0 | welcome tea angklung | 17 from 7-9 p.m."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "T | 1 | read book"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 3
    }
  },
  {
    "path": "src/test/java/CommandTest/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package CommandTest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import command.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.NoDateException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.NoTaskException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.WrongDateTimeFormatException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void AddCommandErrorTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        assertThrows(WrongDateTimeFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            new AddCommand(\"deadline cs2103 project /by 26-06-2020 \")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                .execute(new TaskList(new Storage(\"data\").load()), new Ui(), new Storage(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        });"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void AddCommandErrorTest2() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        assertThrows(NoDateException.class, () -\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            new AddCommand(\"deadline cs2103 project\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                .execute(new TaskList(new Storage(\"data\").load()), new Ui(), new Storage(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void AddCommandErrorTest3() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        assertThrows(NoTaskException.class, () -\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            new AddCommand(\"event\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                .execute(new TaskList(new Storage(\"data\").load()), new Ui(), new Storage(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 37
    }
  },
  {
    "path": "src/test/java/CommandTest/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package CommandTest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.MissingSpecifiedDeleteError;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.WrongIndexError;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void DeleteCommandErrorTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        assertThrows(WrongIndexError.class, () -\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            new DeleteCommand(\"delete 4\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                .execute(new TaskList(new Storage(\"data\").load()), new Ui(), new Storage(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        });"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void DeleteCommandErrorTest2() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        assertThrows(MissingSpecifiedDeleteError.class, () -\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            new DeleteCommand(\"delete\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                .execute(new TaskList(new Storage(\"data\").load()), new Ui(), new Storage(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 29
    }
  },
  {
    "path": "src/test/java/CommandTest/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package CommandTest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.WrongIndexError;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class DoneCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void DeleteCommandErrorTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        assertThrows(WrongIndexError.class, () -\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            new DoneCommand(\"done 4\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "                .execute(new TaskList(new Storage(\"data/\").load()), new Ui(), new Storage(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        });"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 20
    }
  },
  {
    "path": "src/test/java/ParserStorageUiTest/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package ParserStorageUiTest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import command.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void parseTestAddCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        assertEquals(Parser.parse(\"todo sleep\"), new AddCommand(\"todo sleep\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void parseTestExitCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        assertEquals(Parser.parse(\"bye\"), new ExitCommand(\"bye\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void parseTestDeleteCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        assertEquals(Parser.parse(\"delete 3\"), new DeleteCommand(\"delete 3\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 25
    }
  },
  {
    "path": "src/test/java/TaskTest/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package TaskTest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void setToTrueTest() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        assertEquals(new Deadline(\"cs2103 project\", false, \"2020-06-26 2359\").setToTrue(),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            new Deadline(\"cs2103 project\", true, \"2020-06-26 2359\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void getTypeTest() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        assertEquals(new Deadline(\"cs2103 project\", false, \"2020-06-26 2359\").getType(),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            new Deadline(\"cs2103 project\", true, \"2020-06-26 2359\").getType());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void getEndTest() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        assertEquals(new Deadline(\"cs2103 project\", false, \"2020-06-26 2359\").getEnd(),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            new Deadline(\"cs2103 project\", true, \"2020-06-26 2359\").getEnd());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 28
    }
  },
  {
    "path": "src/test/java/TaskTest/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "package TaskTest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import parserstorageui.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void taskListAddTest() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            new TaskList(new Storage(\"data\").load()).add(\"deadline cs2103 /by 2020-06-26 2359\").getAddedOrDeletedTask(),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            new Deadline(\"cs2103\", false, \"2020-06-26 2359\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void taskListDeleteTest() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        assertEquals(new TaskList(new Storage(\"data\").load()).delete(\"delete 1\").getAddedOrDeletedTask(),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            new Deadline(\"cs2103 project\", false, \"2020-06-26 2359\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    public void taskListDoneTest() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "        assertEquals(new TaskList(new Storage(\"data\").load()).done(\"done 1\").getAddedOrDeletedTask(),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "            new Deadline(\"cs2103 project\", true, \"2020-06-26 2359\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "drake25122000"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 31
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "javac  -source 1.8 -target 1.8 -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "drake25122000"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT 2\u003e\u00261"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "drake25122000": 2,
      "-": 19
    }
  }
]
