[
  {
    "path": "src/main/java/ComplexTaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class ComplexTaskManager {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final String taskDetails;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final TaskType complexTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected ComplexTaskManager(String taskDetails, TaskType complexTask) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.taskDetails \u003d taskDetails;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.complexTask \u003d complexTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected Task getTask() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        if (complexTask \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            String[] inputArr \u003d taskDetails.split(\" /by\", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                checkIfEmpty(inputArr);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                return new Deadline(inputArr[0], inputArr[1].trim());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        } else { // EVENT type"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            String[] inputArr \u003d taskDetails.split(\" /at\", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                throw new InvalidEventException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                checkIfEmpty(inputArr);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                return new Event(inputArr[0], inputArr[1].trim());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private void checkIfEmpty(String[] inputArr) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        String description \u003d inputArr[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        String time \u003d inputArr[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            throw new EmptyTaskException(complexTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        } else if (time.isBlank()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            throw new EmptyByException(complexTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 40
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected Deadline(String description, String time, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(description, isDone, TaskType.DEADLINE, time);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected Deadline(String description, String time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(description, false, TaskType.DEADLINE, time);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        DukeController controller \u003d new DukeController();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        controller.simulate();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 3,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeController.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class DukeController {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final Manager manager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final FileManager fileManager \u003d new FileManager();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected DukeController() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.manager \u003d new Manager(new ArrayList\u003cTask\u003e(fileManager.getTasks()), fileManager);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected void simulate() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        Ui.greetings();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            System.out.println(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            String[] inputArr \u003d deconstruct(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            String keyWord \u003d getKeyWord(inputArr);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            String restOfWord \u003d getRestOfWord(inputArr);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            if (keyWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                Ui.goodBye();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                manager.manageInput(keyWord, restOfWord);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private String getKeyWord(String[] arr) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return arr[0].toLowerCase();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private String getRestOfWord(String[] arr) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return arr.length \u003d\u003d 1 ? \"\" : arr[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private String[] deconstruct(String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        String formattedString \u003d input.trim().replaceAll(\"\\\\s{2,}\", \" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return formattedString.split(\" \", 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 44
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected DukeException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(String.format(\"☹OOPS!!! %s\", msg));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 5
    }
  },
  {
    "path": "src/main/java/EmptyByException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class EmptyByException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    public EmptyByException(TaskType complexTask) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(String.format(\"Deadline / time of %s is not specified\", complexTask));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 5
    }
  },
  {
    "path": "src/main/java/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class EmptyTaskException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected EmptyTaskException(TaskType complexTask) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(String.format(\"The description of a %s cannot be empty.\", complexTask));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected Event(String description, String time, boolean isDone) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(description, isDone, TaskType.EVENT, time);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected Event(String description, String time) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(description, false, TaskType.EVENT, time);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 18
    }
  },
  {
    "path": "src/main/java/FileManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class FileManager {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final String dataDir \u003d System.getProperty(\"user.dir\") + \"/data\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final String filePath \u003d dataDir + \"/duke.csv\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected FileManager() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        createFile();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private void createFile() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            File newDirectory \u003d new File(dataDir);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            newDirectory.mkdir();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            File newFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            newFile.createNewFile();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            Ui.fileCreationError();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            String header \u003d br.readLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            if (header !\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                String line \u003d br.readLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                while (line !\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                    Task newTask \u003d parser.parseToTask(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                    if (newTask !\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                        taskList.add(newTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                    line \u003d br.readLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            Ui.fileReadingError();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected void update(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            String header \u003d \"Task type  ,Description  ,Time  ,Status\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            StringBuilder stringBuilder \u003d new StringBuilder(header);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                stringBuilder.append(convertToCSVFormat(task));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            fileWriter.write(stringBuilder.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            Ui.fileUpdateError();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private String convertToCSVFormat(Task task) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return String.format(\"%s  ,%s  ,%s  ,%s\\n\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                task.getTaskName(),task.getDescription(), task.getTime(), task.getStatus());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 71
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class InvalidDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected InvalidDeadlineException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(\"Deadline task is poorly formatted.\\n    A proper format would look like this: \" +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                \"deadline `task name` /by `end time` \" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                \"(e.g. deadline Exercise /by Sunday\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 7
    }
  },
  {
    "path": "src/main/java/InvalidDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class InvalidDeleteException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected InvalidDeleteException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(\"Delete format is invalid.\\n    Please try again with a proper format like \u0027delete 3\u0027\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 5
    }
  },
  {
    "path": "src/main/java/InvalidDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class InvalidDoneException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected InvalidDoneException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(\"Done format is invalid.\\n    Please try again with a proper format like \u0027done 3\u0027\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 5
    }
  },
  {
    "path": "src/main/java/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class InvalidEventException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected InvalidEventException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(\"Event task is poorly formatted.\\n    A proper format would look like this: \" +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                \"`event name` /at `start time - end time` \" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                \"(e.g. meeting /at Sunday 2pm - 4pm\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 7
    }
  },
  {
    "path": "src/main/java/InvalidFileFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class InvalidFileFormatException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected InvalidFileFormatException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(\"CSV file is poorly formatted!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 5
    }
  },
  {
    "path": "src/main/java/InvalidTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class InvalidTaskNumberException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected InvalidTaskNumberException(int size) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(String.format(\"Task number does not exist in the list.\\n    Your current list only has %d tasks!\", size));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 5
    }
  },
  {
    "path": "src/main/java/Manager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class Manager {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final FileManager fileManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected Manager(List\u003cTask\u003e tasks, FileManager fileManager) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.fileManager \u003d fileManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected void manageInput(String keyWord, String restOfWord) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            TaskManager taskManager \u003d new TaskManager(tasks, keyWord, restOfWord);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            if (keyWord.equals(\"list\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                showList(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                if (keyWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                    taskManager.handleDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                } else if (keyWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                    taskManager.handleDeletion();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                    if (keyWord.equals(\"todo\") || keyWord.equals(\"deadline\") || keyWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                        taskManager.addTask();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                        throw new UnknownCommandException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                fileManager.update(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            Ui.printMsg(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private void showList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            Ui.emptyTaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            Ui.showTaskList(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 45
    }
  },
  {
    "path": "src/main/java/NumberAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public abstract class NumberAction {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected static boolean checkIfNumber(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            Integer.parseInt(s);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected static boolean checkIfValid(int digit, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return digit \u003c\u003d tasks.size() \u0026\u0026 digit \u003e 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 15
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected Task parseToTask(String input) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            String[] inputArr \u003d input.split(\"\\\\s{2},\", 4);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            if (inputArr.length \u003c 4) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                throw new InvalidFileFormatException();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            String taskType \u003d inputArr[0].toUpperCase();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            String description \u003d inputArr[1];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            String time \u003d inputArr[2];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            String status \u003d inputArr[3];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            boolean isDone \u003d checkStatus(status);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            if (taskType.equals(\"TODO\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                return new ToDo(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            } else if (taskType.equals(\"EVENT\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                return new Event(description, time, isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            } else if (taskType.equals(\"DEADLINE\")) { // DEADLINE"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                return new Deadline(description, time, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                throw new InvalidFileFormatException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        } catch (InvalidFileFormatException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            Ui.printBasic(e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private boolean checkStatus(String input) throws InvalidFileFormatException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        String status \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        if (status.equals(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        } else if (status.equals(\"not done\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            throw new InvalidFileFormatException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 39
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final TaskType taskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected Task(String description, boolean isDone, TaskType taskType, String time) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected void markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected boolean checkStatus() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected String getStatus() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return isDone ? \"Done\" : \"Not done\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected String getTaskName() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return taskType.toString().toUpperCase();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected String getTime() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 47
    }
  },
  {
    "path": "src/main/java/TaskAlreadyDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class TaskAlreadyDoneException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected TaskAlreadyDoneException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(\"Task has already been mark as done!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 5
    }
  },
  {
    "path": "src/main/java/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final String keyWord;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final String restOfWord;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected TaskManager(List\u003cTask\u003e tasks, String keyWord, String restOfWord) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.restOfWord \u003d restOfWord;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected void addTask() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        String typeOfTask \u003d keyWord;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        String taskDetails \u003d restOfWord;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        if (typeOfTask.equals(\"todo\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            if (taskDetails.isEmpty()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                throw new EmptyTaskException(TaskType.TODO);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            newTask \u003d new ToDo(taskDetails);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        } else if (typeOfTask.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            ComplexTaskManager managerCT \u003d new ComplexTaskManager(taskDetails, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            newTask \u003d managerCT.getTask();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        } else if (typeOfTask.equals(\"event\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            ComplexTaskManager managerCT \u003d new ComplexTaskManager(taskDetails, TaskType.EVENT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            newTask \u003d managerCT.getTask();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        Ui.addTask(newTask, tasks.size());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected void handleDone() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        if (NumberAction.checkIfNumber(restOfWord)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            int digit \u003d Integer.parseInt(restOfWord);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            if (NumberAction.checkIfValid(digit, tasks)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                Task current \u003d tasks.get(digit - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                if (current.checkStatus()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                    throw new TaskAlreadyDoneException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                    current.markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                    Ui.markTaskAsDone(current);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                throw new InvalidTaskNumberException(tasks.size());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            throw new InvalidDoneException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected void handleDeletion() throws DukeException{"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        if (NumberAction.checkIfNumber(restOfWord)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            int digit \u003d Integer.parseInt(restOfWord);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            if (NumberAction.checkIfValid(digit, tasks)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                Task current \u003d tasks.get(digit - 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                tasks.remove(digit - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                Ui.deleteTask(current, tasks.size());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                throw new InvalidTaskNumberException(tasks.size());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            throw new InvalidDeleteException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 68
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    TODO(\"todo\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private final String taskName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private TaskType(String taskName) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 16
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(description, isDone, TaskType.TODO, \"-\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected ToDo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(description, false, TaskType.TODO, \"-\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private static final String SEPARATOR \u003d \"   ----------------------------------------------------------\\n\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected static void printMsg(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        System.out.print(SEPARATOR);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        System.out.printf(\"    %s\\n\", msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected static void greetings() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        System.out.println(\"Hello, I\u0027m Duke!\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected static void goodBye() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        printMsg(\"Bye! Hope to see you again soon! ☺\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected static void fileCreationError() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        System.out.println(\"Error in creating file.\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected static void fileUpdateError() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        System.out.println(\"Error in updating file\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected static void fileReadingError() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        System.out.println(\"Error in reading from csv file\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected static void printBasic(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        System.out.printf(\"%s\\n\\n\", input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected static void markTaskAsDone(Task current) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        printMsg(String.format(\"Nice! I\u0027ve marked this task as done:\\n      %s\", current));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected static void deleteTask(Task current, int size) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        printMsg(String.format(\"Noted. I\u0027ve removed this task:\\n      %s\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                \"    Now you have %d tasks in the list.\", current, size));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected static void addTask(Task newTask, int size) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        printMsg(String.format(\"Got it. I\u0027ve added this task:\\n      %s\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "                \"    Now you have %d tasks in the list.\", newTask, size));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected static void emptyTaskList() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        printMsg(\"You currently have no tasks in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected static void showTaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        StringBuilder str1 \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        str1.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        for (int i \u003d 0; i \u003c size - 1; i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            str1.append(String.format(\"     %d.%s\\n\", i + 1, tasks.get(i)));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        str1.append(String.format(\"     %d.%s\", size, tasks.get(size - 1)));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        printMsg(str1.toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 64
    }
  },
  {
    "path": "src/main/java/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "public class UnknownCommandException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private static final int NUM_OF_COMMANDS \u003d 7;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private static final String MSG_1 \u003d \"I\u0027m sorry, but I don\u0027t know what that means.\\n\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private static final String MSG_2 \u003d \"    Here are the available commands that I know:\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private static final String[] listOfCommands \u003d new String[]{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            \"todo _ (e.g. todo 3)\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            \"deadline `task name` /by `end time` (e.g. deadline Exercise /by Sunday)\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            \"`event name` /at `start time - end time` (e.g. meeting /at Sunday 2pm - 4pm)\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            \"list\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            \"done _ (e.g. done 4)\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            \"delete _ (e.g. delete 4)\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            \"bye\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    private static String getListOfCommands() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        StringBuilder str1 \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        str1.append(MSG_1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        str1.append(MSG_2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        for (int i \u003d 1; i \u003c NUM_OF_COMMANDS; i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            String s \u003d String.format(\"     %d. %s\\n\", i, listOfCommands[i - 1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "            str1.append(s);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        str1.append(String.format(\"     %d. %s\", NUM_OF_COMMANDS, listOfCommands[NUM_OF_COMMANDS - 1]));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        return str1.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    protected UnknownCommandException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "        super(UnknownCommandException.getListOfCommands());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 32
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "todo test case"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "deadline return book /bySunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "event /at 2 - 4pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "event meeting /at"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "deadline meeting /at"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "deadline meeting /by"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "done sdvgfdsg"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "delete asbf"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "bye 5"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "keanecjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "keanecjy"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "keanecjy": 4,
      "-": 20
    }
  }
]
