[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 1,
      "-": 45
    }
  },
  {
    "path": "saveTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "[TODO] [✗] blah"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "[DEADLINE] [✓] ded | by: 20-Feb-2002"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 2
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    static final String SAVE_FILE \u003d \"save.txt\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        parser \u003d new Parser(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        storage \u003d new Storage(SAVE_FILE);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            Ui.showException(e);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        Ui.showWelcome();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        ParsedCommand command;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                command \u003d parser.parseNextCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                Ui.showException(e);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            switch (command.getType()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                Ui.showExit();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                Ui.showList(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                Task doneTask \u003d tasks.done(command.getIndex());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                Ui.showDone(doneTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                Task deletedTask \u003d tasks.delete(command.getIndex());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                Ui.showDelete(deletedTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                    Task addedTask \u003d command.toTask();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                    tasks.addTask(addedTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                    Ui.showAddTask(addedTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                    Ui.showException(e);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                TaskList foundTasks \u003d tasks.find(command.getName());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                Ui.showFound(foundTasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                Ui.showException(new DukeException(\"Duke did not receive a matching command type.\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 74,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 7
    }
  },
  {
    "path": "src/main/java/duke/ParsedCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " * Represents an input command that has been parsed into a class with accessible members."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "public class ParsedCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    private String commandType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Constructs a base ParsedCommand with the given commandType."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param commandType the intended action from the command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public ParsedCommand(String commandType) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Adds an index to this ParsedCommand."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param index the index to be saved to this ParsedCommand"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @return this modified ParseCommand"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public ParsedCommand withIndex(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Adds name to this ParsedCommand."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param name the name to be saved to this ParsedCommand"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @return this modified ParseCommand"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public ParsedCommand withName(String name) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Adds a date to this ParsedCommand."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param date the index to be saved to this ParsedCommand"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @return this modified ParseCommand"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public ParsedCommand withDate(String date) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return commandType;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Creates a {@link Task} from this ParsedCommand\u0027s parameters."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @return a Task with this ParsedCommand\u0027s parameters."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @throws DukeException If this ParsedCommand\u0027s parameters can\u0027t be created into a Task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public Task toTask() throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        if (commandType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            newTask \u003d new Todo(name);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        } else if (commandType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            newTask \u003d new Deadline(name, date);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        } else if (commandType.equals(\"event\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            newTask \u003d new Event(name, date);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            throw new DukeException(\"Parsed command is not a task.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        if (!(other instanceof ParsedCommand)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        ParsedCommand pc \u003d (ParsedCommand) other;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        boolean a \u003d pc.getType().equals(getType()) \u0026\u0026 pc.getIndex() \u003d\u003d getIndex()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                \u0026\u0026 pc.getName().equals(getName()) \u0026\u0026 pc.getDate().equals(getDate());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return pc.getType().equals(getType()) \u0026\u0026 pc.getIndex() \u003d\u003d getIndex()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                \u0026\u0026 pc.getName().equals(getName()) \u0026\u0026 pc.getDate().equals(getDate());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 109
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " * Takes an InputStream and creates a {@link ParsedCommand} object for each line of the InputStream."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " * The ParsedCommand object is to later be worked on with other classes from this project."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Constructs a Parser from the specified InputStream."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param input the input that contains specific commands for the project."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public Parser(InputStream input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        sc \u003d new Scanner(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Reads the next line in the InputStream and constructs a ParsedCommand from the line."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @return a ParsedCommand containing parameters of the input command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @throws DukeException If input command doesn\u0027t match the required parameters,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     *          eg. wrong date format, unrecognized command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public ParsedCommand parseNextCommand() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        String commandType \u003d sc.next();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        ParsedCommand command \u003d new ParsedCommand(commandType);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        String date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            command.withIndex(sc.nextInt() - 1); // UI shows base 1, TaskList uses base 0"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            command.withName(sc.nextLine().trim());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                String[] nameAndDeadline \u003d sc.nextLine().trim().split(\" /by \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                command.withName(nameAndDeadline[0]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                command.withDate(nameAndDeadline[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                throw new DukeException(\"Please use the format: deadline \u003cname\u003e /by \u003cyyyy-mm-dd\u003e\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                String[] nameAndEvent \u003d sc.nextLine().trim().split(\" /at \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                command.withName(nameAndEvent[0]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                command.withDate(nameAndEvent[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                throw new DukeException(\"Please use the format: event \u003cname\u003e /at \u003cyyyy-mm-dd\u003e\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            throw new DukeException(\"What\u0027s that? Please mention one of \\\"list\\\", \\\"done\\\", \\\"todo\\\", \" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                    \"\\\"deadline\\\", \\\"event\\\", or \\\"bye\\\".\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 71
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " * Manages saving and loading a {@link TaskList} to/from a specified saveFile."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    static final SimpleDateFormat INPUT_DATE_FORMAT \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    static final SimpleDateFormat SAVE_DATE_FORMAT \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    private String saveFile;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Constructs the Storage with the specified saveFile location."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param saveFile location of the saved taskList. eg. save.txt"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public Storage(String saveFile) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        this.saveFile \u003d saveFile;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Loads a TaskList from the specified saveFile location."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @return a TaskList constructed form the saveFile."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @throws DukeException if the specified saveFile is not found."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public TaskList load() throws DukeException{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            File save \u003d new File(saveFile);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            Scanner saveSc \u003d new Scanner(save);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            while (saveSc.hasNextLine()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                String taskString \u003d saveSc.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                Task loadedTask \u003d stringToTask(taskString);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                taskList.addTask(loadedTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            saveSc.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            throw new DukeException(\"save.txt not found. Creating empty list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Saves the given TaskList into the specified saveFile location."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param taskList the TaskList to be saved."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public void save(TaskList taskList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            FileWriter save \u003d new FileWriter(saveFile);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                save.write(task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            save.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            System.out.println(\"Saving failed!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Constructs a Task from its String format."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param taskString the String format to build a Task from."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @return the constructed Task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @throws DukeException If the String has a wrong format and can\u0027t be converted."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    private Task stringToTask(String taskString) throws DukeException{"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        Scanner taskSc \u003d new Scanner(taskString);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        String taskType \u003d taskSc.next();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        String taskCompletion \u003d taskSc.next();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        String taskDesc \u003d taskSc.nextLine().trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        case \"[TODO]\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            newTask \u003d new Todo(taskDesc);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        case \"[DEADLINE]\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                String[] nameAndDeadline \u003d taskDesc.split(\" \\\\| by: \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                Date deadlineDate \u003d SAVE_DATE_FORMAT.parse(nameAndDeadline[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                newTask \u003d new Deadline(nameAndDeadline[0], INPUT_DATE_FORMAT.format(deadlineDate));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                throw new DukeException(\"Loading date error: \" + e);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        case \"[EVENT]\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                String[] nameAndEvent \u003d taskDesc.split(\" \\\\| at: \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                Date eventDate \u003d SAVE_DATE_FORMAT.parse(nameAndEvent[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                newTask \u003d new Event(nameAndEvent[0], INPUT_DATE_FORMAT.format(eventDate));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                throw new DukeException(\"Loading date error: \" + e);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            throw new DukeException(\"Loading task failed: unrecognized task type: \" + taskType);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        if (taskCompletion.equals(\"[✓]\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            newTask.markDone();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 122
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " * Represents a list of {@link Task}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "public class TaskList implements Iterable\u003cTask\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Constructs an empty TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Mark the Task at specified index as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param index the index of the Task to be marked as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @return the Task marked as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public Task done(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Deletes the Task at the specified index from this TaskList."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param index the index of the Task to be deleted."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @return the deleted Task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public Task delete(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Adds a Task to this TaskList."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param task the Task to be added."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public Iterator iterator() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return tasks.iterator();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        String string \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            string +\u003d (i + 1) + \". \" + tasks.get(i);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            if (i !\u003d tasks.size() - 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                string +\u003d \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        if (!(other instanceof TaskList)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        TaskList tl \u003d (TaskList) other;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return tl.toString().equals(toString()); // might be a bit slow but is a simple implementation"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Returns a new TaskList consisting of Tasks that has matching keywords in their taskNames."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param keyword the word to be searched for in the tasks."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @return a new TaskList with Tasks with matching keywords."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public TaskList find(String keyword) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        TaskList foundTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            if (task.getTaskName().contains(keyword)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                foundTasks.addTask(task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return foundTasks;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 101
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " * Displays various messages to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Shows an Exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param e the Exception to be shown."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public static void showException(Exception e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Shows the exit message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public static void showExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        System.out.println(\"*You take your leave.*\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Shows a {@link TaskList} to the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param tasks the TaskList to be shown."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public static void showList(TaskList tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        System.out.println(\"Here\u0027s the extent of our list so far:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        System.out.println(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Shows a successful \"done\" command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param doneTask the {@link Task} marked as done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public static void showDone(Task doneTask) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        System.out.println(\"Right. This task is now marked as done:\" + doneTask);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Shows a successful \"delete\" command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param deletedTask the {@link Task} deleted."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public static void showDelete(Task deletedTask) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        System.out.println(\"Begone! This task is now removed: \" + deletedTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Shows a successful command that adds a Task. eg. \"todo\", \"deadline\", \"event\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param addedTask the {@link Task} created."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public static void showAddTask(Task addedTask) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        System.out.println(\"Fine. I added the following to the list: \" + addedTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Shows the welcome message."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public static void showWelcome() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        System.out.println(\"Famed, of course, for my unique red skin and unparalleled skills as a general of \" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                \"the House of War, I, the Red Prince, was raised within the vast palaces of the fabled Forbidden \" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                \"City. I was destined to become the next emperor, but my ambitions suffered a bit of a setback \" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                \"when I fell from grace for cavorting with demons. Now I\u0027m exiled and hunted by assassins, but I \" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                \"assure you: I remain undaunted - and as determined as ever to claim my rightful throne!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Shows a {@link TaskList} of found tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param foundTasks a TaskList of tasks found."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public static void showFound(TaskList foundTasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        System.out.println(\"I found these tasks:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        System.out.println(foundTasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 76
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " * Represents a Task with a deadline date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    LocalDate deadlineTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Constructs a Deadline with name and deadline date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param taskName name of the Deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param deadlineTime date of the Deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @throws DukeException If name is empty OR date is in wrong format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public Deadline(String taskName, String deadlineTime) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        super (taskName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        // ISO_LOCAL_DATE format, no conversion needed (yyyy-mm-dd)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            this.deadlineTime \u003d LocalDate.parse(deadlineTime.trim());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            throw new DukeException(\"Please write down our dates in the standard format, yyyy-mm-dd.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return \"[DEADLINE] \" + super.toString() + \" | by: \" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "                deadlineTime.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 36
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " * Represents a Task with an event date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    LocalDate eventTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Constructs an Event with name and event date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param taskName name of the Event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param eventTime date of the Event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @throws DukeException If name is empty OR date is in wrong format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public Event(String taskName, String eventTime) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        // ISO_LOCAL_DATE format, no conversion needed (yyyy-mm-dd)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            this.eventTime \u003d LocalDate.parse(eventTime.trim());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            throw new DukeException(\"Please write down our dates in the standard format, yyyy-mm-dd.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return \"[EVENT] \" + super.toString() + \" | at: \" + eventTime.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 35
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " * Represents a Task that can be marked as done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Constructs a Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @param name the displayed name of the Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @throws DukeException If the name is empty."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    Task(String name) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        if (name.trim().equals(\"\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            throw new DukeException(\"Charming, but we can\u0027t have nothing as a task.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        this.taskName \u003d name.trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * Marks this Task as done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     * @return false if Task is already marked as done before the call."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public boolean markDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        String mark \u003d isDone ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return \"[\" + mark + \"] \" + taskName;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 51
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " * Represents a basic implementation of Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public Todo(String taskName) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        return \"[TODO] \" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 18
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public void deadlineParsing_goodFormat_success() throws DukeException{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        String command \u003d \"deadline my birthday!! /by 2020-09-12\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        ParsedCommand pc \u003d new ParsedCommand(\"deadline\").withName(\"my birthday!!\").withDate(\"2020-09-12\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        Parser parser \u003d new Parser(new ByteArrayInputStream(command.getBytes()));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        assertEquals(pc, parser.parseNextCommand());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public void deadlineParsing_badDateFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        String command \u003d \"deadline hurr durr / date 2020-02-02\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        Parser parser \u003d new Parser(new ByteArrayInputStream(command.getBytes()));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            assertEquals(new ParsedCommand(\"deadline\"), parser.parseNextCommand());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            fail(); // test shouldn\u0027t reach this line"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "            assertEquals(\"Please use the format: deadline \u003cname\u003e /by \u003cyyyy-mm-dd\u003e\", e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 36
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    public void testSaveAndLoad() throws DukeException{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        Storage s \u003d new Storage(\"saveTest.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        tasks.addTask(new Todo(\"blah\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        tasks.addTask(new Deadline(\"ded\", \"2002-02-20\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        tasks.done(1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        s.save(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        TaskList loadedTasks \u003d s.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "        assertEquals(tasks, loadedTasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 23
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "deadline poot /by 1919-03-03"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "event bonk /at 8080-04-04"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "todo cap"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "this is not a command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "done done done done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sigmund-c"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "sigmund-c": 2,
      "-": 19
    }
  }
]
