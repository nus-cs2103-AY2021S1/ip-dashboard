[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _                    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "   |  _ \\ _   _| | _____  ______ ______ ______  ___  _____"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "   | | | | | | | |/ / _ \\|  __  |__  __|___   |/ _ \\|  _  \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "   | |_| | |_| |   \u003c  __/| |  | |__||__ /   /_\u003c  __/|     /"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|| |  | |______|______|\\___||_|\\__\\ "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 4,
      "-": 22
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t//prints Greeting message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tprintGreeting();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t//Initialize Task list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t//Take in Input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tScanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tString query \u003d sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t//main loop"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\twhile (!query.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tSystem.out.println(\"_______________________________________________________________\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t//execute instruction \u0026 checks for exception"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tparseInstruction(lst, query);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tSystem.out.println(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tSystem.out.println(\"_______________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tquery \u003d sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tcontinue;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tSystem.out.println(\"_______________________________________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tSystem.out.println();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tquery \u003d sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t//exit Dukenizer"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tprintExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tsc.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\tprivate static void parseInstruction(List\u003cTask\u003e lst, String query) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t//take away leading and trailing white spaces"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tString[] instruction \u003d query.strip().split(\" \", 2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tswitch (instruction[0]) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tcase \"list\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tif (instruction.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tprintList(lst);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tthrow new DukeException(\"Extra inputs detected! Please only input \u0027list\u0027.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tcase \"delete\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t//done with no other arguments"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tif (instruction.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tthrow new DukeException(\"Please specify item number!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t//done with exactly 2 inputs"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\telse if (instruction.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t//check if second argument is integer"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\tif ((Integer.parseInt(instruction[1]) \u003c 1) || (Integer.parseInt(instruction[1]) \u003e lst.size())) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\t\tthrow new DukeException(\"Please enter a valid item number from the list!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t//second argument wrong format"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tcatch (NumberFormatException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\tthrow new DukeException(\"Please only input \u0027delete \u003citem number\u003e\u0027 with no other inputs!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tint itemNum \u003d Integer.parseInt(instruction[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tdeleteItem(lst, itemNum);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tcase \"done\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t//done with no other arguments"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tif (instruction.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tthrow new DukeException(\"Please specify item number!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t//done with exactly 2 inputs"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\telse if (instruction.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t//check if second argument is integer"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\tif ((Integer.parseInt(instruction[1]) \u003c 1) || (Integer.parseInt(instruction[1]) \u003e lst.size())) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\t\tthrow new DukeException(\"Please enter a valid item number from the list!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t//second argument wrong format"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tcatch (NumberFormatException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\tthrow new DukeException(\"Please only input \u0027done \u003citem number\u003e\u0027 with no other inputs!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tint doneIndex \u003d Integer.parseInt(instruction[1]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tdoneItem(lst, doneIndex);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tcase \"todo\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tif (instruction.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\taddTodo(lst, instruction[1]);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tcase \"deadline\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tif (instruction.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t//check if contains deadline \" /by yyyy-mm-dd\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tif ((instruction[1].contains(\" /by \")) \u0026\u0026"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\t\t(instruction[1].split(\" /by \")[1].matches(\"^\\\\d{4}\\\\-(0[1-9]|1[012])\\\\-(0[1-9]|[12][0-9]|3[01]) ([01]?[0-9]|2[0-3]):[0-5][0-9]\"))) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\taddDeadline(lst, instruction[1].split(\" /by \")[0], instruction[1].split(\" /by \")[1]);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t} else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\tthrow new DukeException(\"Please input in the following format \u0027deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HH:mm\u003e\u0027 with a valid date \u0026 time\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tcase \"event\":"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tif (instruction.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t//check if contains event \" /at yyyy-mm-dd\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\tif ((instruction[1].contains(\" /at \")) \u0026\u0026"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\t\t(instruction[1].split(\" /at \")[1].matches(\"^\\\\d{4}\\\\-(0[1-9]|1[012])\\\\-(0[1-9]|[12][0-9]|3[01]) ([01]?[0-9]|2[0-3]):[0-5][0-9]\"))) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\taddEvent(lst, instruction[1].split(\" /at \")[0], instruction[1].split(\" /at \")[1]);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t} else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\tthrow new DukeException(\"Please input in the following format \u0027event \u003cdescription\u003e /at \u003cyyyy-MM-dd HH:mm\u003e\u0027 with a valid date \u0026 time\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tdefault:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tthrow new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\tprivate static void printExit() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"_______________________________________________________________\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"_______________________________________________________________\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\tprivate static void printGreeting() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tString logo \u003d"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\" ____        _                    \\n\""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\t\t+ \"|  _ \\\\ _   _| | _____  ______ ______ ______  ___  _____\\n\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\t\t+ \"| | | | | | | |/ / _ \\\\|  __  |__  __|___   |/ _ \\\\|  _  \\\\\\n\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\t\t+ \"| |_| | |_| |   \u003c  __/| |  | |__||__ /   /_\u003c  __/|     /\\n\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\t\t\t\t+ \"|____/ \\\\__,_|_|\\\\_\\\\___|| |  | |______|______|\\\\___||_|\\\\__\\\\ \\n\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"_______________________________________________________________\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"Hello! I\u0027m Dukenizer\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"_______________________________________________________________\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\tprivate static void printList(List\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c lst.size(); i++) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tTask targetTask \u003d lst.get(i);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tSystem.out.println((i + 1) + \".\" + targetTask.toString());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\tprivate static void addTodo(List\u003cTask\u003e lst, String description) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tTask todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tlst.add(todo);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(todo.toString());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"Now you have \" + lst.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t//update hard disk"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tsaveListToHardDisk(lst);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\tprivate static void addDeadline(List\u003cTask\u003e lst, String description, String by) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tTask deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tlst.add(deadline);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(deadline.toString());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"Now you have \" + lst.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t//update hard disk"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tsaveListToHardDisk(lst);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\tprivate static void addEvent(List\u003cTask\u003e lst, String description, String at) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tTask event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tlst.add(event);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(event.toString());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"Now you have \" + lst.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t//update hard disk"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tsaveListToHardDisk(lst);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\tprivate static void doneItem(List\u003cTask\u003e lst, int itemNumber) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tTask doneItem \u003d lst.get(itemNumber - 1);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tdoneItem.markAsDone();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(doneItem.toString());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t//update hard disk"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tsaveListToHardDisk(lst);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\tprivate static void deleteItem(List\u003cTask\u003e lst, int itemNumber) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tTask item \u003d lst.get(itemNumber - 1);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(item.toString());"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tlst.remove(item);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tSystem.out.println(\"Now you have \" + lst.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t//update hard disk"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tsaveListToHardDisk(lst);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\tprivate static void appendToFile(String filePath, String textToAppend) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tFileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tfw.write(textToAppend);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tfw.close();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\tprivate static void writeToFile(String filePath, String textToAdd) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tFileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tfw.write(textToAdd);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tfw.close();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\tprivate static void saveListToHardDisk(List\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tString list \u003d \"\";"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c lst.size(); i++) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tTask targetTask \u003d lst.get(i);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tlist +\u003d targetTask.toString();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t\tlist +\u003d \"\\n\";"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t\twriteToFile(\"Dukenizer.txt\", list);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 273,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        return this.getMessage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 17
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "deadline return book /by 209-12-0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "event project meeting /at 2020-08-52"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "deadline wrong3 /by 2019-12-01 03:1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "event wrong4 /at 2019-12-01 00:70"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "deadline return book /by 2019-12-01 00:11"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "event project meeting /at 2020-08-22 23:32"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "if not exist C:\\Data\\repos\\CS2103\\bin mkdir C:\\Data\\repos\\CS2103\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "javac  -cp C:\\Data\\repos\\CS2103\\src\\main\\java -Xlint:none -d C:\\Data\\repos\\CS2103\\bin C:\\Data\\repos\\CS2103\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "java -classpath C:\\Data\\repos\\CS2103\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CodyChew": 9,
      "-": 19
    }
  }
]
