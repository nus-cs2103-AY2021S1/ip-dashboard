[
  {
    "path": "CONTRIBUTORS.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Contributors"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Homepage"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---|:---:|:---:|:---:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/50571615?s\u003d100) | Zhou Zijian | [Github](https://github.com/BobbyZhouZijian/) | [Homepage](https://www.zijianzhou.com)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "# I would like to join this list. How can I help the project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/)."
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 1,
      "-": 9
    }
  },
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "# Duke project by Zhou Zijian"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "This is the individual project for CS2103T in Semester 1, AY2020"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "Duke a Personal Assistant Chatbot that helps a person to keep track of various things. It is very user-friendly."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "To use the the chatbot, simply compile and run the Duke.java file at `src/main/java/Duke.java`. Then type in commands"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "to interact with Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "Sample commands include:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "This shows the list of things you have added"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "`event \u003ccontent\u003e /at \u003ctime\u003e`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "This adds an event at the stipulated time"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "`deadline \u003ccontent\u003e /by \u003ctime\u003e`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "This adds a deadline by the stipulated time"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "`todo \u003ccontent\u003e`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "This adds a todo to the bot"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "`done \u003cindex\u003e`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "This marks the thing at index `index` as completed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "`delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "This deletes the thing at index `index`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "This closes the chatbot"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "`More to be expected...`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 35
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    // Testing"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    testCompile group: \u0027org.testfx\u0027, name: \u0027testfx-core\u0027, version: \u00274.0.15-alpha\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    testCompile group: \u0027org.testfx\u0027, name: \u0027testfx-junit5\u0027, version: \u00274.0.15-alpha\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    testCompile group: \u0027org.testfx\u0027, name: \u0027openjfx-monocle\u0027, version: \u00278u76-b04\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    // JavaFX"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    checkstyleTest.enabled \u003d false"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 25,
      "-": 45
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.components.Starter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulate the main class of the object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Executes the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param args command line arguments to be fed to the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Application.launch(Starter.class, args);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 15,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/components/AlertBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.stage.Modality;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulates an AlertBox class that deals with displaying an alert UI."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public class AlertBox implements DialogBox {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Displays an alert box with the given title and the alert message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param title the title of the alert."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param message the main message of the alert."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static void display(String title, String message) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Stage window \u003d new Stage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // disable actions in other windows"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.initModality(Modality.APPLICATION_MODAL);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.setTitle(title);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.setMinWidth(250);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Label label \u003d new Label();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        label.setText(message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Button closeButton \u003d new Button(\"Close\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        closeButton.setOnAction(e -\u003e window.close());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        VBox layout \u003d new VBox(20);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        layout.getChildren().addAll(label, closeButton);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        layout.setAlignment(Pos.CENTER);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Scene scene \u003d new Scene(layout, DEFAULT_SCENE_WIDTH, DEFAULT_SCENE_HEIGHT);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.setScene(scene);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.showAndWait();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 42
    }
  },
  {
    "path": "src/main/java/duke/components/DataSaver.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.stage.Modality;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulates a DataSaver class that saves data to a load file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public class DataSaver implements DialogBox {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private static boolean isQuitting \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Saves the data to a load file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param storage the Storage object used to extract the data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static void save(Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Stage window \u003d new Stage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // disable actions in other windows"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.initModality(Modality.APPLICATION_MODAL);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.setTitle(\"Are you sure?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.setMinWidth(250);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Label label \u003d new Label(\"You are going to exit Duke!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // create confirmation buttons"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Button saveAndQuit \u003d new Button(\"Save and quit\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Button notSaveAndQuit \u003d new Button(\"Do not save and quit\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Button cancel \u003d new Button(\"Cancel\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        saveAndQuit.setOnAction(e -\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            isQuitting \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            storage.saveDataToFile(label);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            label.setText(\"Content has been Saved for you!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            window.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        notSaveAndQuit.setOnAction(e -\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            isQuitting \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            window.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        cancel.setOnAction(e -\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            isQuitting \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            window.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        VBox layout \u003d new VBox(20);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        layout.getChildren().addAll(label, saveAndQuit, notSaveAndQuit, cancel);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        layout.setAlignment(Pos.CENTER);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Scene scene \u003d new Scene(layout, DEFAULT_SCENE_WIDTH, DEFAULT_SCENE_HEIGHT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.setScene(scene);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.showAndWait();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static boolean isQuitting() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return isQuitting;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 66
    }
  },
  {
    "path": "src/main/java/duke/components/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulates an interface that represents a dialog box."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public interface DialogBox {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * The default width of a dialog box scene."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    int DEFAULT_SCENE_WIDTH \u003d 300;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * The default height of a dialog box scene."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    int DEFAULT_SCENE_HEIGHT \u003d 200;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 16
    }
  },
  {
    "path": "src/main/java/duke/components/Evaluator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.utils.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.views.Messenger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public class Evaluator {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private Label label;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private Stage window;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Constructs an Evaluator object that interacts with the command input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param storage the storage the evaluator uses to manipulate tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param label the Label object which the evaluator should manipulate."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param window the Stage object which the evaluator operates on."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public Evaluator(Storage storage, Label label, Stage window) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        this.label \u003d label;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        this.window \u003d window;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Evaluates the command passed through the input text area."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param command a string representing the command passed in."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public void handle(String command) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // initialize utilities"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TaskList list \u003d storage.getTaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            DataSaver.save(storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            if (DataSaver.isQuitting()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                window.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            label.setText(list.printList());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String[] actionExtracted \u003d parser.extractAction(command);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String status \u003d actionExtracted[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String body \u003d actionExtracted[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            switch (status) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                label.setText(list.markTaskAsDone(Integer.parseInt(body)));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                label.setText(list.addTask(body, status));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                label.setText(list.deleteTask(Integer.parseInt(body)));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                label.setText(list.findTask(body));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                String[] timeExtracted \u003d parser.extractDate(body);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                String content \u003d timeExtracted[0];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                String time \u003d timeExtracted[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                label.setText(list.addTask(content, status, time));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            AlertBox.display(\"Index not valid!\", Messenger.INDEX_FORMAT_ERROR);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            AlertBox.display(\"Duke does not understand!\", Messenger.COMMAND_UNRECOGNIZABLE_ERROR);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            AlertBox.display(\"Duke runs into a problem!\", e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            AlertBox.display(\"Something went wrong!\", e.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 87
    }
  },
  {
    "path": "src/main/java/duke/components/Starter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.views.Introduction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulates the GUI for the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public class Starter extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Starts the GUI welcome window."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param window the window of the current view."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public void start(Stage window) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // set title for the window"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // execute GUI loop"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Storage storage \u003d new Storage(list);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        new Introduction(storage).setScene(window);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 28
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulates a DukeException class to handle errors and exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Constructs a DukeException object with the message given."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param errorMessage a string representing the error message to be passed to the object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 15
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.types.TaskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * A class that encapsulates a task that the user adds in."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private final String content;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private boolean completed \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Constructs a task object that has no date attached."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param content the content of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param type the type of the task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public Task(String content, String type) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        this.type \u003d TaskType.valueOfType(type);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Constructs a task object that has a date attached."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param content the content of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param type the type of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param date the date of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public Task(String content, String type, String date) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        this.type \u003d TaskType.valueOfType(type);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Constructs a task object that has a date attached."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param content the content of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param type the type of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param date a LocalDate object representing the date of the task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public Task(String content, String type, LocalDate date) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        this.type \u003d TaskType.valueOfType(type);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Gets the content of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return a string representing the content of the task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public String getContent() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Gets whether the task has been completed."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return true if the task is completed and false otherwise."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return completed;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Gets the type of the task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return a string representing the type of the task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return type.getType();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Marks the task as completed."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        completed \u003d true;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Gets the date of the task in the format of Month date Year."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return a string representing the date of the task in \"MMM d yyyy\"."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Overrides the toString method to represent the task in the form [T][✓] content (on/at: date)."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return a string representation of the task."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String statusLabel \u003d \"[\" + type.toString().substring(0, 1) + \"]\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String mainBody \u003d statusLabel + (completed ? \"[✓]\" : \"[✗]\") + \" \" + content;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        if (type \u003d\u003d TaskType.EVENT) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            mainBody +\u003d \" (on: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        if (type \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            mainBody +\u003d \" (by: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return mainBody;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 116
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.views.Messenger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulate a class that represents a list of tasks that the user entered."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks; // a list of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Constructs an empty task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Gets all the tasks of a list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return an ArrayList including all the tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Prints out all the tasks in the list in their string representation."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return a string representing the printed content of the task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public String printList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        for (int i \u003d 0; i \u003c size; ++i) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            output.append(i + 1).append(\".\").append(tasks.get(i).toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Marks the task of index as completed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param index the index of the task to be marked as completed."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return a string representing the message after the task is marked done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public String markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n    \" + task;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Adds a new task that has an attached date to the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param content the content of the task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param type the type of the task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param date the date of the task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return a string representing the message for adding a task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public String addTask(String content, String type, String date) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Task newTask \u003d new Task(content, type, date);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n    \" + newTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        output +\u003d String.format(\"Now you have %s %s in the list.\\n\", size, (size \u003e 1 ? \"tasks\" : \"task\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Adds a new task that has an attached date to the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param content the content of the task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param type the type of the task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return a string representing the message for adding a task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public String addTask(String content, String type) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Task newTask \u003d new Task(content, type);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n    \" + newTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        output +\u003d String.format(\"Now you have %s %s in the list.\\n\", size, (size \u003e 1 ? \"tasks\" : \"task\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Deletes the task of index from the list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param index the index of the task to be deleted."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return a string representing the message for deleting a task."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @throws DukeException throws an index out of bound exception."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public String deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        if (index \u003e size) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            throw new DukeException(Messenger.INDEX_OUT_OF_BOUND_ERROR);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String output \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        output +\u003d task + \"\\n\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        size -\u003d 1;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        output +\u003d String.format(\"Now you have %s %s in the list.\\n\", size, (size \u003e 1 ? \"tasks\" : \"task\"));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Finds the tasks that have the keyword."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param keyword the keyword to be searched for."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return a string representing the message for the found task."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public String findTask(String keyword) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String content \u003d task.getContent();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            if (content.contains(keyword)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                output.append(index).append(\".\").append(task.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Clears the tasks in the list."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public void clearTasks() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 136
    }
  },
  {
    "path": "src/main/java/duke/types/ActionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.types;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulate a ActionType enum class that represents the type of actions of a command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * The class includes three action types: delete, done and find"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public enum ActionType {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    FIND(\"find\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Constructs a ActionType object with the type of action given."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param actionType a string representing the type of action."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    ActionType(String actionType) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        type \u003d actionType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Gets the ActionType object from a string representation of the type."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Returns null if no such object exists."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param type a string representing the type."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return an ActionType object of the specified type and null if no such object exists."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static ActionType valueOfType(String type) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        for (ActionType e : values()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            if (e.type.equals(type)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                return e;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 38
    }
  },
  {
    "path": "src/main/java/duke/types/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.types;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulate a enum class that represents the type of a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * The class include three task types: todo, deadline and event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    EVENT(\"event\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Constructs a TaskType object with the type of the task given."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param taskType a string representing the type of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    TaskType(String taskType) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        type \u003d taskType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Gets the type of the task in the form of a string."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return a string representing the type."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Determines if the type of task has a time/date attached."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param taskType the type of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return true if the type has a time attached and false otherwise."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static boolean hasTime(String taskType) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return taskType.equals(\"event\") || taskType.equals(\"deadline\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Gets the TaskType object from a string representation of the type of the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Returns null if no such object exists."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param taskType a string representing the type of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return a TaskType object of the specified type and null if no such object exists."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static TaskType valueOfType(String taskType) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        for (TaskType e : values()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            if (e.type.equals(taskType)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                return e;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 57
    }
  },
  {
    "path": "src/main/java/duke/utils/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.types.ActionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.types.TaskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.views.Messenger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulate a class that represent a parser to parse the command being passed to"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * the program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Extracts a line of command into the action and the main body."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param command the line of command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return an array of string [action, main body]."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @throws DukeException throws a duke exception on empty command or spell error."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public String[] extractAction(String command) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // command is empty"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        if (command.matches(\" *\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            throw new DukeException(Messenger.EMPTY_COMMAND_ERROR);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String[] split \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        int len \u003d split.length;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String type \u003d split[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        if (TaskType.valueOfType(type) \u003d\u003d null \u0026\u0026 ActionType.valueOfType(type) \u003d\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            throw new DukeException(Messenger.SPELL_ERROR);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // no description supplied"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        if (len \u003d\u003d 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            throw new DukeException(Messenger.emptyDescriptionError(command));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return split;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Extracts the date from the main body."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param command the main body of the line of command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return an array of String [content, date]."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @throws DukeException throws a duke exception on empty content or time supplied."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public String[] extractDate(String command) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String[] split \u003d command.split(\" /by | /at \", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // validate if there are two parts"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        if (split.length \u003c 2) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            if (split[0].charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                throw new DukeException(Messenger.EMPTY_CONTENT_ERROR);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                throw new DukeException(Messenger.EMPTY_TIME_ERROR);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // validate if time is of the correct format"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String time \u003d split[1];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        validateFormat(time);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return split;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private void validateFormat(String value) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            LocalDate ld \u003d LocalDate.parse(value, formatter);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String result \u003d ld.format(formatter);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            if (!result.equals(value)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                throw new DukeException(Messenger.DATE_FORMAT_ERROR);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (DateTimeParseException exp) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            throw new DukeException(Messenger.DATE_FORMAT_ERROR);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 84
    }
  },
  {
    "path": "src/main/java/duke/utils/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.components.AlertBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.types.TaskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.views.Messenger;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulates a storage class that takes charge of loading saved files and saving data to file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private static final String DIRECTORY_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private static final String FILE_PATH \u003d DIRECTORY_PATH + \"/duke.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Constructs a storage object with a task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param list a task list for the storage object to populate with data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public Storage(TaskList list) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        taskList \u003d list;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Gets the task list of the storage object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @return a TaskList object representing the task list in the storage."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Reads the saved file and populate the data into the task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public void readSavedFile(Label label) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            label.setText(Messenger.FILE_LOADING + \"\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            File directory \u003d new File(DIRECTORY_PATH);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            if (!directory.exists()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                label.setText(label.getText() + Messenger.DIRECTORY_NOT_FOUND + \"\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                directory.mkdir();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            if (f.createNewFile()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                label.setText(label.getText() + Messenger.FILE_NOT_FOUND + \"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                    String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                    String[] parsed \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                    String command \u003d parsed[0];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                    if (TaskType.hasTime(command)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                        LocalDate ld \u003d LocalDate.parse(parsed[2], formatter);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                        taskList.getTasks().add(new Task(parsed[1], command, ld));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                        taskList.getTasks().add(new Task(parsed[1], command));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                label.setText(label.getText() + Messenger.FILE_LOADED + \"\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            AlertBox.display(\"IO Error\", e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Saves the data in the task list into a saved file."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public void saveDataToFile(Label label) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            FileWriter writer \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                writer.write(task.getType() + \"|\" + task.getContent()"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                        + (TaskType.hasTime(task.getType()) ? \"|\" + task.getDate() : \"\") + System.lineSeparator());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            taskList.clearTasks();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            label.setText(Messenger.CLOSE_MESSAGE);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            AlertBox.display(\"IO Error!\", e.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 101
    }
  },
  {
    "path": "src/main/java/duke/views/App.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.views;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.components.Evaluator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulates an App class that renders the view of the main app"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * inside the GUI."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public class App implements Page {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Constructs an App instance that displays the view for the main program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param storage a Storage object used to deal with data transfer."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public App(Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Sets the scene of the given stage to the App scene."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param window the window on which the scene displays."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public void setScene(Stage window) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TaskList taskList \u003d storage.getTaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        //create a GridPane container for command input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        GridPane grid \u003d new GridPane();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        grid.setPadding(new Insets(6, 6, 6, 6));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        grid.setVgap(5);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        grid.setHgap(5);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // define the main text display"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Label textDisplay \u003d new Label();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        textDisplay.setText(taskList.printList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        GridPane.setConstraints(textDisplay, 0, 0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // define the command text field"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TextField commands \u003d new TextField();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        commands.setPromptText(\"Enter your commands\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        commands.setPrefColumnCount(10);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        GridPane.setConstraints(commands, 0, 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // define the Submit button"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Button submit \u003d new Button(\"Enter\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Evaluator evaluator \u003d new Evaluator(storage, textDisplay, window);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        submit.setOnAction(e -\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            evaluator.handle(commands.getText());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            commands.setText(\"\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        });"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        GridPane.setConstraints(submit, 1, 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // define the back button"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Button backButton \u003d new Button(\"Back to Menu\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        backButton.setOnAction(e -\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            storage.saveDataToFile(textDisplay);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            new Menu(storage).setScene(window);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        GridPane.setConstraints(backButton, 2, 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // add components to grid"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        grid.getChildren().addAll(textDisplay, commands, submit, backButton);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        grid.setAlignment(Pos.CENTER);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Scene scene \u003d new Scene(grid, DEFAULT_PAGE_WIDTH, DEFAULT_PAGE_HEIGHT);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.setScene(scene);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.show();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 83
    }
  },
  {
    "path": "src/main/java/duke/views/Introduction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.views;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.animation.KeyFrame;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.animation.Timeline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulates an Introduction class that renders the introduction page"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * inside the GUI."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public class Introduction implements Page {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private static final int ANIMATION_DURATION \u003d 30;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private static final double THRESHOLD_OPACITY \u003d 0.01;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Constructs a Introduction instance that displays the introduction view."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param storage a storage object used to read and store data."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public Introduction(Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Set the scene of an introduction page in the current window."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param window the current window displayed in the GUI."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public void setScene(Stage window) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // set up layout"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        GridPane root \u003d new GridPane();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        root.setAlignment(Pos.CENTER);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // set up title"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Text sceneTitle \u003d new Text(Messenger.INTRO_MESSAGE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        sceneTitle.setFont(Page.DEFAULT_TITLE_FONT);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        root.add(sceneTitle, 3, 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // set up window"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.setTitle(\"Menu\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Scene scene \u003d new Scene(root, Page.DEFAULT_PAGE_WIDTH, Page.DEFAULT_PAGE_HEIGHT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.setScene(scene);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.show();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // define animation"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Timeline animationTimeLine \u003d new Timeline();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        animationTimeLine.setCycleCount(Timeline.INDEFINITE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        animationTimeLine.getKeyFrames().add("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            new KeyFrame(new Duration(ANIMATION_DURATION), t -\u003e {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                root.setOpacity(root.getOpacity() - THRESHOLD_OPACITY);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                if (root.getOpacity() \u003c THRESHOLD_OPACITY) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                    // execute next view if triggered"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                    new Menu(storage).setScene(window);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                    // end animation"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                    animationTimeLine.stop();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            })"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        );"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        animationTimeLine.play();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 72
    }
  },
  {
    "path": "src/main/java/duke/views/Menu.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.views;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.components.DataSaver;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulates a scene that displays the Menu page in the GUI."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public class Menu implements Page {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Constructs a Menu instance that displays a menu view."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param storage a storage object used to read and store data."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public Menu(Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Sets the scene of the given stage to the menu scene."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param window the window on which the scene displays."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public void setScene(Stage window) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // set up components"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Button startButton \u003d new Button(\"Start Duke!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Button closeButton \u003d new Button(\"Exit\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Label logo \u003d new Label(Messenger.LOGO);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        logo.setFont(Page.DEFAULT_TITLE_FONT);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // read in file and print outcome"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Label storageText \u003d new Label();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // set up layout"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        VBox layout \u003d new VBox(20);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        layout.getChildren().addAll(logo, storageText, startButton, closeButton);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        layout.setAlignment(Pos.CENTER);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // set up scene"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Scene scene \u003d new Scene(layout, DEFAULT_PAGE_WIDTH, DEFAULT_PAGE_HEIGHT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        // redirect"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        startButton.setOnAction(e -\u003e new App(storage).setScene(window));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        closeButton.setOnAction(e -\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            DataSaver.save(storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            if (DataSaver.isQuitting()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                window.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        });"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.setScene(scene);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        window.show();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        storage.readSavedFile(storageText);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 63
    }
  },
  {
    "path": "src/main/java/duke/views/Messenger.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.views;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulates a Messenger class to manage important notifications in the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public class Messenger {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Project logo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Introduction messages."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static final String INTRO_MESSAGE \u003d \"A Production by Zijian.\\n\\nFor CS2103T 2020 Sem 1\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Messages for loading and saving files."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static final String FILE_LOADING \u003d \"Hold a while, trying to retrieve where you were last time...\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static final String FILE_LOADED \u003d \"Great! We have successfully loaded the data. Enjoy~\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static final String CLOSE_MESSAGE \u003d \"Content Saved! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Error handling messages."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "      */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static final String INDEX_FORMAT_ERROR \u003d \"☹ OOPS!!! Seems you have provided an invalid index :-(\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static final String COMMAND_UNRECOGNIZABLE_ERROR \u003d \"☹ OOPS!!! I\u0027m sorry, \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            + \"but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static final String EMPTY_COMMAND_ERROR \u003d \"☹ OOPS!!! The command cannot be empty!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static final String SPELL_ERROR \u003d \"☹ OOPS!!! Check if you have spelled correctly!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static final String EMPTY_CONTENT_ERROR \u003d \"☹ OOPS!!! Seems you forgot to supply the main content!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static final String EMPTY_TIME_ERROR \u003d \"☹ OOPS!!! Seems you forgot to supply the time!\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            + \"Simply add \u0027/by \u003ctime\u003e\u0027 for deadline OR \u0027/at \u003ctime\u003e\u0027 for event behind your command\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static final String INDEX_OUT_OF_BOUND_ERROR \u003d \"☹ OOPS!!! Seems the index you provided is not in the list.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static final String FILE_NOT_FOUND \u003d \"Couldn\u0027t find a save file. You may start adding things from start!\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static final String DIRECTORY_NOT_FOUND \u003d \"Couldn\u0027t find the data directory. Creating one for you...\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static final String DATE_FORMAT_ERROR \u003d \"☹ OOPS!!! The format for your date is incorrect. \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            + \"Use yyyy-MM-dd instead\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public static String emptyDescriptionError(String command) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        return String.format(\"☹ OOPS!!! The description of a %s cannot be empty.\", command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 47
    }
  },
  {
    "path": "src/main/java/duke/views/Page.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.views;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.text.FontWeight;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " * Encapsulates an interface that represents a page in the GUI."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public interface Page {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * The default width of a window page."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    int DEFAULT_PAGE_WIDTH \u003d 800;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * The default height of a window page."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    int DEFAULT_PAGE_HEIGHT \u003d 600;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * The default font for Titles."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    Font DEFAULT_TITLE_FONT \u003d Font.font(\"Tahoma\", FontWeight.NORMAL, 40);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * Renders a scene on the window."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     * @param window the current window displayed in the GUI."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void setScene(Stage window);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 32
    }
  },
  {
    "path": "src/test/java/TextFxJava/TestFXJUnitAppRunner.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package TextFxJava;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.components.Starter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import org.testfx.api.FxToolkit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import org.testfx.framework.junit5.ApplicationTest;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import org.testfx.util.WaitForAsyncUtils;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.util.concurrent.TimeoutException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "public class TestFXJUnitAppRunner extends ApplicationTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public void runAppToTests() throws Exception {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        FxToolkit.registerPrimaryStage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        FxToolkit.setupApplication(Starter::new);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        FxToolkit.showStage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        WaitForAsyncUtils.waitForFxEvents(100);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public void stopApp() throws TimeoutException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        FxToolkit.cleanupStages();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    public void start(Stage primaryStage){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        primaryStage.toFront();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 32
    }
  },
  {
    "path": "src/test/java/duke/tasks/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void getTasks() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        list.addTask(\"test content\", \"todo\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(list.getTasks().get(0).toString(), \"[T][✗] test content\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void printList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        list.addTask(\"test content1\", \"todo\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        list.addTask(\"test content2\", \"deadline\", \"2020-08-23\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String actual \u003d list.printList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String expectedOut \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                \"Here are the tasks in your list:\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                \"1.[T][✗] test content1\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                \"2.[D][✗] test content2 (by: Aug 23 2020)\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(expectedOut, actual);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void markTaskAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        list.addTask(\"test content1\", \"todo\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        list.markTaskAsDone(1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertTrue(list.getTasks().get(0).isCompleted());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void addTask() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String actual \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        actual +\u003d list.addTask(\"test content1\", \"todo\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        actual +\u003d list.addTask(\"test content2\", \"deadline\", \"2020-08-23\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String expectedOut \u003d \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                \"    [T][✗] test content1\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                \"Now you have 1 task in the list.\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                \"    [D][✗] test content2 (by: Aug 23 2020)\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                \"Now you have 2 tasks in the list.\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(expectedOut, actual);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(list.getTasks().size(), 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void deleteTask() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        list.addTask(\"test content1\", \"todo\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        list.addTask(\"test content2\", \"deadline\", \"2020-08-23\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String actual \u003d list.deleteTask(1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String expected \u003d \"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                    \"[T][✗] test content1\\n\" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                    \"Now you have 1 task in the list.\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            assertEquals(expected, actual);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void deleteTask_invalidIndex_exceptionThrown() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            list.deleteTask(1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            assertEquals(e.getMessage(), \"☹ OOPS!!! Seems the index you provided is not in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void findTask() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        list.addTask(\"test content1\", \"todo\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        list.addTask(\"test content2\", \"deadline\", \"2020-08-23\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        list.addTask(\"test content2\", \"deadline\", \"2020-08-25\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        list.addTask(\"test content3\", \"deadline\", \"2020-08-28\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String actual \u003d list.findTask(\"content2\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String expected \u003d \"Here are the matching tasks in your list:\\n\" +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                \"1.[D][✗] test content2 (by: Aug 23 2020)\\n\" +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                \"2.[D][✗] test content2 (by: Aug 25 2020)\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 96
    }
  },
  {
    "path": "src/test/java/duke/tasks/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void getContent() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Task task \u003d new Task(\"test content\", \"todo\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(task.getContent(), \"test content\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void isCompleted() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Task task \u003d new Task(\"test content\", \"todo\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertTrue(task.isCompleted());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void getStatus() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Task task \u003d new Task(\"test content\", \"todo\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(task.getType(), \"todo\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Task task \u003d new Task(\"test content\", \"todo\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertTrue(task.isCompleted());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void getTime() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Task task \u003d new Task(\"test content\", \"deadline\", \"2020-08-23\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(task.getDate(), \"Aug 23 2020\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Task task \u003d new Task(\"test content\", \"deadline\", \"2020-08-23\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(task.toString(), \"[D][✗] test content (by: Aug 23 2020)\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(task.toString(), \"[D][✓] test content (by: Aug 23 2020)\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 49
    }
  },
  {
    "path": "src/test/java/duke/types/ActionTypeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.types;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "class ActionTypeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void valueOfDeleteType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        ActionType todoType \u003d ActionType.valueOfType(\"delete\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(todoType, ActionType.DELETE);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void valueOfDoneType() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "       ActionType doneType \u003d ActionType.valueOfType(\"done\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(doneType, ActionType.DONE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "   }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void valueOfFindType() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        ActionType findType \u003d ActionType.valueOfType(\"find\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(findType, ActionType.FIND);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 26
    }
  },
  {
    "path": "src/test/java/duke/types/TaskTypeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.types;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "class TaskTypeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private static TaskType deadlineType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private static TaskType eventType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private static TaskType todoType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    static void setUp() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        deadlineType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        eventType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        todoType \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void getType() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String[] expectedArr \u003d {deadlineType.getType(),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                eventType.getType(),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                todoType.getType()};"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String[] actualArr \u003d {\"deadline\", \"event\", \"todo\"};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertArrayEquals(expectedArr, actualArr);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void hasTime() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertTrue(TaskType.hasTime(\"deadline\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertTrue(TaskType.hasTime(\"event\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertFalse(TaskType.hasTime(\"todo\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void valueOfDeadlineType() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TaskType deadlineType \u003d TaskType.valueOfType(\"deadline\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(deadlineType, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void valueOfEventType() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TaskType deadlineType \u003d TaskType.valueOfType(\"event\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(deadlineType, TaskType.EVENT);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void valueOfTodoType() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TaskType deadlineType \u003d TaskType.valueOfType(\"todo\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(deadlineType, TaskType.TODO);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 53
    }
  },
  {
    "path": "src/test/java/duke/utils/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void extractAction() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String commandLine1 \u003d \"todo borrow book\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String[] split \u003d parser.extractAction(commandLine1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            assertEquals(split[0], \"todo\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            assertEquals(split[1], \"borrow book\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void extractAction_emptyCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String commandLine \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            parser.extractAction(commandLine);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            assertEquals(e.getMessage(), \"☹ OOPS!!! The command cannot be empty!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void extractAction_wrongSpelling_exceptionThrown() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String command \u003d \"top up\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            parser.extractAction(command);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            assertEquals(e.getMessage(), \"☹ OOPS!!! Check if you have spelled correctly!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void extractTime() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String command \u003d \"return book /by 2020-08-23\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String[] split \u003d parser.extractDate(command);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            assertEquals(\"return book\", split[0]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            assertEquals(\"2020-08-23\", split[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void extractTime_timeNotGiven_exceptionThrown() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String command \u003d \"return book\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            parser.extractDate(command);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            assertEquals(e.getMessage(), \"☹ OOPS!!! Seems you forgot to supply the time!\\n\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                    \"Simply add \u0027/by \u003ctime\u003e\u0027 for deadline OR \u0027/at \u003ctime\u003e\u0027 for event behind your command\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void extractTime_contentNotGiven_exceptionThrown() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String command \u003d \"/by 2020-08-23\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            parser.extractDate(command);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            assertEquals(e.getMessage(), \"☹ OOPS!!! Seems you forgot to supply the main content!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void extractTime_wrongDateFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            String command \u003d \"return book /by tomorrow\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            parser.extractDate(command);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            assertEquals(e.getMessage(), \"☹ OOPS!!! The format for your date is incorrect. Use yyyy-MM-dd instead\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 91
    }
  },
  {
    "path": "src/test/java/duke/utils/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import TextFxJava.TestFXJUnitAppRunner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "class StorageTest extends TestFXJUnitAppRunner {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void readSavedFile() throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Label label \u003d new Label();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Storage storage \u003d new Storage(list);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        makeBackup();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        storage.readSavedFile(label);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String actual \u003d label.getText() + list.printList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        recover();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String expected \u003d \"Hold a while, trying to retrieve where you were last time...\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                + \"Great! We have successfully loaded the data. Enjoy~\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                + \"Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                + \"1.[T][✗] borrow book\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                + \"2.[D][✗] return book (by: Aug 23 2020)\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    void saveDataToFile() throws IOException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Label label \u003d new Label();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Storage storage \u003d new Storage(list);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        makeBackup();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        storage.readSavedFile(label);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        list.addTask(\"test content\", \"todo\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        storage.saveDataToFile(label);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        File f \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            sb.append(sc.nextLine()).append(\"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String actual \u003d sb.toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        String expected \u003d \"todo|borrow book\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                + \"deadline|return book|Aug 23 2020\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "                + \"todo|test content\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        recover();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        assertEquals(actual, expected);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private void makeBackup() throws IOException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        File f \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        File dest \u003d new File(\"data/duke.bak\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        File test \u003d new File(\"src/test/java/duke/utils/duke-test.txt\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        dest.exists();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        if (f.exists()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            Files.copy(f.toPath(), dest.toPath());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        if (f.delete()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            Files.copy(test.toPath(), f.toPath());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    private void recover() throws IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        File dest \u003d new File(\"data/duke.bak\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        File f \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        if (f.delete()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "            Files.copy(dest.toPath(), f.toPath());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "        dest.delete();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 91
    }
  },
  {
    "path": "src/test/java/duke/utils/duke-test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "todo|borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "deadline|return book|Aug 23 2020"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "deadline return book /by 2020-08-23"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "event project meeting /at 2020-08-25"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "delete"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "even"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 14
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "find ../src/main/java/duke -name \"*.java\" \u003e sources.txt"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "# cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "# remove unecessary files"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "rm sources.txt"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "rm -r data"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "# diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BobbyZhouZijian"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "BobbyZhouZijian": 10,
      "-": 34
    }
  }
]
