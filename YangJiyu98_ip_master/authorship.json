[
  {
    "path": "data/task.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "todo//hello//false"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "todo//hello//false"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "todo//1//false"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 3
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import dukeclass.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import dukeclass.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import dukeclass.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import dukeclass.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import dukeclass.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " * Encapsulates a chat robot that you can chat with to set tasks for yourself."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static void startDuke() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        File f \u003d Storage.createFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        System.out.println(Ui.welcomeMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            Storage.readFromFile(f, taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        System.out.println(\"Loading done\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            Parser.parseCommands(taskList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            System.out.println(Ui.unknownInputErrorMessage(e));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            Storage.writeToFile(f, taskList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        System.out.println(Ui.endMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        Duke.startDuke();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 65,
      "-": 3
    }
  },
  {
    "path": "src/main/java/dukeclass/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " * A type of task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " * The task has a String message and a Boolean status."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " * in addition to that, it has a preposition and a timeline to be completed by"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    private static final String ICON \u003d \"D\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    private String preposition;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public Deadline(String taskString, String preposition, String dateTimeString) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        super(taskString);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.preposition \u003d preposition;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.dateTime \u003d LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public Deadline(String taskString, String preposition, String dateTimeString, boolean status) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        super(taskString);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.preposition \u003d preposition;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.dateTime \u003d LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        String statusIcon \u003d (status)?\"✓\":\"✗\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return \"[\" + ICON + \"]\" + \"[\" + statusIcon + \"] \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + this.taskString + \" (\" + this.preposition + \": \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + dateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return \"deadline//\" + taskString + \"//\" + preposition + \"//\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + dateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \"//\" + status;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 44
    }
  },
  {
    "path": "src/main/java/dukeclass/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " * A type of task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " * The task has a String message and a Boolean status."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " * in addition to that, it has a preposition and a timeline to be completed by"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static final String ICON \u003d \"E\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    private String preposition;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public Event(String taskString, String preposition, String dateTimeString) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        super(taskString);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.preposition \u003d preposition;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.dateTime \u003d LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public Event(String taskString, String preposition, String dateTimeString, boolean status) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        super(taskString);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.preposition \u003d preposition;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.dateTime \u003d LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        String statusIcon \u003d (status)?\"✓\":\"✗\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return \"[\" + ICON + \"]\" + \"[\" + statusIcon + \"] \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + this.taskString + \" (\" + this.preposition + \": \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + dateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return \"event//\" + taskString + \"//\" + preposition + \"//\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + dateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \"//\" + status;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 43
    }
  },
  {
    "path": "src/main/java/dukeclass/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "public class InvalidInputException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    InvalidInputException(String s) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 8
    }
  },
  {
    "path": "src/main/java/dukeclass/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * Parse the input String by the user and returns a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @param rawInput A single line of entry from the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @return Task of a specific type e.g. todo, deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @throws InvalidInputException  If the user did not enter the entry in the correct format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static Task parseTask(String rawInput) throws InvalidInputException{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        String[] splitString \u003d rawInput.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        int splitStringLength \u003d splitString.length;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        if (splitString[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                throw new InvalidInputException(\"Description of To Do cannot be empty\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                String[] taskStringArray \u003d Arrays.copyOfRange(splitString, 1, splitStringLength);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                return new Todo(String.join(\" \", taskStringArray));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        } else if (splitString[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                throw new InvalidInputException(\"Description of Deadline cannot be empty\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                String[] taskStringArray \u003d Arrays.copyOfRange(splitString, 1, splitStringLength);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                String toSplit \u003d String.join(\" \", taskStringArray);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                int indexOfSlash \u003d toSplit.indexOf(\"/\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                if (indexOfSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    throw new InvalidInputException(\"Date/time for Deadline cannot be empty/not recognised\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    int indexOfNextWord \u003d toSplit.indexOf(\" \", indexOfSlash);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    return new Deadline(toSplit.substring(0, indexOfSlash),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                            toSplit.substring(indexOfSlash + 1, indexOfNextWord),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                            toSplit.substring(indexOfNextWord + 1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        } else if (splitString[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                throw new InvalidInputException(\"Description of Event cannot be empty\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                String[] taskStringArray \u003d Arrays.copyOfRange(splitString, 1, splitStringLength);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                String toSplit \u003d String.join(\" \", taskStringArray);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                int indexOfSlash \u003d toSplit.indexOf(\"/\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                if (indexOfSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    throw new InvalidInputException(\"Date/time for Event cannot be empty/not recognised\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    int indexOfNextWord \u003d toSplit.indexOf(\" \", indexOfSlash);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    return new Event(toSplit.substring(0, indexOfSlash - 1),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                            toSplit.substring(indexOfSlash + 1, indexOfNextWord),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                            toSplit.substring(indexOfNextWord + 1));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            throw new InvalidInputException(\"Unrecognized command\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static TaskList parseCommands(TaskList list) throws InvalidInputException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        String rawInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        while (!rawInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                String[] splitString \u003d rawInput.split(\" \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                if (splitString[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    System.out.println(Ui.printTaskList(list));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                } else if (splitString[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    //print OG list"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    // can add error handling exception in case out of bounds"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    // can add error handling for exception already done"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    int index \u003d Integer.parseInt(splitString[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    list.get(index - 1).setStatus(true);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    System.out.println(Ui.printTaskList(list));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                } else if (splitString[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    // can add error handling exception in case out of bounds"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    int index \u003d Integer.parseInt(splitString[1]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    list.remove(index - 1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    System.out.println(Ui.printTaskList(list));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                } else if (splitString[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    TaskList tempList \u003d new TaskList();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                        if (list.get(i).toString().contains(splitString[1])) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                            tempList.add(list.get(i));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    System.out.println(tempList.toString());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    Task currTask \u003d Parser.parseTask(rawInput);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    list.add(currTask);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    System.out.println(Ui.printTask(currTask));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                System.out.println(Ui.unknownInputErrorMessage(e));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            rawInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 131
    }
  },
  {
    "path": "src/main/java/dukeclass/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * Create the file and directory for storage if it does not exist yet."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @return File for storage of TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static File createFile() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        File d \u003d new File(\"data\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        File f \u003d new File(\"data/task.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            if (!d.exists()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                if(d.mkdir()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    System.out.println(\"New data directory created\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            if(f.createNewFile()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                System.out.println(\"new task data file created\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return f;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * Parse the input String line by line and returns a task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * Each segment in an entry must be split by \"//\"."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @param input A single line of entry from the text file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @return Task of a specific type e.g. todo, deadline."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @throws InvalidInputException  If the data is not correctly formatted."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static Task parseDatabase(String input) throws InvalidInputException{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        String[] splitString \u003d input.split(\"//\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        if (splitString[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            if (splitString.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                return new Todo(String.join(\" \", splitString[1]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } else if (splitString.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                return new Todo(splitString[1], Boolean.parseBoolean(splitString[2]));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                // potential error msg here?"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                throw new InvalidInputException(\"ERROR IN DB\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        } else if (splitString[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            if (splitString.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                return new Deadline(splitString[1],"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                        splitString[2],"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                        splitString[3]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } else if (splitString.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                return new Deadline(splitString[1],"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                        splitString[2],"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                        splitString[3],"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                        Boolean.parseBoolean(splitString[4]));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                throw new InvalidInputException(\"ERROR IN DB\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        } else if (splitString[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            if (splitString.length \u003c 4) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                throw new InvalidInputException(\"Description of event cannot be empty\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } else if (splitString.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                return new Event(splitString[1],"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                        splitString[2],"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                        splitString[3]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } else if (splitString.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                return new Event(splitString[1],"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                        splitString[2],"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                        splitString[3],"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                        Boolean.parseBoolean(splitString[4]));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                throw new InvalidInputException(\"ERROR IN DB\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            throw new InvalidInputException(\"Unrecognized task\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * Read the database line by line and pass it to databaseParser"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @param f the file containing the data."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @param list the list to store the task."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @return TaskList of task after being parsed."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @throws FileNotFoundException  If the directory cannot be found/File could not be created."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static TaskList readFromFile(File f, TaskList list) throws FileNotFoundException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                list.add(Storage.parseDatabase(s.nextLine()));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                System.out.println(\"ERROR IN DATABASE!!!!!!!!!!!!!!!!!!!!!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * Writes on to the target file with the current list of Tasks"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @param f the file to write the data on."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @param list the list containing the tasks."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @throws IOException  If the file cannot be written on."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static void writeToFile(File f, TaskList list) throws IOException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        FileWriter fw \u003d new FileWriter(f);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        String stringToWrite \u003d \"\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        for(int i \u003d0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            Task t \u003d list.get(i);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            stringToWrite \u003d stringToWrite + t.toDataString() + System.lineSeparator();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        fw.write(stringToWrite);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 140
    }
  },
  {
    "path": "src/main/java/dukeclass/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " * The task has a String message and a Boolean status."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    protected String taskString;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    protected Boolean status;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public Task(String taskString) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.taskString \u003d taskString;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.status \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public void setStatus(Boolean b) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.status \u003d b;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return this.taskString;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public abstract String toDataString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return this.status;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 30
    }
  },
  {
    "path": "src/main/java/dukeclass/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " * Represents a list of Tasks using an Arraylist"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public void remove(int i) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.taskList.remove(i);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return this.taskList.get(i);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        String finalString \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            finalString +\u003d this.taskList.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return finalString;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 41
    }
  },
  {
    "path": "src/main/java/dukeclass/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " * A type of task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " * The task has a String message and a Boolean status."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    private static final String ICON \u003d \"T\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public Todo(String taskString) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        super(taskString);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public Todo(String taskString, boolean status) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        super(taskString);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        String statusIcon \u003d (status)?\"✓\":\"✗\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return \"[\" + ICON + \"]\" + \"[\" + statusIcon + \"] \" + this.taskString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return \"todo//\" + taskString + \"//\" + status;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 30
    }
  },
  {
    "path": "src/main/java/dukeclass/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " * Deals with interactions with the user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static String welcomeMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + \"     What can I do for you?\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static String endMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + \"     Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * Prints the list of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @param list  list to be printed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @return list of String type."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static String printTaskList(TaskList list) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + list.toString() + \"\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * Prints the tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @param task  task to be printed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     * @return task of String type."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static String printTask(Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static String unknownInputErrorMessage(Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return \"DUKE DOES NOT UNDERSTAND YOU!!!@#%#$%^!@^%\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + \"\\nTRY AGAIN!!!\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 52
    }
  },
  {
    "path": "test/dukeclass/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public void parser_emptyTodoDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            Parser.parseTask(\"todo\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            assertEquals(\"Description of To Do cannot be empty\", e.getMessage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public void parser_emptyDeadlineDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            Parser.parseTask(\"deadline\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            assertEquals(\"Description of Deadline cannot be empty\", e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 29
    }
  },
  {
    "path": "test/dukeclass/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import dukeclass.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public void testReadFileContents() throws FileNotFoundException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        TaskList actualList \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        File f \u003d new File(\"test/testData/test.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        Storage.readFromFile(f, actualList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        expectedList.add(new Todo(\"test 1\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        expectedList.add(new Deadline(\"test 2\", \"by\", \"1986-04-08 12:30\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        expectedList.add(new Event(\"test 3\", \"by\", \"1986-04-08 12:30\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        assertEquals(expectedList.get(0).toString(), actualList.get(0).toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        assertEquals(expectedList.get(1).toString(), actualList.get(1).toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        assertEquals(expectedList.get(2).toString(), actualList.get(2).toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 31
    }
  },
  {
    "path": "test/testData/test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "todo//test 1//false"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "deadline//test 2//by//1986-04-08 12:30//false"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "event//test 3//by//1986-04-08 12:30//false"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "todo hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "deadline hi /by today"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "event hey /at tmr"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 1,
      "-": 20
    }
  }
]
