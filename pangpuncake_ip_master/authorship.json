[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private DukeList list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    Command(DukeList list) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String processCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        String[] stringArray \u003d command.split(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        List\u003cString\u003e stringList \u003d new ArrayList\u003c\u003e(Arrays.asList(stringArray));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        String com \u003d stringList.remove(0);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        switch(com) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case (\"hello\"):"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                return \"Hi! I\u0027m Duke! Pleasure to meet you :)\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case (\"list\"):"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case (\"undo\"):"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case (\"done\"):"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case (\"delete\"):"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    return this.processList(com, stringList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    return e.getMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case (\"todo\"):"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case (\"deadline\"):"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case (\"event\"):"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    return this.processTask(com, stringList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    return e.getMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                throw new DukeException(\"Sorry, I did not understand: \" + command);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private String processTask(String com, List\u003cString\u003e stringList) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        switch(com) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case(\"todo\"):"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                if (!stringList.isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    return list.addItem(new Todo(String.join(\" \", stringList)));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    throw new DukeException(\"Please write a task to be done, with \\\"todo \u003ctask\u003e\\\"\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case(\"deadline\"):"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                if (!stringList.isEmpty()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    String[] taskAndDate \u003d Command.getTaskAndDate(stringList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    return list.addItem(new Deadline(taskAndDate[0], taskAndDate[1]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    throw new DukeException(\"Please write a deadline, with \\\"deadline \u003ctask\u003e /by \u003cdate\u003e\\\"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case(\"event\"):"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                if (!stringList.isEmpty()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    String[] taskAndDate \u003d Command.getTaskAndDate(stringList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    return list.addItem(new Event(taskAndDate[0], taskAndDate[1]));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    throw new DukeException(\"Please write an event, with \\\"event \u003ctask\u003e /at \u003cdate\u003e\\\"\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private String processList(String com, List\u003cString\u003e stringList) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        switch(com) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case(\"list\"):"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                return list.toString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case(\"done\"):"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                if (!stringList.isEmpty()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    return list.markDone(Integer.parseInt(stringList.get(0)) - 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    throw new DukeException(\"Please choose a task to mark as done, with \\\"done \u003ctask number\u003e\\\"\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case(\"undo\"):"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                if (!stringList.isEmpty()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    return list.revertDone(Integer.parseInt(stringList.get(0)) - 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            case(\"delete\"):"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                if (!stringList.isEmpty()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    return list.deleteItem(Integer.parseInt(stringList.get(0)) - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    throw new DukeException(\"Please choose a task to delete, with \\\"delete \u003ctask number\u003e\\\"\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    private static String[] getTaskAndDate(List\u003cString\u003e description) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        String[] result \u003d new String[2];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        int dateIndex \u003d -1;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        for (int i \u003d 0; i \u003c description.size(); i++) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            if (description.get(i).charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                dateIndex \u003d i;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (dateIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            result[0] \u003d String.join(\" \", description.subList(0, description.size()));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            result[1] \u003d \"No date set\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            result[0] \u003d String.join(\" \", description.subList(0, dateIndex));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            result[1] \u003d String.join(\" \", description.subList(dateIndex + 1, description.size()));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 119
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    Deadline(String task, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"[Deadline] \" + super.toString() + \" (by: \" + this.date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                \"____________________________________________________________\\nHello from\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        logo + \"\\nWhat can I do for you?\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        DukeList list \u003d new DukeList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        Command system \u003d new Command(list);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        boolean running \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        while (running \u0026\u0026 scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            String command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                running \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                                \"Bye! Hope to see you again soon!\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                                \"\\n____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                String result;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    result \u003d system.processCommand(command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    result \u003d e.getMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                        \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                                result +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                                \"\\n____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 36,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 5
    }
  },
  {
    "path": "src/main/java/DukeList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public class DukeList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    int activeTasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    int completedTasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    DukeList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.activeTasks \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.completedTasks \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String addItem(Task item) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.list.add(item);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.activeTasks +\u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"added: \" + item + \"\\nActive Tasks: \" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                this.activeTasks + \"\\nCompleted Tasks: \" + this.completedTasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String deleteItem(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (index \u003e\u003d this.list.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return \"Please choose a valid task to delete\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        Task deletedTask \u003d this.list.remove(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (deletedTask.done) this.completedTasks -\u003d 1; else this.activeTasks -\u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"Noted. I have deleted the following task: \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                + deletedTask + \"\\nActive Tasks: \" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                this.activeTasks + \"\\nCompleted Tasks: \" + this.completedTasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String markDone(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (index \u003e\u003d this.list.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return \"Please choose a valid task to mark as done\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (!this.list.get(index).done) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            this.activeTasks -\u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            this.completedTasks +\u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return this.list.get(index).markDone() + \"\\nActive Tasks: \" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    this.activeTasks + \"\\nCompleted Tasks: \" + this.completedTasks;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"The task is already done!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String revertDone(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (index \u003e\u003d this.list.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return \"Please choose a valid task to mark as not done\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (this.list.get(index).done) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            this.activeTasks +\u003d 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            this.completedTasks -\u003d 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return this.list.get(index).revertDone() + \"\\nActive Tasks: \" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                    this.activeTasks + \"\\nCompleted Tasks: \" + this.completedTasks;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"The task is not yet done!\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (this.list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            return \"There are currently no tasks.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        String result \u003d \"Current tasks:\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d this.list.size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            result +\u003d i + \". \" + this.list.get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        result +\u003d \"\\nActive Tasks: \" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "                this.activeTasks + \"\\nCompleted Tasks: \" + this.completedTasks;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 73
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    Event(String task, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"[Event] \" + super.toString() + \" (at: \" + this.date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    String task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    Task(String task) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    String markDone() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"Great job, keep it up!\\n\" + this.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    String revertDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"Guess you made a mistake huh?\\n\" + this.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            result +\u003d \"[\\u2713] \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "            result +\u003d \"[\\u2718] \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        result +\u003d this.task;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 32
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    Todo(String task) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "        return \"[Todo] \" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "todo hello"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "event hello /at world"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "event hello"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "deadline hello /by world"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "deadline hello"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 17
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 5,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/Command.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/DukeList.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pangpuncake"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "pangpuncake": 8
    }
  }
]
