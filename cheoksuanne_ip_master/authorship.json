[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"cheoksuanne"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"cheoksuanne"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":44,"cheoksuanne":17}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"T ## 0 ## 3 ## hello"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":"T ## 0 ## 3 ## hello"},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"T ## 0 ## 3 ## bye"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"D ## 0 ## 3 ## read  ## 2019-12-12"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"T ## 0 ## 3 ## hello"}],"authorContributionMap":{"cheoksuanne":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"### Adding a Task: todo, deadline or event"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"Adds a todo, deadline or event task to the list."},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"### Deleting a Task: delete"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"Deletes a task from the list."},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"### Completing a task: done"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"Changes status of task to \u0027done\u0027 when it is completed."},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"### Finding a keyword: find"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"Searches for tasks in the list that match the keyword."},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"### Prioritising tasks: prioritise"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"Changes the priority of the task to high, medium or low priority. "},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"### Exiting the program: bye"},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"Saves the current tasks in the list and exits the program. "},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":"### `todo` - Adds a todo task"},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"Adds a todo task to the list"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"Format: "},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":"`todo TASK_NAME`"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":"`todo zoom workout`"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"cheoksuanne"},"content":"`Got it. I\u0027ve added this task:`"},{"lineNumber":39,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":40,"author":{"gitId":"cheoksuanne"},"content":"`[T][âœ—][3] zoom workout`"},{"lineNumber":41,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":42,"author":{"gitId":"cheoksuanne"},"content":"`Now you have # tasks in the list`"},{"lineNumber":43,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":44,"author":{"gitId":"cheoksuanne"},"content":"### `deadline` - Adds a deadline task"},{"lineNumber":45,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":46,"author":{"gitId":"cheoksuanne"},"content":"Adds a deadline task to the list"},{"lineNumber":47,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":48,"author":{"gitId":"cheoksuanne"},"content":"Format: "},{"lineNumber":49,"author":{"gitId":"cheoksuanne"},"content":"`deadline TASK_NAME /by YYYY-MM-DD`"},{"lineNumber":50,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":51,"author":{"gitId":"cheoksuanne"},"content":"Example of usage: "},{"lineNumber":52,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":53,"author":{"gitId":"cheoksuanne"},"content":"`deadline cs assignment /by 2020-08-12`"},{"lineNumber":54,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":55,"author":{"gitId":"cheoksuanne"},"content":"Expected outcome:"},{"lineNumber":56,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":57,"author":{"gitId":"cheoksuanne"},"content":"`Got it. I\u0027ve added this task:`"},{"lineNumber":58,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":59,"author":{"gitId":"cheoksuanne"},"content":"`[D][âœ—][3] cs assignment (by: Aug 12 2020)`"},{"lineNumber":60,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":61,"author":{"gitId":"cheoksuanne"},"content":"`Now you have # tasks in the list`"},{"lineNumber":62,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":63,"author":{"gitId":"cheoksuanne"},"content":"### `event` - Adds an event task"},{"lineNumber":64,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":65,"author":{"gitId":"cheoksuanne"},"content":"Adds an event task to the list"},{"lineNumber":66,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":67,"author":{"gitId":"cheoksuanne"},"content":"Format: "},{"lineNumber":68,"author":{"gitId":"cheoksuanne"},"content":"`event TASK_NAME /at YYYY-MM-DD HH:MM`"},{"lineNumber":69,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":70,"author":{"gitId":"cheoksuanne"},"content":"Example of usage: "},{"lineNumber":71,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":72,"author":{"gitId":"cheoksuanne"},"content":"`event concert /at 2020-10-11 19:00`"},{"lineNumber":73,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":74,"author":{"gitId":"cheoksuanne"},"content":"Expected outcome:"},{"lineNumber":75,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":76,"author":{"gitId":"cheoksuanne"},"content":"`Got it. I\u0027ve added this task:`"},{"lineNumber":77,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":78,"author":{"gitId":"cheoksuanne"},"content":"`[E][âœ—][3] concert (at: Oct 11 2020, 19:00)`"},{"lineNumber":79,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":80,"author":{"gitId":"cheoksuanne"},"content":"`Now you have # tasks in the list`"},{"lineNumber":81,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":82,"author":{"gitId":"cheoksuanne"},"content":"### `delete` - Deletes a task"},{"lineNumber":83,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":84,"author":{"gitId":"cheoksuanne"},"content":"Deletes a task from the list"},{"lineNumber":85,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":86,"author":{"gitId":"cheoksuanne"},"content":"Format: "},{"lineNumber":87,"author":{"gitId":"cheoksuanne"},"content":"`delete TASK_NUMBER`"},{"lineNumber":88,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":89,"author":{"gitId":"cheoksuanne"},"content":"Example of usage: "},{"lineNumber":90,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":91,"author":{"gitId":"cheoksuanne"},"content":"`delete 1`"},{"lineNumber":92,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":93,"author":{"gitId":"cheoksuanne"},"content":"Expected outcome:"},{"lineNumber":94,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":95,"author":{"gitId":"cheoksuanne"},"content":"`Noted. I\u0027ve removed this task:`"},{"lineNumber":96,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":97,"author":{"gitId":"cheoksuanne"},"content":"`[T][âœ—][3] zoom workout`"},{"lineNumber":98,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":99,"author":{"gitId":"cheoksuanne"},"content":"`Now you have # tasks in the list`"},{"lineNumber":100,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":101,"author":{"gitId":"cheoksuanne"},"content":"### `done` - Marks task as done"},{"lineNumber":102,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":103,"author":{"gitId":"cheoksuanne"},"content":"Marks a task as done when it is completed"},{"lineNumber":104,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":105,"author":{"gitId":"cheoksuanne"},"content":"Format: "},{"lineNumber":106,"author":{"gitId":"cheoksuanne"},"content":"`done TASK_NUMBER`"},{"lineNumber":107,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":108,"author":{"gitId":"cheoksuanne"},"content":"Example of usage: "},{"lineNumber":109,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":110,"author":{"gitId":"cheoksuanne"},"content":"`done 1`"},{"lineNumber":111,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":112,"author":{"gitId":"cheoksuanne"},"content":"Expected outcome:"},{"lineNumber":113,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":114,"author":{"gitId":"cheoksuanne"},"content":"`Nice! I\u0027ve marked this task as done:`"},{"lineNumber":115,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":116,"author":{"gitId":"cheoksuanne"},"content":"`[T][âœ“][3] zoom workout`"},{"lineNumber":117,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":118,"author":{"gitId":"cheoksuanne"},"content":"### `priority` - Changes the priority of a task"},{"lineNumber":119,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":120,"author":{"gitId":"cheoksuanne"},"content":"1. `Indicates priority levels`"},{"lineNumber":121,"author":{"gitId":"cheoksuanne"},"content":" 2. `Changes the priority of the task to high (1), medium (2) or low (3)`"},{"lineNumber":122,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":123,"author":{"gitId":"cheoksuanne"},"content":"Format: "},{"lineNumber":124,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":125,"author":{"gitId":"cheoksuanne"},"content":"1. `priority`"},{"lineNumber":126,"author":{"gitId":"cheoksuanne"},"content":"2. `priority TASK_NUMBER PRIORITY`"},{"lineNumber":127,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":128,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":129,"author":{"gitId":"cheoksuanne"},"content":"Example of usage: "},{"lineNumber":130,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":131,"author":{"gitId":"cheoksuanne"},"content":"1. `priority`"},{"lineNumber":132,"author":{"gitId":"cheoksuanne"},"content":"2. `priority 1 2` "},{"lineNumber":133,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":134,"author":{"gitId":"cheoksuanne"},"content":"Expected outcome:"},{"lineNumber":135,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":136,"author":{"gitId":"cheoksuanne"},"content":"1. `Priority levels:`"},{"lineNumber":137,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":138,"author":{"gitId":"cheoksuanne"},"content":"    `HIGH - 1`"},{"lineNumber":139,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":140,"author":{"gitId":"cheoksuanne"},"content":"    `MEDIUM - 2`"},{"lineNumber":141,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":142,"author":{"gitId":"cheoksuanne"},"content":"    `LOW - 3`"},{"lineNumber":143,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":144,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":145,"author":{"gitId":"cheoksuanne"},"content":"2. `Noted! I\u0027ve changed the priority of this task to: MEDIUM`"},{"lineNumber":146,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":147,"author":{"gitId":"cheoksuanne"},"content":"    `[T][âœ“][2] zoom workout`"},{"lineNumber":148,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":149,"author":{"gitId":"cheoksuanne"},"content":"### `find` - Finds a task"},{"lineNumber":150,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":151,"author":{"gitId":"cheoksuanne"},"content":"Finds all the tasks that match the keyword"},{"lineNumber":152,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":153,"author":{"gitId":"cheoksuanne"},"content":"Format: "},{"lineNumber":154,"author":{"gitId":"cheoksuanne"},"content":"`find KEYWORD`"},{"lineNumber":155,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":156,"author":{"gitId":"cheoksuanne"},"content":"Example of usage: "},{"lineNumber":157,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":158,"author":{"gitId":"cheoksuanne"},"content":"`find workout`"},{"lineNumber":159,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":160,"author":{"gitId":"cheoksuanne"},"content":"Expected outcome:"},{"lineNumber":161,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":162,"author":{"gitId":"cheoksuanne"},"content":"`Here are the matching tasks in your list`"},{"lineNumber":163,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":164,"author":{"gitId":"cheoksuanne"},"content":"`1. [T][âœ“][3] zoom workout`"},{"lineNumber":165,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":166,"author":{"gitId":"cheoksuanne"},"content":"`2. [D][âœ—][1] workout with sister`"},{"lineNumber":167,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":168,"author":{"gitId":"cheoksuanne"},"content":"### `bye` - Exits the program"},{"lineNumber":169,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":170,"author":{"gitId":"cheoksuanne"},"content":"Saves the tasks in the list and exits the program"},{"lineNumber":171,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":172,"author":{"gitId":"cheoksuanne"},"content":"Format: "},{"lineNumber":173,"author":{"gitId":"cheoksuanne"},"content":"`bye`"},{"lineNumber":174,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":175,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":176,"author":{"gitId":"cheoksuanne"},"content":"Expected outcome:"},{"lineNumber":177,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":178,"author":{"gitId":"cheoksuanne"},"content":"`bye bye!`"},{"lineNumber":179,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":180,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":181,"author":{"gitId":"cheoksuanne"},"content":""}],"authorContributionMap":{"-":14,"cheoksuanne":167}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"T ## 0 ## 3 ## eat"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":"D ## 0 ## 3 ## read  ## 2020-12-12"},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"E ## 0 ## 3 ## meeting  ## 2020-12-12 13:00"}],"authorContributionMap":{"cheoksuanne":3}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":" * Represents a command that adds tasks."},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"public class AddCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"    private String taskType;"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"    private String taskDescription;"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"    public AddCommand(String input) {"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"        assert input !\u003d null;"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"        String[] splitInput \u003d input.split(\" \", 2);"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"        this.taskType \u003d splitInput[0];"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"        this.taskDescription \u003d splitInput[1].trim();"},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"     * Handles input entered by the user by. The method adds the task to the task manager and saves the input."},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"     * @param input input entered by the user."},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"     * @param taskManager task manager that contains a list of tasks."},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":"     * @param fileHandler saves the input into a file."},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"     * @return String that contains information of the task that was added to the task list."},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"     * @throws IOException"},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"    public String handle(String input, TaskManager taskManager, Storage fileHandler) throws IOException {"},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"        if (this.taskType.equals(\"todo\")) {"},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":"            //if the task is a todo task"},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":"            Todo todo \u003d new Todo(this.taskDescription);"},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":"            taskManager.addTask(todo);"},{"lineNumber":35,"author":{"gitId":"cheoksuanne"},"content":"            fileHandler.writeToFile(taskManager);"},{"lineNumber":36,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":37,"author":{"gitId":"cheoksuanne"},"content":"            return \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":38,"author":{"gitId":"cheoksuanne"},"content":"                    + todo + \"\\nNow you have \" + taskManager.getNumTasks()"},{"lineNumber":39,"author":{"gitId":"cheoksuanne"},"content":"                    + \" tasks in the list\";"},{"lineNumber":40,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":41,"author":{"gitId":"cheoksuanne"},"content":"        } else if (this.taskType.equals(\"deadline\")) {"},{"lineNumber":42,"author":{"gitId":"cheoksuanne"},"content":"            //if the task is a deadline task"},{"lineNumber":43,"author":{"gitId":"cheoksuanne"},"content":"            String task \u003d this.taskDescription.replace(\"/by\", \"/\");"},{"lineNumber":44,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":45,"author":{"gitId":"cheoksuanne"},"content":"            String e \u003d DukeExceptionHandler.handleIncorrectDeadlineInputException(task);"},{"lineNumber":46,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":47,"author":{"gitId":"cheoksuanne"},"content":"            if (e !\u003d null) {"},{"lineNumber":48,"author":{"gitId":"cheoksuanne"},"content":"                return e;"},{"lineNumber":49,"author":{"gitId":"cheoksuanne"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":51,"author":{"gitId":"cheoksuanne"},"content":"            String taskName \u003d TextAndTaskConverter.getTaskName(task);"},{"lineNumber":52,"author":{"gitId":"cheoksuanne"},"content":"            LocalDate date \u003d TextAndTaskConverter.getDate(task);"},{"lineNumber":53,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":54,"author":{"gitId":"cheoksuanne"},"content":"            Deadline deadline \u003d new Deadline(taskName, date);"},{"lineNumber":55,"author":{"gitId":"cheoksuanne"},"content":"            taskManager.addTask(deadline);"},{"lineNumber":56,"author":{"gitId":"cheoksuanne"},"content":"            fileHandler.writeToFile(taskManager);"},{"lineNumber":57,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":58,"author":{"gitId":"cheoksuanne"},"content":"            return \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":59,"author":{"gitId":"cheoksuanne"},"content":"                    + deadline + \"\\nNow you have \" + taskManager.getNumTasks()"},{"lineNumber":60,"author":{"gitId":"cheoksuanne"},"content":"                    + \" tasks in the list\";"},{"lineNumber":61,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":62,"author":{"gitId":"cheoksuanne"},"content":"        } else {"},{"lineNumber":63,"author":{"gitId":"cheoksuanne"},"content":"            //if task is an event task"},{"lineNumber":64,"author":{"gitId":"cheoksuanne"},"content":"            String task \u003d this.taskDescription.replace(\"/at\", \"/\");"},{"lineNumber":65,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":66,"author":{"gitId":"cheoksuanne"},"content":"            String e \u003d DukeExceptionHandler.handleIncorrectEventInputException(task);"},{"lineNumber":67,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":68,"author":{"gitId":"cheoksuanne"},"content":"            if (e !\u003d null) {"},{"lineNumber":69,"author":{"gitId":"cheoksuanne"},"content":"                return e;"},{"lineNumber":70,"author":{"gitId":"cheoksuanne"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":72,"author":{"gitId":"cheoksuanne"},"content":"            String taskName \u003d TextAndTaskConverter.getTaskName(task);"},{"lineNumber":73,"author":{"gitId":"cheoksuanne"},"content":"            LocalDate date \u003d TextAndTaskConverter.getDate(task);"},{"lineNumber":74,"author":{"gitId":"cheoksuanne"},"content":"            LocalTime time \u003d TextAndTaskConverter.getTime(task);"},{"lineNumber":75,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":76,"author":{"gitId":"cheoksuanne"},"content":"            Event event \u003d new Event(taskName, date, time);"},{"lineNumber":77,"author":{"gitId":"cheoksuanne"},"content":"            taskManager.addTask(event);"},{"lineNumber":78,"author":{"gitId":"cheoksuanne"},"content":"            fileHandler.writeToFile(taskManager);"},{"lineNumber":79,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":80,"author":{"gitId":"cheoksuanne"},"content":"            return \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":81,"author":{"gitId":"cheoksuanne"},"content":"                    + event + \"\\nNow you have \" + taskManager.getNumTasks()"},{"lineNumber":82,"author":{"gitId":"cheoksuanne"},"content":"                    + \" tasks in the list\";"},{"lineNumber":83,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":85}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":" * Handles the input by the user and generates the respective output."},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"public abstract class Command {"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"     * Handles the input by the user and prints the respective output."},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"    public abstract String handle(String input, TaskManager taskManager, Storage fileHandler) throws IOException;"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"}"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":""}],"authorContributionMap":{"cheoksuanne":20}},{"path":"src/main/java/DataFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"//import java.io.File;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":"//"},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"//public class DataFile {"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"//"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"//    private File data;"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"//"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"//    public DataFile(File data) {"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"//        this.data \u003d data;"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"//    }"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"//"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"//    public File newFile()"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"//"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"//}"}],"authorContributionMap":{"cheoksuanne":13}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":" * Represents a deadline task."},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"    private final String description;"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"    private final LocalDate date;"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"    public Deadline(String description, LocalDate date) {"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"        this.date \u003d date;"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"    public String getDescription() {"},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"        return this.description;"},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"    public LocalDate getDate() {"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"        return this.date;"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":"        return \"[D]\" + \"[\" + getStatusIcon() + \"]\" + \"[\" + this.getPriority() + \"]\" + \" \" + this.description + \"(by: \""},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":"}"},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":""}],"authorContributionMap":{"cheoksuanne":34}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":" * Deletes a task from the task list."},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"    private int taskNum;"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"    public DeleteCommand(String input) {"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"        assert input !\u003d null;"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"        String[] splitInput \u003d input.split(\" \");"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"        this.taskNum \u003d Integer.parseInt(splitInput[1]);"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"     * Deletes a task from the task list."},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"     * @param input input entered by user."},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"     * @param taskManager task manager that contains a list of tasks."},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"     * @param fileHandler saves the input into a file."},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"     * @return String message of the task that was deleted."},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"     * @throws IOException"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":"    public String handle(String input, TaskManager taskManager, Storage fileHandler) throws IOException {"},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"        if (taskManager.getTaskList().isEmpty() || taskManager.getTaskList().size() \u003c taskNum) {"},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"            return \"There\u0027s nothing to delete!\";"},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"            Task deletedTask \u003d taskManager.getTask(taskNum - 1);"},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":"            taskManager.removeTask(taskNum);"},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":"            fileHandler.writeToFile(taskManager);"},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":35,"author":{"gitId":"cheoksuanne"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":36,"author":{"gitId":"cheoksuanne"},"content":"                    + deletedTask + \"\\nNow you have \" + taskManager.getNumTasks()"},{"lineNumber":37,"author":{"gitId":"cheoksuanne"},"content":"                    + \" tasks in the list\";"},{"lineNumber":38,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":40}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":36,"author":{"gitId":"cheoksuanne"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"cheoksuanne"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":40,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"cheoksuanne"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"cheoksuanne"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"cheoksuanne"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"cheoksuanne"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"cheoksuanne"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"cheoksuanne"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":50,"author":{"gitId":"cheoksuanne"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"cheoksuanne"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":54,"author":{"gitId":"cheoksuanne"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"cheoksuanne"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"cheoksuanne"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"cheoksuanne"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":59}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":" * Changes the completion status of a task to done."},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"public class DoneCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"    private int taskNum;"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"    public DoneCommand(String input) {"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"        assert input !\u003d null;"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"        String[] splitInput \u003d input.split(\" \");"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"        this.taskNum \u003d Integer.parseInt(splitInput[1]);"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"     * Changes the completion status of a task to done."},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"     * @param input input entered by user."},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"     * @param taskManager task manager that contains a list of tasks."},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"     * @param fileHandler saves the input into a file."},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"     * @return String message with the new completion status of the task."},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"     * @throws IOException"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"    public String handle(String input, TaskManager taskManager, Storage fileHandler) throws IOException {"},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"        if (taskManager.getTaskList().isEmpty() || taskManager.getTaskList().size() \u003c taskNum) {"},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":"            return \"This task doesn\u0027t exist!\";"},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":"        } else if (taskManager.getTask(this.taskNum - 1).isDone) {"},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"            return \"This task is already done!\";"},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":"            taskManager.setTaskDone(this.taskNum);"},{"lineNumber":35,"author":{"gitId":"cheoksuanne"},"content":"            fileHandler.writeToFile(taskManager);"},{"lineNumber":36,"author":{"gitId":"cheoksuanne"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":37,"author":{"gitId":"cheoksuanne"},"content":"                    + taskManager.getTask(taskNum - 1);"},{"lineNumber":38,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":40}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":" * The Duke program keeps track of the list of tasks to be done."},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"    private TaskManager taskManager;"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"    private Storage fileHandler;"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"    public Duke() throws IOException {"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"        String filePath \u003d \"duke.txt\";"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"        this.fileHandler \u003d new Storage(filePath);"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"        this.taskManager \u003d new TaskManager();"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"            List\u003cString\u003e files \u003d Storage.readSavedFile(filePath);"},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"            assert files !\u003d null;"},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"            for (String value : files) {"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"                Task task \u003d TextAndTaskConverter.convertTextToTask(value);"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":"                taskManager.getTaskList().add(task);"},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"            System.out.println(\"File not found!\");"},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":"     * The main method of the program."},{"lineNumber":35,"author":{"gitId":"cheoksuanne"},"content":"     * @param args user input."},{"lineNumber":36,"author":{"gitId":"cheoksuanne"},"content":"     * @throws IOException"},{"lineNumber":37,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"cheoksuanne"},"content":"    public static void main(String[] args) throws IOException, InvalidInputException {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":44,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":45,"author":{"gitId":"cheoksuanne"},"content":"        System.out.println(logo +\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"},{"lineNumber":46,"author":{"gitId":"cheoksuanne"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":47,"author":{"gitId":"cheoksuanne"},"content":"        duke.run();"},{"lineNumber":48,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":50,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"cheoksuanne"},"content":"     * Runs the duke program."},{"lineNumber":52,"author":{"gitId":"cheoksuanne"},"content":"     * @throws IOException"},{"lineNumber":53,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"cheoksuanne"},"content":"    private void run() throws IOException {"},{"lineNumber":55,"author":{"gitId":"cheoksuanne"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":56,"author":{"gitId":"cheoksuanne"},"content":"        String input \u003d scanner.nextLine();"},{"lineNumber":57,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":58,"author":{"gitId":"cheoksuanne"},"content":"        while (input !\u003d null) {"},{"lineNumber":59,"author":{"gitId":"cheoksuanne"},"content":"            try {"},{"lineNumber":60,"author":{"gitId":"cheoksuanne"},"content":"                Command command \u003d Parser.parseInput(input);"},{"lineNumber":61,"author":{"gitId":"cheoksuanne"},"content":"                System.out.println(command.handle(input, taskManager, fileHandler));"},{"lineNumber":62,"author":{"gitId":"cheoksuanne"},"content":"            } catch (InvalidInputException e) {"},{"lineNumber":63,"author":{"gitId":"cheoksuanne"},"content":"                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":64,"author":{"gitId":"cheoksuanne"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"cheoksuanne"},"content":"            input \u003d scanner.nextLine();"},{"lineNumber":66,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"cheoksuanne"},"content":"        scanner.close();"},{"lineNumber":68,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":70,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"cheoksuanne"},"content":"     * Gets the response of the duke program when a user input is entered."},{"lineNumber":72,"author":{"gitId":"cheoksuanne"},"content":"     * @param input user input."},{"lineNumber":73,"author":{"gitId":"cheoksuanne"},"content":"     * @return String response of the duke program in response to the user input."},{"lineNumber":74,"author":{"gitId":"cheoksuanne"},"content":"     * @throws IOException"},{"lineNumber":75,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"cheoksuanne"},"content":"    public String getResponse(String input) throws IOException, InvalidInputException {"},{"lineNumber":77,"author":{"gitId":"cheoksuanne"},"content":"        String trimmedInput \u003d input.trim();"},{"lineNumber":78,"author":{"gitId":"cheoksuanne"},"content":"        String e \u003d DukeExceptionHandler.handleException(trimmedInput);"},{"lineNumber":79,"author":{"gitId":"cheoksuanne"},"content":"        if (e !\u003d null) {"},{"lineNumber":80,"author":{"gitId":"cheoksuanne"},"content":"            return e;"},{"lineNumber":81,"author":{"gitId":"cheoksuanne"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"cheoksuanne"},"content":"            try {"},{"lineNumber":83,"author":{"gitId":"cheoksuanne"},"content":"                Command command \u003d Parser.parseInput(trimmedInput);"},{"lineNumber":84,"author":{"gitId":"cheoksuanne"},"content":"                return command.handle(trimmedInput, taskManager, fileHandler);"},{"lineNumber":85,"author":{"gitId":"cheoksuanne"},"content":"            } catch (InvalidInputException e2) {"},{"lineNumber":86,"author":{"gitId":"cheoksuanne"},"content":"                throw new InvalidInputException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":87,"author":{"gitId":"cheoksuanne"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"cheoksuanne"},"content":"         }"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"cheoksuanne":82,"-":8}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":" * Represents exceptions thrown in Duke."},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"public class DukeException extends Exception {"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"    private final String message;"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"    public DukeException(String message) {"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"        this.message \u003d message;"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"        return this.message;"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":16}},{"path":"src/main/java/DukeExceptionHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":" * Handles exceptions in Duke."},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"public class DukeExceptionHandler {"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"     * Handles exceptions in Duke."},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"     * @param text user input."},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"     * @return error message."},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"    public static String handleException(String text) {"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"        if (text.equals(\"todo\") || text.equals(\"deadline\") || text.equals(\"event\")"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"                || text.equals(\"done\") || text.equals(\"delete\") || text.equals(\"find\")) {"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"            NoDescriptionException error \u003d new NoDescriptionException(text);"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"            return error.toString();"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"        } else if (!text.contains(\"todo\") \u0026\u0026 !text.contains(\"deadline\") \u0026\u0026 !text.contains(\"event\")"},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"                \u0026\u0026 !text.contains(\"done\") \u0026\u0026 !text.contains(\"delete\") \u0026\u0026 !text.contains(\"find\")"},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"                \u0026\u0026 !text.equals(\"list\") \u0026\u0026 !text.equals(\"bye\") \u0026\u0026 !text.equals(\"priority\")"},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"                \u0026\u0026 !text.contains(\"priority\")) {"},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"            InvalidInputException error \u003d new InvalidInputException(text);"},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"            return error.toString();"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":"        return null;"},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"     * Handles input that has the wrong number of arguments in an add command for a deadline task."},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":"     * @param text user input."},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"     * @return Error message."},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":"    public static String handleIncorrectDeadlineInputException(String text) {"},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":"        if (text.split(\"/\").length !\u003d 2) {"},{"lineNumber":35,"author":{"gitId":"cheoksuanne"},"content":"            IncorrectInputNumberException error \u003d new IncorrectInputNumberException(text);"},{"lineNumber":36,"author":{"gitId":"cheoksuanne"},"content":"            return error.toString();"},{"lineNumber":37,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"cheoksuanne"},"content":"        return null;"},{"lineNumber":39,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":41,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"cheoksuanne"},"content":"     * Handles input that has the wrong number of arguments in an add command for an event task."},{"lineNumber":43,"author":{"gitId":"cheoksuanne"},"content":"     * @param text user input."},{"lineNumber":44,"author":{"gitId":"cheoksuanne"},"content":"     * @return Error message."},{"lineNumber":45,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"cheoksuanne"},"content":"    public static String handleIncorrectEventInputException(String text) {"},{"lineNumber":47,"author":{"gitId":"cheoksuanne"},"content":"        String[] splitText \u003d text.split(\"/\");"},{"lineNumber":48,"author":{"gitId":"cheoksuanne"},"content":"        if (splitText.length !\u003d 2) {"},{"lineNumber":49,"author":{"gitId":"cheoksuanne"},"content":"            IncorrectInputNumberException error \u003d new IncorrectInputNumberException(text);"},{"lineNumber":50,"author":{"gitId":"cheoksuanne"},"content":"            return error.toString();"},{"lineNumber":51,"author":{"gitId":"cheoksuanne"},"content":"        } else if (splitText[1].trim().split(\" \").length !\u003d 2) {"},{"lineNumber":52,"author":{"gitId":"cheoksuanne"},"content":"            IncorrectInputNumberException error \u003d new IncorrectInputNumberException(text);"},{"lineNumber":53,"author":{"gitId":"cheoksuanne"},"content":"            return error.toString();"},{"lineNumber":54,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"cheoksuanne"},"content":"        return null;"},{"lineNumber":56,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":57}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":" * Represents an event task."},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"    private final String description;"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"    private final LocalDate date;"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"    private final LocalTime time;"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"    public Event(String description, LocalDate date, LocalTime time) {"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"        this.date \u003d date;"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"        this.time \u003d time;"},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"    public String getDescription() {"},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"        return this.description;"},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":"    public LocalDate getDate() {"},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"        return this.date;"},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"    public LocalTime getTime() {"},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":"        return this.time;"},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":36,"author":{"gitId":"cheoksuanne"},"content":"        return \"[E]\" + \"[\" + getStatusIcon() + \"]\" + \"[\" + this.getPriority() + \"]\" + \" \" + this.description"},{"lineNumber":37,"author":{"gitId":"cheoksuanne"},"content":"                + \"(at: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":38,"author":{"gitId":"cheoksuanne"},"content":"                + \", \" + this.time + \")\";"},{"lineNumber":39,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":40}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":" * Represents a command to exit the program."},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"public class ExitCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"     * Exits the program."},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"     * @param input user input."},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"     * @param taskManager task manager that contains a list of tasks."},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"     * @param fileHandler saves the input into a file."},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"     * @return String message to end the program."},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"     * @throws IOException"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"    public String handle(String input, TaskManager taskManager, Storage fileHandler) throws IOException {"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"        fileHandler.writeToFile(taskManager);"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"        return \"bye bye!\";"},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":20}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":" * Represents a command that searches for tasks that match a keyword."},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"public class FindCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"    String keyWord;"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"    public FindCommand(String input) {"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"        assert input !\u003d null;"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"        String[] splitInput \u003d input.split(\" \");"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"        this.keyWord \u003d splitInput[1].trim();"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"     * Finds all tasks that match the keyword."},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"     * @param input user input."},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"     * @param taskManager task manager that contains a list of tasks."},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"     * @param fileHandler saves input into a file."},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"     * @return String of the tasks that match the keyword."},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"    public String handle(String input, TaskManager taskManager, Storage fileHandler) {"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"        ArrayList\u003cString\u003e tasksFound \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"        for (int i \u003d 0; i \u003c taskManager.getTaskList().size(); i++) {"},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":"            String found \u003d taskManager.getTaskList().get(i).toString();"},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"            if (found.contains(this.keyWord)) {"},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":"                tasksFound.add(found);"},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":"        //print tasks that match the search word"},{"lineNumber":35,"author":{"gitId":"cheoksuanne"},"content":"        if (tasksFound.size() \u003d\u003d 0) {"},{"lineNumber":36,"author":{"gitId":"cheoksuanne"},"content":"            return \"Sorry nothing matches :(\";"},{"lineNumber":37,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":38,"author":{"gitId":"cheoksuanne"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"cheoksuanne"},"content":"            String result \u003d \"\";"},{"lineNumber":40,"author":{"gitId":"cheoksuanne"},"content":"            for (int j \u003d 0; j \u003c tasksFound.size(); j++) {"},{"lineNumber":41,"author":{"gitId":"cheoksuanne"},"content":"                result \u003d result + (j + 1) + \". \" + tasksFound.get(j) + \"\\n\";"},{"lineNumber":42,"author":{"gitId":"cheoksuanne"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"cheoksuanne"},"content":"            return \"Here are the matching tasks in your list:\\n\" + result;"},{"lineNumber":44,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":46}},{"path":"src/main/java/IncorrectInputNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":" * Represents an exception where there is an incorrect number of arguments in an input."},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"public class IncorrectInputNumberException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"    public IncorrectInputNumberException(String message) {"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"        super(message);"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"        return \"OOPS!!! You have keyed in the wrong number of inputs :(\";"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":13}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":" * Represents an exception where there is an invalid input."},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"public class InvalidInputException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"    public InvalidInputException(String message) {"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"        super(message);"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":14}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":10}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":" * Represents a class that returns a list of tasks."},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"public class ListCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"     * Lists out the tasks in the task list."},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"     * @param input user input."},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"     * @param taskManager task manager that contains a list of tasks."},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"     * @param fileHandler saves the input into a file."},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"     * @return String of the list of tasks."},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"    public String handle(String input, TaskManager taskManager, Storage fileHandler) {"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"        return taskManager.toString();"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":17}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"    public Main() throws IOException {"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":32}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import javafx.application.Platform;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke1.png\"));"},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke2.png\"));"},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":35,"author":{"gitId":"cheoksuanne"},"content":"        duke \u003d d;"},{"lineNumber":36,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":38,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"cheoksuanne"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":40,"author":{"gitId":"cheoksuanne"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":41,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"cheoksuanne"},"content":"    @FXML"},{"lineNumber":43,"author":{"gitId":"cheoksuanne"},"content":"    private void handleUserInput() {"},{"lineNumber":44,"author":{"gitId":"cheoksuanne"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":45,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":46,"author":{"gitId":"cheoksuanne"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"cheoksuanne"},"content":"            if (input.equals(\"bye\")) {"},{"lineNumber":48,"author":{"gitId":"cheoksuanne"},"content":"                Platform.exit();"},{"lineNumber":49,"author":{"gitId":"cheoksuanne"},"content":"            } else {"},{"lineNumber":50,"author":{"gitId":"cheoksuanne"},"content":"                String response \u003d duke.getResponse(input);"},{"lineNumber":51,"author":{"gitId":"cheoksuanne"},"content":"                dialogContainer.getChildren().addAll("},{"lineNumber":52,"author":{"gitId":"cheoksuanne"},"content":"                        DialogBox.getUserDialog(input, userImage),"},{"lineNumber":53,"author":{"gitId":"cheoksuanne"},"content":"                        DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":54,"author":{"gitId":"cheoksuanne"},"content":"                );"},{"lineNumber":55,"author":{"gitId":"cheoksuanne"},"content":"                userInput.clear();"},{"lineNumber":56,"author":{"gitId":"cheoksuanne"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"cheoksuanne"},"content":"        } catch (IOException | InvalidInputException e) {"},{"lineNumber":58,"author":{"gitId":"cheoksuanne"},"content":"            System.out.println(\"OOPS something went wrong!\");"},{"lineNumber":59,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":61}},{"path":"src/main/java/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":" * Represents an exception where the input has no description."},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"public class NoDescriptionException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"    public NoDescriptionException(String message) {"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"        super(message);"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"        return \"OOPS!!! The description this command cannot be empty.\";"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":14}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":" * A class that is responsible for parsing an input."},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"     * Parses the user input and returns its respective command."},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"     * @param input user input."},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"     * @return Command that corresponds to the input."},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"    public static Command parseInput(String input) throws InvalidInputException {"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"        if (input.equals(\"list\")) {"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"            return new ListCommand();"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"        } else if (input.contains(\"done\")) {"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"            return new DoneCommand(input);"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"        } else if (input.contains(\"delete\")) {"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"            return new DeleteCommand(input);"},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"        } else if (input.contains(\"find\")) {"},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"            return new FindCommand(input);"},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"        } else if (input.equals(\"bye\")) {"},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"            return new ExitCommand();"},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"        } else if (input.contains(\"todo\") || input.contains(\"deadline\") || input.contains(\"event\")) {"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"            return new AddCommand(input);"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":"        } else if (input.equals(\"priority\")) {"},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"            return new PriorityCommand();"},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"        } else if (input.contains(\"priority\")) {"},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":"            return new PriorityCommand(input);"},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":"            throw new InvalidInputException(input);"},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":33}},{"path":"src/main/java/PriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":" * Represents a class that handles the priority level of a task."},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"public class PriorityCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"    private int taskNum;"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"    private int priority;"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"    public PriorityCommand() {}"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"    public PriorityCommand(String input) {"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"        String[] splitInput \u003d input.split(\" \");"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"        this.taskNum \u003d Integer.parseInt(splitInput[1]);"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"        this.priority \u003d Integer.parseInt(splitInput[2]);"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"     * Lists out the different priority levels and their corresponding numbers."},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"     * @param priority priority level."},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"     * @return String of a list of the different priority levels."},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"    public String getPriority(int priority) {"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":"        if (this.priority \u003d\u003d 1) {"},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"            return \"HIGH\";"},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"        } else if (this.priority \u003d\u003d 2) {"},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":"            return \"MEDIUM\";"},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":"            return \"LOW\";"},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"cheoksuanne"},"content":"     * Changes the priority level of the the task."},{"lineNumber":36,"author":{"gitId":"cheoksuanne"},"content":"     * @param input user input."},{"lineNumber":37,"author":{"gitId":"cheoksuanne"},"content":"     * @param taskManager task manager that contains a list of tasks."},{"lineNumber":38,"author":{"gitId":"cheoksuanne"},"content":"     * @param fileHandler saves input into a file."},{"lineNumber":39,"author":{"gitId":"cheoksuanne"},"content":"     * @return String of the task and along with its new priority level."},{"lineNumber":40,"author":{"gitId":"cheoksuanne"},"content":"     * @throws IOException"},{"lineNumber":41,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"cheoksuanne"},"content":"    public String handle(String input, TaskManager taskManager, Storage fileHandler) throws IOException {"},{"lineNumber":43,"author":{"gitId":"cheoksuanne"},"content":"        if (input.equals(\"priority\")) {"},{"lineNumber":44,"author":{"gitId":"cheoksuanne"},"content":"            return \"Priority levels:\\n HIGH - 1\\n MEDIUM - 2\\n LOW - 3\";"},{"lineNumber":45,"author":{"gitId":"cheoksuanne"},"content":"        } else if (taskManager.getTaskList().isEmpty() || taskManager.getTaskList().size() \u003c taskNum) {"},{"lineNumber":46,"author":{"gitId":"cheoksuanne"},"content":"            return \"This task doesn\u0027t exist!\";"},{"lineNumber":47,"author":{"gitId":"cheoksuanne"},"content":"        } else if (this.priority \u003e 3 || this.priority \u003c 1) {"},{"lineNumber":48,"author":{"gitId":"cheoksuanne"},"content":"            return \"This priority level doesn\u0027t exist!\";"},{"lineNumber":49,"author":{"gitId":"cheoksuanne"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"cheoksuanne"},"content":"            taskManager.setTaskPriority(taskNum, priority);"},{"lineNumber":51,"author":{"gitId":"cheoksuanne"},"content":"            fileHandler.writeToFile(taskManager);"},{"lineNumber":52,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":53,"author":{"gitId":"cheoksuanne"},"content":"            return \"Noted. I\u0027ve changed the priority of this task to: \" + this.getPriority(this.priority) + \"\\n\""},{"lineNumber":54,"author":{"gitId":"cheoksuanne"},"content":"                    + taskManager.getTask(taskNum - 1);"},{"lineNumber":55,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":57}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":"import java.io.FileWriter;"},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":" * Handles txt files created."},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"    private String filePath;"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"    public Storage(String filePath) {"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"     * Writes tasks to the .txt file to store the data."},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"     * @param taskManager task manager that contains the list of tasks."},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"     * @throws IOException"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":"    public void writeToFile(TaskManager taskManager) throws IOException {"},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.filePath);"},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d taskManager.getTaskList();"},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"        for (Task task : tasksList) {"},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"            if (task instanceof Todo) {"},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":"                fileWriter.write(\"T ## \" + (task.getDone() ? 1 : 0) + \" ## \""},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":"                        + (task.getPriority()) + \" ## \" + task.getDescription() + \"\\n\");"},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":36,"author":{"gitId":"cheoksuanne"},"content":"            if (task instanceof Deadline) {"},{"lineNumber":37,"author":{"gitId":"cheoksuanne"},"content":"                fileWriter.write(\"D ## \" + (task.getDone() ? 1 : 0) + \" ## \""},{"lineNumber":38,"author":{"gitId":"cheoksuanne"},"content":"                        + (task.getPriority()) + \" ## \" + task.getDescription() + \" ## \""},{"lineNumber":39,"author":{"gitId":"cheoksuanne"},"content":"                        + ((Deadline) task).getDate() + \"\\n\");"},{"lineNumber":40,"author":{"gitId":"cheoksuanne"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":42,"author":{"gitId":"cheoksuanne"},"content":"            if (task instanceof Event) {"},{"lineNumber":43,"author":{"gitId":"cheoksuanne"},"content":"                fileWriter.write(\"E ## \" + (task.getDone() ? 1 : 0) + \" ## \""},{"lineNumber":44,"author":{"gitId":"cheoksuanne"},"content":"                        + (task.getPriority()) + \" ## \" + task.getDescription() + \" ## \""},{"lineNumber":45,"author":{"gitId":"cheoksuanne"},"content":"                        + ((Event) task).getDate() + \" \" + ((Event) task).getTime() + \"\\n\");"},{"lineNumber":46,"author":{"gitId":"cheoksuanne"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"cheoksuanne"},"content":"        fileWriter.close();"},{"lineNumber":49,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":51,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"cheoksuanne"},"content":"     * Reads data stored in the file."},{"lineNumber":53,"author":{"gitId":"cheoksuanne"},"content":"     * @param fileName file to be read."},{"lineNumber":54,"author":{"gitId":"cheoksuanne"},"content":"     * @return list of lines read in the file."},{"lineNumber":55,"author":{"gitId":"cheoksuanne"},"content":"     * @throws IOException"},{"lineNumber":56,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"cheoksuanne"},"content":"    public static ArrayList\u003cString\u003e readSavedFile(String fileName) throws IOException {"},{"lineNumber":58,"author":{"gitId":"cheoksuanne"},"content":"        File file \u003d new File(fileName);"},{"lineNumber":59,"author":{"gitId":"cheoksuanne"},"content":"        if (file.exists()) {"},{"lineNumber":60,"author":{"gitId":"cheoksuanne"},"content":"            return (ArrayList\u003cString\u003e) Files.readAllLines(Paths.get(fileName));"},{"lineNumber":61,"author":{"gitId":"cheoksuanne"},"content":"        } else {"},{"lineNumber":62,"author":{"gitId":"cheoksuanne"},"content":"            return new ArrayList\u003c\u003e();"},{"lineNumber":63,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":65}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":" * Represents a task."},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"    private final String description;"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"    public boolean isDone;"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"    private int priority \u003d 3; //set to lowest priority"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"    public Task(String description) {"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"    public boolean getDone() {"},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"        return this.isDone;"},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"    public String getDescription() {"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"        return this.description;"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"    public void setDone() {"},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":"        this.isDone \u003d true;"},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"    public void setPriority(int priority) {"},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":"        this.priority \u003d priority;"},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":35,"author":{"gitId":"cheoksuanne"},"content":"    public int getPriority() {"},{"lineNumber":36,"author":{"gitId":"cheoksuanne"},"content":"        return this.priority;"},{"lineNumber":37,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":39,"author":{"gitId":"cheoksuanne"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"cheoksuanne"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"cheoksuanne"},"content":"        return getStatusIcon() + this.priority + this.description;"},{"lineNumber":42,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":43}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":" * Manages a list of tasks for the user."},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"public class TaskManager {"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"    public final ArrayList\u003cTask\u003e taskList;"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"    public TaskManager() {"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"    public Task getTask(int taskNum) {"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"        return this.taskList.get(taskNum);"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"     * Adds a task to the list."},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"     * @param task task to be added."},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"    public void addTask(Task task) {"},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"        taskList.add(task);"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"    public void setTaskDone(int taskNum) {"},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":"        taskList.get(taskNum - 1).setDone();"},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":"    public int getNumTasks() {"},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":"        return taskList.size();"},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":35,"author":{"gitId":"cheoksuanne"},"content":"        return taskList;"},{"lineNumber":36,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":38,"author":{"gitId":"cheoksuanne"},"content":"    public void setTaskPriority(int taskNum, int priority) {"},{"lineNumber":39,"author":{"gitId":"cheoksuanne"},"content":"        taskList.get(taskNum - 1).setPriority(priority);"},{"lineNumber":40,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":42,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"cheoksuanne"},"content":"     * Removes a task from the list."},{"lineNumber":44,"author":{"gitId":"cheoksuanne"},"content":"     * @param taskNum number of tasks in the list."},{"lineNumber":45,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"cheoksuanne"},"content":"    public void removeTask(int taskNum) {"},{"lineNumber":47,"author":{"gitId":"cheoksuanne"},"content":"        taskList.remove(taskNum - 1);"},{"lineNumber":48,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":50,"author":{"gitId":"cheoksuanne"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"cheoksuanne"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"cheoksuanne"},"content":"        if (this.getTaskList().size() \u003d\u003d 0) {"},{"lineNumber":53,"author":{"gitId":"cheoksuanne"},"content":"            return \"You have nothing to do!\";"},{"lineNumber":54,"author":{"gitId":"cheoksuanne"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"cheoksuanne"},"content":"            String result \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":56,"author":{"gitId":"cheoksuanne"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":57,"author":{"gitId":"cheoksuanne"},"content":"                result \u003d result + (i + 1) + \". \" + taskList.get(i) + \"\\n\";"},{"lineNumber":58,"author":{"gitId":"cheoksuanne"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"cheoksuanne"},"content":"            return result;"},{"lineNumber":60,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":62}},{"path":"src/main/java/TextAndTaskConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":" * Handles the conversion of texts and tasks."},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"public class TextAndTaskConverter {"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"     * Converts texts into tasks."},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"     * @param text line of text read from the saved file."},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"     * @return respective task that corresponds to the text."},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"    public static Task convertTextToTask(String text) {"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"        String[] splitLine \u003d text.split(\" ## \");"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"        String done \u003d splitLine[1];"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"        String priority \u003d splitLine[2];"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"        String description \u003d splitLine[3];"},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":20,"author":{"gitId":"cheoksuanne"},"content":"        if (splitLine.length \u003d\u003d 4) {"},{"lineNumber":21,"author":{"gitId":"cheoksuanne"},"content":"            Todo task \u003d new Todo(description);"},{"lineNumber":22,"author":{"gitId":"cheoksuanne"},"content":"            if (done.trim().equals(\"1\")) {"},{"lineNumber":23,"author":{"gitId":"cheoksuanne"},"content":"                task.setDone();"},{"lineNumber":24,"author":{"gitId":"cheoksuanne"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"cheoksuanne"},"content":"            task.setPriority(Integer.parseInt(priority));"},{"lineNumber":26,"author":{"gitId":"cheoksuanne"},"content":"            return task;"},{"lineNumber":27,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":28,"author":{"gitId":"cheoksuanne"},"content":"        } else if (splitLine.length \u003d\u003d 5) {"},{"lineNumber":29,"author":{"gitId":"cheoksuanne"},"content":"            Task task \u003d null;"},{"lineNumber":30,"author":{"gitId":"cheoksuanne"},"content":"            String taskType \u003d splitLine[0].trim();"},{"lineNumber":31,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":32,"author":{"gitId":"cheoksuanne"},"content":"            if (taskType.equals(\"D\")) {"},{"lineNumber":33,"author":{"gitId":"cheoksuanne"},"content":"                LocalDate date \u003d LocalDate.parse(splitLine[4]);"},{"lineNumber":34,"author":{"gitId":"cheoksuanne"},"content":"                task \u003d new Deadline(description, date);"},{"lineNumber":35,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":36,"author":{"gitId":"cheoksuanne"},"content":"                if (done.equals(\"1\")) {"},{"lineNumber":37,"author":{"gitId":"cheoksuanne"},"content":"                    task.setDone();"},{"lineNumber":38,"author":{"gitId":"cheoksuanne"},"content":"                }"},{"lineNumber":39,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":40,"author":{"gitId":"cheoksuanne"},"content":"            } else if (taskType.equals(\"E\")) {"},{"lineNumber":41,"author":{"gitId":"cheoksuanne"},"content":"                String[] dateAndTime \u003d splitLine[4].split(\" \", 2);"},{"lineNumber":42,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":43,"author":{"gitId":"cheoksuanne"},"content":"                LocalDate date \u003d LocalDate.parse(dateAndTime[0]);"},{"lineNumber":44,"author":{"gitId":"cheoksuanne"},"content":"                LocalTime time \u003d LocalTime.parse(dateAndTime[1]);"},{"lineNumber":45,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":46,"author":{"gitId":"cheoksuanne"},"content":"                task \u003d new Event(description, date, time);"},{"lineNumber":47,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":48,"author":{"gitId":"cheoksuanne"},"content":"                if (done.equals(\"1\")) {"},{"lineNumber":49,"author":{"gitId":"cheoksuanne"},"content":"                    task.setDone();"},{"lineNumber":50,"author":{"gitId":"cheoksuanne"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"cheoksuanne"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":53,"author":{"gitId":"cheoksuanne"},"content":"            assert task !\u003d null;"},{"lineNumber":54,"author":{"gitId":"cheoksuanne"},"content":"            task.setPriority(Integer.parseInt(priority));"},{"lineNumber":55,"author":{"gitId":"cheoksuanne"},"content":"            return task;"},{"lineNumber":56,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":57,"author":{"gitId":"cheoksuanne"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"cheoksuanne"},"content":"            return null;"},{"lineNumber":59,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":62,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"cheoksuanne"},"content":"     * Gets the name of the task."},{"lineNumber":64,"author":{"gitId":"cheoksuanne"},"content":"     * @param input line of text read from the user input."},{"lineNumber":65,"author":{"gitId":"cheoksuanne"},"content":"     * @return name of the task."},{"lineNumber":66,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"cheoksuanne"},"content":"    public static String getTaskName(String input) {"},{"lineNumber":68,"author":{"gitId":"cheoksuanne"},"content":"        String[] splitInput \u003d input.split(\"/\", 2);"},{"lineNumber":69,"author":{"gitId":"cheoksuanne"},"content":"        return splitInput[0];"},{"lineNumber":70,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":72,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"cheoksuanne"},"content":"     * Gets the date the task needs to be done by."},{"lineNumber":74,"author":{"gitId":"cheoksuanne"},"content":"     * @param input line of text read from the user input."},{"lineNumber":75,"author":{"gitId":"cheoksuanne"},"content":"     * @return date of completion."},{"lineNumber":76,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"cheoksuanne"},"content":"    public static LocalDate getDate(String input) {"},{"lineNumber":78,"author":{"gitId":"cheoksuanne"},"content":"        String[] splitInput \u003d input.split(\"/\", 2);"},{"lineNumber":79,"author":{"gitId":"cheoksuanne"},"content":"        String trimText \u003d splitInput[1].trim();"},{"lineNumber":80,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":81,"author":{"gitId":"cheoksuanne"},"content":"        if (!trimText.contains(\" \")) {"},{"lineNumber":82,"author":{"gitId":"cheoksuanne"},"content":"            //for deadline because it only takes in the date"},{"lineNumber":83,"author":{"gitId":"cheoksuanne"},"content":"            return LocalDate.parse(trimText);"},{"lineNumber":84,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":85,"author":{"gitId":"cheoksuanne"},"content":"        } else {"},{"lineNumber":86,"author":{"gitId":"cheoksuanne"},"content":"            //for event because it takes in the date and time"},{"lineNumber":87,"author":{"gitId":"cheoksuanne"},"content":"            String[] splitDateAndTime \u003d trimText.split(\" \", 2);"},{"lineNumber":88,"author":{"gitId":"cheoksuanne"},"content":"            return LocalDate.parse(splitDateAndTime[0]);"},{"lineNumber":89,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":92,"author":{"gitId":"cheoksuanne"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"cheoksuanne"},"content":"     * Gets the time the task needs to be done by."},{"lineNumber":94,"author":{"gitId":"cheoksuanne"},"content":"     * @param input line of text read from the user input."},{"lineNumber":95,"author":{"gitId":"cheoksuanne"},"content":"     * @return time of completion."},{"lineNumber":96,"author":{"gitId":"cheoksuanne"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"cheoksuanne"},"content":"    public static LocalTime getTime(String input) {"},{"lineNumber":98,"author":{"gitId":"cheoksuanne"},"content":"        String[] splitInput \u003d input.split(\"/\", 2);"},{"lineNumber":99,"author":{"gitId":"cheoksuanne"},"content":"        String trimText \u003d splitInput[1].trim();"},{"lineNumber":100,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":101,"author":{"gitId":"cheoksuanne"},"content":"        if (!trimText.contains(\" \")) {"},{"lineNumber":102,"author":{"gitId":"cheoksuanne"},"content":"            //for deadline because it only takes in the date"},{"lineNumber":103,"author":{"gitId":"cheoksuanne"},"content":"            return null;"},{"lineNumber":104,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":105,"author":{"gitId":"cheoksuanne"},"content":"        } else {"},{"lineNumber":106,"author":{"gitId":"cheoksuanne"},"content":"            //for event because it takes in the date and time"},{"lineNumber":107,"author":{"gitId":"cheoksuanne"},"content":"            String[] splitDateAndTime \u003d trimText.split(\" \", 2);"},{"lineNumber":108,"author":{"gitId":"cheoksuanne"},"content":"            LocalTime t \u003d LocalTime.parse(splitDateAndTime[1]);"},{"lineNumber":109,"author":{"gitId":"cheoksuanne"},"content":"            return t;"},{"lineNumber":110,"author":{"gitId":"cheoksuanne"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"cheoksuanne"},"content":"}"},{"lineNumber":113,"author":{"gitId":"cheoksuanne"},"content":""}],"authorContributionMap":{"cheoksuanne":113}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":" * Represents a todo task."},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":" */"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"public class Todo extends Task {"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"    private final String description;"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"    public Todo(String description) {"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"        this.description \u003d description;"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"        return \"[T]\" + \"[\" + getStatusIcon() + \"]\" + \"[\" + this.getPriority() + \"]\" + \" \" + this.description;"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":17}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"//public class Ui {"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":"//"},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"//    private final String input;"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"//"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"//    public Ui(String input) {"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"//        this.input \u003d input;"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"//    }"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"//"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"//    @Override"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"//    public String toString() {"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"//        if (this.input \u003d\u003d \"list\") {"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"//            System.out.print(taskManager);"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"//"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"//        }"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"//    }"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"//}"}],"authorContributionMap":{"cheoksuanne":16}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"cheoksuanne":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"cheoksuanne"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"cheoksuanne"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"cheoksuanne"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"cheoksuanne"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"cheoksuanne"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"cheoksuanne"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"cheoksuanne"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"cheoksuanne"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"cheoksuanne":19}},{"path":"test/TextAndTaskConverterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"class TextAndTaskConverterTest {"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"    public void testTextConverter() {"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"        assertEquals(\"[T]âœ˜homework\", TextAndTaskConverter.textConverter(\"T ## 0 ## homework\").toString());"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":11}},{"path":"test/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"class TodoTest {"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":""},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"    public void testCreateTodo() {"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"        assertEquals(\"[T]âœ˜read book\", new Todo(\"read book\").toString());"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"cheoksuanne"},"content":"}"}],"authorContributionMap":{"cheoksuanne":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheoksuanne"},"content":"todo go for a run"},{"lineNumber":2,"author":{"gitId":"cheoksuanne"},"content":"deadline homework /by 2020-11-22"},{"lineNumber":3,"author":{"gitId":"cheoksuanne"},"content":"event meeting /at 2020-12-12 18:00"},{"lineNumber":4,"author":{"gitId":"cheoksuanne"},"content":"deadline cs assignment /by 2020-03-14"},{"lineNumber":5,"author":{"gitId":"cheoksuanne"},"content":"todo math assignment"},{"lineNumber":6,"author":{"gitId":"cheoksuanne"},"content":"list"},{"lineNumber":7,"author":{"gitId":"cheoksuanne"},"content":"find assignment"},{"lineNumber":8,"author":{"gitId":"cheoksuanne"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"cheoksuanne"},"content":"delete 1"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"bye"}],"authorContributionMap":{"cheoksuanne":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"cheoksuanne"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":20,"cheoksuanne":1}}]
