[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 19,
      "-": 42
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * Interface which would be implemented in Parser class when specific commands are called."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tString execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tboolean isExit();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 10
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tFXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tfxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tfxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tfxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tdialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tdisplayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tCollections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tgetChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tsetAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tvar db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tdb.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 61
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * Class contains main method of the Duke application."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * Duke manages, stores and track tasks as specified by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    private static String TASKS_PATHNAME \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     * Constructor which takes in file path of the storage file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        storage \u003d new Storage(TASKS_PATHNAME);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     * main method of Duke"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        new Duke(TASKS_PATHNAME).run();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        System.out.println(ui.welcome());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "                ui.showOutput(c.execute(taskList, ui, storage));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    public String welcome(){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        return ui.welcome();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/*    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        });"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        });"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " */   /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/*    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "*/    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/*    private void handleUserInput() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        );"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            return c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 189,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * Exception class that gets thrown by supporting classes\u0027 methods."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic DukeException(String string) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tsuper(string);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 10
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tApplication.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 13
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tFXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tAnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tScene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tstage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tfxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tstage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tscrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tduke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tshowWelcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate void showWelcome() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tString response \u003d duke.welcome();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tdialogContainer.getChildren().add("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tDialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate void handleUserInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tString input \u003d userInput.getText();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tString response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tdialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tDialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tDialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tuserInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate void greeting() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tString response \u003d duke.getResponse(\"Greetings, I\u0027m Duke.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tdialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tDialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tuserInput.clear();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 68
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import duke.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * Parser deals with the full commands given by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * Inputs given are deciphered and corresponding responses are outputted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tif(fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\treturn list();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} else if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\treturn bye();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} else if (getWord(fullCommand).equals(\"done\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\treturn done(fullCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} else if (getWord(fullCommand).equals(\"todo\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\treturn todo(fullCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} else if (getWord(fullCommand).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\treturn deadline(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} else if (getWord(fullCommand).equals(\"event\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\treturn event(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} else if (getWord(fullCommand).equals(\"delete\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\treturn delete(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} else if(getWord(fullCommand).equals(\"save\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\treturn save();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} else if (getWord(fullCommand).equals(\"find\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\treturn find(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} else{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tthrow new DukeException(\"\\uD83D\\uDE2D OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t * Returns the first word in the string indicated by the first blank space."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t * If there are no blank space, the entire string is returned."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t * @param string"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t * @return"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic static String getWord(String string) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tint firstSpaceIndex \u003d string.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tif (firstSpaceIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\treturn string;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn string.substring(0, firstSpaceIndex);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t * Returns an implemented instance of the Command interface when the list command is invoked."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t * @return"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic static Command list() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn new Command() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tTask task;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString string \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tStringBuilder stringBuilder \u003d new StringBuilder().append(string).append(\"\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tfor (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttask \u003d taskList.get(i - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tstring \u003d i + \".\" + task.getTypeString() + task.getDoneString() + task.getString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tstringBuilder.append(string).append(\"\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tstringBuilder.deleteCharAt(stringBuilder.length()-1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn stringBuilder.toString();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic static Command bye() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn new Command() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString string \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn string;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn true;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic static Command todo(String string) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn new Command() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tStringBuilder outputStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString input \u003d string.substring(4);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString temp;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif (input.isEmpty()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttemp \u003d \"\\uD83D\\uDE00 OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tduke.Task task \u003d new duke.Task(duke.TaskType.TODO, false, input);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttaskList.add(task);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttemp \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\toutputStringBuilder.append(temp).append(\"\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttemp \u003d \" \" + task.getTypeString() + task.getDoneString() + input;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\toutputStringBuilder.append(temp).append(\"\\n\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttemp \u003d\"Now you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn false;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic static Command deadline(String string) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn new Command() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString input \u003d string.substring(8);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString temp;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tStringBuilder outputStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t//No description"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif (input.isEmpty()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttemp \u003d \"☹ OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t//No /by"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tint index \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttemp \u003d \"☹ OOPS!!! The description of a deadline must have a indicated deadline.\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t//Convert user date into string which is readable by LocalDateTime class."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tStringBuilder dateStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString[] strings \u003d new String[1];"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif(input.length() \u003e\u003d index + 4) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tstrings \u003d input.substring(index + 4).split(\"/\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif( (strings.length \u003e\u003d 3) \u0026\u0026 (strings[2].length() \u003e\u003d 9) ) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tif(strings[0].length() \u003c 2){"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\tstrings[0] \u003d \"0\" + strings[0];"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tdateStringBuilder.append(strings[2].substring(0, 4))"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\t\t.append(\"-\").append(strings[1])"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\t\t.append(\"-\").append(strings[0])"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\t\t.append(\"T\")"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\t\t.append(strings[2].substring(5, 7))"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\t\t.append(\":\")"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\t\t.append(strings[2].substring(7, 9));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t//Try to input date if it a valid is date is used."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tLocalDateTime localDateTime \u003d LocalDateTime.parse(dateStringBuilder.toString(), DateTimeFormatter.ISO_LOCAL_DATE_TIME);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tStringBuilder taskStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttaskStringBuilder.append(input.substring(0, index))"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\t\t.append(\"(by: \")"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\t\t.append(localDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT)))"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\t\t.append(\")\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tinput \u003d taskStringBuilder.toString();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tduke.Task task \u003d new duke.Task(duke.TaskType.DEADLINE, false, input, Optional.of(localDateTime));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttaskList.add(task);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttemp \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\toutputStringBuilder.append(temp).append(\"\\n\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttemp \u003d \" \" + task.getTypeString() + task.getDoneString() + input;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\toutputStringBuilder.append(temp).append(\"\\n\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttemp \u003d \"Now you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t} catch(DateTimeParseException e) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttemp \u003d \"☹ OOPS!!! The description of a deadline must have a valid date and time. (Format: /by dd/mm/yyyy tttt e.g 2/12/2019 1800\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn false;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic static Command event(String string) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn new Command() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString input \u003d string.substring(5);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tStringBuilder outputStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString temp;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif(input.isEmpty()){"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttemp \u003d \"☹ OOPS!!! The description of a event cannot be empty.\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tint index \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttemp \u003d\"☹ OOPS!!! The description of an event must have a indicated deadline.\";"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tStringBuilder taskStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttaskStringBuilder.append(input.substring(0, index)).append(\"(at:\").append(input.substring(index + 3)).append(\")\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tinput \u003d taskStringBuilder.toString();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tduke.Task task \u003d new duke.Task(duke.TaskType.DEADLINE, false, input);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttaskList.add(task);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttemp \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\toutputStringBuilder.append(temp).append(\"\\n\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttemp \u003d \" \" + task.getTypeString() + task.getDoneString() + input;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\toutputStringBuilder.append(temp).append(\"\\n\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttemp \u003d \"Now you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn false;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic static Command done(String string) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn new Command() {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString input \u003d string.substring(4);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tStringBuilder outputStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString temp;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif(input.isEmpty()){"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttemp \u003d \"☹ OOPS!!! Please indicate which task is done.\";"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tinput \u003d input.substring(1);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tboolean isInteger \u003d true;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tfor(int charIndex \u003d 0; charIndex \u003c input.length(); charIndex++){"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tif(!Character.isDigit(input.charAt(charIndex))){"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\tisInteger \u003d false;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif(!isInteger) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttemp \u003d \"☹ OOPS!!! Incorrect entry for finished task.\";"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tint tasknumber \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif( (tasknumber \u003d\u003d 0) ||(tasknumber \u003etaskList.size()) ){"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttemp \u003d \"☹ OOPS!!! Task number is not found in the list.\";"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tduke.Task task \u003d taskList.remove(tasknumber - 1);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tTask newTask \u003d task.done();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttaskList.add(tasknumber - 1, newTask);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttemp \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\toutputStringBuilder.append(temp).append(\"\\n\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttemp \u003d \" \" + newTask.getTypeString() + newTask.getDoneString() + newTask.toString();"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn false;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic static Command delete(String string){"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn new Command() {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString input \u003d string.substring(6);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tStringBuilder outputStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString temp;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif(input.isEmpty()) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttemp \u003d \"☹ OOPS!!! Please indicate which task is done.\";"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tinput \u003d input.substring(1);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tboolean isInteger \u003d true;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tfor(int charIndex \u003d 0; charIndex \u003c input.length(); charIndex++){"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tif(!Character.isDigit(input.charAt(charIndex))){"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\tisInteger \u003d false;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif(!isInteger) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttemp \u003d \"☹ OOPS!!! Incorrect entry for finished task.\";"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tint tasknumber \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif( (tasknumber \u003d\u003d 0) ||(tasknumber \u003e taskList.size()) ){"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttemp \u003d \"☹ OOPS!!! Task number is not found in the list.\";"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tduke.Task task \u003d taskList.remove(tasknumber - 1);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttemp \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\toutputStringBuilder.append(temp).append(\"\\n\");"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttemp \u003d \" \" + task.getTypeString() + task.getDoneString() + task.toString();"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\toutputStringBuilder.append(temp).append(\"\\n\");"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttemp \u003d \"Now you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\toutputStringBuilder.append(temp);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn outputStringBuilder.toString();"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn false;"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic static Command save() {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn new Command() {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString temp \u003d storage.save(taskList);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn temp;"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn false;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic static Command find(String fullCommand) {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn new Command() {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString phrase \u003d fullCommand.substring(5);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tStringBuilder outputStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tString temp \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\toutputStringBuilder.append(temp).append(\"\\n\");"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tfor (int taskListIndex \u003d 1; taskListIndex \u003c\u003d taskList.size(); taskListIndex++) {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tTask task \u003d taskList.get(taskListIndex -1);"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tif (task.getFullString().contains(phrase)) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\ttemp \u003d taskListIndex + \".\" + task.getFullString();"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t\toutputStringBuilder.append(temp).append(\"\\n\");"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn outputStringBuilder.deleteCharAt(outputStringBuilder.length()-1).toString();"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t@Override"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\treturn false;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t};"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 414
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * Storage deals with loading and saving task list from/ to memory."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate String filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tthis.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tFile file \u003d new File(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tScanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tString task, taskString;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tduke.TaskType taskType;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tboolean isDone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tLocalDateTime dateTime;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\twhile (sc.hasNext()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif(task.charAt(1) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttaskType \u003d duke.TaskType.TODO;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t} else if(task.charAt(1) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttaskType \u003d duke.TaskType.DEADLINE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t} else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\ttaskType \u003d duke.TaskType.EVENT;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif (task.charAt(4) \u003d\u003d \u0027\\u2713\u0027) { //✓"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tisDone \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t} else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tisDone \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttaskString \u003d task.substring(6);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tif (taskType \u003d\u003d duke.TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tint index \u003d task.indexOf(\"(by:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tdateTime \u003d LocalDateTime.parse(task.substring(index + 4, task.length()-1), DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tlist.add(new Task(taskType, isDone, taskString, Optional.of(dateTime)));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t} else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t\tlist.add(new Task(taskType, isDone, taskString));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tthrow new DukeException(\"File not found.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn list;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic String save(TaskList taskList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tFile file \u003d new File(filePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tif(file.getParentFile() !\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tfile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tfile.createNewFile();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tFileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tTask task;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tfor (int listIndex \u003d 0; listIndex \u003c taskList.size(); listIndex++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\ttask \u003d taskList.get(listIndex);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\tfileWriter.write(task.getTypeString() + task.getDoneString() + task.getString() + System.lineSeparator());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tfileWriter.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\treturn \"Tasks have been saved! \";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\treturn e.getMessage();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 90
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * Task stores it type, a boolean indicating whether the task has been completed, a string describing the task and a"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tduke.TaskType taskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tboolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tString string;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tOptional\u003cLocalDateTime\u003e dateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic Task(duke.TaskType taskType, boolean isDone, String string) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tthis.taskType \u003d taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tthis.isDone \u003d isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tthis.string \u003d string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tthis.dateTime \u003d Optional.empty();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic Task(duke.TaskType taskType, boolean isDone, String string, Optional\u003cLocalDateTime\u003e dateTime) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tthis.taskType \u003d taskType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tthis.isDone \u003d isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tthis.string \u003d string;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tthis.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic String getString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn string;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic String getDoneString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tString string;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn (isDone ?\"[\\u2713]\" : \"[\\u2718]\" );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic duke.Task done() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn new duke.Task(taskType, true, string);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic String getTypeString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tString string;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tif(taskType.equals(duke.TaskType.TODO)){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tstring \u003d \"[T]\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\telse if(taskType.equals(duke.TaskType.DEADLINE)){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tstring \u003d \"[D]\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\telse{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tstring \u003d \"[E]\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn string;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn string;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic String getFullString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tStringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tstringBuilder.append(getTypeString()).append(getDoneString()).append(toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn stringBuilder.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 66
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * TaskList contains an ArrayList of Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * It serves as a barrier to directly using the ArrayList class so as to limit the functions available to the client."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tprivate ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\ttasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tthis.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic int size() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn tasks.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic Task get(int i) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn tasks.get(i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic boolean add(Task task){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\ttasks.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic void add(int index, Task task){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\ttasks.add(index, task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic Task remove(int index){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn tasks.remove(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 43
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * TaskType is an enum that represents that types of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tTODO,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tDEADLINE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tEVENT;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 10
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * Ui deals with any interaction with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " * This includes both user inputs and outputs to user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic void showWelcome() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tSystem.out.println(welcome());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic String welcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tString logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t+ \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t+ \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t+ \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t+ \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t+ \" Hello I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\t\t+ \" What can I do for you?\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn logo;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic String readCommand() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tScanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\treturn scanner.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic  void showLoadingError() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tSystem.out.println(\"No storage file found.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic void showLine() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tSystem.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic void showError(String string) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tSystem.out.println(string);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic void showOutput(String string){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tSystem.out.println(string);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 48
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import static org.testng.Assert.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic void testParse1(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tString string;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tstring \u003d duke.Parser.parse(\"bye\").execute(new duke.TaskList(), new duke.Ui(), new duke.Storage(\"duke\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} catch (duke.DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tstring \u003d e.getMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tassertEquals(\"Bye. Hope to see you again soon!\", string);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic void testParse2(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tString string;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tstring \u003d duke.Parser.parse(\"asdas\").execute(new duke.TaskList(), new duke.Ui(), new duke.Storage(\"duke\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} catch (duke.DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\tstring \u003d e.getMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tassertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", string);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic void testParse3(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tString outputstring, expectedString;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\toutputstring \u003d duke.Parser.parse(\"todo borrow book\").execute(new duke.TaskList(), new duke.Ui(), new duke.Storage(\"duke\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t} catch (duke.DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t\toutputstring \u003d e.getMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\texpectedString \u003d \"Got it. I\u0027ve added this task:\\n [T][✗] borrow book\\nNow you have 1 tasks in the list.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tassertEquals(expectedString, outputstring);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 41
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import javafx.concurrent.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic void testGetDoneString(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tassertEquals(\"[✓]\", new Task(TaskType.DEADLINE, true, \"aaaaa bbbb\").getDoneString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tassertEquals(\"[✗]\", new duke.Task(duke.TaskType.TODO, false, \"abc bbbb\").getDoneString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic void testGetTypeString(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tassertEquals(\"[T]\", new duke.Task(duke.TaskType.TODO, true, \"ERRRR\").getTypeString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tassertEquals(\"[D]\", new duke.Task(duke.TaskType.DEADLINE, false, \"aserfasdf\").getTypeString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tassertEquals(\"[E]\", new duke.Task(duke.TaskType.EVENT, false, \"asdfsadf\").getTypeString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ijavierja"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\tpublic void testToString(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tassertEquals(\"biaaaa\", new duke.Task(duke.TaskType.TODO, true, \"biaaaa\").toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tassertEquals(\"aswasasuperfasdf\", new duke.Task(duke.TaskType.DEADLINE, false, \"aswasasuperfasdf\").toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t\tassertEquals(\"gcg\", new duke.Task(duke.TaskType.EVENT, false, \"gcg\").toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ijavierja"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ijavierja": 1
    }
  }
]
