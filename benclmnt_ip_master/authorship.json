[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"benclmnt"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"benclmnt"},"content":"    archiveVersion \u003d \"0.2.0\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"benclmnt":17,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"T | 1 | read book"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":"D | 0 | return book | 2020-06-06"},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"E | 0 | project meeting | 2020-08-06"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"T | 1 | join sports club"}],"authorContributionMap":{"benclmnt":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"# Alexa User Guide"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"Alexa is a chatbot to help people manage their tasks easily. "},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"You can take note and update it via GUI that responds to your"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"command line instruction."},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"## Table of Contents"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"- [Requirements](#requirements)"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"- [Features](#features)"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"    - [Interactive user interface](#interactive-user-interface)"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"    - [View your tasks by date](#view-your-tasks-by-date)"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"    - [Find your tasks](#find-your-tasks)"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"    - [Update your tasks](#update-your-tasks)"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"- [Usage](#usage)"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"    - [Add a new task](#add-a-new-task)"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"    - [Marks task as done](#marks-task-as-done)"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"    - [Deletes a task in the list](#deletes-a-task-in-the-list)"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"    - [Find tasks](#find-tasks)"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"    - [List tasks](#list-tasks)"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"    - [View all tasks by date](#view-all-tasks-by-date)"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"    - [Update a task](#update-a-task)"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"## Requirements"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"- Java 11 or later"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"### Interactive user interface"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"Alexa chatbot uses a GUI that gives you interactive feedback for every command"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"that you write. It responds as if you are chatting with a real person that"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":"always available to help you manage your tasks."},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"![Product Screenshot](Ui.png)"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":38,"author":{"gitId":"benclmnt"},"content":"### View your tasks by date"},{"lineNumber":39,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":40,"author":{"gitId":"benclmnt"},"content":"By default, Alexa stores your task by creation date. However, you can also filter to see which tasks"},{"lineNumber":41,"author":{"gitId":"benclmnt"},"content":"do you have for the day"},{"lineNumber":42,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":43,"author":{"gitId":"benclmnt"},"content":"### Differentiates your tasks"},{"lineNumber":44,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":45,"author":{"gitId":"benclmnt"},"content":"There are several types of tasks that are supported by Alexa chatbot to help"},{"lineNumber":46,"author":{"gitId":"benclmnt"},"content":"you classify different types of task that you have."},{"lineNumber":47,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":48,"author":{"gitId":"benclmnt"},"content":"### Find your tasks"},{"lineNumber":49,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":50,"author":{"gitId":"benclmnt"},"content":"You can ask Alexa to find task that contain a certain keyword in your command."},{"lineNumber":51,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":52,"author":{"gitId":"benclmnt"},"content":"### Update your tasks"},{"lineNumber":53,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":54,"author":{"gitId":"benclmnt"},"content":"If you have a change of plan, there is no need to delete and create a new task, "},{"lineNumber":55,"author":{"gitId":"benclmnt"},"content":"simply update the current task with a new deadline "},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"benclmnt"},"content":"### Add a new task"},{"lineNumber":60,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":61,"author":{"gitId":"benclmnt"},"content":"Add a new task into the list of tasks that are stored by Alexa chatbot for you."},{"lineNumber":62,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":63,"author":{"gitId":"benclmnt"},"content":"**Usage example:** "},{"lineNumber":64,"author":{"gitId":"benclmnt"},"content":"- `todo [description]`"},{"lineNumber":65,"author":{"gitId":"benclmnt"},"content":"- `deadline [description] /by [yyyy-mm-dd]`"},{"lineNumber":66,"author":{"gitId":"benclmnt"},"content":"- `event [description] /at [yyyy-mm-dd]`"},{"lineNumber":67,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":68,"author":{"gitId":"benclmnt"},"content":"**Example of usage:**"},{"lineNumber":69,"author":{"gitId":"benclmnt"},"content":"- `todo watch movie` \u003cbr\u003e"},{"lineNumber":70,"author":{"gitId":"benclmnt"},"content":"Adds a new todo task with description `watch movie`."},{"lineNumber":71,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":72,"author":{"gitId":"benclmnt"},"content":"- `deadline homework /by 2020-09-19` \u003cbr\u003e"},{"lineNumber":73,"author":{"gitId":"benclmnt"},"content":"Adds a new deadline task with description `homework`."},{"lineNumber":74,"author":{"gitId":"benclmnt"},"content":"Time description will be automatically formatted to "},{"lineNumber":75,"author":{"gitId":"benclmnt"},"content":"`Sep 19, 2020`."},{"lineNumber":76,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":77,"author":{"gitId":"benclmnt"},"content":"- `event music concert /at 2020-09-19` \u003cbr\u003e"},{"lineNumber":78,"author":{"gitId":"benclmnt"},"content":"Adds a new event task with description `music concert`."},{"lineNumber":79,"author":{"gitId":"benclmnt"},"content":"Time description will be automatically formatted to "},{"lineNumber":80,"author":{"gitId":"benclmnt"},"content":"`Sep 19, 2020`."},{"lineNumber":81,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":82,"author":{"gitId":"benclmnt"},"content":"***"},{"lineNumber":83,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":84,"author":{"gitId":"benclmnt"},"content":"### Marks task as done"},{"lineNumber":85,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":86,"author":{"gitId":"benclmnt"},"content":"Marks a particular task as done in the list of tasks."},{"lineNumber":87,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":88,"author":{"gitId":"benclmnt"},"content":"**Usage example:**"},{"lineNumber":89,"author":{"gitId":"benclmnt"},"content":"`done [taskNumber]`"},{"lineNumber":90,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":91,"author":{"gitId":"benclmnt"},"content":"**Example of usage:**"},{"lineNumber":92,"author":{"gitId":"benclmnt"},"content":"- `done 2` \u003cbr\u003e"},{"lineNumber":93,"author":{"gitId":"benclmnt"},"content":"Mark task with id `2` as done."},{"lineNumber":94,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":95,"author":{"gitId":"benclmnt"},"content":"***"},{"lineNumber":96,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":97,"author":{"gitId":"benclmnt"},"content":"### Deletes a task in the list"},{"lineNumber":98,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":99,"author":{"gitId":"benclmnt"},"content":"Removes a certain task from the list of tasks."},{"lineNumber":100,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":101,"author":{"gitId":"benclmnt"},"content":"**Usage example:**"},{"lineNumber":102,"author":{"gitId":"benclmnt"},"content":"`delete [taskNumber]`"},{"lineNumber":103,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":104,"author":{"gitId":"benclmnt"},"content":"**Example of usage:**"},{"lineNumber":105,"author":{"gitId":"benclmnt"},"content":"- `delete 2`"},{"lineNumber":106,"author":{"gitId":"benclmnt"},"content":"Removes task with id `2`."},{"lineNumber":107,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":108,"author":{"gitId":"benclmnt"},"content":"***"},{"lineNumber":109,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":110,"author":{"gitId":"benclmnt"},"content":"### Find tasks"},{"lineNumber":111,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":112,"author":{"gitId":"benclmnt"},"content":"Finds all the tasks that contain a certain keyword in its description."},{"lineNumber":113,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":114,"author":{"gitId":"benclmnt"},"content":"**Usage example:**"},{"lineNumber":115,"author":{"gitId":"benclmnt"},"content":"`find [keyword]`"},{"lineNumber":116,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":117,"author":{"gitId":"benclmnt"},"content":"**Example of usage:**"},{"lineNumber":118,"author":{"gitId":"benclmnt"},"content":"- `find homework`"},{"lineNumber":119,"author":{"gitId":"benclmnt"},"content":"Find all tasks that contain keyword `homework` in its description."},{"lineNumber":120,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":121,"author":{"gitId":"benclmnt"},"content":"***"},{"lineNumber":122,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":123,"author":{"gitId":"benclmnt"},"content":"### List tasks"},{"lineNumber":124,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":125,"author":{"gitId":"benclmnt"},"content":"Lists all the tasks that are currently stored by the Alexa chat bot."},{"lineNumber":126,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":127,"author":{"gitId":"benclmnt"},"content":"**Usage example:**"},{"lineNumber":128,"author":{"gitId":"benclmnt"},"content":"- `list`"},{"lineNumber":129,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":130,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":131,"author":{"gitId":"benclmnt"},"content":"**Example of usage:**"},{"lineNumber":132,"author":{"gitId":"benclmnt"},"content":"- `list`"},{"lineNumber":133,"author":{"gitId":"benclmnt"},"content":"By default, this will lists all tasks based on their creation time."},{"lineNumber":134,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":135,"author":{"gitId":"benclmnt"},"content":"***"},{"lineNumber":136,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":137,"author":{"gitId":"benclmnt"},"content":"### View all tasks by date"},{"lineNumber":138,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":139,"author":{"gitId":"benclmnt"},"content":"View all tasks to be done on the given date"},{"lineNumber":140,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":141,"author":{"gitId":"benclmnt"},"content":"**Usage example:**"},{"lineNumber":142,"author":{"gitId":"benclmnt"},"content":"- `viewall yyyy-mm-dd`"},{"lineNumber":143,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":144,"author":{"gitId":"benclmnt"},"content":"**Example of usage:**"},{"lineNumber":145,"author":{"gitId":"benclmnt"},"content":"- `viewall 2020-09-19` \u003cbr\u003e"},{"lineNumber":146,"author":{"gitId":"benclmnt"},"content":"This command will list all tasks on Sep 19, 2020"},{"lineNumber":147,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":148,"author":{"gitId":"benclmnt"},"content":"***"},{"lineNumber":149,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":150,"author":{"gitId":"benclmnt"},"content":"### Update a task"},{"lineNumber":151,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":152,"author":{"gitId":"benclmnt"},"content":"Update task description or date"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"benclmnt"},"content":"**Usage example:**"},{"lineNumber":155,"author":{"gitId":"benclmnt"},"content":"- `update \u003ctaskNumber\u003e [/d \u003cdescription\u003e] [/t \u003cdate\u003e]`"},{"lineNumber":156,"author":{"gitId":"benclmnt"},"content":"- `update \u003ctasknumber\u003e [/t \u003cdate\u003e] [/d \u003cdescription\u003e]`"},{"lineNumber":157,"author":{"gitId":"benclmnt"},"content":"- `update \u003ctaskNumber\u003e [/t \u003cdate\u003e]`"},{"lineNumber":158,"author":{"gitId":"benclmnt"},"content":"- `update \u003ctaskNumber\u003e [/d \u003cdescription\u003e]`"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"benclmnt"},"content":"**Example of usage:**"},{"lineNumber":161,"author":{"gitId":"benclmnt"},"content":"- `update 2 /t 2020-09-20` \u003cbr\u003e"},{"lineNumber":162,"author":{"gitId":"benclmnt"},"content":"This command will update task 2 date to fall on September 20, 2020"},{"lineNumber":163,"author":{"gitId":"benclmnt"},"content":"- `update 2 /d borrow book` \u003cbr\u003e"},{"lineNumber":164,"author":{"gitId":"benclmnt"},"content":"This command will update task 2 description to borrow book"},{"lineNumber":165,"author":{"gitId":"benclmnt"},"content":"- `update 2 /t 2020-09-20 /d borrow book` \u003cbr\u003e"},{"lineNumber":166,"author":{"gitId":"benclmnt"},"content":"This command will update task 2 date to fall on September 20, 2020 and description to borrow book"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"benclmnt"},"content":"### Exit Alexa"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"benclmnt"},"content":"Exit Alexa chatbot"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"benclmnt"},"content":"**Usage example:**"},{"lineNumber":173,"author":{"gitId":"benclmnt"},"content":"- `bye` \u003cbr\u003e"},{"lineNumber":174,"author":{"gitId":"benclmnt"},"content":"This will show Alexa\u0027s goodbye message and close the application"}],"authorContributionMap":{"benclmnt":163,"-":11}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":7}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"import ui.MainWindow;"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"    public void start(Stage stage) {"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"            scene.getStylesheets().add(\"/view/main.css\");"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"            stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/Icon.png\")));"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"            stage.setTitle(\"Alexa\");"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"            stage.show();"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":31}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import java.util.concurrent.CompletableFuture;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"import ui.Ui;"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":" * Implements the Command object created when user quits the application"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"public class ByeCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"    public boolean isExit() {"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"        return true;"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"     * Shows close message"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"     * @param tasks   current task list"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"     * @param ui      text ui interface"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"     * @param storage storage file"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"        CompletableFuture.runAsync(() -\u003e {"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"            try {"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"                Thread.sleep(500);"},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"                System.exit(0);"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"            } catch (InterruptedException ex) {"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"                Thread.currentThread().interrupt();"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":"        });"},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":"        return new CommandResult(ui.showCloseMessage());"},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":37}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import ui.Ui;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":" * Parent class of all supported commands"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"    public boolean isExit() {"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"        return false;"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"     * Implements the execution of the command"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"     * @param tasks   current task list"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"     * @param ui      text ui interface"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"     * @param storage storage file"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"    public abstract CommandResult execute(TaskList tasks, Ui ui, Storage storage);"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":24}},{"path":"src/main/java/command/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"public class CommandResult {"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"    protected String result;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"    public CommandResult(String result) {"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"        this.result \u003d result;"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"    public String getResult() {"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"        return result;"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":13}},{"path":"src/main/java/command/CommandTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"public enum CommandTypes {"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"    BYE,"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"    LIST,"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"    DONE,"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"    DELETE,"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"    TODO,"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"    DEADLINE,"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"    EVENT,"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"    VIEWALL,"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"    FIND,"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"    UPDATE,"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":14}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import task.Deadline;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"import ui.Ui;"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":" * Add a new deadline into the task list"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"    private Deadline deadline;"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"    public DeadlineCommand(Deadline deadline) {"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"     * Insert a new deadline into tasklist, and save it to storage file"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"     * @param tasks   current task list"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"     * @param ui      text ui interface"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"     * @param storage storage file"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"        tasks.add(deadline);"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"        storage.save(tasks);"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"        int size \u003d tasks.size();"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"        return new CommandResult(ui.printAddConfirmation(tasks.show(size - 1), size));"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":33}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import ui.Ui;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":" * Remove a task"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"    private int taskNumber;"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"    public DeleteCommand(int taskNumber) {"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"     * Removes a specific task from task list and save the changes to storage file"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"     * @param tasks   current task list"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"     * @param ui      text ui interface"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"     * @param storage storage file"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"        // Check that the task number makes sense."},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"        if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c tasks.size()) {"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"            String removedTask \u003d tasks.remove(taskNumber).showTask();"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"            ui.print(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"            ui.print(removedTask);"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"            ui.print(String.format(\"Now you have %d %s in the list\","},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"                    tasks.size(), tasks.size() \u003e 1 ? \"tasks\" : \"task\"));"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"            storage.save(tasks);"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":"            return new CommandResult("},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":"                    \"Noted. I\u0027ve removed this task: \\n\""},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"                            + removedTask + \"\\n\""},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":"                            + String.format(\"Now you have %d %s in the list\","},{"lineNumber":38,"author":{"gitId":"benclmnt"},"content":"                            tasks.size(), tasks.size() \u003e 1 ? \"tasks\" : \"task\")"},{"lineNumber":39,"author":{"gitId":"benclmnt"},"content":"            );"},{"lineNumber":40,"author":{"gitId":"benclmnt"},"content":"        } else {"},{"lineNumber":41,"author":{"gitId":"benclmnt"},"content":"            ui.print(\"Sorry, I can\u0027t find it in your list!\");"},{"lineNumber":42,"author":{"gitId":"benclmnt"},"content":"            return new CommandResult(\"Sorry, I can\u0027t find it in your list!\");"},{"lineNumber":43,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":45}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import ui.Ui;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":" * Mark a task done"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"public class DoneCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"    private int taskNumber;"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"    public DoneCommand(int taskNumber) {"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"     * Mark a specific task as done and save it to storage file"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"     * @param tasks   current task list"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"     * @param ui      text ui interface"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"     * @param storage storage file"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"        // Check that the task number makes sense."},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"        if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c tasks.size()) {"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"            tasks.markAsDone(taskNumber);"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"            storage.save(tasks);"},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"            ui.print(\"Good job! I\u0027ve marked this task as done:\");"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"            ui.print(tasks.show(taskNumber));"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"            return new CommandResult("},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"                    \"Good job! I\u0027ve marked this task as done: \\n\""},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":"                            + tasks.show(taskNumber)"},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":"            );"},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":"            ui.print(\"Sorry, I can\u0027t find it in your list!\");"},{"lineNumber":38,"author":{"gitId":"benclmnt"},"content":"            return new CommandResult(\"Sorry, I can\u0027t find it in your list!\");"},{"lineNumber":39,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":41,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":42}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import task.Event;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"import ui.Ui;"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":" * Add a new event into the task list"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"public class EventCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"    private Event event;"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"    public EventCommand(Event event) {"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"        this.event \u003d event;"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"     * Insert an event into the task list and save it in the storage file"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"     * @param tasks   current task list"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"     * @param ui      text ui interface"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"     * @param storage storage file"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"        tasks.add(event);"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"        storage.save(tasks);"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"        int size \u003d tasks.size();"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"        return new CommandResult(ui.printAddConfirmation(tasks.show(size - 1), size));"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":33}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import ui.Ui;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"public class FindCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"    private String keyword;"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"    public CommandResult execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"        TaskList filtered \u003d taskList.find(keyword);"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"        ui.print(\"Here are the matching tasks in your list:\");"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"        for (int i \u003d 0; i \u003c filtered.size(); i++) {"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"            ui.print(String.format(\"%d. %s\", i + 1, filtered.show(i)));"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"            response.append(String.format(\"%d. %s%n\", i + 1, filtered.show(i)));"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"        return new CommandResult(response.toString());"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":25}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import ui.Ui;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":" * List all tasks in the current task list"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"     * List all tasks saved in the current task list"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"     * @param tasks   current task list"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"     * @param ui      text ui interface"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"     * @param storage storage file"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"        ui.print(\"Here are the tasks in your list:\");"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"            ui.print(String.format(\"%d. %s\", i + 1, tasks.show(i)));"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"            response.append(String.format(\"%d. %s%n\", i + 1, tasks.show(i)));"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"        return new CommandResult(response.toString());"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":28}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import task.Todo;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"import ui.Ui;"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":" * Insert a new todo into current task list"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"public class TodoCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"    private Todo todo;"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"    public TodoCommand(String description) {"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"        this.todo \u003d new Todo(description);"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"     * Insert a new todo into the current task list and save it to the storage file"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"     * @param tasks   current task list"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"     * @param ui      text ui interface"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"     * @param storage storage file"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"        tasks.add(this.todo);"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"        storage.save(tasks);"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"        int size \u003d tasks.size();"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"        return new CommandResult(ui.printAddConfirmation(tasks.show(size - 1), size));"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":33}},{"path":"src/main/java/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"import duke.Storage;"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"import duke.TaskList;"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"import task.Deadline;"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"import task.Event;"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"import task.Task;"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"import task.Todo;"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"import ui.Ui;"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":" * Add a new deadline into the task list"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"public class UpdateCommand extends Command {"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"    private int taskNumber;"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"    private Optional\u003cString\u003e description;"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"    private Optional\u003cLocalDate\u003e date;"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"     * Command to update a task"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"     * @param taskNumber  index in taskList"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"     * @param description new task description"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"     * @param date        new task date"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"    public UpdateCommand(int taskNumber, Optional\u003cString\u003e description, Optional\u003cLocalDate\u003e date) {"},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"        this.description \u003d description;"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"        this.date \u003d date;"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"     * Insert a new deadline into tasklist, and save it to storage file"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"benclmnt"},"content":"     * @param tasks   current task list"},{"lineNumber":39,"author":{"gitId":"benclmnt"},"content":"     * @param ui      text ui interface"},{"lineNumber":40,"author":{"gitId":"benclmnt"},"content":"     * @param storage storage file"},{"lineNumber":41,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"benclmnt"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":44,"author":{"gitId":"benclmnt"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {"},{"lineNumber":45,"author":{"gitId":"benclmnt"},"content":"            ui.print(\"Sorry, I don\u0027t find it in your list!\");"},{"lineNumber":46,"author":{"gitId":"benclmnt"},"content":"            return new CommandResult(\"Sorry, I can\u0027t find it in your list!\");"},{"lineNumber":47,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":49,"author":{"gitId":"benclmnt"},"content":"        Task oldTask \u003d tasks.remove(taskNumber - 1);"},{"lineNumber":50,"author":{"gitId":"benclmnt"},"content":"        Task newTask;"},{"lineNumber":51,"author":{"gitId":"benclmnt"},"content":"        String newDescription \u003d description.orElse(oldTask.getDescription());"},{"lineNumber":52,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":53,"author":{"gitId":"benclmnt"},"content":"        if (oldTask instanceof Todo) {"},{"lineNumber":54,"author":{"gitId":"benclmnt"},"content":"            newTask \u003d new Todo(newDescription);"},{"lineNumber":55,"author":{"gitId":"benclmnt"},"content":"        } else if (oldTask instanceof Deadline) {"},{"lineNumber":56,"author":{"gitId":"benclmnt"},"content":"            LocalDate newDate \u003d date.orElse(((Deadline) oldTask).getDate());"},{"lineNumber":57,"author":{"gitId":"benclmnt"},"content":"            newTask \u003d new Deadline(newDescription, newDate);"},{"lineNumber":58,"author":{"gitId":"benclmnt"},"content":"        } else if (oldTask instanceof Event) {"},{"lineNumber":59,"author":{"gitId":"benclmnt"},"content":"            LocalDate newDate \u003d date.orElse(((Event) oldTask).getDate());"},{"lineNumber":60,"author":{"gitId":"benclmnt"},"content":"            newTask \u003d new Event(newDescription, newDate);"},{"lineNumber":61,"author":{"gitId":"benclmnt"},"content":"        } else {"},{"lineNumber":62,"author":{"gitId":"benclmnt"},"content":"            // should not reach this phase, since known event type have all been covered"},{"lineNumber":63,"author":{"gitId":"benclmnt"},"content":"            assert false : \"Unknown event type to update\";"},{"lineNumber":64,"author":{"gitId":"benclmnt"},"content":"            return new CommandResult(\"Unknown event type to update\");"},{"lineNumber":65,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":67,"author":{"gitId":"benclmnt"},"content":"        tasks.add(newTask, taskNumber - 1);"},{"lineNumber":68,"author":{"gitId":"benclmnt"},"content":"        storage.save(tasks);"},{"lineNumber":69,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":70,"author":{"gitId":"benclmnt"},"content":"        int size \u003d tasks.size();"},{"lineNumber":71,"author":{"gitId":"benclmnt"},"content":"        return new CommandResult(ui.printAddConfirmation(newTask.showTask(), size));"},{"lineNumber":72,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":73}},{"path":"src/main/java/command/ViewallCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"import ui.Ui;"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":" * View all tasks in the current task list based on a certain date"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"public class ViewallCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"    private LocalDate date;"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"    public ViewallCommand(LocalDate date) {"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"        this.date \u003d date;"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"     * View all tasks in the current task list based on a certain date"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"     * @param tasks   current task list"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"     * @param ui      text ui interface"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"     * @param storage storage file"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"        TaskList filtered \u003d tasks.viewAllOnDate(date);"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"        ui.print(\"Here are the tasks on given date:\");"},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks on given date:\\n\");"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"        for (int i \u003d 0; i \u003c filtered.size(); i++) {"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"            ui.print(String.format(\"%d. %s\", i + 1, filtered.show(i)));"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"            response.append(String.format(\"%d. %s%n\", i + 1, filtered.show(i)));"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":"        return new CommandResult(response.toString());"},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":37}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import command.Command;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import command.CommandResult;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import exception.InvalidUsageException;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"import exception.StorageException;"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"import exception.UnknownCommandException;"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"import ui.Ui;"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":" * Main class for the Duke application"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"    // storage file"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"    private final Storage storage;"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"    // text ui interface"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"    private final Ui ui;"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"    // current task list"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"    private TaskList taskList;"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"     * Constructor for Duke application"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"    public Duke() {"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"        ui \u003d new Ui();"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"        storage \u003d new Storage();"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"            taskList \u003d new TaskList(storage.load());"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"        } catch (StorageException e) {"},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":"     * method to call on starting the application"},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":"    public String onStart() {"},{"lineNumber":38,"author":{"gitId":"benclmnt"},"content":"        return ui.showWelcomeMessage();"},{"lineNumber":39,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":41,"author":{"gitId":"benclmnt"},"content":"    public String getResponse(String input) {"},{"lineNumber":42,"author":{"gitId":"benclmnt"},"content":"        CommandResult response;"},{"lineNumber":43,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"benclmnt"},"content":"            Command command \u003d Parser.parseCommand(input);"},{"lineNumber":45,"author":{"gitId":"benclmnt"},"content":"            response \u003d command.execute(taskList, ui, storage);"},{"lineNumber":46,"author":{"gitId":"benclmnt"},"content":"        } catch (InvalidUsageException | UnknownCommandException ex) {"},{"lineNumber":47,"author":{"gitId":"benclmnt"},"content":"            ui.print(ex.getMessage());"},{"lineNumber":48,"author":{"gitId":"benclmnt"},"content":"            response \u003d new CommandResult(ex.getMessage());"},{"lineNumber":49,"author":{"gitId":"benclmnt"},"content":"        } finally {"},{"lineNumber":50,"author":{"gitId":"benclmnt"},"content":"            assert true;"},{"lineNumber":51,"author":{"gitId":"benclmnt"},"content":"            ui.buildChatFence();"},{"lineNumber":52,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"benclmnt"},"content":"        return response.getResult();"},{"lineNumber":54,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":55}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"import java.util.Optional;"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"import command.ByeCommand;"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"import command.Command;"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"import command.CommandTypes;"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"import command.DeadlineCommand;"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"import command.DeleteCommand;"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"import command.DoneCommand;"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"import command.EventCommand;"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"import command.FindCommand;"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"import command.ListCommand;"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"import command.TodoCommand;"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"import command.UpdateCommand;"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"import command.ViewallCommand;"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"import exception.DeadlineInvalidUsageException;"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"import exception.EventInvalidUsageException;"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"import exception.InvalidUsageException;"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"import exception.TodoInvalidUsageException;"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"import exception.UnknownCommandException;"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"import exception.UpdateInvalidUsageException;"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"import exception.ViewallInvalidUsageException;"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"import task.Deadline;"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"import task.Event;"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":" * Represents parser class to parse user commands"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"public class Parser {"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"     * Main method to call to parse user commands"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"benclmnt"},"content":"     * @param input user commands"},{"lineNumber":39,"author":{"gitId":"benclmnt"},"content":"     * @return a {@code Command} object representing user actions"},{"lineNumber":40,"author":{"gitId":"benclmnt"},"content":"     * @throws InvalidUsageException   on malformed commands"},{"lineNumber":41,"author":{"gitId":"benclmnt"},"content":"     * @throws UnknownCommandException on unsupported command types"},{"lineNumber":42,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"benclmnt"},"content":"    public static Command parseCommand(String input) throws InvalidUsageException, UnknownCommandException {"},{"lineNumber":44,"author":{"gitId":"benclmnt"},"content":"        String[] commands \u003d parseInput(input);"},{"lineNumber":45,"author":{"gitId":"benclmnt"},"content":"        CommandTypes command;"},{"lineNumber":46,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":47,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"benclmnt"},"content":"            // modify parsed[0] to uppercase to ensure that comparison with the commands enum is standardized"},{"lineNumber":49,"author":{"gitId":"benclmnt"},"content":"            command \u003d CommandTypes.valueOf(commands[0].toUpperCase());"},{"lineNumber":50,"author":{"gitId":"benclmnt"},"content":"        } catch (IllegalArgumentException ex) {"},{"lineNumber":51,"author":{"gitId":"benclmnt"},"content":"            // if parsed[0] not amongst valid commands, will throw an IllegalArgumentException"},{"lineNumber":52,"author":{"gitId":"benclmnt"},"content":"            throw new UnknownCommandException();"},{"lineNumber":53,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":55,"author":{"gitId":"benclmnt"},"content":"        assert command !\u003d null : \"command cannot be empty\";"},{"lineNumber":56,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":57,"author":{"gitId":"benclmnt"},"content":"        switch (command) {"},{"lineNumber":58,"author":{"gitId":"benclmnt"},"content":"        case BYE:"},{"lineNumber":59,"author":{"gitId":"benclmnt"},"content":"            return new ByeCommand();"},{"lineNumber":60,"author":{"gitId":"benclmnt"},"content":"        case LIST:"},{"lineNumber":61,"author":{"gitId":"benclmnt"},"content":"            // we ignore the argument after `list`."},{"lineNumber":62,"author":{"gitId":"benclmnt"},"content":"            return new ListCommand();"},{"lineNumber":63,"author":{"gitId":"benclmnt"},"content":"        case DONE:"},{"lineNumber":64,"author":{"gitId":"benclmnt"},"content":"            try {"},{"lineNumber":65,"author":{"gitId":"benclmnt"},"content":"                int taskNumber \u003d Integer.parseInt(commands[1]) - 1;"},{"lineNumber":66,"author":{"gitId":"benclmnt"},"content":"                return new DoneCommand(taskNumber);"},{"lineNumber":67,"author":{"gitId":"benclmnt"},"content":"            } catch (NumberFormatException | ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":68,"author":{"gitId":"benclmnt"},"content":"                throw new InvalidUsageException(\"Usage: done \u003ctask number\u003e\");"},{"lineNumber":69,"author":{"gitId":"benclmnt"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"benclmnt"},"content":"        case DELETE:"},{"lineNumber":71,"author":{"gitId":"benclmnt"},"content":"            try {"},{"lineNumber":72,"author":{"gitId":"benclmnt"},"content":"                int taskNumber \u003d Integer.parseInt(commands[1]) - 1;"},{"lineNumber":73,"author":{"gitId":"benclmnt"},"content":"                return new DeleteCommand(taskNumber);"},{"lineNumber":74,"author":{"gitId":"benclmnt"},"content":"            } catch (NumberFormatException | ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":75,"author":{"gitId":"benclmnt"},"content":"                throw new InvalidUsageException(\"Usage: delete \u003ctask number\u003e\");"},{"lineNumber":76,"author":{"gitId":"benclmnt"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"benclmnt"},"content":"        case TODO:"},{"lineNumber":78,"author":{"gitId":"benclmnt"},"content":"            try {"},{"lineNumber":79,"author":{"gitId":"benclmnt"},"content":"                return new TodoCommand(commands[1]);"},{"lineNumber":80,"author":{"gitId":"benclmnt"},"content":"            } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":81,"author":{"gitId":"benclmnt"},"content":"                throw new TodoInvalidUsageException(\"Todo description cannot be empty.\");"},{"lineNumber":82,"author":{"gitId":"benclmnt"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"benclmnt"},"content":"        case DEADLINE:"},{"lineNumber":84,"author":{"gitId":"benclmnt"},"content":"            try {"},{"lineNumber":85,"author":{"gitId":"benclmnt"},"content":"                String[] parsedDeadline \u003d commands[1].split(\"\\\\s*/by\\\\s*\", 2);"},{"lineNumber":86,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":87,"author":{"gitId":"benclmnt"},"content":"                if (parsedDeadline.length \u003c 2) {"},{"lineNumber":88,"author":{"gitId":"benclmnt"},"content":"                    throw new DeadlineInvalidUsageException(\"Please re-check your command format!\");"},{"lineNumber":89,"author":{"gitId":"benclmnt"},"content":"                }"},{"lineNumber":90,"author":{"gitId":"benclmnt"},"content":"                if (parsedDeadline[0].equals(\"\")) {"},{"lineNumber":91,"author":{"gitId":"benclmnt"},"content":"                    throw new DeadlineInvalidUsageException(\"Deadline description cannot be empty.\");"},{"lineNumber":92,"author":{"gitId":"benclmnt"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":94,"author":{"gitId":"benclmnt"},"content":"                try {"},{"lineNumber":95,"author":{"gitId":"benclmnt"},"content":"                    Deadline deadline \u003d Deadline.create(parsedDeadline[0], parsedDeadline[1]);"},{"lineNumber":96,"author":{"gitId":"benclmnt"},"content":"                    return new DeadlineCommand(deadline);"},{"lineNumber":97,"author":{"gitId":"benclmnt"},"content":"                } catch (DateTimeParseException ex) {"},{"lineNumber":98,"author":{"gitId":"benclmnt"},"content":"                    throw new DeadlineInvalidUsageException(\"Deadline date must be of the form yyyy-mm-dd.\");"},{"lineNumber":99,"author":{"gitId":"benclmnt"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"benclmnt"},"content":"            } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":101,"author":{"gitId":"benclmnt"},"content":"                throw new DeadlineInvalidUsageException(\"Deadline description cannot be empty.\");"},{"lineNumber":102,"author":{"gitId":"benclmnt"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"benclmnt"},"content":"        case EVENT:"},{"lineNumber":104,"author":{"gitId":"benclmnt"},"content":"            try {"},{"lineNumber":105,"author":{"gitId":"benclmnt"},"content":"                String[] parsedEvent \u003d commands[1].split(\"\\\\s*/at\\\\s*\", 2);"},{"lineNumber":106,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":107,"author":{"gitId":"benclmnt"},"content":"                if (parsedEvent.length \u003c 2) {"},{"lineNumber":108,"author":{"gitId":"benclmnt"},"content":"                    throw new EventInvalidUsageException(\"Please re-check your command format!\");"},{"lineNumber":109,"author":{"gitId":"benclmnt"},"content":"                }"},{"lineNumber":110,"author":{"gitId":"benclmnt"},"content":"                if (parsedEvent[0].equals(\"\")) {"},{"lineNumber":111,"author":{"gitId":"benclmnt"},"content":"                    throw new EventInvalidUsageException(\"Event description cannot be empty.\");"},{"lineNumber":112,"author":{"gitId":"benclmnt"},"content":"                }"},{"lineNumber":113,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":114,"author":{"gitId":"benclmnt"},"content":"                try {"},{"lineNumber":115,"author":{"gitId":"benclmnt"},"content":"                    Event event \u003d Event.create(parsedEvent[0], parsedEvent[1]);"},{"lineNumber":116,"author":{"gitId":"benclmnt"},"content":"                    return new EventCommand(event);"},{"lineNumber":117,"author":{"gitId":"benclmnt"},"content":"                } catch (DateTimeParseException ex) {"},{"lineNumber":118,"author":{"gitId":"benclmnt"},"content":"                    throw new EventInvalidUsageException(\"Deadline date must be of the form yyyy-mm-dd.\");"},{"lineNumber":119,"author":{"gitId":"benclmnt"},"content":"                }"},{"lineNumber":120,"author":{"gitId":"benclmnt"},"content":"            } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":121,"author":{"gitId":"benclmnt"},"content":"                throw new EventInvalidUsageException(\"Event description cannot be empty.\");"},{"lineNumber":122,"author":{"gitId":"benclmnt"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"benclmnt"},"content":"        case VIEWALL:"},{"lineNumber":124,"author":{"gitId":"benclmnt"},"content":"            try {"},{"lineNumber":125,"author":{"gitId":"benclmnt"},"content":"                LocalDate date \u003d LocalDate.parse(commands[1]);"},{"lineNumber":126,"author":{"gitId":"benclmnt"},"content":"                return new ViewallCommand(date);"},{"lineNumber":127,"author":{"gitId":"benclmnt"},"content":"            } catch (ArrayIndexOutOfBoundsException | DateTimeException ex) {"},{"lineNumber":128,"author":{"gitId":"benclmnt"},"content":"                throw new ViewallInvalidUsageException(\"Date should be in yyyy-mm-dd format.\");"},{"lineNumber":129,"author":{"gitId":"benclmnt"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"benclmnt"},"content":"        case FIND:"},{"lineNumber":131,"author":{"gitId":"benclmnt"},"content":"            try {"},{"lineNumber":132,"author":{"gitId":"benclmnt"},"content":"                return new FindCommand(commands[1]);"},{"lineNumber":133,"author":{"gitId":"benclmnt"},"content":"            } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":134,"author":{"gitId":"benclmnt"},"content":"                throw new InvalidUsageException(\"Usage: find \u003ckeyword\u003e\");"},{"lineNumber":135,"author":{"gitId":"benclmnt"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"benclmnt"},"content":"        case UPDATE:"},{"lineNumber":137,"author":{"gitId":"benclmnt"},"content":"            try {"},{"lineNumber":138,"author":{"gitId":"benclmnt"},"content":"                String[] options \u003d parseInput(commands[1]);"},{"lineNumber":139,"author":{"gitId":"benclmnt"},"content":"                int taskNumber \u003d Integer.parseInt(options[0]);"},{"lineNumber":140,"author":{"gitId":"benclmnt"},"content":"                options[1] \u003d \" \" + options[1];"},{"lineNumber":141,"author":{"gitId":"benclmnt"},"content":"                int descriptionDelimiter \u003d commands[1].indexOf(\" /d \");"},{"lineNumber":142,"author":{"gitId":"benclmnt"},"content":"                int timeDelimiter \u003d commands[1].indexOf(\" /t \");"},{"lineNumber":143,"author":{"gitId":"benclmnt"},"content":"                String descRegex \u003d \"(\\\\s+)(/d)(\\\\s+)\";"},{"lineNumber":144,"author":{"gitId":"benclmnt"},"content":"                String timeRegex \u003d \"(\\\\s+)(/t)(\\\\s+)\";"},{"lineNumber":145,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":146,"author":{"gitId":"benclmnt"},"content":"                Optional\u003cString\u003e description;"},{"lineNumber":147,"author":{"gitId":"benclmnt"},"content":"                Optional\u003cLocalDate\u003e date;"},{"lineNumber":148,"author":{"gitId":"benclmnt"},"content":"                if (descriptionDelimiter \u003c 0 \u0026\u0026 timeDelimiter \u003c 0) {"},{"lineNumber":149,"author":{"gitId":"benclmnt"},"content":"                    description \u003d Optional.empty();"},{"lineNumber":150,"author":{"gitId":"benclmnt"},"content":"                    date \u003d Optional.empty();"},{"lineNumber":151,"author":{"gitId":"benclmnt"},"content":"                } else if (timeDelimiter \u003c 0) {"},{"lineNumber":152,"author":{"gitId":"benclmnt"},"content":"                    String[] findDescription \u003d commands[1].split(descRegex, 2);"},{"lineNumber":153,"author":{"gitId":"benclmnt"},"content":"                    description \u003d Optional.of(findDescription[1]);"},{"lineNumber":154,"author":{"gitId":"benclmnt"},"content":"                    date \u003d Optional.empty();"},{"lineNumber":155,"author":{"gitId":"benclmnt"},"content":"                } else if (descriptionDelimiter \u003c 0) {"},{"lineNumber":156,"author":{"gitId":"benclmnt"},"content":"                    String[] findDate \u003d commands[1].split(timeRegex, 2);"},{"lineNumber":157,"author":{"gitId":"benclmnt"},"content":"                    description \u003d Optional.empty();"},{"lineNumber":158,"author":{"gitId":"benclmnt"},"content":"                    date \u003d Optional.of(LocalDate.parse(findDate[1]));"},{"lineNumber":159,"author":{"gitId":"benclmnt"},"content":"                } else if (timeDelimiter \u003c descriptionDelimiter) {"},{"lineNumber":160,"author":{"gitId":"benclmnt"},"content":"                    String[] findDate \u003d commands[1].split(timeRegex, 2);"},{"lineNumber":161,"author":{"gitId":"benclmnt"},"content":"                    String[] findDescription \u003d findDate[1].split(descRegex, 2);"},{"lineNumber":162,"author":{"gitId":"benclmnt"},"content":"                    description \u003d Optional.of(findDescription[1]);"},{"lineNumber":163,"author":{"gitId":"benclmnt"},"content":"                    date \u003d Optional.of(LocalDate.parse(findDescription[0]));"},{"lineNumber":164,"author":{"gitId":"benclmnt"},"content":"                } else {"},{"lineNumber":165,"author":{"gitId":"benclmnt"},"content":"                    String[] findDescription \u003d commands[1].split(descRegex, 2);"},{"lineNumber":166,"author":{"gitId":"benclmnt"},"content":"                    String[] findDate \u003d findDescription[1].split(timeRegex, 2);"},{"lineNumber":167,"author":{"gitId":"benclmnt"},"content":"                    description \u003d Optional.of(findDate[0]);"},{"lineNumber":168,"author":{"gitId":"benclmnt"},"content":"                    date \u003d Optional.of(LocalDate.parse(findDate[1]));"},{"lineNumber":169,"author":{"gitId":"benclmnt"},"content":"                }"},{"lineNumber":170,"author":{"gitId":"benclmnt"},"content":"                return new UpdateCommand(taskNumber, description, date);"},{"lineNumber":171,"author":{"gitId":"benclmnt"},"content":"            } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":172,"author":{"gitId":"benclmnt"},"content":"                throw new UpdateInvalidUsageException(\"Please re-check your command format!\");"},{"lineNumber":173,"author":{"gitId":"benclmnt"},"content":"            } catch (NumberFormatException ex) {"},{"lineNumber":174,"author":{"gitId":"benclmnt"},"content":"                throw new UpdateInvalidUsageException(\"Don\u0027t forget to key in the task number to be updated!\");"},{"lineNumber":175,"author":{"gitId":"benclmnt"},"content":"            } catch (DateTimeException ex) {"},{"lineNumber":176,"author":{"gitId":"benclmnt"},"content":"                throw new UpdateInvalidUsageException(\"Date should be in yyyy-mm-dd format.\");"},{"lineNumber":177,"author":{"gitId":"benclmnt"},"content":"            }"},{"lineNumber":178,"author":{"gitId":"benclmnt"},"content":"        default:"},{"lineNumber":179,"author":{"gitId":"benclmnt"},"content":"            throw new UnknownCommandException();"},{"lineNumber":180,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":183,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"benclmnt"},"content":"     * Split the input string into first word (command) and others"},{"lineNumber":185,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":186,"author":{"gitId":"benclmnt"},"content":"     * @param input user input"},{"lineNumber":187,"author":{"gitId":"benclmnt"},"content":"     * @return an array, first element is command, second element is input"},{"lineNumber":188,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"benclmnt"},"content":"    private static String[] parseInput(String input) {"},{"lineNumber":190,"author":{"gitId":"benclmnt"},"content":"        return input.split(\"\\\\s+\", 2);"},{"lineNumber":191,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":192}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import java.io.BufferedWriter;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"import java.nio.file.Path;"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"import java.nio.file.Paths;"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"import exception.DeadlineInvalidUsageException;"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"import exception.EventInvalidUsageException;"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"import exception.StorageException;"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"import task.Deadline;"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"import task.Event;"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"import task.Task;"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"import task.Todo;"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":" * Represents the storage file that handles storage operations"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"public class Storage {"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"data/duke.txt\";"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"    public final Path path;"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"    public Storage() {"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"        this(DEFAULT_STORAGE_FILEPATH);"},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"    public Storage(String filePath) {"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"        path \u003d Paths.get(filePath);"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":"     * Loads file from storage file"},{"lineNumber":38,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"benclmnt"},"content":"     * @return a list of task saved in storage file"},{"lineNumber":40,"author":{"gitId":"benclmnt"},"content":"     * @throws StorageException on I/O error or parse error"},{"lineNumber":41,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"benclmnt"},"content":"    public List\u003cTask\u003e load() throws StorageException {"},{"lineNumber":43,"author":{"gitId":"benclmnt"},"content":"        assert path !\u003d null : \"Storage file path cannot be empty!\";"},{"lineNumber":44,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"benclmnt"},"content":"            createFileIfNotExists(path);"},{"lineNumber":46,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":47,"author":{"gitId":"benclmnt"},"content":"            // read from file"},{"lineNumber":48,"author":{"gitId":"benclmnt"},"content":"            BufferedReader br \u003d Files.newBufferedReader(path);"},{"lineNumber":49,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":50,"author":{"gitId":"benclmnt"},"content":"            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":51,"author":{"gitId":"benclmnt"},"content":"            br.lines().forEach(line -\u003e {"},{"lineNumber":52,"author":{"gitId":"benclmnt"},"content":"                try {"},{"lineNumber":53,"author":{"gitId":"benclmnt"},"content":"                    Task task \u003d parseStorageData(line);"},{"lineNumber":54,"author":{"gitId":"benclmnt"},"content":"                    tasks.add(task);"},{"lineNumber":55,"author":{"gitId":"benclmnt"},"content":"                } catch (StorageException ex) {"},{"lineNumber":56,"author":{"gitId":"benclmnt"},"content":"                    System.out.println(ex.getMessage());"},{"lineNumber":57,"author":{"gitId":"benclmnt"},"content":"                }"},{"lineNumber":58,"author":{"gitId":"benclmnt"},"content":"            });"},{"lineNumber":59,"author":{"gitId":"benclmnt"},"content":"            return tasks;"},{"lineNumber":60,"author":{"gitId":"benclmnt"},"content":"        } catch (IOException ioe) {"},{"lineNumber":61,"author":{"gitId":"benclmnt"},"content":"            throw new StorageException(\"Error writing to file: \" + path);"},{"lineNumber":62,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":65,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"benclmnt"},"content":"     * Save tasks to storage file"},{"lineNumber":67,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"benclmnt"},"content":"     * @param tasks a list of task to save"},{"lineNumber":69,"author":{"gitId":"benclmnt"},"content":"     * @return true indicating storage is updated, or false indicating storage fails to update"},{"lineNumber":70,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"benclmnt"},"content":"    public boolean save(TaskList tasks) {"},{"lineNumber":72,"author":{"gitId":"benclmnt"},"content":"        assert path !\u003d null : \"Storage file path cannot be empty!\";"},{"lineNumber":73,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"benclmnt"},"content":"            BufferedWriter bw \u003d Files.newBufferedWriter(path);"},{"lineNumber":75,"author":{"gitId":"benclmnt"},"content":"            for (Task task : tasks.getAll()) {"},{"lineNumber":76,"author":{"gitId":"benclmnt"},"content":"                String storeFormat \u003d String.format("},{"lineNumber":77,"author":{"gitId":"benclmnt"},"content":"                        \"%s | %d | %s\","},{"lineNumber":78,"author":{"gitId":"benclmnt"},"content":"                        task.getType(),"},{"lineNumber":79,"author":{"gitId":"benclmnt"},"content":"                        task.getStatus() ? 1 : 0,"},{"lineNumber":80,"author":{"gitId":"benclmnt"},"content":"                        task.getStorageDescription()"},{"lineNumber":81,"author":{"gitId":"benclmnt"},"content":"                );"},{"lineNumber":82,"author":{"gitId":"benclmnt"},"content":"                bw.write(storeFormat);"},{"lineNumber":83,"author":{"gitId":"benclmnt"},"content":"                bw.newLine();"},{"lineNumber":84,"author":{"gitId":"benclmnt"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"benclmnt"},"content":"            bw.close();"},{"lineNumber":86,"author":{"gitId":"benclmnt"},"content":"            return true;"},{"lineNumber":87,"author":{"gitId":"benclmnt"},"content":"        } catch (IOException ex) {"},{"lineNumber":88,"author":{"gitId":"benclmnt"},"content":"            ex.printStackTrace();"},{"lineNumber":89,"author":{"gitId":"benclmnt"},"content":"            return false;"},{"lineNumber":90,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":93,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"benclmnt"},"content":"     * Create storage file (and parent folders)"},{"lineNumber":95,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"benclmnt"},"content":"     * @param path file string"},{"lineNumber":97,"author":{"gitId":"benclmnt"},"content":"     * @throws IOException on I/O error"},{"lineNumber":98,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"benclmnt"},"content":"    private void createFileIfNotExists(Path path) throws IOException {"},{"lineNumber":100,"author":{"gitId":"benclmnt"},"content":"        Path folderPath \u003d path.getParent();"},{"lineNumber":101,"author":{"gitId":"benclmnt"},"content":"        Path filePath \u003d folderPath.resolve(path.getFileName());"},{"lineNumber":102,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":103,"author":{"gitId":"benclmnt"},"content":"        // create folders containing the file and its parents"},{"lineNumber":104,"author":{"gitId":"benclmnt"},"content":"        Files.createDirectories(folderPath);"},{"lineNumber":105,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":106,"author":{"gitId":"benclmnt"},"content":"        if (!Files.exists(filePath)) {"},{"lineNumber":107,"author":{"gitId":"benclmnt"},"content":"            Files.createFile(filePath);"},{"lineNumber":108,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":111,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"benclmnt"},"content":"     * Parse storage data by the following format task_type | task_status | task_description | task_date(optional)"},{"lineNumber":113,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"benclmnt"},"content":"     * @param line lines in storage file"},{"lineNumber":115,"author":{"gitId":"benclmnt"},"content":"     * @return {@code Task} object represented by the line"},{"lineNumber":116,"author":{"gitId":"benclmnt"},"content":"     * @throws StorageException on parse error"},{"lineNumber":117,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"benclmnt"},"content":"    private Task parseStorageData(String line) throws StorageException {"},{"lineNumber":119,"author":{"gitId":"benclmnt"},"content":"        // split by the pipe `|` token"},{"lineNumber":120,"author":{"gitId":"benclmnt"},"content":"        String[] tokens \u003d line.split(\"(\\\\s)*(\\\\|)(\\\\s)*\");"},{"lineNumber":121,"author":{"gitId":"benclmnt"},"content":"        Task task;"},{"lineNumber":122,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":123,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":124,"author":{"gitId":"benclmnt"},"content":"            switch (tokens[0]) {"},{"lineNumber":125,"author":{"gitId":"benclmnt"},"content":"            case \"T\":"},{"lineNumber":126,"author":{"gitId":"benclmnt"},"content":"                task \u003d new Todo(tokens[2]);"},{"lineNumber":127,"author":{"gitId":"benclmnt"},"content":"                break;"},{"lineNumber":128,"author":{"gitId":"benclmnt"},"content":"            case \"D\":"},{"lineNumber":129,"author":{"gitId":"benclmnt"},"content":"                task \u003d Deadline.create(tokens[2], tokens[3]);"},{"lineNumber":130,"author":{"gitId":"benclmnt"},"content":"                break;"},{"lineNumber":131,"author":{"gitId":"benclmnt"},"content":"            case \"E\":"},{"lineNumber":132,"author":{"gitId":"benclmnt"},"content":"                task \u003d Event.create(tokens[2], tokens[3]);"},{"lineNumber":133,"author":{"gitId":"benclmnt"},"content":"                break;"},{"lineNumber":134,"author":{"gitId":"benclmnt"},"content":"            default:"},{"lineNumber":135,"author":{"gitId":"benclmnt"},"content":"                throw new StorageException(\"Unknown task identifier \" + tokens[0] + \"! Skipping...\");"},{"lineNumber":136,"author":{"gitId":"benclmnt"},"content":"            }"},{"lineNumber":137,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":138,"author":{"gitId":"benclmnt"},"content":"            if (tokens[1].equals(\"1\")) {"},{"lineNumber":139,"author":{"gitId":"benclmnt"},"content":"                task.markAsDone();"},{"lineNumber":140,"author":{"gitId":"benclmnt"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":142,"author":{"gitId":"benclmnt"},"content":"            return task;"},{"lineNumber":143,"author":{"gitId":"benclmnt"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":144,"author":{"gitId":"benclmnt"},"content":"            throw new StorageException(\"Data\" + line + \"in wrong format! Skipping...\");"},{"lineNumber":145,"author":{"gitId":"benclmnt"},"content":"        } catch (EventInvalidUsageException | DeadlineInvalidUsageException ex) {"},{"lineNumber":146,"author":{"gitId":"benclmnt"},"content":"            throw new StorageException(ex.getMessage());"},{"lineNumber":147,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":149}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import java.util.stream.Collectors;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"import task.Deadline;"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"import task.Event;"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"import task.Task;"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":" * Represents a {@code Tasklist} object to store tasks in memory"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"public class TaskList {"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"    private final List\u003cTask\u003e taskList;"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"    public TaskList(List\u003cTask\u003e taskList) {"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"     * Add a task into taskList at the end"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"     * @param task to be added"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"     * @return the task added"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"    public Task add(Task task) {"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"        taskList.add(task);"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"        return task;"},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"     * Add a task into taskList at a specific index"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":"     * @param task  to be added"},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"     * @param index where to put task in taskList"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":"     * @return the task added"},{"lineNumber":38,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"benclmnt"},"content":"    public Task add(Task task, int index) {"},{"lineNumber":40,"author":{"gitId":"benclmnt"},"content":"        taskList.add(index, task);"},{"lineNumber":41,"author":{"gitId":"benclmnt"},"content":"        return task;"},{"lineNumber":42,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":44,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"benclmnt"},"content":"     * Removes a specific task based on task number"},{"lineNumber":46,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"benclmnt"},"content":"     * @param taskNumber task index"},{"lineNumber":48,"author":{"gitId":"benclmnt"},"content":"     * @return removed task"},{"lineNumber":49,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"benclmnt"},"content":"    public Task remove(int taskNumber) {"},{"lineNumber":51,"author":{"gitId":"benclmnt"},"content":"        return taskList.remove(taskNumber);"},{"lineNumber":52,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":54,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"benclmnt"},"content":"     * Marks a task as done"},{"lineNumber":56,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"benclmnt"},"content":"     * @param taskNumber task index"},{"lineNumber":58,"author":{"gitId":"benclmnt"},"content":"     * @return updated task"},{"lineNumber":59,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"benclmnt"},"content":"    public Task markAsDone(int taskNumber) {"},{"lineNumber":61,"author":{"gitId":"benclmnt"},"content":"        taskList.get(taskNumber).markAsDone();"},{"lineNumber":62,"author":{"gitId":"benclmnt"},"content":"        return taskList.get(taskNumber);"},{"lineNumber":63,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":65,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"benclmnt"},"content":"     * Show task description"},{"lineNumber":67,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"benclmnt"},"content":"     * @param taskNumber task index"},{"lineNumber":69,"author":{"gitId":"benclmnt"},"content":"     * @return string description of task showing status, type and task description"},{"lineNumber":70,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"benclmnt"},"content":"    public String show(int taskNumber) {"},{"lineNumber":72,"author":{"gitId":"benclmnt"},"content":"        return taskList.get(taskNumber).showTask();"},{"lineNumber":73,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":75,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"benclmnt"},"content":"     * Get all tasks stored"},{"lineNumber":77,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"benclmnt"},"content":"     * @return list of tasks stored"},{"lineNumber":79,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"benclmnt"},"content":"    public List\u003cTask\u003e getAll() {"},{"lineNumber":81,"author":{"gitId":"benclmnt"},"content":"        return this.taskList;"},{"lineNumber":82,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":84,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"benclmnt"},"content":"     * Get number of tasks stored"},{"lineNumber":86,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"benclmnt"},"content":"     * @return size of taskList"},{"lineNumber":88,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"benclmnt"},"content":"    public int size() {"},{"lineNumber":90,"author":{"gitId":"benclmnt"},"content":"        return this.taskList.size();"},{"lineNumber":91,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":93,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"benclmnt"},"content":"     * Returns a task list containing all tasks on the date"},{"lineNumber":95,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"benclmnt"},"content":"     * @param date date in ISO-8601 format"},{"lineNumber":97,"author":{"gitId":"benclmnt"},"content":"     * @return all tasks on 1 date"},{"lineNumber":98,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"benclmnt"},"content":"    public TaskList viewAllOnDate(LocalDate date) {"},{"lineNumber":100,"author":{"gitId":"benclmnt"},"content":"        return new TaskList("},{"lineNumber":101,"author":{"gitId":"benclmnt"},"content":"                this.taskList"},{"lineNumber":102,"author":{"gitId":"benclmnt"},"content":"                        .stream()"},{"lineNumber":103,"author":{"gitId":"benclmnt"},"content":"                        .filter(x -\u003e ("},{"lineNumber":104,"author":{"gitId":"benclmnt"},"content":"                                x instanceof Event \u0026\u0026 ((Event) x).getDate().equals(date))"},{"lineNumber":105,"author":{"gitId":"benclmnt"},"content":"                                || (x instanceof Deadline \u0026\u0026 ((Deadline) x).getDate().equals(date)))"},{"lineNumber":106,"author":{"gitId":"benclmnt"},"content":"                        .collect(Collectors.toList()));"},{"lineNumber":107,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":109,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"benclmnt"},"content":"     * Find all tasks that contain a specific keyword"},{"lineNumber":111,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"benclmnt"},"content":"     * @param keyword user-inputted keyword"},{"lineNumber":113,"author":{"gitId":"benclmnt"},"content":"     * @return a Tasklist containing all tasks that contain a specific keyword"},{"lineNumber":114,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"benclmnt"},"content":"    public TaskList find(String keyword) {"},{"lineNumber":116,"author":{"gitId":"benclmnt"},"content":"        return new TaskList("},{"lineNumber":117,"author":{"gitId":"benclmnt"},"content":"                this.taskList"},{"lineNumber":118,"author":{"gitId":"benclmnt"},"content":"                        .stream()"},{"lineNumber":119,"author":{"gitId":"benclmnt"},"content":"                        .filter(x -\u003e x.getDescription().contains(keyword))"},{"lineNumber":120,"author":{"gitId":"benclmnt"},"content":"                        .collect(Collectors.toList()));"},{"lineNumber":121,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":122}},{"path":"src/main/java/exception/DeadlineInvalidUsageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"public class DeadlineInvalidUsageException extends InvalidUsageException {"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"    public DeadlineInvalidUsageException(String message) {"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"    public String getMessage() {"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"        return super.getMessage() + \"\\n     Usage: deadline \u003cdeadline description\u003e /by \u003cdeadline date\u003e\";"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":12}},{"path":"src/main/java/exception/EventInvalidUsageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"public class EventInvalidUsageException extends InvalidUsageException {"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"    public EventInvalidUsageException(String message) {"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"    public String getMessage() {"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"        return super.getMessage() + \"\\n     Usage: event \u003cevent description\u003e /at \u003cevent date\u003e\";"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":12}},{"path":"src/main/java/exception/InvalidUsageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"public class InvalidUsageException extends Exception {"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"    public InvalidUsageException(String message) {"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"        super(\"     \" + message);"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"    public String getMessage() {"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"        return \"Invalid usage!\\n\" + super.getMessage();"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":12}},{"path":"src/main/java/exception/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"public class StorageException extends Exception {"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"    public StorageException(String message) {"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"        super(\"StorageException: \" + message);"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":7}},{"path":"src/main/java/exception/TodoInvalidUsageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"public class TodoInvalidUsageException extends InvalidUsageException {"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"    public TodoInvalidUsageException(String message) {"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"    public String getMessage() {"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"        return super.getMessage() + \"\\n     Usage: todo \u003ctodo description\u003e\";"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":12}},{"path":"src/main/java/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"public class UnknownCommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"        return \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":8}},{"path":"src/main/java/exception/UpdateInvalidUsageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"public class UpdateInvalidUsageException extends InvalidUsageException {"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"    public UpdateInvalidUsageException(String message) {"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"    public String getMessage() {"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"        return super.getMessage() + \"\\n     Usage: Update \u003ctasknumber\u003e [/t \u003cdate\u003e] [/d \u003cdescription\u003e]\";"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":12}},{"path":"src/main/java/exception/ViewallInvalidUsageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"public class ViewallInvalidUsageException extends InvalidUsageException {"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"    public ViewallInvalidUsageException(String message) {"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"    public String getMessage() {"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"        return super.getMessage() + \"\\n     Usage: Viewall \u003cdate\u003e\";"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":12}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"import exception.DeadlineInvalidUsageException;"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"    protected LocalDate by;"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"     * Represents a deadline object"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"     * @param description deadline description"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"     * @param by          deadline date"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"        this.by \u003d by;"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"     * Factory method for {@code Deadline} object"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"     * @param deadline deadline description"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"     * @param by       deadline date in ISO-8601 format"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"     * @return the Deadline object"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"     * @throws DeadlineInvalidUsageException on empty description or wrong date format"},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"    public static Deadline create(String deadline, String by) throws DeadlineInvalidUsageException {"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"        if (deadline.equals(\"\")) {"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"            throw new DeadlineInvalidUsageException(\"Deadline description cannot be empty.\");"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":"            return new Deadline(deadline, parseDate(by));"},{"lineNumber":38,"author":{"gitId":"benclmnt"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":39,"author":{"gitId":"benclmnt"},"content":"            throw new DeadlineInvalidUsageException(\"Deadline date must be of the form yyyy-mm-dd.\");"},{"lineNumber":40,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":43,"author":{"gitId":"benclmnt"},"content":"    private static LocalDate parseDate(String str) {"},{"lineNumber":44,"author":{"gitId":"benclmnt"},"content":"        return LocalDate.parse(str);"},{"lineNumber":45,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":47,"author":{"gitId":"benclmnt"},"content":"    private static String showDate(LocalDate date) {"},{"lineNumber":48,"author":{"gitId":"benclmnt"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d, yyyy\"));"},{"lineNumber":49,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":51,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"benclmnt"},"content":"     * Show task\u0027s name and status"},{"lineNumber":53,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"benclmnt"},"content":"     * @return a string that represents the task"},{"lineNumber":55,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"benclmnt"},"content":"    public String showTask() {"},{"lineNumber":58,"author":{"gitId":"benclmnt"},"content":"        return String.format(\"[%s]%s (by: %s)\", this.getType(), super.showTask(), showDate(this.by));"},{"lineNumber":59,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":61,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"benclmnt"},"content":"    public String getType() {"},{"lineNumber":63,"author":{"gitId":"benclmnt"},"content":"        return \"D\";"},{"lineNumber":64,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":66,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"benclmnt"},"content":"    public String getStorageDescription() {"},{"lineNumber":68,"author":{"gitId":"benclmnt"},"content":"        return super.getDescription() + \" | \" + this.by;"},{"lineNumber":69,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":71,"author":{"gitId":"benclmnt"},"content":"    public LocalDate getDate() {"},{"lineNumber":72,"author":{"gitId":"benclmnt"},"content":"        return this.by;"},{"lineNumber":73,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":74}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"import exception.EventInvalidUsageException;"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":" * Represents an {@code Event} object. Inherits from {@code Task} object"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"public class Event extends Task {"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"    protected LocalDate at;"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"     * Represents an Event Object"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"     * @param description event description"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"     * @param at          event date"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"    public Event(String description, LocalDate at) {"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"        super(description);"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"        this.at \u003d at;"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"     * Factory method for {@code Event} object"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"     * @param event event description"},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"     * @param at    event date in ISO-8601 format"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"     * @return the Event object"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"     * @throws EventInvalidUsageException on empty description or wrong date format"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":"    public static Event create(String event, String at) throws EventInvalidUsageException {"},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":"        if (event.equals(\"\")) {"},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"            throw new EventInvalidUsageException(\"Event description cannot be empty.\");"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":39,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"benclmnt"},"content":"            return new Event(event, parseDate(at));"},{"lineNumber":41,"author":{"gitId":"benclmnt"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":42,"author":{"gitId":"benclmnt"},"content":"            throw new EventInvalidUsageException(\"Event date must be of the form yyyy-mm-dd.\");"},{"lineNumber":43,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":46,"author":{"gitId":"benclmnt"},"content":"    private static LocalDate parseDate(String str) {"},{"lineNumber":47,"author":{"gitId":"benclmnt"},"content":"        return LocalDate.parse(str);"},{"lineNumber":48,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":50,"author":{"gitId":"benclmnt"},"content":"    private static String showDate(LocalDate date) {"},{"lineNumber":51,"author":{"gitId":"benclmnt"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d, yyyy\"));"},{"lineNumber":52,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":54,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"benclmnt"},"content":"     * Show task\u0027s name and status"},{"lineNumber":56,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"benclmnt"},"content":"     * @return a string that represents the task"},{"lineNumber":58,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"benclmnt"},"content":"    public String showTask() {"},{"lineNumber":61,"author":{"gitId":"benclmnt"},"content":"        return String.format(\"[%s]%s (at: %s)\", this.getType(), super.showTask(), showDate(this.at));"},{"lineNumber":62,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":64,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"benclmnt"},"content":"    public String getType() {"},{"lineNumber":66,"author":{"gitId":"benclmnt"},"content":"        return \"E\";"},{"lineNumber":67,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":69,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":70,"author":{"gitId":"benclmnt"},"content":"    public String getStorageDescription() {"},{"lineNumber":71,"author":{"gitId":"benclmnt"},"content":"        return super.getDescription() + \" | \" + this.at;"},{"lineNumber":72,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":74,"author":{"gitId":"benclmnt"},"content":"    public LocalDate getDate() {"},{"lineNumber":75,"author":{"gitId":"benclmnt"},"content":"        return this.at;"},{"lineNumber":76,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":77}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"    protected String name;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"    Task(String name) {"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"        this.name \u003d name;"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"     * Show task\u0027s name and status"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"     * @return a string that represents the task"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"    public String showTask() {"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), this.name);"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"    public boolean getStatus() {"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"        return this.isDone;"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"    public String getDescription() {"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"        return this.name;"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"    public String getStorageDescription() {"},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"        return this.name;"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"    public abstract String getType();"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"     * Mark the task as done"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"benclmnt"},"content":"     * @return true if it is not done before, otherwise false"},{"lineNumber":39,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"benclmnt"},"content":"    public boolean markAsDone() {"},{"lineNumber":41,"author":{"gitId":"benclmnt"},"content":"        if (this.isDone) {"},{"lineNumber":42,"author":{"gitId":"benclmnt"},"content":"            return false;"},{"lineNumber":43,"author":{"gitId":"benclmnt"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"benclmnt"},"content":"            this.isDone \u003d true;"},{"lineNumber":45,"author":{"gitId":"benclmnt"},"content":"            return true;"},{"lineNumber":46,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":49,"author":{"gitId":"benclmnt"},"content":"    //    private String getStatusIcon() {"},{"lineNumber":50,"author":{"gitId":"benclmnt"},"content":"    //        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":51,"author":{"gitId":"benclmnt"},"content":"    //    }"},{"lineNumber":52,"author":{"gitId":"benclmnt"},"content":"    private String getStatusIcon() {"},{"lineNumber":53,"author":{"gitId":"benclmnt"},"content":"        return (isDone ? \"V\" : \"X\"); //return tick or X symbols"},{"lineNumber":54,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":56,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":57,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":57}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"     * Show task\u0027s name and status"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"     * @return a string that represents the task"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"    public String showTask() {"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"        return String.format(\"[%s]%s\", this.getType(), super.showTask());"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"    public String getType() {"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"        return \"T\";"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":23}},{"path":"src/main/java/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.text.Font;"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.text.TextAlignment;"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":" * containing text from the speaker."},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"public class DialogBox extends HBox {"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"    private Label dialog;"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"    private ImageView displayPicture;"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":"            fxmlLoader.load();"},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":40,"author":{"gitId":"benclmnt"},"content":"        dialog.setText(text);"},{"lineNumber":41,"author":{"gitId":"benclmnt"},"content":"        dialog.setLineSpacing(1.15);"},{"lineNumber":42,"author":{"gitId":"benclmnt"},"content":"        dialog.setTranslateX(-5);"},{"lineNumber":43,"author":{"gitId":"benclmnt"},"content":"        dialog.setTextAlignment(TextAlignment.RIGHT);"},{"lineNumber":44,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":45,"author":{"gitId":"benclmnt"},"content":"        displayPicture.setImage(img);"},{"lineNumber":46,"author":{"gitId":"benclmnt"},"content":"        displayPicture.setClip(new Circle(50, 50, 49));"},{"lineNumber":47,"author":{"gitId":"benclmnt"},"content":"        this.setTranslateX(40);"},{"lineNumber":48,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":50,"author":{"gitId":"benclmnt"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"benclmnt"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":54,"author":{"gitId":"benclmnt"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"benclmnt"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"benclmnt"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"benclmnt"},"content":"        db.setTranslateX(0);"},{"lineNumber":58,"author":{"gitId":"benclmnt"},"content":"        db.dialog.setStyle(\"-fx-background-radius: 0px 10px 10px 10px\");"},{"lineNumber":59,"author":{"gitId":"benclmnt"},"content":"        db.dialog.setTranslateX(5);"},{"lineNumber":60,"author":{"gitId":"benclmnt"},"content":"        db.dialog.setTextAlignment(TextAlignment.LEFT);"},{"lineNumber":61,"author":{"gitId":"benclmnt"},"content":"        db.dialog.setFont(Font.font(\"monospace\", 13));"},{"lineNumber":62,"author":{"gitId":"benclmnt"},"content":"        return db;"},{"lineNumber":63,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":65,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"benclmnt"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":67,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"benclmnt"},"content":"    private void flip() {"},{"lineNumber":69,"author":{"gitId":"benclmnt"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":70,"author":{"gitId":"benclmnt"},"content":"        Collections.reverse(tmp);"},{"lineNumber":71,"author":{"gitId":"benclmnt"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":72,"author":{"gitId":"benclmnt"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":73,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":74}},{"path":"src/main/java/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"    private Duke duke;"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"        duke \u003d d;"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":38,"author":{"gitId":"benclmnt"},"content":"                DialogBox.getDukeDialog(duke.onStart(), dukeImage)"},{"lineNumber":39,"author":{"gitId":"benclmnt"},"content":"        );"},{"lineNumber":40,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":42,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"benclmnt"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":44,"author":{"gitId":"benclmnt"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":45,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"benclmnt"},"content":"    @FXML"},{"lineNumber":47,"author":{"gitId":"benclmnt"},"content":"    private void handleUserInput() {"},{"lineNumber":48,"author":{"gitId":"benclmnt"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":49,"author":{"gitId":"benclmnt"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":50,"author":{"gitId":"benclmnt"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":51,"author":{"gitId":"benclmnt"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":52,"author":{"gitId":"benclmnt"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":53,"author":{"gitId":"benclmnt"},"content":"        );"},{"lineNumber":54,"author":{"gitId":"benclmnt"},"content":"        userInput.clear();"},{"lineNumber":55,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":56}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":" * Represents the text ui interface"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":" */"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"    private Scanner sc;"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"    public Ui() {"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"     * Read user commands"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"     * @return user command"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"    public String readCommand() {"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"        if (sc.hasNext()) {"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"            return sc.nextLine();"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":"            return \"\";"},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"     * Prints chatbot response"},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"     * @param message chatbot response"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"    public void print(String message) {"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":"        System.out.print(\"     \");"},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":"        System.out.println(message);"},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":38,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"benclmnt"},"content":"     * Build line separator"},{"lineNumber":40,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"benclmnt"},"content":"    public void buildChatFence() {"},{"lineNumber":42,"author":{"gitId":"benclmnt"},"content":"        print(\"----------------------------------------\");"},{"lineNumber":43,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":45,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"benclmnt"},"content":"     * Show welcome message"},{"lineNumber":47,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"benclmnt"},"content":"    public String showWelcomeMessage() {"},{"lineNumber":49,"author":{"gitId":"benclmnt"},"content":"        buildChatFence();"},{"lineNumber":50,"author":{"gitId":"benclmnt"},"content":"        print(\"Hellowww!! I\u0027m Alexa, your personal todo manager!\");"},{"lineNumber":51,"author":{"gitId":"benclmnt"},"content":"        print(\"How can I help you today?\");"},{"lineNumber":52,"author":{"gitId":"benclmnt"},"content":"        buildChatFence();"},{"lineNumber":53,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":54,"author":{"gitId":"benclmnt"},"content":"        return \"Hellowww!! I\u0027m Alexa, your personal todo manager!\\nHow can I help you today?\";"},{"lineNumber":55,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":57,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"benclmnt"},"content":"     * Show close message"},{"lineNumber":59,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"benclmnt"},"content":"    public String showCloseMessage() {"},{"lineNumber":61,"author":{"gitId":"benclmnt"},"content":"        print(\"Bye? I hope it\u0027s not forever! Come back soon!\");"},{"lineNumber":62,"author":{"gitId":"benclmnt"},"content":"        return \"Bye? I hope it\u0027s not forever! Come back soon!\";"},{"lineNumber":63,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":65,"author":{"gitId":"benclmnt"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"benclmnt"},"content":"     * Show message when user adds a new todo, deadline or event"},{"lineNumber":67,"author":{"gitId":"benclmnt"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"benclmnt"},"content":"     * @param message string to print"},{"lineNumber":69,"author":{"gitId":"benclmnt"},"content":"     * @param size    task list current size"},{"lineNumber":70,"author":{"gitId":"benclmnt"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"benclmnt"},"content":"    public String printAddConfirmation(String message, int size) {"},{"lineNumber":72,"author":{"gitId":"benclmnt"},"content":"        print(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":73,"author":{"gitId":"benclmnt"},"content":"        print(message);"},{"lineNumber":74,"author":{"gitId":"benclmnt"},"content":"        print(String.format(\"Now you have %d %s in the list\", size, size \u003e 1 ? \"tasks\" : \"task\"));"},{"lineNumber":75,"author":{"gitId":"benclmnt"},"content":"        return \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":76,"author":{"gitId":"benclmnt"},"content":"                + message + \"\\n\""},{"lineNumber":77,"author":{"gitId":"benclmnt"},"content":"                + String.format(\"Now you have %d %s in the list\", size, size \u003e 1 ? \"tasks\" : \"task\");"},{"lineNumber":78,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":79}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\""},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"         maxWidth\u003d\"1.7976931348623157E308\""},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"         prefWidth\u003d\"350.0\""},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"         styleClass\u003d\"responseContainer\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"\u003e"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"    \u003cpadding\u003e"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"    \u003c/padding\u003e"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"    \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"dialog\" minHeight\u003d\"-Infinity\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\""},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"               styleClass\u003d\"displayPicture\"/\u003e"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"benclmnt":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\""},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"            minWidth\u003d\"-Infinity\""},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"            fx:controller\u003d\"ui.MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"                vvalue\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"benclmnt":20}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"import command.ByeCommand;"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"import command.Command;"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"import command.DeadlineCommand;"},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"import command.DeleteCommand;"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"import command.DoneCommand;"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":"import command.EventCommand;"},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"import command.ListCommand;"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"import command.TodoCommand;"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":"import command.ViewallCommand;"},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"import exception.DeadlineInvalidUsageException;"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"import exception.EventInvalidUsageException;"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"import exception.InvalidUsageException;"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"import exception.UnknownCommandException;"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"import exception.ViewallInvalidUsageException;"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"public class ParserTest {"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"    void unknownCommand_exceptionThrown() {"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"test\";"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"            Command c \u003d Parser.parseCommand(input);"},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"            assertTrue(ex instanceof UnknownCommandException);"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"    public void parseBye_success() {"},{"lineNumber":37,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"bye\";"},{"lineNumber":38,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"benclmnt"},"content":"            assertTrue(Parser.parseCommand(input) instanceof ByeCommand);"},{"lineNumber":40,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":41,"author":{"gitId":"benclmnt"},"content":"            fail(\"Exception should not be thrown\");"},{"lineNumber":42,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":45,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"benclmnt"},"content":"    public void parseList_success() {"},{"lineNumber":47,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"list\";"},{"lineNumber":48,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"benclmnt"},"content":"            assertTrue(Parser.parseCommand(input) instanceof ListCommand);"},{"lineNumber":50,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":51,"author":{"gitId":"benclmnt"},"content":"            fail(\"Exception should not be thrown\");"},{"lineNumber":52,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":55,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":56,"author":{"gitId":"benclmnt"},"content":"    public void parseDone_success() {"},{"lineNumber":57,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"done 1\";"},{"lineNumber":58,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"benclmnt"},"content":"            assertTrue(Parser.parseCommand(input) instanceof DoneCommand);"},{"lineNumber":60,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":61,"author":{"gitId":"benclmnt"},"content":"            fail(\"Exception should not be thrown\");"},{"lineNumber":62,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":65,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":66,"author":{"gitId":"benclmnt"},"content":"    public void parseDone_missingTaskNumber_exceptionThrown() {"},{"lineNumber":67,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"done\";"},{"lineNumber":68,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"benclmnt"},"content":"            Command c \u003d Parser.parseCommand(input);"},{"lineNumber":70,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":71,"author":{"gitId":"benclmnt"},"content":"            assertTrue(ex instanceof InvalidUsageException);"},{"lineNumber":72,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":75,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"benclmnt"},"content":"    public void parseDone_invalidTaskNumber_exceptionThrown() {"},{"lineNumber":77,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"done asdf\";"},{"lineNumber":78,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":79,"author":{"gitId":"benclmnt"},"content":"            Command c \u003d Parser.parseCommand(input);"},{"lineNumber":80,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":81,"author":{"gitId":"benclmnt"},"content":"            assertTrue(ex instanceof InvalidUsageException);"},{"lineNumber":82,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":85,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":86,"author":{"gitId":"benclmnt"},"content":"    public void parseDelete_success() {"},{"lineNumber":87,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"delete 1\";"},{"lineNumber":88,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"benclmnt"},"content":"            assertTrue(Parser.parseCommand(input) instanceof DeleteCommand);"},{"lineNumber":90,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":91,"author":{"gitId":"benclmnt"},"content":"            fail(\"Exception should not be thrown\");"},{"lineNumber":92,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":95,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":96,"author":{"gitId":"benclmnt"},"content":"    public void parseDelete_missingTaskNumber_exceptionThrown() {"},{"lineNumber":97,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"delete\";"},{"lineNumber":98,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":99,"author":{"gitId":"benclmnt"},"content":"            Command c \u003d Parser.parseCommand(input);"},{"lineNumber":100,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":101,"author":{"gitId":"benclmnt"},"content":"            assertTrue(ex instanceof InvalidUsageException);"},{"lineNumber":102,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":105,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":106,"author":{"gitId":"benclmnt"},"content":"    public void parseDelete_invalidTaskNumber_exceptionThrown() {"},{"lineNumber":107,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"delete asdf\";"},{"lineNumber":108,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":109,"author":{"gitId":"benclmnt"},"content":"            Command c \u003d Parser.parseCommand(input);"},{"lineNumber":110,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":111,"author":{"gitId":"benclmnt"},"content":"            assertTrue(ex instanceof InvalidUsageException);"},{"lineNumber":112,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":115,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":116,"author":{"gitId":"benclmnt"},"content":"    public void parseTodo_success() {"},{"lineNumber":117,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"todo return book\";"},{"lineNumber":118,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":119,"author":{"gitId":"benclmnt"},"content":"            assertTrue(Parser.parseCommand(input) instanceof TodoCommand);"},{"lineNumber":120,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":121,"author":{"gitId":"benclmnt"},"content":"            fail(\"Exception should not be thrown\");"},{"lineNumber":122,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":125,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":126,"author":{"gitId":"benclmnt"},"content":"    public void parseTodo_missingDescription_exceptionThrown() {"},{"lineNumber":127,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"todo\";"},{"lineNumber":128,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":129,"author":{"gitId":"benclmnt"},"content":"            Command c \u003d Parser.parseCommand(input);"},{"lineNumber":130,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":131,"author":{"gitId":"benclmnt"},"content":"            assertTrue(ex instanceof InvalidUsageException);"},{"lineNumber":132,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":135,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":136,"author":{"gitId":"benclmnt"},"content":"    public void parseEvent_success() {"},{"lineNumber":137,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"event my birthday /at 2020-08-25\";"},{"lineNumber":138,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":139,"author":{"gitId":"benclmnt"},"content":"            assertTrue(Parser.parseCommand(input) instanceof EventCommand);"},{"lineNumber":140,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":141,"author":{"gitId":"benclmnt"},"content":"            fail(\"Exception should not be thrown\");"},{"lineNumber":142,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":145,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":146,"author":{"gitId":"benclmnt"},"content":"    public void parseEvent_missingDate_exceptionThrown() {"},{"lineNumber":147,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"event my birthday /at\";"},{"lineNumber":148,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":149,"author":{"gitId":"benclmnt"},"content":"            Command c \u003d Parser.parseCommand(input);"},{"lineNumber":150,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":151,"author":{"gitId":"benclmnt"},"content":"            assertTrue(ex instanceof EventInvalidUsageException);"},{"lineNumber":152,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":155,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":156,"author":{"gitId":"benclmnt"},"content":"    public void parseEvent_wrongDateSeparator_exceptionThrown() {"},{"lineNumber":157,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"event my birthday /by 2020-08-25\";"},{"lineNumber":158,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":159,"author":{"gitId":"benclmnt"},"content":"            Command c \u003d Parser.parseCommand(input);"},{"lineNumber":160,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":161,"author":{"gitId":"benclmnt"},"content":"            assertTrue(ex instanceof EventInvalidUsageException);"},{"lineNumber":162,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":165,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":166,"author":{"gitId":"benclmnt"},"content":"    public void parseEvent_wrongDateFormat_exceptionThrown() {"},{"lineNumber":167,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"event my birthday /at 25/08/2020\";"},{"lineNumber":168,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":169,"author":{"gitId":"benclmnt"},"content":"            Command c \u003d Parser.parseCommand(input);"},{"lineNumber":170,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":171,"author":{"gitId":"benclmnt"},"content":"            assertTrue(ex instanceof EventInvalidUsageException);"},{"lineNumber":172,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":175,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":176,"author":{"gitId":"benclmnt"},"content":"    public void parseDeadline_success() {"},{"lineNumber":177,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"deadline finish level 6 /by 2020-08-25\";"},{"lineNumber":178,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":179,"author":{"gitId":"benclmnt"},"content":"            assertTrue(Parser.parseCommand(input) instanceof DeadlineCommand);"},{"lineNumber":180,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":181,"author":{"gitId":"benclmnt"},"content":"            fail(\"Exception should not be thrown\");"},{"lineNumber":182,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":185,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":186,"author":{"gitId":"benclmnt"},"content":"    public void parseDeadline_missingDate_exceptionThrown() {"},{"lineNumber":187,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"deadline finish level 6 /by\";"},{"lineNumber":188,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":189,"author":{"gitId":"benclmnt"},"content":"            Command c \u003d Parser.parseCommand(input);"},{"lineNumber":190,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":191,"author":{"gitId":"benclmnt"},"content":"            assertTrue(ex instanceof DeadlineInvalidUsageException);"},{"lineNumber":192,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":195,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":196,"author":{"gitId":"benclmnt"},"content":"    public void parseDeadline_wrongDateSeparator_exceptionThrown() {"},{"lineNumber":197,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"deadline finish level 6 /at\";"},{"lineNumber":198,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":199,"author":{"gitId":"benclmnt"},"content":"            Command c \u003d Parser.parseCommand(input);"},{"lineNumber":200,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":201,"author":{"gitId":"benclmnt"},"content":"            assertTrue(ex instanceof DeadlineInvalidUsageException);"},{"lineNumber":202,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":203,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":205,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":206,"author":{"gitId":"benclmnt"},"content":"    public void parseDeadline_wrongDateFormat_exceptionThrown() {"},{"lineNumber":207,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"deadline finish level 6 /at 19/08/2020\";"},{"lineNumber":208,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":209,"author":{"gitId":"benclmnt"},"content":"            Command c \u003d Parser.parseCommand(input);"},{"lineNumber":210,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":211,"author":{"gitId":"benclmnt"},"content":"            assertTrue(ex instanceof DeadlineInvalidUsageException);"},{"lineNumber":212,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":215,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":216,"author":{"gitId":"benclmnt"},"content":"    public void parseViewAll_success() {"},{"lineNumber":217,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"viewall 2020-08-20\";"},{"lineNumber":218,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":219,"author":{"gitId":"benclmnt"},"content":"            assertTrue(Parser.parseCommand(input) instanceof ViewallCommand);"},{"lineNumber":220,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":221,"author":{"gitId":"benclmnt"},"content":"            fail(\"Exception should not be thrown\");"},{"lineNumber":222,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":223,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":225,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":226,"author":{"gitId":"benclmnt"},"content":"    public void parseViewAll_wrongDateFormat_exceptionThrown() {"},{"lineNumber":227,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"viewall 2020-08-20\";"},{"lineNumber":228,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":229,"author":{"gitId":"benclmnt"},"content":"            Command c \u003d Parser.parseCommand(input);"},{"lineNumber":230,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":231,"author":{"gitId":"benclmnt"},"content":"            assertTrue(ex instanceof ViewallInvalidUsageException);"},{"lineNumber":232,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":233,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":234,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":235,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":236,"author":{"gitId":"benclmnt"},"content":"    public void parseViewAll_missingDate_exceptionThrown() {"},{"lineNumber":237,"author":{"gitId":"benclmnt"},"content":"        String input \u003d \"viewall\";"},{"lineNumber":238,"author":{"gitId":"benclmnt"},"content":"        try {"},{"lineNumber":239,"author":{"gitId":"benclmnt"},"content":"            Command c \u003d Parser.parseCommand(input);"},{"lineNumber":240,"author":{"gitId":"benclmnt"},"content":"        } catch (Exception ex) {"},{"lineNumber":241,"author":{"gitId":"benclmnt"},"content":"            assertTrue(ex instanceof ViewallInvalidUsageException);"},{"lineNumber":242,"author":{"gitId":"benclmnt"},"content":"        }"},{"lineNumber":243,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":244}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":11,"author":{"gitId":"benclmnt"},"content":"import task.Task;"},{"lineNumber":12,"author":{"gitId":"benclmnt"},"content":"import task.Todo;"},{"lineNumber":13,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":14,"author":{"gitId":"benclmnt"},"content":"public class TaskListTest {"},{"lineNumber":15,"author":{"gitId":"benclmnt"},"content":"    private TaskList taskList;"},{"lineNumber":16,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":17,"author":{"gitId":"benclmnt"},"content":"    @BeforeEach"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"    public void initEach() {"},{"lineNumber":19,"author":{"gitId":"benclmnt"},"content":"        List\u003cTask\u003e task \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"benclmnt"},"content":"        task.add(new Todo(\"borrow book\"));"},{"lineNumber":21,"author":{"gitId":"benclmnt"},"content":"        task.add(new Todo(\"return book\"));"},{"lineNumber":22,"author":{"gitId":"benclmnt"},"content":"        taskList \u003d new TaskList(task);"},{"lineNumber":23,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":25,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"benclmnt"},"content":"    public void addTask() {"},{"lineNumber":27,"author":{"gitId":"benclmnt"},"content":"        taskList.add(new Todo(\"help a friend\"));"},{"lineNumber":28,"author":{"gitId":"benclmnt"},"content":"        assertEquals(taskList.size(), 3);"},{"lineNumber":29,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"benclmnt"},"content":""},{"lineNumber":31,"author":{"gitId":"benclmnt"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"benclmnt"},"content":"    public void removeTask() {"},{"lineNumber":33,"author":{"gitId":"benclmnt"},"content":"        taskList.remove(1);"},{"lineNumber":34,"author":{"gitId":"benclmnt"},"content":"        assertEquals(taskList.size(), 1);"},{"lineNumber":35,"author":{"gitId":"benclmnt"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"benclmnt"},"content":"}"}],"authorContributionMap":{"benclmnt":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benclmnt"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"benclmnt"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":3,"author":{"gitId":"benclmnt"},"content":"done 1"},{"lineNumber":4,"author":{"gitId":"benclmnt"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"benclmnt"},"content":"todo join sports club"},{"lineNumber":6,"author":{"gitId":"benclmnt"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"benclmnt"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"benclmnt"},"content":"delete 3"},{"lineNumber":9,"author":{"gitId":"benclmnt"},"content":"list"}],"authorContributionMap":{"benclmnt":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"benclmnt"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Main.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"benclmnt"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"benclmnt":2,"-":19}}]
