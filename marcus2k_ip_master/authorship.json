[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marcus2k": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import duke.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a Duke chat bot. A \u003ccode\u003eDuke\u003c/code\u003e object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * has a specific storage instance, a list of tasks, and"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * a user interface."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final TaskList list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        TaskList list1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            list1 \u003d this.storage.loadList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            System.out.println(\"Creating a new list instead...\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            // perhaps create the specified filePath and request for user confirmation?"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            list1 \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.list \u003d list1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        ui.printLogo();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                String query \u003d ui.readLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                Command c \u003d Parser.parse(query);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                c.execute(this.list, this.ui, this.storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                ui.printError(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Starts the Duke ChatBot with storage file at ./data/duke.txt."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // Duke chatBot \u003d new Duke(\"../data/duke.txt\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Duke chatBot \u003d new Duke(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        chatBot.run();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marcus2k": 54,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents an add command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Creates a new AddCommand instance."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param command type of task to be added."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param input description of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public AddCommand(String command, String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Executes the add command by processing the input TaskList, Ui, and Storage instances."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param list a TaskList containing all Duke\u0027s current tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param ui a user interface in charge of Duke\u0027s I/O."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param storage a storage system that handles .txt file manipulation."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Task task \u003d list.addTask(command, input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task: \\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        output +\u003d task;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        output +\u003d \"\\nNow you have \" + list.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        storage.updateTextFile(list);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        ui.printLine(output);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 36
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Checks if this object is an ExitCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if this is ExitCommand instance, else false."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public boolean isExit() { return false; }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Executes the command by processing the input TaskList, Ui, and Storage instances."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param list a TaskList containing all Duke\u0027s current tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param ui a user interface in charge of Duke\u0027s I/O."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param storage a storage system that handles .txt file manipulation."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public abstract void execute(TaskList list, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 23
    }
  },
  {
    "path": "src/main/java/duke/DateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a \"get tasks at a specific date\" command in Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class DateCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Creates a new DateCommand instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param dateString string representing date of tasks to be retrieved."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public DateCommand(String dateString) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"d-M-yyyy\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Executes the date command by processing the input TaskList, Ui, and Storage instances."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param list a TaskList containing all Duke\u0027s current tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param ui a user interface in charge of Duke\u0027s I/O."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param storage a storage system that handles .txt file manipulation."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String formattedDate \u003d this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        TaskList timedTasks \u003d list.getTimedTasks(this.date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String output \u003d \"Here are your tasks for \" + formattedDate + \":\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        output +\u003d timedTasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        ui.printLine(output);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 37
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a deadline containing a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Inherits from abstract class TimedTask."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class Deadline extends TimedTask {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Create a new Deadline instance."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param description describes the deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param datetime contains date and time info."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Deadline(String description, String datetime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(description, datetime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a text representation of object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * This is for purpose of storage in .txt file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String of .txt format"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected String getTxtFormat() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"deadline, \" + super.getTxtFormat() + \"/by\" + this.dateTime.format(Deadline.inputFormatter);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a string representation of object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"[D]\" + super.toString()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                + \" (by: \" + super.getDateTimeString() + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 40
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a delete command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Creates a new DeleteCommand instance."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param index index of task that was done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Executes the delete command by processing the input TaskList, Ui, and Storage instances."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param list a TaskList containing all Duke\u0027s current tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param ui a user interface in charge of Duke\u0027s I/O."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param storage a storage system that handles .txt file manipulation."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Task task \u003d list.deleteTask(this.index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String textOutput \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        textOutput +\u003d task;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        storage.updateTextFile(list);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        ui.printLine(textOutput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 32
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a done command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Creates a new DoneCommand instance."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param index index of task that was done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Executes the done command by processing the input TaskList, Ui, and Storage instances."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param list a TaskList containing all Duke\u0027s current tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param ui a user interface in charge of Duke\u0027s I/O."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param storage a storage system that handles .txt file manipulation."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Task task \u003d list.setDone(this.index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String textOutput \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        textOutput +\u003d task;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        storage.updateTextFile(list);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        ui.printLine(textOutput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 32
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents Exceptions specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 10
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a event containing a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Inherits from abstract class TimedTask."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class Event extends TimedTask {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Create a new Event instance."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param description describes the event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param datetime contains date and time info."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Event(String description, String datetime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(description, datetime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a text representation of object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * This is for purpose of storage in .txt file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String of .txt format"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected String getTxtFormat() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"event, \" + super.getTxtFormat() + \"/at\" + this.dateTime.format(Event.inputFormatter);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a string representation of object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                + \" (at: \" + super.getDateTimeString() + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 40
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents an exit command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Executes the exit command by processing the input TaskList, Ui, and Storage instances."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param list a TaskList containing all Duke\u0027s current tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param ui a user interface in charge of Duke\u0027s I/O."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param storage a storage system that handles .txt file manipulation."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 22
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        TaskList keywordTasks \u003d list.findTask(keyword);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String output \u003d \"Here are your tasks with keyword(s) \\\"\" + this.keyword + \"\\\" :\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        output +\u003d keywordTasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        ui.printLine(output);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 17
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a list command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Executes the list command by processing the input TaskList, Ui, and Storage instances."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param list a TaskList containing all Duke\u0027s current tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param ui a user interface in charge of Duke\u0027s I/O."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param storage a storage system that handles .txt file manipulation."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, your list is empty :\u003c\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String textOutput \u003d \"Here is the complete list of your task: \\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        textOutput +\u003d list.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        ui.printLine(textOutput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 23
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Responsible to make sense of user input in Duke and converts it to command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Takes in a user query string, and interprets it into commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param query user input query."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return Command instance."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public static Command parse(String query) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String[] queryArr \u003d query.split(\" \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // String command \u003d processArr[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // if command is not list/bye: String input \u003d processArr[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            switch (queryArr[0]) { // command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new DoneCommand(Integer.parseInt(queryArr[1]) - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(queryArr[1]) - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            case \"date\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new DateCommand(queryArr[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new FindCommand(queryArr[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new AddCommand(queryArr[0], queryArr[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"Sorry, which task number?\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, I don\u0027t know what that means :\u003c\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 43
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Handles storage, reading, and writing of tasks to .txt file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Instantiates a new storage object located at the input filePath string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param filePath location of storage file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Reads the tasks from the storage file, and returns a TaskList object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * containing the tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return TaskList containing tasks in storage file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if storage file not found."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public TaskList loadList() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            //this.file \u003d new File(\"../data/duke.txt\"); // for testcase running"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            this.file \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            Scanner sc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            while (sc.hasNext()) { // e.g. deadline, 1, description/by date"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                String[] arr \u003d sc.nextLine().split(\", \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                if (arr.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    list.addTask(arr[0], arr[2], arr[1].equals(\"1\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    throw new DukeException(\"Invalid text format in file.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"Sorry, \" + e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Overwrites the .txt file to contain the tasks in the input TaskList object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if file cannot be found / created / opened."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void updateTextFile(TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            StringBuilder text \u003d new StringBuilder();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                text.append(task.getTxtFormat());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                text.append(\"\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fw.write(text.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"Sorry, \" + e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 71
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Abstract class representing a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Constructor that initializes with description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param description task info."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Marks this task as done, and returns this task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return this Task object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected Task setDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a text representation of object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * This is for purpose of storage in .txt file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String of .txt format"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected String getTxtFormat() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return (this.isDone ? \"1, \" : \"0, \") + this.description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a string representation of object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String status \u003d (this.isDone) ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return status + \" \" + description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 54
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.lang.Iterable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Stores the list of task for the current Duke instance."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class TaskList implements Iterable\u003cTask\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns an iterator() of tasks in this TaskList object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return Tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Iterator\u003cTask\u003e iterator() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.list.iterator();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns number of tasks in this TaskList object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return size"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Instantiates a new TaskList object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns true if no tasks in this TaskList object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if empty, \u003ccode\u003efalse\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.list.isEmpty();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private TaskList(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.list \u003d arr;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Creates and adds a new task to the TaskList object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param type describing task type."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param input describing task information."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return Task object if successfully created and added."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if failed to add task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Task addTask(String type, String input) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.addTask(type, input, false);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Creates and adds a new task to the TaskList object."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param type describing task type."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param input describing task information."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param done describing status of task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return Task object if successfully created and added."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if failed to add task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Task addTask(String type, String input, boolean done) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            task \u003d new Todo(input);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            String[] arr \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                task \u003d new Deadline(arr[0].trim(), arr[1].trim());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, when is the deadline? (/by...)\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                throw new DukeException(\"Invalid date-time format! (/by...)\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            arr \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                task \u003d new Event(arr[0].trim(), arr[1].trim());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, when is the event? (/at...)\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                throw new DukeException(\"Invalid date-time format! (/at...)\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, I don\u0027t know what that means :\u003c\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (input.isEmpty()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, the description cannot be empty :\u003c\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        task \u003d done ? task.setDone() : task;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a TaskList containing TimedTask instances with the input date."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param date date of the timed-tasks we wish to retrieve."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return TaskList object if successfully retrieved."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if no tasks on the input date."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public TaskList getTimedTasks(LocalDate date) throws DukeException { // input of form \"dd-MM-yyyy\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            ArrayList\u003cTask\u003e timedTasks \u003d new ArrayList\u003c\u003e(this.list);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            timedTasks.removeIf(i -\u003e i instanceof Todo);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            Task[] timedTasksArr \u003d timedTasks.toArray(new Task[0]);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            for (Task i : timedTasksArr) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                assert i instanceof TimedTask;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                if (!((TimedTask) i).getDate().equals(date)) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    timedTasks.remove(i);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            if (timedTasks.isEmpty()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, no tasks on that date :\u003c\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new TaskList(timedTasks);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                //return new TaskList(new ArrayList\u003c\u003e(timedTasks));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"Invalid date-time format! (/at...)\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Sets the i-th task as done and returns the task"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param i index of the tasks that was done."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return Task if task is in this TaskList object."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if index out of bounds."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Task setDone(int i) throws DukeException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            return this.list.get(i).setDone();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, the task number is out of range :\u003c\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Deletes the i-th task and returns the task"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param i index of the tasks to be deleted."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return Task if task is in this TaskList object."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if index out of bounds."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Task deleteTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            return this.list.remove(i);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, the task number is out of range :\u003c\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a string representation of object."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String object."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        for (int i \u003d 0; i \u003c this.size(); i++) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            int taskNum \u003d i + 1;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            output.append(taskNum);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            output.append(\".\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            output.append(this.list.get(i).toString());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            output.append((i \u003d\u003d this.size() - 1) ? \"\" : \u0027\\n\u0027);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public TaskList findTask(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        ArrayList\u003cTask\u003e keywordTasks \u003d new ArrayList\u003c\u003e(this.list);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        keywordTasks.removeIf(i -\u003e i.getDescription().contains(keyword));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (keywordTasks.isEmpty()) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, no such keyword :\u003c\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return new TaskList(keywordTasks);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 200
    }
  },
  {
    "path": "src/main/java/duke/TimedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a timed task containing a description and date-time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Inherits from abstract class Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public abstract class TimedTask extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected static final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy k:mm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected static final DateTimeFormatter printFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh.mma\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * (Abstract) constructor to be called by concrete subclasses."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param description describes the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param datetime contains date and time info."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected TimedTask(String description, String datetime) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.dateTime \u003d LocalDateTime.parse(datetime, TimedTask.inputFormatter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a string representing date and time."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Format is \"dd MMM yyyy hh.mma\"."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return date and time string."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected String getDateTimeString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.dateTime.format(TimedTask.printFormatter);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a LocalDate object containing date info."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return LocalDate date."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected LocalDate getDate() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.dateTime.toLocalDate();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 46
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a to-do task containing a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Inherits from abstract class Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Instantiates a new to-do task with input as description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param description concise info of to-do task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a text representation of object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * This is for purpose of storage in .txt file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String of .txt format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String getTxtFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"todo, \" + super.getTxtFormat();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a string representation of object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 39
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Handles Duke\u0027s File I/O."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final String line \u003d \"------------------------------------------------------------\";;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Prints out the Duke logo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Prints out the welcome message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        System.out.println(this.line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Scans the input line from System.in and returns it."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String of trimmed input line."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String readLine() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.sc.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Prints out the input message to System.out."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param message message to be printed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void printLine(String message) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        System.out.println(this.line);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Prints out the farewell message."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Prints out the farewell message."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param exception exception to be printed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void printError(Exception exception) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.printLine(exception.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 68
    }
  },
  {
    "path": "src/test/java/duke/DeadlineStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class DeadlineStub extends TimedTask {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public DeadlineStub(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(description, \"9-08-2020 9:00\"); // dummy datetime string"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String[] arr \u003d description.split(\"/by\", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        arr[1] \u003d LocalDateTime.parse(arr[1].trim(), DeadlineStub.inputFormatter).format(DeadlineStub.printFormatter);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"[D]\" + \"[✗]\" + \" \" + arr[0].trim() + \" (by: \" + arr[1].trim() + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 17
    }
  },
  {
    "path": "src/test/java/duke/EventStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class EventStub extends TimedTask {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public EventStub(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(description, \"9-08-2020 7:00\"); // dummy datetime string"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String[] arr \u003d description.split(\"/at\", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        arr[1] \u003d LocalDateTime.parse(arr[1].trim(), EventStub.inputFormatter).format(EventStub.printFormatter);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"[E]\" + \"[✗]\" + \" \" + arr[0].trim() + \" (at: \" + arr[1].trim() + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 18
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void addTaskTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String listString \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        int size \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        assertEquals(\"\", list.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            task \u003d new TodoStub(\"abc\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            listString \u003d \"1.\" + task.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            list.addTask(\"todo\", \"abc\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            size++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            assertEquals(listString, list.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 2"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            task \u003d new EventStub(\"today/at8-09-2020 8:00\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            list.addTask(\"event\", \"today/at8-09-2020 8:00\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            listString +\u003d \u0027\\n\u0027 + \"2.\" + task.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            size++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            assertEquals(listString, list.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 3"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        for (int i \u003d 9; i \u003c 24; i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                task \u003d new DeadlineStub(\"lock/by9-10-2021 \" + i + \":00\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                list.addTask(\"deadline\", \"lock/by9-10-2021 \" + i + \":00\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                size++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                listString +\u003d \"\\n\" + size + \".\" + task.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                fail();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        assertEquals(listString, list.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 4"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        for (int i \u003d 1; i \u003c 10; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                task \u003d new EventStub(\"test/at9-10-2021 \" + i + \":00\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                size++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                list.addTask(\"event\", \"test/at9-10-2021 \" + i + \":00\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                listString +\u003d \"\\n\" + size + \".\" + task.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                fail();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        assertEquals(listString, list.toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 5"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            list.addTask(\"event\",\"today8-09-2020 8:00\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            assertEquals(\"OOPS!!! I\u0027m sorry, when is the event? (/at...)\", e.getMessage());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void getTimedTasksTest() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String listString;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 0"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // start condition: duke.txt empty"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            list.getTimedTasks(LocalDate.parse(\"9-12-2020\", DateTimeFormatter.ofPattern(\"d-M-yyyy k:mm\")));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            assertEquals(\"OOPS!!! I\u0027m sorry, no such task :\u003c\", e.getMessage());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 2"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            task \u003d new EventStub(\"today/at8-09-2020 8:00\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            list.addTask(\"event\", \"today/at8-09-2020 8:00\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            listString \u003d \"1.\" + task.toString();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            assertEquals(listString, list.getTimedTasks(LocalDate.parse((\"8-09-2020\"), DateTimeFormatter.ofPattern(\"d-M-yyyy k:mm\"))).toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 3"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        listString \u003d \"\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        for (int i \u003d 9; i \u003c 24; i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                task \u003d new DeadlineStub(\"lock/by9-10-2021 \" + i + \":00\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                list.addTask(\"deadline\", \"lock/by9-10-2021 \" + i + \":00\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                int listIndex \u003d i - 8;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                listString +\u003d listIndex + \".\" + task.toString();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                if (i \u003c 23) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    listString +\u003d \"\\n\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                assertEquals(listString, list.getTimedTasks(LocalDate.parse(\"9-10-2021\", DateTimeFormatter.ofPattern(\"d-M-yyyy k:mm\"))).toString());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                fail();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 123
    }
  },
  {
    "path": "src/test/java/duke/TodoStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class TodoStub extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public TodoStub(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // String status \u003d done ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"[T]\" + \"[✗]\" + \" \" + description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "date 27-08-2020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "todo cs2105 lecture"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event cs2030 TA meeting /at 24-08-2020 16:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "deadline cs2030 /by 27-08-2020 09:00"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "date 27-08-2020"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event test /at 27-08-2020"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event test /at 27-08-2020 7:00"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event test /at 27-08-2020 07:00"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event test /at 27-8-2020 7:00"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event test /at 27-08-2020 7:00"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event test /at 7-08-2020 7:00"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event test /at 07-08-2020 7:00"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "date 07-08-2020"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "date 27-08-2020"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "delete 9"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "date 07-8-2020"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "date 7-8-2020"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "date 7-08-2020"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 25
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 1,
      "-": 36
    }
  }
]
