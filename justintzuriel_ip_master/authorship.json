[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    protected Optional\u003cLocalTime\u003e time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Deadline(String desc, boolean isDone, LocalDate date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.time \u003d Optional.empty();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Deadline(String desc, boolean isDone, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.time \u003d Optional.ofNullable(time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task setDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task doneTask \u003d this.time.map(localTime -\u003e new Deadline(this.desc, this.isDone, this.date, localTime))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                .orElseGet(() -\u003e new Deadline(this.desc, this.isDone, this.date));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        doneTask.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String formatTask() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return (\"D\" + \" | \" + (isDone ? \"V\" : \"X\") + \" | \" + desc + \" | \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + this.date.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\")) + \" \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + this.time.map(localTime -\u003e localTime.format(DateTimeFormatter.ofPattern(\"HHmm\")))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                .orElse(\"\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + (this.time.isPresent() ? this.time.get() : \"\") + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 46
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String tab \u003d \"     \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        chatPrint(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                tab + \"What can I do for you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        loadTasks(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            String command \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    int id \u003d 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    String output \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    for (Task task : tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                        output +\u003d \"\\n\" + tab + id + \". \" + task;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                        id++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    chatPrint(output);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    int idx \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    if (idx \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                        throw new DukeException(\"Oh dear! That task doesn\u0027t exist!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    Task doneTask \u003d tasks.get(idx).setDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    tasks.set(idx, doneTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    saveTasks(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    chatPrint(\"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                            tab + \"   \" + doneTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    int idx2 \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    if (idx2 \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                        throw new DukeException(\"Oh dear! That task doesn\u0027t exist!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    Task rmTask \u003d tasks.get(idx2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    tasks.remove(idx2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    saveTasks(tasks);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    chatPrint(\"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                            tab + \"   \" + rmTask + \"\\n\" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                            tab + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    int idxSpace \u003d input.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    int idxMeta \u003d input.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    int infoLength \u003d idxMeta - (idxSpace + 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    if (idxSpace \u003d\u003d -1 ||"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                            (idxMeta !\u003d -1 \u0026\u0026 infoLength \u003c 1)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                        throw new DukeException(\"Oh dear! A task description cannot be empty!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    Task newTask \u003d addTask(tasks, command, false, input.substring(input.indexOf(\u0027 \u0027) + 1));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    saveTasks(tasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    chatPrint(\"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                            tab + \"   \" + newTask + \"\\n\" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                            tab + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    throw new DukeException(\"Oh dear! I\u0027m sorry, but I don\u0027t know what that means :((\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                chatPrint(ex.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                chatPrint(\"Bad format - Please format the date and time as yyyy/MM/dd HHmm.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        chatPrint(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public static void chatPrint(String toPrint) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String tab \u003d \"     \";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        System.out.println(tab + line);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        System.out.println(tab + toPrint);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        System.out.println(tab + line + \"\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public static Task addTask(List\u003cTask\u003e tasks, String type, boolean isDone, String info) throws DukeException,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            DateTimeParseException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            if (info.contains(\"/\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                throw new DukeException(\"Oh dear! A todo shouldn\u0027t contain a timestamp!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            newTask \u003d new Todo(info, isDone);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            if (!info.contains(\"/by\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                throw new DukeException(\"Oh dear! A deadline must contain \u0027/by\u0027!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            String dDesc \u003d info.substring(0, info.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            String by \u003d info.substring(info.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            LocalDate dDate;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            if (by.contains(\" \")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                dDate \u003d LocalDate.parse(by.substring(0, by.indexOf(\u0027 \u0027)),"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                        DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                LocalTime dTime \u003d LocalTime.parse(by.substring(by.indexOf(\u0027 \u0027) + 1),"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                        DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                newTask \u003d new Deadline(dDesc, isDone, dDate, dTime);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                dDate \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                newTask \u003d new Deadline(dDesc, isDone, dDate);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            if (!info.contains(\"/at\")) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                throw new DukeException(\"Oh dear! An event must contain \u0027/at\u0027!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            String eDesc \u003d info.substring(0, info.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            String at \u003d info.substring(info.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            LocalDate eDate;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            if (at.contains(\" \")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                eDate \u003d LocalDate.parse(at.substring(0, at.indexOf(\u0027 \u0027)),"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                        DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                LocalTime eTime \u003d LocalTime.parse(at.substring(at.indexOf(\u0027 \u0027) + 1),"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                        DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                newTask \u003d new Event(eDesc, isDone, eDate, eTime);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                eDate \u003d LocalDate.parse(at, DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                newTask \u003d new Event(eDesc, isDone, eDate);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public static void saveTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String taskData \u003d \"\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        for (Task ts : tasks) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            taskData +\u003d ts.formatTask() + \"\\n\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            writeToFile(\"./data/tasks.txt\", taskData);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            System.out.println(\"Something went wrong: \" + ex.getMessage());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public static void loadTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            Files.createDirectories(Paths.get(\"./data\"));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            File file \u003d new File(\"./data/tasks.txt\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                loadFromFile(\"./data/tasks.txt\", tasks);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            System.out.println(\"Something went wrong: \" + ex.getMessage());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private static void loadFromFile(String filePath, List\u003cTask\u003e tasks) throws FileNotFoundException {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        int lineCounter \u003d 0;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            lineCounter++;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            String[] attr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                if (attr.length \u003c 3 || (!attr[1].equals(\"V\") \u0026\u0026 !attr[1].equals(\"X\"))) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    throw new DukeException(\"Corrupt file - Invalid task in line \" + lineCounter+ \".\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                switch (attr[0]) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    addTask(tasks, \"todo\", attr[1].equals(\"V\"), attr[2]);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    if (attr.length !\u003d 4) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                        throw new DukeException(\"Corrupt file - Invalid task in line \" + lineCounter + \".\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    addTask(tasks, \"deadline\", attr[1].equals(\"V\"),attr[2] + \" /by \" + attr[3]);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    if (attr.length !\u003d 4) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                        throw new DukeException(\"Corrupt file - Invalid task in line \" + lineCounter+ \".\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    addTask(tasks, \"event\", attr[1].equals(\"V\"), attr[2] + \" /at \" + attr[3]);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    throw new DukeException(\"Corrupt file - Invalid task format\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                System.out.println(ex.toString());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                chatPrint(\"Corrupt file - Bad date and time format.\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 215,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    protected Optional\u003cLocalTime\u003e time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Event(String desc, boolean isDone, LocalDate date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.time \u003d Optional.empty();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Event(String desc, boolean isDone, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.time \u003d Optional.ofNullable(time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task setDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task doneTask \u003d this.time.map(localTime -\u003e new Event(this.desc, this.isDone, this.date, localTime))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                .orElseGet(() -\u003e new Event(this.desc, this.isDone, this.date));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        doneTask.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String formatTask() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return (\"E\" + \" | \" + (isDone ? \"V\" : \"X\") + \" | \" + desc + \" | \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + this.date.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\")) + \" \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + this.time.map(localTime -\u003e localTime.format(DateTimeFormatter.ofPattern(\"HHmm\")))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                .orElse(\"\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + (this.time.isPresent() ? this.time.get() : \"\") + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 46
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task(String desc, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task setDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task doneTask \u003d new Task(this.desc);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        doneTask.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String formatTask() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return (\"P\" + \" | \" + (isDone ? \"V\" : \"X\") + \" | \" + desc);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return (\"[\" + (isDone ? \"V\" : \"X\") + \"] \" + desc);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 30
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Todo(String desc) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Todo(String desc, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task setDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task doneTask \u003d new Todo(this.desc);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        doneTask.isDone \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String formatTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return (\"T\" + \" | \" + (isDone ? \"V\" : \"X\") + \" | \" + desc);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "todo watch a movie"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "deadline finish the program /by tomorrow"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "event supper with friends /at 11pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 1,
      "-": 20
    }
  }
]
