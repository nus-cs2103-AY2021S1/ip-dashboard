[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "# User Guide of C-3PO"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO is a droid for human cyborg relations."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003cimg src\u003d\"./docs/Ui.png\" alt\u003d\"Screenshot\" width\u003d\"250\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "- [User Guide of C-3PO](#user-guide-of-c-3po)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "  * [Features](#features)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [Add tasks - todo, events and deadlines](#add-tasks---todo--events-and-deadlines)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [Date processing](#date-processing)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [Mark tasks as done](#mark-tasks-as-done)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [List all tasks](#list-all-tasks)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [Delete tasks](#delete-tasks)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [Sort tasks by different properties](#sort-tasks-by-different-properties)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [Save data into local storage](#save-data-into-local-storage)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "  * [Usage](#usage)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`list` - list all tasks](#-list----list-all-tasks)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`todo` - add a todo task](#-todo----add-a-todo-task)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`deadline` - add a deadline task](#-deadline----add-a-deadline-task)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`event` - add an event task](#-event----add-an-event-task)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`done` - mark a task as done](#-done----mark-a-task-as-done)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`delete` - delete a task](#-delete----delete-a-task)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`find` - find tasks by keywords](#-find----find-tasks-by-keywords)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`sort` - sort tasks by kind, name or date](#-sort----sort-tasks-by-kind--name-or-date)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`bye` - save and exit](#-bye----save-and-exit)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### Add tasks - todo, events and deadlines"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO can add different types of tasks to your task list, including:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "* `Todo` tasks that have a description for the task;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "* `Event` tasks that have a description, and a date when the events happen."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "* `Deadline` tasks that have a description and a due date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### Date processing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO can understand date representation of the format `YYYY-MM-DD` and "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "compare multiple dates based on this feature. For date and time which cannot"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "be understood by C-3PO, a raw string is used to store the date and time."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### Mark tasks as done"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO can mark tasks as done and display the task status in a list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### List all tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO is able to list all existing tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### Delete tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO can delete existing tasks from the task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### Sort tasks by different properties"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO can sort tasks by:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "* Name: in alphabetical order, from A to Z;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "* Kind: `Deadline` comes before `Event` before `Todo`;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "* Date: later understandable dates come before earlier dates, followed by string"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "dates (`Deadline` before `Event`), and finally followed by `Todo` tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### Save data into local storage"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO will store the data into local storage automatically after each"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "operation. Every time when C-3PO starts, it automatically reads the local"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "storage and loads previous data from it."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `list` - list all tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`list` command can list all the added tasks stored in the local database."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `todo` - add a todo task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`todo` command can add a new todo task to the task list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "todo DESCRIPTION"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `deadline` - add a deadline task"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`deadline` command add a new deadline task to the task list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "deadline DESCRIPTION /by DATE"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`DATE` can be a string or in the format of `YYYY-MM-DD`. For the latter format, C-3PO will be able to understand the due date, while for the former format, C-3PO will directly save the date as a raw string."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `event` - add an event task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`event` command add a new deadline task to the task list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "event DESCRIPTION /at DATE"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`DATE` can be a string or in the format of `YYYY-MM-DD`. For the latter format, C-3PO will be able to understand the date, while for the former format, C-3PO will directly save the date as a raw string."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `done` - mark a task as done"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`done` command marks a task as done."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "done INDEX"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "For a non-empty task list with `n` tasks, ` INDEX` must be in the range of 1 to `n` (inclusive)."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `delete` - delete a task"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`delete` command deletes a task from the list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "delete INDEX"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "For a non-empty task list with `n` tasks, ` INDEX` must be in the range of 1 to `n` (inclusive)."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `find` - find tasks by keywords"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`find` command searches for tasks with a specified keyword and prints a list of all searched tasks."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "find KEYWORDS"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `sort` - sort tasks by kind, name or date"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`sort` command sorts the task list by their kinds, names or dates."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "sort /by COMPARATOR"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`COMPARATOR` can only be `date`, `name` or `kind`."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `bye` - save and exit"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`bye` command shuts down the chat bot and exits in two seconds."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "bye"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 136,
      "-": 6
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    archiveBaseName \u003d \"c3po\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 20,
      "-": 43
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "# User Guide of C-3PO"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO is a droid for human cyborg relations."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003cimg src\u003d\"Ui.png\" alt\u003d\"Screenshot\" width\u003d\"250\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "- [User Guide of C-3PO](#user-guide-of-c-3po)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "  * [Features](#features)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [Add tasks - todo, events and deadlines](#add-tasks---todo--events-and-deadlines)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [Date processing](#date-processing)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [Mark tasks as done](#mark-tasks-as-done)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [List all tasks](#list-all-tasks)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [Delete tasks](#delete-tasks)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [Sort tasks by different properties](#sort-tasks-by-different-properties)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [Save data into local storage](#save-data-into-local-storage)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "  * [Usage](#usage)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`list` - list all tasks](#-list----list-all-tasks)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`todo` - add a todo task](#-todo----add-a-todo-task)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`deadline` - add a deadline task](#-deadline----add-a-deadline-task)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`event` - add an event task](#-event----add-an-event-task)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`done` - mark a task as done](#-done----mark-a-task-as-done)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`delete` - delete a task](#-delete----delete-a-task)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`find` - find tasks by keywords](#-find----find-tasks-by-keywords)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`sort` - sort tasks by kind, name or date](#-sort----sort-tasks-by-kind--name-or-date)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    + [`bye` - save and exit](#-bye----save-and-exit)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### Add tasks - todo, events and deadlines"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO can add different types of tasks to your task list, including:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "* `Todo` tasks that have a description for the task;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "* `Event` tasks that have a description, and a date when the events happen."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "* `Deadline` tasks that have a description and a due date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### Date processing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO can understand date representation of the format `YYYY-MM-DD` and "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "compare multiple dates based on this feature. For date and time which cannot"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "be understood by C-3PO, a raw string is used to store the date and time."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### Mark tasks as done"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO can mark tasks as done and display the task status in a list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### List all tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO is able to list all existing tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### Delete tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO can delete existing tasks from the task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### Sort tasks by different properties"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO can sort tasks by:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "* Name: in alphabetical order, from A to Z;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "* Kind: `Deadline` comes before `Event` before `Todo`;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "* Date: later understandable dates come before earlier dates, followed by string"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "dates (`Deadline` before `Event`), and finally followed by `Todo` tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### Save data into local storage"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "C-3PO will store the data into local storage automatically after each"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "operation. Every time when C-3PO starts, it automatically reads the local"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "storage and loads previous data from it."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `list` - list all tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`list` command can list all the added tasks stored in the local database."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "Alias for `list`: `ls`."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `todo` - add a todo task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`todo` command can add a new todo task to the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "todo DESCRIPTION"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "Alias for `todo`: `td`, `t`."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `deadline` - add a deadline task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`deadline` command add a new deadline task to the task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "deadline DESCRIPTION /by DATE"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "Alias for `deadline`: `ddl`, `d`."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`DATE` can be a string or in the format of `YYYY-MM-DD`. For the latter format, C-3PO will be able to understand the due date, while for the former format, C-3PO will directly save the date as a raw string."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `event` - add an event task"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`event` command add a new deadline task to the task list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "event DESCRIPTION /at DATE"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "Alias for `event`: `e`."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`DATE` can be a string or in the format of `YYYY-MM-DD`. For the latter format, C-3PO will be able to understand the date, while for the former format, C-3PO will directly save the date as a raw string."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `done` - mark a task as done"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`done` command marks a task as done."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "done INDEX"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "Alias for `done`: `finish`."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "For a non-empty task list with `n` tasks, ` INDEX` must be in the range of 1 to `n` (inclusive)."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `delete` - delete a task"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`delete` command deletes a task from the list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "delete INDEX"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "Alias for `delete`: `dl`, `rm`."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "For a non-empty task list with `n` tasks, ` INDEX` must be in the range of 1 to `n` (inclusive)."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `find` - find tasks by keywords"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`find` command searches for tasks with a specified keyword and prints a list of all searched tasks."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "find KEYWORDS"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "Alias for `find`: `f`, `search`, `s`."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `sort` - sort tasks by kind, name or date"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`sort` command sorts the task list by their kinds, names or dates."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "Alias for `sort`: `s`."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "sort /by COMPARATOR"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`COMPARATOR` can only be `date`, `name` or `kind`."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "### `bye` - save and exit"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "`bye` command shuts down the chat bot and exits in two seconds."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "bye"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "```"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "Alias for `bye`: `exit`."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zhXchD": 146,
      "-": 16
    }
  },
  {
    "path": "src/main/java/duke/ChatBot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.exception.NoDataFileException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * The chat bot class to handle the internal logic."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class ChatBot {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private String welcomeMsg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Constructor of the chat bot."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct a new chat bot with new UI, and initialised storage handling."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Try to load the previous data file, if failed create a new data file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * If Duke cannot create a new one, \u003ccode\u003eIOException\u003c/code\u003e will be caught"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * and prints information for the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public ChatBot() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        ui.showLoading();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        welcomeMsg \u003d \"Data loading...\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            tasks \u003d new TaskList(Storage.readList());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            ui.showLoaded(tasks.size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            welcomeMsg +\u003d \"Previous data found!\\nNow you have \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    + tasks.size() + \" task in the list!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } catch (NoDataFileException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            ui.showLoadedNew();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            welcomeMsg +\u003d \"Did not find any previous stored data and \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    + \"new data file created!\\nWelcome!\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            welcomeMsg +\u003d \"Oops! Cannot access your data file and no\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    \"\\nnew data file has been created!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * The entry point to run the chat bot."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                String response \u003d ui.receiveChat();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                ui.printHorizontal();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                Command cmd \u003d parser.parse(response);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                cmd.execute(tasks, ui);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                Storage.save(tasks.getList());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                isExit \u003d cmd.isExit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                ui.printLine(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            ui.printHorizontal();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String getWelcomeMsg() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return welcomeMsg + \"\\n\\nHello! I am C-3PO, human cyborg relations. What can I do for you?\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            Command cmd \u003d parser.parse(input);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            if (cmd.isExit()) isExit \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            cmd.execute(tasks, ui);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            Storage.save(tasks.getList());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return cmd.getMessage();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 88
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        this.setStyle(\"-fx-background-color: #1C2027; -fx-border-width: 15; -fx-border-color: #252932#252932;\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.ChatBot;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private static ChatBot bot \u003d new ChatBot();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * The starting point of running Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Use command \u003ccode\u003ejava Duke\u003c/code\u003e to start Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param args argument strings from the input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "         */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        // initialise a new chat bot"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        // ChatBot bot \u003d new ChatBot();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        // bot.start();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                bot.getResponse(input) +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                \"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    String welcome() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return bot.getWelcomeMsg();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return bot.isExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 42,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            stage.setTitle(\"C-3PO\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            stage.getIcons().add(new Image(Main.class.getResourceAsStream( \"/images/icon.png\" )));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 34
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import javafx.scene.layout.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                DialogBox.getDukeDialog(duke.welcome(), dukeImage)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        if(duke.isExit()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            new Thread(() -\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    Thread.sleep(2000);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    Platform.exit();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }).start();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 65
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.exception.IllegalCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.exception.IllegalDeleteArgument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.exception.IllegalDoneArgument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.exception.NoDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.exception.NoTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * Class to understand user\u0027s command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * The essential functionality of this helper class is to map user command to"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * \u003ccode\u003eCommand\u003c/code\u003e objects."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Map a response string to an executable \u003ccode\u003eCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * This methods map a response string to an executable \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * object. When converting, commands that Duke cannot understand will lead"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * to exception throwing."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param response one-line input from the user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return a \u003ccode\u003eCommand\u003c/code\u003e object that Duke can execute"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @throws Exception exceptions when Duke cannot understands the command or"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     *         when the command does not have the required format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public Command parse(String response) throws Exception {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        switch (response) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return new CommandBye();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        case \"ls\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return new CommandList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        String keyWord \u003d response.split(\" \")[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        switch (keyWord) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            case \"f\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            case \"search\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            case \"s\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                if (response.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    throw new NoDescriptionException(\"find\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    return new CommandFind(response.substring(5));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            case \"finish\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            case \"done\": {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                if (response.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    throw new NoDescriptionException(\"done\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                if (response.split(\" \").length !\u003d 2) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    throw new IllegalDoneArgument();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                if (!response.split(\" \")[1].matches(\"\\\\d+\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    throw new IllegalDoneArgument();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                int index \u003d Integer.parseInt(response.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                return new CommandDone(index);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            case \"rm\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            case \"remove\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            case \"dl\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            case \"delete\": {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                if (response.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    throw new NoDescriptionException(\"delete\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                if (response.split(\" \").length !\u003d 2) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    throw new IllegalDeleteArgument();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                if (!response.split(\" \")[1].matches(\"\\\\d+\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    throw new IllegalDeleteArgument();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                int index \u003d Integer.parseInt(response.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                return new CommandDelete(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            case \"st\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            case \"sort\": {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                if (!response.startsWith(\"sort /by\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    throw new NoDescriptionException(\"sort\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                String comparator \u003d response.substring(9);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                return new CommandSort(comparator);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                String firstCmd \u003d response.split(\" \")[0];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                switch (firstCmd) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    case \"t\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    case \"td\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        if (response.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                            throw new NoDescriptionException(\"todo\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        newTask \u003d new Todo(response.substring(5));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    case \"d\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    case \"ddl\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    case \"deadline\": {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        if (response.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                            throw new NoDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        String nameAndTime \u003d response.substring(9);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        if (nameAndTime.split(\" /by \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                            throw new NoTimeException(\"deadline\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        newTask \u003d new Deadline(response.substring(9).split(\" /by \")[0],"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                                response.substring(9).split(\" /by \")[1]);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    case \"e\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    case \"event\": {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        if (response.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                            throw new NoDescriptionException(\"event\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        String nameAndTime \u003d response.substring(6);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        if (nameAndTime.split(\" /at \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                            throw new NoTimeException(\"event\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        newTask \u003d new Event(response.substring(6).split(\" /at \")[0],"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                                response.substring(6).split(\" /at \")[1]);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        throw new IllegalCommandException(response);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                return new CommandAdd(newTask);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 137
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.exception.NoDataFileException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private static final String path \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Read stored task list from the disk data file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * This method loads the stored task list from the disk data file. If the file cannot"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * be found, \u003ccode\u003eStorage\u003c/code\u003e will create a new file for the user and throws"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * \u003ccode\u003eNoDataFileException\u003c/code\u003e to notify the chat bot. If there is an error"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * accessing the file and new file cannot be created, \u003ccode\u003eIOException\u003c/code\u003e will be"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * thrown to notify the chat bot."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return a \u003ccode\u003eLinkedList\u003c/code\u003e of tasks read from the data file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @throws IOException throw if there is some error accessing the file and we cannot"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     *                     create a new one"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @throws NoDataFileException throw if there is no file copy and Duke has successfully"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     *                     created a new one"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public static LinkedList\u003cTask\u003e readList() throws IOException, NoDataFileException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        LinkedList\u003cTask\u003e list \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            File data \u003d new File(path);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            Scanner sc \u003d new Scanner(data);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                String currentLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                Task currentTask;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                String[] parts \u003d currentLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                switch (parts[0]) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    currentTask \u003d new Todo(parts[2]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    currentTask \u003d new Deadline(parts[2], parts[3]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    currentTask \u003d new Event(parts[2], parts[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    throw new IOException(\"Illegal string found in data file.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                if (parts[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    currentTask.markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                list.add(currentTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            if (!new File(path).exists()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                new File(\"data\").mkdir();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                new File(path).createNewFile();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                if (!new File(path).exists()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    throw new IOException(\"Cannot access the file.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    throw new NoDataFileException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Write a list of tasks to the local data file."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Write a list of tasks to the local data file, the format of the data file can be"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * understood by \u003ccode\u003eStorage\u003c/code\u003e, so that it can read the file and convert back"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * to a list of tasks."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param list the list of tasks to be written into the data file"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public static void save(LinkedList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            FileWriter writer \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                writer.write(task.toDataString() + \"\\n\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            System.out.println(\"     Oops! Something wrong happened when writing the data!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 94
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * A class to handle operations on the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * A class that abstracts all operations regarding the task list, so that outer classes"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * do not need to operate on a \u003ccode\u003eLinkedList\u003c/code\u003e anymore."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private LinkedList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct a new \u003ccode\u003eTaskList\u003c/code\u003e that stores a specified list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param list the list of tasks to be stored in the created object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public TaskList(LinkedList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct a new \u003ccode\u003eTaskList\u003c/code\u003e storing a new empty list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        this.list \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return the list stored in the \u003ccode\u003eTaskList\u003c/code\u003e object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return a \u003ccode\u003eLinkedList\u003c/code\u003e of tasks that is currently stored in the object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public LinkedList\u003cduke.task.Task\u003e getList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return the size of the list stored in the \u003ccode\u003eTaskList\u003c/code\u003e object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return an \u003ccode\u003eint\u003c/code\u003e that is the size of the list that is currently stored"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     *         in the object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Mark a specified task in the current list done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Mark a specified task in the current list as done. This index must be verified to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * be valid for the current list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param index a valid index indicating the task that needs to be marked as done"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        assert(index \u003e\u003d 0 \u0026\u0026 index \u003c list.size());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        list.get(index).markAsDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Remove a specified task in the current list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Remove a specified task in the current list. This index must be verified to be valid"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * for the current list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param index a valid index indicating the task that needs to be removes."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        assert(index \u003e\u003d 0 \u0026\u0026 index \u003c list.size());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Add a given task to the current list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Add a given task to the current list. This task must be verified to be valid for the"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * current list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param newTask a new task to be adding to the current list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void add(Task newTask) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        list.add(newTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 78
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * A class to handle the internal logic regarding interactions with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * This class handles the logic of receiving chat from the user and generating user interface."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Print out a list to the interface."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param list the list of tasks to be printed out"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void printList(LinkedList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            System.out.println(\"     You have no tasks in your list now! \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    + \"Type todo, event or deadline to add some!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                System.out.println(\"     \" + i + \".\" + list.get(i - 1));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Print a specified line in the required format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param line the line of the string that needs to be printed"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void printLine(String line) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        System.out.println(\"     \" + line);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Read next line from the user input."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return String of the next user input line."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String receiveChat() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Show that Duke is fetching data from the local database."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void showLoading() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        System.out.println(\"     Data loading...\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Show that Duke has fetched data from the local database."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param num the number of tasks Duke fetched from the local database."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void showLoaded(int num) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        System.out.println(\"     Previous data found!\\n     Now you have \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                + num + \" task in the list!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Show that Duke did not find data from the local database and created a new data file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void showLoadedNew() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        System.out.println(\"     Did not find any previous stored data and \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                + \"new data file created!\\n     Welcome!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Show that Duke encounters an error when accessing the file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        System.out.println(\"     Oops! Cannot access your data file and no \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                + \"new data file has been created!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Print welcome to the user."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        printHorizontal();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        System.out.println(\"    \" + \" Hello! I\u0027m Duke!\\n     What can I do for you?\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        printHorizontal();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Draw a horizontal line to divide different chats."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void printHorizontal() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 95
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * Interface for all command classes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * This interface declares methods \u003ccode\u003eexecute()\u003c/code\u003e and \u003ccode\u003eisExit()\u003c/code\u003e."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    void execute(TaskList tasks, Ui ui) throws Exception;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    boolean isExit();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    String getMessage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 16
    }
  },
  {
    "path": "src/main/java/duke/command/CommandAdd.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * Command to add a task to a designated list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class CommandAdd implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private final Task newTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct a new command to add a specified task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param newTask the new task to be added by \u003ccode\u003eCommandAdd\u003c/code\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public CommandAdd(Task newTask) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        this.newTask \u003d newTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        this.message \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Add the new task to a specified \u003ccode\u003eTaskList\u003c/code\u003e with interface updates."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e which the new task will be adding to"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param ui the \u003ccode\u003eUi\u003c/code\u003e object to handle the interface updates"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        ui.printLine(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        message \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        ui.printLine(newTask.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        message +\u003d \"\\n\" + newTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        ui.printLine(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        message +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return \u003ccode\u003efalse\u003c/code\u003e since the command is not exit."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 50
    }
  },
  {
    "path": "src/main/java/duke/command/CommandBye.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * Command to exit."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class CommandBye implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return \u003ccode\u003etrue\u003c/code\u003e since the command is exit."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Execute the command by printing goodbye."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param tasks the task list to be executed on"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param ui the \u003ccode\u003eUi\u003c/code\u003e object to handle interface updates"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        ui.printLine(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return \"Bye. Hope to see you again soon!\\nExiting in 2 seconds...\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 30
    }
  },
  {
    "path": "src/main/java/duke/command/CommandDelete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.exception.IllegalDoneArgument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * The command to delete a specified task from a designated task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class CommandDelete implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private String message \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct a new command to delete a task at specified index."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param index the index (can be invalid) of the task to be deleted"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public CommandDelete(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Execute the command to delete the task indexed \u003ccode\u003en\u003c/code\u003e from a given list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e to delete from"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param ui to handle interface updates"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @throws Exception throw when the index \u003ccode\u003en\u003c/code\u003e is out of range"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) throws Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            throw new IllegalDoneArgument();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        assert(index \u003e\u003d 0 || index \u003c tasks.size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        Task deleted \u003d tasks.getList().get(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        ui.printLine(\"Noted! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        message +\u003d \"Noted! I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        ui.printLine(deleted.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        message +\u003d deleted.toString() + \"\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        ui.printLine(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        message +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return false since the command is not to exit."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 55
    }
  },
  {
    "path": "src/main/java/duke/command/CommandDone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.exception.IllegalDoneArgument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * The command to mark a task of given index as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class CommandDone implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private String message \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct a new command to mark the task at given index as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param index the index (can be invalid) of the task to be marked as done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public CommandDone(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Execute the command to mark the task at given index as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e to operate on"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param ui the \u003ccode\u003eUi\u003c/code\u003e object to handle interface updates."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @throws Exception throw if the index is out of range"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) throws Exception {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            throw new IllegalDoneArgument();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        assert(index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        tasks.markAsDone(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        ui.printLine(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        message +\u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        ui.printLine(tasks.getList().get(index).toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        message +\u003d tasks.getList().get(index).toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return \u003ccode\u003efalse\u003c/code\u003e since the command is not to exit."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 51
    }
  },
  {
    "path": "src/main/java/duke/command/CommandFind.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * The command to find tasks with search keyword."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class CommandFind implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private String message \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct a new find command with search keyword."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param keyword the string to search"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public CommandFind(String keyword) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Execute the command to search all tasks with keyword."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e to operate on"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param ui the \u003ccode\u003eUi\u003c/code\u003e object to handle interface"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        LinkedList\u003cTask\u003e results \u003d new LinkedList\u003cTask\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        for (Task result : tasks.getList()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            if (result.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                results.add(result);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        if (results.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            ui.printLine(\"No tasks containing \" + keyword + \" found!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            message +\u003d \"No tasks containing \" + keyword + \" found!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            ui.printLine(\"Found \" + results.size() + \" tasks:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            ui.printList(results);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            message +\u003d \"Found \" + results.size() + \" tasks:\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            message +\u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d results.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                message +\u003d i + \".\" + results.get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return \u003ccode\u003efalse\u003c/code\u003e since the command is not exit."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 61
    }
  },
  {
    "path": "src/main/java/duke/command/CommandList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * The command to list all task of a designated task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class CommandList implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private String message \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Execute the command to list all tasks of a given \u003ccode\u003eTaskList\u003c/code\u003e object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e to operate on"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param ui the \u003ccode\u003eUi\u003c/code\u003e to handle the interface updates"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        ui.printList(tasks.getList());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        LinkedList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            message +\u003d \"You have no tasks in your list now!\\nType todo, event or deadline to add some!\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            message +\u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                message +\u003d i + \".\" + list.get(i - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                if (i !\u003d list.size()) message +\u003d \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return \u003ccode\u003efalse\u003c/code\u003e since the command is not exit."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return \u003ccode\u003efalse\u003c/code\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 45
    }
  },
  {
    "path": "src/main/java/duke/command/CommandSort.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class CommandSort implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private String comparator;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private String sortedListMsg \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public CommandSort(String comparator) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        this.comparator \u003d comparator;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void execute(TaskList tasks, Ui ui) throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        LinkedList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        Comparator\u003cTask\u003e taskComparator;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        switch (comparator) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            case \"name\": {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                taskComparator \u003d Comparator.comparing(Task::getDescription);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            case \"kind\": {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                taskComparator \u003d Comparator.comparingInt(Task::getPriority);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            case \"date\": {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                taskComparator \u003d (o1, o2) -\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    if (o1 instanceof Deadline \u0026\u0026 o2 instanceof Deadline) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        if (((Deadline) o1).hasDate() \u0026\u0026 ((Deadline) o2).hasDate()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                            return ((Deadline) o1).getByDate().compareTo(((Deadline) o2).getByDate());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        } else if (((Deadline) o1).hasDate()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                            return -1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        } else if (((Deadline) o2).hasDate()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                            return 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        } else return ((Deadline) o1).getByString().compareTo(((Deadline) o2).getByString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    } else if (o1 instanceof Deadline) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        return -1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    } else if (o2 instanceof Deadline) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        return 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    } else if (o1 instanceof Event) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        if (o2 instanceof Event) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                            if (((Event) o1).hasDate()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                                if (((Event) o2).hasDate()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                                    return ((Event) o1).getAtDate().compareTo(((Event) o2).getAtDate());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                                } else return -1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                            } else return ((Event) o1).getAtString().compareTo(((Event) o2).getAtString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        } else return -1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    } else if (o2 instanceof Event) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                        return 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    } else return o1.getDescription().compareTo(o2.getDescription());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                };"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                sortedListMsg +\u003d \"Oops! You can only sort by name, kind or date!\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                throw new Exception(\"Illegal comparator!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        list.sort(taskComparator);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        ui.printList(list);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            sortedListMsg +\u003d \"You have no tasks in your list now!\\nType todo, event or deadline to add some!\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            sortedListMsg +\u003d \"Here are the tasks in your list, sorted by \" + comparator + \":\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                sortedListMsg +\u003d (i + \".\" + list.get(i - 1) + \"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return sortedListMsg;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 89
    }
  },
  {
    "path": "src/main/java/duke/exception/IllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * The exception to be thrown when Duke encounters non-understandable commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class IllegalCommandException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct a new exception with the command that causes the confusion."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param command the command that confuses Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public IllegalCommandException(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        super(\"☹ OOPS!!! I cannot recognise the command \\\"\" + command + \"\\\" :-(\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/IllegalDeleteArgument.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * Exception to be thrown when Duke encounters an index illegal or out of range in a delete command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class IllegalDeleteArgument extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct the exception to indicate illegal index."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public IllegalDeleteArgument() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        super(\"☹ OOPS!!! The argument for a delete command must be an integer within the range!!!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/IllegalDoneArgument.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * The exception to be thrown when Duke encounters index illegal or out of range in a done command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class IllegalDoneArgument extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct a new exception to indicate illegal index for delete."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public IllegalDoneArgument() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        super(\"☹ OOPS!!! The argument for a done command must be an integer within the range!!!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/NoDataFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * The exception to be thrown to indicate that Duke did not find"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * an existing data file and created a new one."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class NoDataFileException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct a new exception to indicate that no data file"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * found and Duke created a new empty one."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public NoDataFileException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        super(\"No data file found, a new data file created!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/NoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * The exception to be thrown when Duke encounters an empty description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class NoDescriptionException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct a new exception with the type of task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param type the type of task where the exception is encountered"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public NoDescriptionException(String type) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        super(\"☹ OOPS!!! The description of a \" + type + \" cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/NoTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * The exception to be thrown when Duke encounters an empty time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class NoTimeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct a new exception with the type of task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param type the type of task where the exception is encountered"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public NoTimeException(String type) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        super(\"☹ OOPS!!! The time of a \" + type + \" cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * A type of tasks that has a deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    protected LocalDate byDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private String byString;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct a new deadline task from specified description and due date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param description the description of the task to be created"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param by the string indicates the deadline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     *           If the string \u003ccode\u003eby\u003c/code\u003e is of pattern that Duke understands,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     *           Duke will save the deadline as a date. Otherwise, Duke will"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     *           understand this as a string."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        this.byString \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            this.byString \u003d by;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            this.byDate \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            this.byDate \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public boolean hasDate() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return byDate !\u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public LocalDate getByDate() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return byDate;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String getByString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return byString;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return the string that is intended to be stored in the local database."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return the string to be stored in the local database, the format is"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     *         understandable for \u003ccode\u003eStorage\u003c/code\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return \"D | 1 | \" + description + \" | \" + byString;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return \"D | 0 | \" + description + \" | \" + byString;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return the string representation of the task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return the string representation of the task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        if (this.byDate !\u003d null) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    + byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + byString + \")\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public int getPriority() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 78
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * A type of tasks that has a time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    protected LocalDate atDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    private String atString;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct a new event task from specified description and due date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param description the description of the task to be created"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param at the string indicates the event time"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     *           If the string \u003ccode\u003eat\u003c/code\u003e is of pattern that Duke"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     *           understands, Duke will save the time as a date. Otherwise,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     *           Duke will understand this as a string."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        this.atString \u003d at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            this.atString \u003d at;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            this.atDate \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            this.atDate \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public boolean hasDate() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return atDate !\u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public LocalDate getAtDate() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return atDate;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String getAtString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return atString;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return the string that is intended to be stored in the local database."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return the string to be stored in the local database, the format is"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     *         understandable for \u003ccode\u003eStorage\u003c/code\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return \"E | 1 | \" + description + \" | \" + atString;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return \"E | 0 | \" + description + \" | \" + atString;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return the string representation of the task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return the string representation of the task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        if (this.atDate !\u003d null) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                    + atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + atString + \")\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public int getPriority() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return 2;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 78
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * Task class that abstracts a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Construct a new Task with a given description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * This method is intended to serve as a dummy task generator for placeholder purposes."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Please do NOT construct tasks using this method. Instead, use the constructors of its"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * subclasses, i.e. \u003ccode\u003eDeadline\u003c/code\u003e, \u003ccode\u003eEvent\u003c/code\u003e, and \u003ccode\u003eTodo\u003c/code\u003e."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @param description the name of the task to be created"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Get the status icon (tick or cross) of the current task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return an icon (tick or cross) to indicate whether the current task has been done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Get the description of the current task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return a string of the description of the current task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Mark the current task as done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return the string that is intended to be stored in the local database."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return the string to be stored in the local database, the format is understandable"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     *         for \u003ccode\u003eStorage\u003c/code\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return \"? | 1 | \" + description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return \"? | 0 | \" + description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return the priority of the task as an integer, sorted by its type."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return 4 if it is a raw task without any other kind"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public int getPriority() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return 4;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return the string representation of the task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return the string representation of the task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 73
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " * The basic type of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return the string that is intended to be stored in the local database."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return the string to be stored in the local database, the format is"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     *         understandable for \u003ccode\u003eStorage\u003c/code\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return \"T | 1 | \" + description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            return \"T | 0 | \" + description + \" | \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public int getPriority() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return 3;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * Return the string representation of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     * @return the string representation of the task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 37
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #3E4B5D#3E4B5D; -fx-border-width: 15; -fx-border-color: #252932#252932;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"Infinity\" text\u003d\"Label\" textFill\u003d\"#ccd0d7\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            \u003cFont name\u003d\"Menlo Regular\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "      \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 25
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"861.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #252932#252932 #252932#252932; -fx-border-color: #252932#252932 #252932#252932;\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"38.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"819.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #252932#252932 #252932#252932;\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "            \u003cFont name\u003d\"Menlo Regular\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"819.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 23
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void toStringTest1() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        assertEquals(new Event(\"this event\", \"a typed non-formatted string of time\").toString(),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                \"[E][✘] this event (at: a typed non-formatted string of time)\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void toStringTest2() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        assertEquals(new Event(\"that event\", \"2020-10-10\").toString(),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                \"[E][✘] that event (at: Oct 10 2020)\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    public void toStringTest3() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        Event event \u003d new Event(\"new event\", \"2020-10-10\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        event.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "        assertEquals(event.toString(),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "                \"[E][\\u2713] new event (at: Oct 10 2020)\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 27
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "hi!"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "todo this task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "deadline this"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "deadline this /by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "deadline this /by that"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "event this /by that"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "event this /at"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "event this /at that"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "done x"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "done the first task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "delete"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "delete first"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 24
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhXchD"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "zhXchD": 1,
      "-": 37
    }
  }
]
