[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 17,
      "-": 44
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "D | 1 | a2 | 2020-09-02"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "T | 0 | read book"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 2
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents a Duke executable program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            return e.getLocalizedMessage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 51,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents a custom exception for Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 11
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            stage.setTitle(\"AiBot\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 33
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents a parser for parsing the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static String combineWords(List\u003cString\u003e words) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        for (int i \u003d 0; i \u003c words.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                message.append(words.get(i));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                message.append((\" \".concat(words.get(i))));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static int extractTaskNumber(String command) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        List\u003cString\u003e words \u003d Arrays.asList(command.split(\" \"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        if (words.size() !\u003d 2) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            throw new DukeException(\":( Oops!!! Please type \\\"[action] [task number]\\\"\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            // convert the task number into int"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                return Integer.parseInt(words.get(1));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            } catch (NumberFormatException numberFormatException) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                throw new DukeException(\":( Oops!!! The task number is invalid. :-(\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public static Task parseAddCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        List\u003cString\u003e words \u003d Arrays.asList(command.split(\" \"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String taskType \u003d words.get(0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        if (taskType.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (words.size() \u003c\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                throw new DukeException(\":( Oops!!! The description of a Todo task cannot be empty. :-(\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String taskDescription \u003d combineWords(words.subList(1, words.size()));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            task \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } else if (taskType.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            int index \u003d words.indexOf(\"/by\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (words.size() \u003c\u003d 1 || index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                throw new DukeException(\":( Oops!!! The description of a Deadline task cannot be empty. :-(\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (index \u003d\u003d -1 || words.size() - index \u003c\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                throw new DukeException(\":( Oops!!! Please type \\\"deadline [task description] /by [yyyy-mm-dd]\\\" \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                        + \"to add a Deadline task\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String taskDescription \u003d combineWords(words.subList(1, index));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String by \u003d combineWords(words.subList(index + 1, words.size()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (!by.matches(\"([12]\\\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\\\d|3[01]))\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                throw new DukeException(\":( Oops!!! Please type \\\"deadline [task description] /by [yyyy-mm-dd]\\\" \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                        + \"to add a Deadline task\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            task \u003d new Deadline(taskDescription, by);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } else if (taskType.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            int index \u003d words.indexOf(\"/at\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (words.size() \u003c\u003d 1 || index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                throw new DukeException(\":( Oops!!! The description of a Event task cannot be empty. :-(\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (index \u003d\u003d -1 || words.size() - index \u003c\u003d 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                throw new DukeException(\":( Oops!!! Please type \\\"event [task description] /at [event time] \\\" \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                        + \"to add a Event task\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String taskDescription \u003d combineWords(words.subList(1, index));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String at \u003d combineWords(words.subList(index + 1, words.size()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            task \u003d new Event(taskDescription, at);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            throw new DukeException(\":( Oops!!! I\u0027m sorry, but I don\u0027t know what that means \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                    + \":-(\\n\\tCommands: list | done | delete | todo | deadline | event | bye\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        if (fullCommand.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } else if (fullCommand.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            int taskNumber \u003d extractTaskNumber(fullCommand);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            return new DoneCommand(taskNumber);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            int taskNumber \u003d extractTaskNumber(fullCommand);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            return new DeleteCommand(taskNumber);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } else if (fullCommand.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } else if (fullCommand.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (fullCommand.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                throw new DukeException(\":( Oops!!! Please type \\\"find [keyword]\\\" to find a task\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String query \u003d fullCommand.substring(5);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            return new FindCommand(query);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            Task newTask \u003d parseAddCommand(fullCommand);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            return new AddCommand(newTask);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 117
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents a storage object to handle read and write."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private static final String FILE_DIR \u003d System.getProperty(\"user.dir\") + \"/\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private final List\u003cString\u003e dirs;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        dirs \u003d Arrays.asList(filePath.split(\"/\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.filePath \u003d FILE_DIR;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            for (int i \u003d 0; i \u003c dirs.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                if (i \u003d\u003d dirs.size() - 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                    filePath \u003d filePath.concat(dirs.get(i));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                filePath \u003d filePath.concat(dirs.get(i)).concat(\"/\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                File fileDir \u003d new File(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                // if directory not exists, create directory"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                if (!fileDir.exists()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                    fileDir.mkdir();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            // if file not exists, create file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String currentLine;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            while ((currentLine \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                tasks.add(getTaskFromLine(currentLine));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            System.out.println(String.format(\"IOException: %s\", ioException.getLocalizedMessage()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void writeFile(TaskList taskList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String taskInfo \u003d task.toFileString() + \"\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            stringBuilder.append(taskInfo);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            writer.write(stringBuilder.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            System.out.println(\"IOException: \" + ioException.getLocalizedMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private Task getTaskFromLine(String line) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        List\u003cString\u003e words \u003d Arrays.asList(line.split(\" \\\\| \"));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        if (words.get(0).equals(\"T\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            task \u003d new Todo(words.get(2));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } else if (words.get(0).equals(\"D\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            task \u003d new Deadline(words.get(2), words.get(3));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            task \u003d new Event(words.get(2), words.get(3));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        if (words.get(1).equals(\"1\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 97
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void doneTask(int taskNumber) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        tasks.get(taskNumber - 1).markDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public static String getTaskMessage(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        StringBuilder taskMessage \u003d new StringBuilder();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            String task \u003d String.format(\"\\n\\t%d. %s\", (i + 1), tasks.get(i));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            taskMessage.append(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return taskMessage.toString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 55
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents an add task command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Constructs an AddCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Executes an AddCommand to add a task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Adds task to taskList and saves it in the hard disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Displays feedback message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param ui UI to handle user interaction."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param storage Storage to save the task list in the hard disk."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @return Formatted response message."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        // display add task success message"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String message \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        message +\u003d \"\\n\\t\\t\".concat(task.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        message +\u003d String.format(\"\\n\\tNow you have %d tasks in the list.\", taskList.size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        ui.printResponse(message);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        // update task data in the file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        storage.writeFile(taskList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 44
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents an exit command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Constructs an ByeCommand object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Executes an ByeCommand to exit the Duke program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Displays goodbye message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param ui UI to handle user interaction."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param storage Storage to save the task list in the hard disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @return Formatted response message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return Ui.EXIT_MESSAGE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 33
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents a command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /** Indicates if this is an exit command */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /** Task for AddCommand */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Constructs a Command object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Constructs a Command object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param isExit Indicates if this is an exit command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    protected Command(boolean isExit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Returns isExit."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Returns task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Executes command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * An abstract method to be overridden by the subclasses."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param ui UI to handle user interaction."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param storage Storage to save the task list in the hard disk."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @return Formatted response message."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 60
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents a delete task command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private final int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Constructs a DeleteCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param taskNumber Task number of the deleting task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Executes a DeleteCommand to delete a task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Deletes the task and update the file in the hard disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Displays feedback message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param ui UI to handle user interaction."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param storage Storage to save the task list in the hard disk."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @return Formatted response message."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        if (taskNumber \u003e taskList.size() || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            throw new DukeException(\"The task number is not found\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        Task deletedTask \u003d taskList.getTask(taskNumber);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        taskList.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        // display delete task success message"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String response \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        response +\u003d \"\\n\\t\\t\".concat(deletedTask.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        response +\u003d String.format(\"\\n\\tNow you have %d tasks in the list.\", taskList.size());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        ui.printResponse(response);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        // update task data in the file"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        storage.writeFile(taskList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 51
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents a done task command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private final int taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Constructs a DoneCommand object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param taskNumber Task number of the done task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Executes a DoneCommand to mark task as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Marks task as done and update the file in the hard disk."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Displays feedback message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param ui UI to handle user interaction."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param storage Storage to save the task list in the hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @return Formatted response message."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        if (taskNumber \u003e taskList.size() || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            throw new DukeException(\"The task number is not found\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        taskList.doneTask(taskNumber);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        // display update task success message"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String response \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        response +\u003d \"\\n\\t\\t\".concat(taskList.getTask(taskNumber).toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        ui.printResponse(response);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        // update task data in the file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        storage.writeFile(taskList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 48
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private final String query;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public FindCommand(String query) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.query \u003d query;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        List\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            if (task.getDescription().contains(query)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                matchedTasks.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        if (matchedTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            ui.printResponse(\"No task found...\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            return \"No task found...\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        StringBuilder taskMessage \u003d new StringBuilder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        taskMessage.append(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        taskMessage.append(TaskList.getTaskMessage(matchedTasks));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        ui.printResponse(taskMessage.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return taskMessage.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents a list task command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Executes a ListCommand to list all the tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Display the tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param ui UI to handle user interaction."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param storage Storage to save the task list in the hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @return Formatted response message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            ui.printResponse(\"No task added yet...\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            return \"No task added yet...\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        StringBuilder taskMessage \u003d new StringBuilder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        taskMessage.append(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        taskMessage.append(TaskList.getTaskMessage(tasks));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        ui.printResponse(taskMessage.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return taskMessage.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private final String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Constructs a Deadline object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param by Task deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Returns formatted deadline task information."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * It will be used to write into the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @return Formatted deadline task information."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String done \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return \"D | \" + done + \" | \" + super.description + \" | \" +  by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String formattedDate \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents a event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private final String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Constructs an Event object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param at Task time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Returns formatted event task information."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * It will be used to write into the file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @return Formatted event task information."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String done \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return \"E | \" + done + \" | \" + super.description + \" | \" +  at;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /** Description of the task */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /** Indicates if task is done */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Constructs a Task object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Marks task as done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Returns formatted task information."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * It will be used to write into the file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @return Formatted task information."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public abstract String toFileString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Returns task description"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @return task description"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Returns true if task is done"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @return task isDone"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents a Todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Constructs a Todo object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Returns formatted Todo task information."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * It will be used to write into the file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * @return Formatted Todo task information."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String done \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return \"T | \" + done + \" | \" + super.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 32
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 60
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/avatar-1.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/avatar-2.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                DialogBox.getDukeDialog(Ui.GREET_MESSAGE, dukeImage)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    protected void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        // exit Duke application"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        if (input.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 59
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * Represents a UI to handle user interaction."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " * @author Tee Kok Siang"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    private final Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public static final String GREET_MESSAGE \u003d \"Hello! I\u0027m AiBot :)\\n\\tEnter the command you would like to do\\n\\tEnter \u0027bye\u0027 to exit\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public static final String EXIT_MESSAGE \u003d \"Bye. See you again soon!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void printResponse(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        String divider \u003d \"\\n\\t-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        System.out.println(divider.concat(\"\\t\".concat(message.concat(\"\\n\"))).concat(divider));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        printResponse(GREET_MESSAGE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        printResponse(EXIT_MESSAGE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        printResponse(\"Error: \" + errorMessage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 35
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 19
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void testParserUnknownCommand(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        DukeException exception \u003d assertThrows(DukeException.class,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                () -\u003e Parser.parse(\"This command will throw DukeException\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        assertEquals(exception.getLocalizedMessage(), \":( Oops!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\\tCommands: \" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "                \"list | done | delete | todo | deadline | event\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void testParserByeCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            Command command \u003d Parser.parse(\"bye\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            assertTrue(command.isExit());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            System.out.println(\"Error: \" + dukeException.getLocalizedMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void testParserAddCommand(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            Command command \u003d Parser.parse(\"todo read book\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            Task task \u003d command.getTask();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            assertEquals(\"read book\", task.getDescription());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "            System.out.println(\"Error: \" + dukeException.getLocalizedMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 39
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void testAddTask(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        Task todo \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        taskList.addTask(todo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        assertEquals(1, taskList.size());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        assertEquals(\"read book\", taskList.getTask(1).getDescription());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void testDoneTask(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        Task todo \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        taskList.addTask(todo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        taskList.doneTask(1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        assertTrue(taskList.getTask(1).isDone());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    public void testDeleteTask(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        Task todo \u003d new Todo(\"todo\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        Task deadline \u003d new Deadline(\"deadline\", \"2020-08-29\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        taskList.addTask(todo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        taskList.addTask(deadline);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        assertEquals(2, taskList.size());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        taskList.deleteTask(1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        assertEquals(1, taskList.size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "        assertEquals(\"deadline\", taskList.getTask(1).getDescription());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 41
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teekoksiang"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "teekoksiang": 1,
      "-": 37
    }
  }
]
