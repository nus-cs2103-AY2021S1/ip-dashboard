[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 17,
      "-": 44
    }
  },
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "Todo | true | sleep"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 1
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 43
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Duke chat bot "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Initializes a new ui, storage, parser and taskList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Duke () {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        storage \u003d new Storage(\"data/data.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        taskList \u003d new TaskList(storage.loadTasks());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Takes in input from the user, processes the input and returns the appropriate response to the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param input input from the user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return message to show to the user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        parser.sortInput(input, taskList, storage, ui);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return ui.getOutputMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 32
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Main class to run Application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final Image daUser \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final Image daDuke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Button sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Scene scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        stage.setMinWidth(500.0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        mainLayout.setPrefSize(500.0, 600.0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        scrollPane.setPrefSize(485, 535);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        userInput.setPrefWidth(400.0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        sendButton.setPrefWidth(75.0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        });"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Label dukeText \u003d new Label(duke.getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(daUser)),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(daDuke))"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        );"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 98
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.commands.AddTaskCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.commands.RemoveTaskCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.exceptions.DukeInvalidIndexException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.exceptions.DukeNoTaskDescriptionException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Parser processes user input and executes appropriate command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Parser processes date input for deadline class and event class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private boolean isDate(String time) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        SimpleDateFormat date \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        date.setLenient(false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            date.parse(time.trim());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Returns the date (MMM dd yyyy) of the specified time"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Time must be formatted as yyyy-MM-dd to be converted to date"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * If time does not match the format, the original time will be returned"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param time time specified in the task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return Time in date format"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String convertDate(String time) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String convertDate \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            if (isDate(time)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                Date date \u003d new SimpleDateFormat(\"yyyy-MM-dd\").parse(time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                convertDate \u003d new SimpleDateFormat(\"MMM dd yyyy\").format(date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                convertDate \u003d time;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.println(\"Please specify date in the form yyyy-MM-dd\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return convertDate;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Processes user input and executes the appropriate command"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param nextLine next line of user input"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param taskList list of tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param storage storage for task information"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param ui ui to show messages"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void sortInput (String nextLine, TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String[] input \u003d nextLine.trim().split(\" \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String commandWord \u003d input[0].toUpperCase();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Command command \u003d new Command();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            switch (commandWord) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            case \"LIST\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                command \u003d new ListCommand();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            case \"DONE\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                command \u003d new DoneCommand(parseIndex(nextLine));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            case \"DELETE\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                command \u003d new RemoveTaskCommand(parseIndex(nextLine));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            case \"TODO\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                Task todo \u003d parseTodo(nextLine);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                command \u003d new AddTaskCommand(todo);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            case \"DEADLINE\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                Task deadline \u003d parseDeadline(nextLine);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                command \u003d new AddTaskCommand(deadline);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            case \"EVENT\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                Task event \u003d parseEvent(nextLine);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                command \u003d new AddTaskCommand(event);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            case \"FIND\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                String search \u003d nextLine.substring(4).trim();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                command \u003d new FindCommand(search);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            case \"BYE\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                command \u003d new ByeCommand();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                ui.defaultMessage();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            command.executeCommand(ui, storage, taskList);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (DukeNoTaskDescriptionException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            ui.setOutputMessage(e.getExceptionMessage());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            ui.setOutputMessage(\"Please specify a time\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            ui.setOutputMessage(\"Task does not exist\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (DukeInvalidIndexException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            ui.setOutputMessage(e.getExceptionMessage());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Extract integer from the user input and returns the index of the required task in the taskList"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param input user input "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return index of specified task in taskList"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private int parseIndex (String input) throws DukeInvalidIndexException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        int index \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\")) - 1;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (index \u003c 0) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            throw new DukeInvalidIndexException(\"Index starts from 1 instead of 0 :)\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private Task parseTodo (String input) throws DukeNoTaskDescriptionException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String description \u003d input.substring(4).trim();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            throw new DukeNoTaskDescriptionException(\"Please specify a task description\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return new Todo(description, false);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private Task parseDeadline (String input) throws DukeNoTaskDescriptionException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String description \u003d input.split(\"/by\")[0].substring(8).trim();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            throw new DukeNoTaskDescriptionException(\"Please specify a task description\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String deadline \u003d input.split(\"/by\")[1].trim();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return new Deadline(description, deadline, false);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private Task parseEvent (String input) throws DukeNoTaskDescriptionException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String description \u003d input.split(\"/at\")[0].substring(5).trim();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            throw new DukeNoTaskDescriptionException(\"Please specify a task description\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String time \u003d input.split(\"/at\")[1].trim();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return new Event(description, time, false);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 175
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.exceptions.DukeInvalidStorageException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Storage to write data to the data file or retrieve data from the file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Constructor for storage class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Creates a new file with the specified filePath if it does not exist"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param filePath filePath to store data"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            file.getParentFile().mkdir();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            ioException.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Loads the tasks that have been stored in the data file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return List of tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasks() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            File file \u003d new File(\"data/data.txt\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            Scanner diskScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            while (diskScanner.hasNext()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                String nextLine \u003d diskScanner.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                tasks.add(decodeTask(nextLine));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (DukeInvalidStorageException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.println(e.getExceptionMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Stores tasks in the data file"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param taskList List of tasks to be stored"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void writeDataToFile(TaskList taskList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                String write \u003d encodeTask (taskList.getTask(i));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                fw.write (write);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.println (\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private String encodeTask(Task task) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String encodedTask \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        encodedTask +\u003d (task.getTypeOfTask() + \" | \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        encodedTask +\u003d (task.getDone() + \" | \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        encodedTask +\u003d (task.getDescription());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (!task.getTypeOfTask().equals(\"Todo\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            encodedTask +\u003d (\" | \" + task.getTime());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        encodedTask +\u003d \"\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return encodedTask;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private Task decodeTask (String encodedLine) throws DukeInvalidStorageException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String[] parts \u003d encodedLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String typeOfTask \u003d parts[0].trim();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        boolean isDone \u003d Boolean.parseBoolean(parts[1].trim());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String description \u003d parts[2].trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        switch (typeOfTask) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        case \"Todo\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return new Todo(description, isDone);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        case \"Deadline\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            String deadline \u003d parts[3].trim();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return new Deadline (description, deadline, isDone);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        case \"Event\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            String at \u003d parts[3].trim();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return new Event(description, at, isDone);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            throw new DukeInvalidStorageException(\"Storage tasks could not be retrieved\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 117
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * List to keep track of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Initializes TaskList to a new list of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Initializes TaskList to the specified list of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param taskList list of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public TaskList (ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Adds the specified task to the list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param t task to be added"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Removes a task from the list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param index position of task in the list to be removed"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void removeTask (int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assert index \u003e\u003d 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        taskList.remove (taskList.get(index));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Sets a task, specified by the index, as done"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param index position of task in the list to be marked done"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void setDone (int index) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assert index \u003e\u003d 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        taskList.get(index).markDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Returns the number of tasks in the list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return number of tasks"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Returns the task at the specified index of the list"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param index position in the list to retrieve the task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return Task in the list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assert index \u003e\u003d 0;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Filters the task list to find task descriptions which contain the specified string"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param filter string to search for in task descriptions"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return New taskList which only contains tasks with descriptions that contain the specified string"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public TaskList filterList(String filter) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        TaskList filteredList \u003d new TaskList();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        for (int i \u003d 0; i \u003c this.size(); i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            if (this.getTask(i).getDescription().contains(filter)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                filteredList.addTask(this.getTask(i));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return filteredList;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 93
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Ui which sets output message to the user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private String outputMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Initializes the output message to the welcome message"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.outputMessage \u003d showWelcomeMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Changes the output message to the specified message"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param newOutputMessage specified message"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void setOutputMessage(String newOutputMessage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.outputMessage \u003d newOutputMessage + \"\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private void appendMessage (String message) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.outputMessage +\u003d (message + \"\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Returns the output message"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return output message"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String getOutputMessage (){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return this.outputMessage;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Returns the welcome message upon starting Duke"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return welcome message"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String showWelcomeMessage() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String welcomeMessage \u003d \"Hello from\\n\" + logo + \"\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        welcomeMessage +\u003d \"Hello! I\u0027m Duke ^_^\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        welcomeMessage +\u003d \"What can I do for you??\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return welcomeMessage;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Sets output message to the bye message when user enters bye"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void byeMessage() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        setOutputMessage(\"Bye!! See you again :)\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Sets output message when a task is added to the list"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param task task added to the list"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param number number of tasks in the list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void addTaskMessage(Task task, int number) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assert number \u003e\u003d 0;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        setOutputMessage (\"Got it! I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        appendMessage (task.toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        appendMessage(String.format(\"Now you have %d tasks in the list\", number));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Sets output message when a task is removed from the list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param task task removed from list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param number number of tasks in the list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void removeTaskMessage (Task task, int number) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assert number \u003e\u003d 0;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        setOutputMessage(\"Noted. I\u0027ve removed this task\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        appendMessage(task.toString());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        appendMessage(String.format(\"Now you have %d tasks in the list\", number));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Sets output message when a task is marked as done"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param task task that is marked done"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void doneMessage (Task task) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        setOutputMessage(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        appendMessage(task.toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Sets output message to the list of all the tasks"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param taskList list containing all the tasks"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void listMessage(TaskList taskList) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        setOutputMessage(\"Here are the tasks in your list:\");         "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            appendMessage(String.format(\"%d. %s\", i + 1, taskList.getTask(i)));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Sets output message to the default message"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void defaultMessage() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        setOutputMessage(\"Sorry \u003e_\u003c!! I don\u0027t know what you mean...\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 119
    }
  },
  {
    "path": "src/main/java/duke/commands/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Command to add a task to the taskList"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Constructor for the class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param task task to be added to the taskList"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public AddTaskCommand (Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void executeCommand (Ui ui, Storage storage, TaskList tasklist) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        tasklist.addTask(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        int numberOfTasks \u003d tasklist.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assert numberOfTasks \u003e\u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        ui.addTaskMessage(task, numberOfTasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        storage.writeDataToFile(tasklist);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 33
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Command executed when user inputs \"bye\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void executeCommand (Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        ui.byeMessage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 16
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Parent class for all commands"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Performs the necessary tasks in order to carry out the command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param ui ui which generates the appropriate response to the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param storage storage where data is stored"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param taskList taskList which stores information about tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void executeCommand (Ui ui, Storage storage, TaskList taskList) {}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 21
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Command to mark a task in the taskList as done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Constructor for the class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param index index of task in the list to be marked done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public DoneCommand (int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assert index \u003e\u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void executeCommand (Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Task doneTask \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        taskList.setDone(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        ui.doneMessage(doneTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        storage.writeDataToFile(taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Command to find tasks with descriptions that contain the specified string"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final String filter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Constructor for the class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param filter specified string to filter task descriptions"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public FindCommand(String filter) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.filter \u003d filter;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void executeCommand (Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        TaskList filteredList \u003d taskList.filterList(filter);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        ui.listMessage(filteredList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 28
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Command to list out all the tasks in the taskList"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void executeCommand (Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        ui.listMessage(taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 16
    }
  },
  {
    "path": "src/main/java/duke/commands/RemoveTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Command to remove a task from the taskList"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class RemoveTaskCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Constructor for the class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param index index of task in the list to be removed"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public RemoveTaskCommand (int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assert index \u003e\u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void executeCommand (Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Task removedTask \u003d taskList.getTask(index);         "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        taskList.removeTask(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        ui.removeTaskMessage(removedTask, taskList.size());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        storage.writeDataToFile(taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 32
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Exception thrown when user enters invalid input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    protected String exceptionMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Sets the exception message to the specified message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param exceptionMessage specified message "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public DukeException (String exceptionMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.exceptionMessage \u003d exceptionMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Returns the exception message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return exception message"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String getExceptionMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return exceptionMessage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 25
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeInvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class DukeInvalidIndexException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public DukeInvalidIndexException (String exceptionMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        super(exceptionMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 9
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeInvalidStorageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Exception thrown when tasks in the data file do not match the desired format"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class DukeInvalidStorageException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public DukeInvalidStorageException (String exceptionMessage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        super (exceptionMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 11
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeNoTaskDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Exception thrown when the description of a task is not specified by the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class DukeNoTaskDescriptionException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public DukeNoTaskDescriptionException (String exceptionMessage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        super(exceptionMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 11
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Deadline is a subclass of task, with a time by which the task has to be completed"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final String deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Constructor for deadline class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param deadline deadline by which task needs to be completed"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param isDone indicates whether the task has been completed or not"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Deadline (String description, String deadline, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        super (description, \"Deadline\", isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[D][DONE] %s (by: %s)\", this.description, parser.convertDate(deadline));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[D][NOT DONE] %s (by: %s)\", this.description, parser.convertDate(deadline));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 37
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Event is a subclass of task, with a time at which the task occurs"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Constructor for event class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param time time at which the event occurs"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param isDone indicates whether the task has been completed or not"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Event (String description, String time, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        super (description, \"Event\", isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[E][DONE] %s (at: %s)\", this.description, parser.convertDate(time));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[E][NOT DONE] %s (at: %s)\", this.description, parser.convertDate(time));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 37
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Task which Duke keeps track of"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    protected String typeOfTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Constructor for Task class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param typeOfTask type of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param isDone indicates whether the task has been completed or not"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Task (String description, String typeOfTask, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.typeOfTask \u003d typeOfTask;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Sets the boolean isDone to true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Boolean getDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return this.typeOfTask;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[DONE] %s\", this.description);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[NOT DONE] %s\", this.description);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 51
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " * Subclass of task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Constructor for Todo class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param isDone indicates whether the task has been completed or not"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Todo (String description, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        super (description, \"Todo\", isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[T][DONE] %s\", this.description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[T][NOT DONE] %s\", this.description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 25
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Tests convertDate() method in Parser class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void testConvertDate() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assertEquals(\"Jul 15 2000\", new Parser().convertDate(\"2000-07-15\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assertEquals(\"Dec 25 2020\", new Parser().convertDate(\"2020-12-25\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assertEquals(\"Wednesday\", new Parser().convertDate(\"Wednesday\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 17
    }
  },
  {
    "path": "src/test/java/duke/tasks/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void testGetDescription() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assertEquals (\"Sleep\", new Task(\"Sleep\", \"Todo\", false).getDescription());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Tests getDone() method in Task class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void testGetDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assertEquals(true, new Task (\"Ice skate\", \"Todo\", true).getDone());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assertEquals(false, new Task (\"Ice skate\", \"Todo\", false).getDone());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "deadline project /by today"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "event dog"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "event eat ramen /at Thursday 7pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "event ice skating /at 2020-08-26"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "event no /at 2020/09/13"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "blah"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 3,
      "-": 20
    }
  }
]
