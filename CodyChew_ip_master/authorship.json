[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _                    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "   |  _ \\ _   _| | _____  ______ ______ ______  ___  _____"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "   | | | | | | | |/ / _ \\|  __  |__  __|___   |/ _ \\|  _  \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "   | |_| | |_| |   \u003c  __/| |  | |__||__ /   /_\u003c  __/|     /"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|| |  | |______|______|\\___||_|\\__\\ "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 4,
      "-": 22
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        //prints Greeting message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        printGreeting();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        //Initialize Task list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        //Take in Input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        String query \u003d sc.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        //main loop"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        while (!query.equals(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            System.out.println(\"_______________________________________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            //execute instruction \u0026 checks for exception"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                parseInstruction(lst, query);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                System.out.println(\"_______________________________________________________________\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                query \u003d sc.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            System.out.println(\"_______________________________________________________________\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            query \u003d sc.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        //exit Dukenizer"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        printExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    private static void parseInstruction(List\u003cTask\u003e lst, String query) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        //take away leading and trailing white spaces"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        String[] instruction \u003d query.strip().split(\" \", 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        switch (instruction[0]) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                if (instruction.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    printList(lst);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    throw new DukeException(\"Extra inputs detected! Please only input \u0027list\u0027.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                //done with no other arguments"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                if (instruction.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    throw new DukeException(\"Please specify item number!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                //done with exactly 2 inputs"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                else if (instruction.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    //check if second argument is integer"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                        if ((Integer.parseInt(instruction[1]) \u003c 1) || (Integer.parseInt(instruction[1]) \u003e lst.size())) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                            throw new DukeException(\"Please enter a valid item number from the list!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    //second argument wrong format"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                        throw new DukeException(\"Please only input \u0027delete \u003citem number\u003e\u0027 with no other inputs!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    int itemNum \u003d Integer.parseInt(instruction[1]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    deleteItem(lst, itemNum);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                //done with no other arguments"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                if (instruction.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    throw new DukeException(\"Please specify item number!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                //done with exactly 2 inputs"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                else if (instruction.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    //check if second argument is integer"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                        if ((Integer.parseInt(instruction[1]) \u003c 1) || (Integer.parseInt(instruction[1]) \u003e lst.size())) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                            throw new DukeException(\"Please enter a valid item number from the list!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    //second argument wrong format"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                        throw new DukeException(\"Please only input \u0027done \u003citem number\u003e\u0027 with no other inputs!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    int doneIndex \u003d Integer.parseInt(instruction[1]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    doneItem(lst, doneIndex);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                if (instruction.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    addTodo(lst, instruction[1]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                if (instruction.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    //check if contains deadline \" /by \""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    if (instruction[1].contains(\" /by \")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                        addDeadline(lst, instruction[1].split(\" /by \")[0], instruction[1].split(\" /by \")[1]);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                        throw new DukeException(\"Please input in the following format \u0027deadline \u003cdescription\u003e /by \u003ctime\u003e\u0027 \");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                if (instruction.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    //check if contains event \" /at \""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    if (instruction[1].contains(\" /at \")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                        addEvent(lst, instruction[1].split(\" /at \")[0], instruction[1].split(\" /at \")[1]);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                        throw new DukeException(\"Please input in the following format \u0027event \u003cdescription\u003e /at \u003ctime\u003e\u0027 \");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    private static void printExit() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(\"_______________________________________________________________\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(\"_______________________________________________________________\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    private static void printGreeting() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                \" ____        _                    \\n\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                        + \"|  _ \\\\ _   _| | _____  ______ ______ ______  ___  _____\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                        + \"| | | | | | | |/ / _ \\\\|  __  |__  __|___   |/ _ \\\\|  _  \\\\\\n\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                        + \"| |_| | |_| |   \u003c  __/| |  | |__||__ /   /_\u003c  __/|     /\\n\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "                        + \"|____/ \\\\__,_|_|\\\\_\\\\___|| |  | |______|______|\\\\___||_|\\\\__\\\\ \\n\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(\"_______________________________________________________________\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Dukenizer\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(\"_______________________________________________________________\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    private static void printList(List\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        for (int i \u003d 0; i \u003c lst.size(); i++) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            Task targetTask \u003d lst.get(i);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "            System.out.println((i + 1) + \".\" + targetTask.toString());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    private static void addTodo(List\u003cTask\u003e lst, String description) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        Task todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        lst.add(todo);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(todo.toString());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(\"Now you have \" + lst.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    private static void addDeadline(List\u003cTask\u003e lst, String description, String by) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        Task deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        lst.add(deadline);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(deadline.toString());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(\"Now you have \" + lst.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    private static void addEvent(List\u003cTask\u003e lst, String description, String at) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        Task event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        lst.add(event);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(event.toString());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(\"Now you have \" + lst.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    private static void doneItem(List\u003cTask\u003e lst, int itemNumber) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        Task doneItem \u003d lst.get(itemNumber - 1);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        doneItem.markAsDone();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(doneItem.toString());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    private static void deleteItem(List\u003cTask\u003e lst, int itemNumber) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        Task item \u003d lst.get(itemNumber - 1);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(item.toString());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        lst.remove(item);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        System.out.println(\"Now you have \" + lst.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 217,
      "-": 6
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        return this.getMessage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CodyChew": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "if not exist C:\\Data\\repos\\CS2103\\bin mkdir C:\\Data\\repos\\CS2103\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "javac  -cp C:\\Data\\repos\\CS2103\\src\\main\\java -Xlint:none -d C:\\Data\\repos\\CS2103\\bin C:\\Data\\repos\\CS2103\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CodyChew"
        },
        "content": "java -classpath C:\\Data\\repos\\CS2103\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CodyChew"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CodyChew": 9,
      "-": 19
    }
  }
]
