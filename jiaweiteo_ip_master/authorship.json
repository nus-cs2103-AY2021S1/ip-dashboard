[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 16,
      "-": 45
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "T ~ 1 ~ drink water"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "E ~ 1 ~ asdas  ~ Oct 10 2020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "E ~ 1 ~ ssss  ~ Aug 8 2020"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "D ~ 0 ~ sssaasd  ~ Oct 10 2020"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "E ~ 0 ~ ip4  ~ Sep 1 2020"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "E ~ 1 ~ asdas  ~ Oct 10 2020"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "E ~ 1 ~ ssss  ~ Aug 8 2020"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "D ~ 1 ~ sssaasd  ~ Oct 10 2020"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "E ~ 0 ~ ip4  ~ Sep 1 2020"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "D ~ 0 ~ get  ~ Sep 9 2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "E ~ 1 ~ cox  ~ Aug 30 2020"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "T ~ 1 ~ drink water"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Creates deadlines that are a subtype of Task and stores the name of the deadline and its deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private String dueDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initializes an instance of Deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param description Name of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param due Date that the task will be due by."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Deadline(String description, String due) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        LocalDate formatDate \u003d LocalDate.parse(due);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        localDate \u003d formatDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String convertedDate \u003d formatDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        dueDate \u003d convertedDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initializes an instance of Deadline for local storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task Name of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param isDone Status of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param due Date that the task will be due by."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Deadline(String task, boolean isDone, String due) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        dueDate \u003d due;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Gets access to the formatted date."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return Formatted version of date."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String getFormattedDate() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Provides a string describing the Deadline class."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return description of Deadline."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDate + \")\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 57
    }
  },
  {
    "path": "src/main/java/seedu/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Creates Dialogbox for User on GUI."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param text string input from User."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param img User profile picture."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return Dialogbox."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Creates Dialogbox for Duke on GUI."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param text string output from Duke."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param img Duke profile picture."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return Dialogbox."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 75
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Main class to run Duke program. Creates and stores tasks such as todo, event and deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private TaskList taskLists;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initializes the Duke class and creates an instance of Storage, TaskList, Parser and Ui."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            storage \u003d new Storage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            taskLists \u003d new TaskList(storage.loadFromStorage(new ArrayList\u003cTask\u003e()));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            parser \u003d new Parser(taskLists);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            ui \u003d new Ui(parser);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            parser \u003d new Parser(taskLists);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            ui \u003d new Ui(parser);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Returns the output string for GUI."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param input user inputs command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String output for GUI."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            new Timer().schedule(new TimerTask() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                public void run () {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    Platform.exit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }, 3000);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return this.ui.getUserInput(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Runs the Duke program."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        ui.intro();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        while (ui.checkDukeStatus()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            ui.getNewInput();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Standard main method for Java to execute program."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param args Standard Java convection."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 75,
      "-": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Exception class customized for Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Creates events that are a subtype of Task and stores the name of the event and its date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initializes an instance of Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param event Name of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param dateToFormat Date that the event will happen."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Event(String event, String dateToFormat) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        super(event);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        LocalDate formatDate \u003d LocalDate.parse(dateToFormat);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        localDate \u003d formatDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String convertedDate \u003d formatDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        date \u003d convertedDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initializes an instance of Event for local storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task Name of the event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param isDone Status of the event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param dateToFormat Date that the event will happen."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Event(String task, boolean isDone, String dateToFormat) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        date \u003d dateToFormat;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Date of event formatted."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return Formatted version of date."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String getFormattedDate() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Provides a string describing the Event class."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return description of Event."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 57
    }
  },
  {
    "path": "src/main/java/seedu/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/Patrick.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Image dukeProgram \u003d new Image(this.getClass().getResourceAsStream(\"/images/Spongebob.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String dukeIntro \u003d \"Hi I\u0027m Duke! I help create and store tasks for you! How can I help you today?\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                DialogBox.getDukeDialog(dukeIntro, dukeProgram)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                DialogBox.getUserDialog(input, user),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeProgram)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 56
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Parser processes each command from Ui and executes program accordingly."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private TaskList taskLists;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initializes an instance of a Parser."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param tasks List of Tasks stored in a TaskList class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Parser(TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        taskLists \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Checks for invalid inputs."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param input String that is input by user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @throws DukeException if input does not contain any of the keywords in the method."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void checkForInvalidInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (!input.contains(\"todo\") \u0026\u0026 !input.contains(\"deadline\") \u0026\u0026 !input.contains(\"event\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                \u0026\u0026 !input.contains(\"done\") \u0026\u0026 !input.contains(\"bye\") \u0026\u0026 !input.contains(\"list\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                \u0026\u0026 !input.contains(\"delete\") \u0026\u0026 !input.contains(\"find\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Ui.printLines();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            throw new DukeException(\"I don\u0027t know what that means! Try again.\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    + \"\\n-----------------------------------------------\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Processes input by user from CLI and execute accordingly."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param input String input by user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void readCliInput(String input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            this.checkForInvalidInput(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                this.showTaskList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                taskLists.completeTask(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                taskLists.deleteTask(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                taskLists.addToDo(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                taskLists.addDeadline(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                taskLists.addEvent(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"find\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                taskLists.find(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Takes in input by user from GUI and return Duke output."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param input String input by user."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String output processed by Duke."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String readGuiInput(String input) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            this.checkForInvalidInput(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                return this.showTaskListToString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                return taskLists.completeTaskToString(input);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                return taskLists.deleteTaskToString(input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                return taskLists.addToDoToString(input);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                return taskLists.addDeadlineToString(input);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                return taskLists.addEventToString(input);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"find\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                return taskLists.findToString(input);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                return \"Not valid input!\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Print out list of Tasks."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void showTaskList() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Ui.print(taskLists.toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String showTaskListToString() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return taskLists.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 103
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Class that store, read and write data to local txt file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private static final String DIRECTORY_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private static final String STORAGE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initializes an instance of Storage class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Creates new folder and file if directory did not exist."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @throws IOException If invalid path name given."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Storage() throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        File folderDirectory \u003d new File(DIRECTORY_PATH);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (!folderDirectory.exists()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            folderDirectory.mkdir();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        File txt \u003d new File(STORAGE_PATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (!txt.exists()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            txt.createNewFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Erases and wipe out all data in the txt file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @throws IOException If invalid path name given."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private static void clearTasks() throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        FileWriter storageWriter \u003d new FileWriter(STORAGE_PATH, false);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        storageWriter.write(\"\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        storageWriter.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Writes new task to local txt file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task Name of the task to be written."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @throws IOException If invalid path name given."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static void addTask(String task) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        File data \u003d new File(STORAGE_PATH);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        FileWriter writer \u003d new FileWriter(data, true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        writer.write(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        writer.write(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Loads up existing data in a txt file stored in locally when Duke program starts."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param listOfTasks of tasks stored in ArrayList."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return Arraylist storing Tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @throws FileNotFoundException If no file is found on the local directory."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @throws IOException If invalid input given."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static ArrayList\u003cTask\u003e loadFromStorage(ArrayList\u003cTask\u003e listOfTasks) throws FileNotFoundException, IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        File data \u003d new File(STORAGE_PATH);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        FileReader fr \u003d new FileReader(data);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String tasks \u003d \"\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            tasks \u003d br.readLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            if (tasks \u003d\u003d null) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String[] arrTasks \u003d tasks.split(\" ~ \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String typeOfTask \u003d arrTasks[0];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String isDone \u003d arrTasks[1];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String nameOfTask \u003d arrTasks[2];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            if (typeOfTask.equals(\"T\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Todo tempTodo;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    tempTodo \u003d new Todo(nameOfTask, true);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    tempTodo \u003d new Todo(nameOfTask, false);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                listOfTasks.add(tempTodo);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (typeOfTask.equals(\"D\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                String date \u003d arrTasks[3];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Deadline tempDeadline;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    tempDeadline \u003d new Deadline(nameOfTask, true, date);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    tempDeadline \u003d new Deadline(nameOfTask, false, date);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                listOfTasks.add(tempDeadline);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (typeOfTask.equals(\"E\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                String date \u003d arrTasks[3];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Event tempEvent;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    tempEvent \u003d new Event(nameOfTask, true, date);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    tempEvent \u003d new Event(nameOfTask, false, date);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                listOfTasks.add(tempEvent);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Makes task as complete in a local txt file."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param taskNo Index of the task."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param size Size of tasklist."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static void completeTaskOnFile(int taskNo, int size) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            File data \u003d new File(STORAGE_PATH);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            FileReader fr \u003d new FileReader(data);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            ArrayList\u003cString\u003e tempArr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                String task \u003d br.readLine();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (i \u003d\u003d taskNo) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    String tempTask \u003d task.replaceFirst(\"0\", \"1\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    task \u003d tempTask;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                tempArr.add(task);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.clearTasks();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Storage.addTask(tempArr.get(i));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException ee) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(ee.getMessage());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Deletes a task locally from the txt file."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param index Index of the task."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param size Size of the tasklist."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static void deleteTaskOnFile(int index, int size) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            File data \u003d new File(STORAGE_PATH);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            FileReader fr \u003d new FileReader(data);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            ArrayList\u003cString\u003e tempArr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            for (int i \u003d 0; i \u003c\u003d size; i++) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                String task \u003d br.readLine();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (i !\u003d index) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    tempArr.add(task);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.clearTasks();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            for (int i \u003d 0; i \u003c tempArr.size(); i++) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Storage.addTask(tempArr.get(i));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException ee) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(ee.getMessage());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 172
    }
  },
  {
    "path": "src/main/java/seedu/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Provide properties of a task to be completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initializes a task class that is not completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param taskName Name of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        task \u003d taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initializes a task class that is not completed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param taskName Name of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param status Status of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Task(String taskName, boolean status) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        task \u003d taskName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        isDone \u003d status;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Gets status of a task in a form of a tick or cross."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return Status of a task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return isDone ? \"[DONE]\" : \"[NOT DONE]\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Name of the task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return Description of a task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Status of a task in a form of a boolean."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return true or false depending on whether a task is completed."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return getStatus() + \" \" + getTask();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Converts a task to a string to be saved locally in a txt file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task name of a task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String formatted to be saved in a txt file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String getStorageString(String task) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String done \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            done \u003d \"0\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return task + \" ~ \" + done + \" ~ \" + getTask();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Converts a task to a string to be saved locally in a txt file."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task name of a task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param date date of a task for Event or Deadline."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String formatted to be saved in a txt file."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String getStorageString(String task, String date) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return task + \" ~ \" + (isDone ? \"1\" : \"0\") + \" ~ \" + getTask() + \" ~ \" + date;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 97
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.lang.reflect.InvocationTargetException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Class that stores all the tasks in an arraylist."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private ArrayList\u003cTask\u003e taskLists;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initializes an instance of Tasklist."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param listOfTasks Arraylist of Tasks to be completed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        taskLists \u003d listOfTasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Checks if a input for a new task is valid."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param input Name of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task Task type."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @throws DukeException if empty input is given."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void checkForItem(String input, String task) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (input.isBlank()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            throw new DukeException(\"The description of a \" + task + \" cannot be empty!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Marks the task as done in a list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param userInput Task to be completed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void completeTask(String userInput) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String[] splitUserInput \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            int index \u003d Integer.parseInt(splitUserInput[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            if (index \u003c 1 || index \u003e taskLists.size()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Ui.print(\"Index out of range! Try Again.\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (taskLists.get(index - 1).getIsDone()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    Ui.print(\"This task has already been completed!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    taskLists.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    Storage.completeTaskOnFile(index - 1, taskLists.size());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    String info \u003d \"  Nice! I have marked this task as done:\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    info +\u003d taskLists.get(index - 1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    Ui.print(info);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Ui.print(\"Index out of range! Try again.\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Ui.print(\"Missing index! Try again.\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Marks the task as done in a list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param userInput Task to be completed."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String output after completing Task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String completeTaskToString(String userInput) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            if  (userInput.length() \u003c 5) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                return (\"No index found! Try Again.\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String[] splitUserInput \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            int index \u003d Integer.parseInt(splitUserInput[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            if (index \u003c 1 || index \u003e taskLists.size()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                return (\"Index out of range! Try Again.\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (taskLists.get(index - 1).getIsDone()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    return (\"This task has already been completed!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    taskLists.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    Storage.completeTaskOnFile(index - 1, taskLists.size());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    String info \u003d \"  Nice! I have marked this task as done:\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    info +\u003d taskLists.get(index - 1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    return info;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return \"Index out of range! Try again.\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return \"Missing index! Try again.\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Task to be deleted from tasklist."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param userInput String of the task to be deleted."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void deleteTask(String userInput) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String[] splitUserInput \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        int index \u003d Integer.parseInt(splitUserInput[1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (index \u003c 1 || index \u003e taskLists.size()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Ui.print(\"Index out of range! Try Again.\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String info \u003d \"Noted. I have removed this task:\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"  \" + taskLists.get(index - 1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            taskLists.remove(index - 1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.deleteTaskOnFile(index - 1, taskLists.size());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"Now you have \" + taskLists.size() + \" tasks in the list\" + \"\\n\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Ui.print(info);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Task to be deleted from tasklist."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param userInput String of the task to be deleted."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String output after deleting task."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String deleteTaskToString(String userInput) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String[] splitUserInput \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        int index \u003d Integer.parseInt(splitUserInput[1]);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (index \u003c 1 || index \u003e taskLists.size()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return (\"Index out of range! Try Again.\\n\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String info \u003d \"Noted. I have removed this task:\\n\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"  \" + taskLists.get(index - 1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            taskLists.remove(index - 1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.deleteTaskOnFile(index - 1, taskLists.size());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"Now you have \" + taskLists.size() + \" tasks in the list\" + \"\\n\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return info;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Todo to be added to tasklist."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param userInput String of the todo."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void addToDo(String userInput) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            checkForItem(userInput.substring(4), \"todo\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String task \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String info \u003d (\"Got it. I have added this task:\\n\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Todo tempTodo \u003d new Todo(task);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.addTask(tempTodo.getStorageString(\"T\"));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"  \" + tempTodo.toString() + \"\\n\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            taskLists.add(tempTodo);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"Now you have \" + taskLists.size() + \" tasks in the list\\n\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Ui.print(info);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Todo to be added to tasklist."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param userInput String of the todo."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String output after creating Todo object."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String addToDoToString(String userInput) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            checkForItem(userInput.substring(4), \"todo\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String task \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String info \u003d (\"Got it. I have added this task:\\n\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Todo tempTodo \u003d new Todo(task);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.addTask(tempTodo.getStorageString(\"T\"));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"  \" + tempTodo.toString() + \"\\n\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            taskLists.add(tempTodo);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"Now you have \" + taskLists.size() + \" tasks in the list\\n\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return info;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return err.getMessage();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Deadline to be added to tasklist."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param userInput String of the deadline."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void addDeadline(String userInput) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            checkForItem(userInput.substring(8), \"deadline\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            int dateIndex \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String task \u003d userInput.substring(9, dateIndex);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String time \u003d userInput.substring(dateIndex + 1);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String info \u003d \"Got it. I have added this task:\\n\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Deadline tempDeadline \u003d new Deadline(task, time);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String formatDate \u003d tempDeadline.getFormattedDate();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"  \" + tempDeadline.toString() + \"\\n\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            taskLists.add(tempDeadline);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.addTask(tempDeadline.getStorageString(\"D\", formatDate));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"Now you have \" + taskLists.size() + \" tasks in the list\\n\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Ui.print(info);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Deadline to be added to tasklist."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param userInput String of the deadline."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String output after creating Deadline object."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String addDeadlineToString(String userInput) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            checkForItem(userInput.substring(8), \"deadline\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            int dateIndex \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String task \u003d userInput.substring(9, dateIndex);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String time \u003d userInput.substring(dateIndex + 1);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String info \u003d \"Got it. I have added this task:\\n\";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Deadline tempDeadline \u003d new Deadline(task, time);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String formatDate \u003d tempDeadline.getFormattedDate();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"  \" + tempDeadline.toString() + \"\\n\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            taskLists.add(tempDeadline);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.addTask(tempDeadline.getStorageString(\"D\", formatDate));"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"Now you have \" + taskLists.size() + \" tasks in the list\\n\";"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return info;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return err.getMessage();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Event to be added to the tasklist."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param userInput String of the event."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void addEvent(String userInput) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            checkForItem(userInput.substring(5), \"event\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            int dateIndex \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String task \u003d userInput.substring(6, dateIndex);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String time \u003d userInput.substring(dateIndex + 1);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String info \u003d \"Got it. I have added this task:\\n\";"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Event tempEvent \u003d new Event(task, time);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String formatDate \u003d tempEvent.getFormattedDate();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"  \" + tempEvent.toString() + \"\\n\";"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.addTask(tempEvent.getStorageString(\"E\", formatDate));"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            taskLists.add(tempEvent);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"Now you have \" + taskLists.size() + \" tasks in the list\\n\";"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Ui.print(info);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Event to be added to the tasklist."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param userInput String of the event."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String output after creating Event object."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String addEventToString(String userInput) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            checkForItem(userInput.substring(5), \"event\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            int dateIndex \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String task \u003d userInput.substring(6, dateIndex);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String time \u003d userInput.substring(dateIndex + 1);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String info \u003d \"Got it. I have added this task:\\n\";"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Event tempEvent \u003d new Event(task, time);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String formatDate \u003d tempEvent.getFormattedDate();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"  \" + tempEvent.toString() + \"\\n\";"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.addTask(tempEvent.getStorageString(\"E\", formatDate));"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            taskLists.add(tempEvent);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"Now you have \" + taskLists.size() + \" tasks in the list\\n\";"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return info;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return err.getMessage();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Finds tasks that contain the keyword in the string input."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param input Keyword that is used to find related tasks."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void find(String input) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            checkForItem(input.substring(5), \"find\");"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            ArrayList\u003cTask\u003e keywordInTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            for (int i \u003d 0; i \u003c taskLists.size(); i++) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Task current \u003d taskLists.get(i);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (current.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    keywordInTasks.add(current);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            if (keywordInTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Ui.print(\"There are no tasks related to this keyword!\");"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                String info \u003d \"Here are the matching tasks in your list: \\n\";"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                for (int i \u003d 0; i \u003c keywordInTasks.size(); i++) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    info +\u003d keywordInTasks.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Ui.print(info);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Finds tasks that contain the keyword in the string input."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param input Keyword that is used to find related tasks."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String output after finding keyword in TaskList."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String findToString(String input) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            checkForItem(input.substring(5), \"find\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            ArrayList\u003cTask\u003e keywordInTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            for (int i \u003d 0; i \u003c taskLists.size(); i++) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Task current \u003d taskLists.get(i);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (current.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    keywordInTasks.add(current);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            if (keywordInTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                return \"There are no tasks related to this keyword!\";"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                String info \u003d \"Here are the matching tasks in your list: \\n\";"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                for (int i \u003d 0; i \u003c keywordInTasks.size(); i++) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    info +\u003d keywordInTasks.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                return info;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return err.getMessage();"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Iterates through the arraylist of tasks and print it out."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String describing each tasks in the list."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String temp \u003d \"\";"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        temp +\u003d (\"  Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        for (int i \u003d 0; i \u003c taskLists.size(); i++) {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            temp +\u003d (\"  \" + (i + 1) + \". \" + taskLists.get(i).toString() + \" \\n\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 368
    }
  },
  {
    "path": "src/main/java/seedu/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Create Todos that are a subtype of Task and stores the name of the Todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initializes an instance of Todo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task Name of the Todo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initializes an instance of Todo."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task Name of the Todo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param isDone Status of the Todo."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Todo(String task, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Provide a description of a Todo instance."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String describing Todo."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Main class that interacts with user inputs."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private static final String LINES \u003d \"------------------------------------------------\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private static final String INTRO \u003d \"Hello! I\u0027m Duke!\\n\" + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Parser parse;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private boolean isAlive \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initializes an instance of Ui."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param parser Parser to be part of Ui."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Ui(Parser parser) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        parse \u003d parser;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Ui() throws NullPointerException {}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Prints out introduction when Duke start up."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void intro() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        System.out.println(LINES + INTRO + LINES);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Static method to print out divider lines."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static void printLines() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        System.out.println(LINES);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Gets userInput from user on CLI."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void getNewInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        parse.readCliInput(userInput);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            discontinue();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Gets userInput from GUI users."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param input string input from GUI."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String output by DUI on GUI."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String getUserInput(String input) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return Ui.endDuke();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String output \u003d parse.readGuiInput(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Gets status of Ui."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return false if \"bye\" command is input by user. Otherwise, true."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public boolean checkDukeStatus() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return isAlive;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Sets boolean isAlive to false. s duke program."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void discontinue() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        isAlive \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Prints out output from Parser."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param input String that is processed by Parser."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static void print(String input) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Ui.printLines();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        System.out.println(input);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Ui.printLines();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Method to end Duke Program when user input \"Bye\"."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Ui.printLines();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        System.out.println(\"    Bye! Hope to see you again soon.\" + \"\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Ui.printLines();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Static method to end Duke GUI when user input \"Bye\"."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static String endDuke() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String goodBye \u003d \"Bye! Hope to see you again soon.\" + \"\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String exit \u003d goodBye;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 112
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 19
    }
  },
  {
    "path": "src/test/java/seedu/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void constructor_validCreation_success() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        assertEquals(\"[D][✘] Dinner (by: Aug 24 2020)\", new Deadline(\"Dinner\", \"2020-08-24\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void storageString_validString_success() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        assertEquals(\"D ~ 0 ~ Dinner ~ Aug 24 2020\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                new Deadline(\"Dinner\", \"2020-08-24\").getStorageString(\"D\", \"Aug 24 2020\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 18
    }
  },
  {
    "path": "src/test/java/seedu/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void constructor_validCreation_success() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        assertEquals(\"[E][✘] Dinner (at: Aug 24 2020)\", new Event(\"Dinner\", \"2020-08-24\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void storageString_validString_success() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        assertEquals(\"D ~ 0 ~ Dinner ~ Aug 24 2020\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                new Event(\"Dinner\", \"2020-08-24\").getStorageString(\"D\", \"Aug 24 2020\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 18
    }
  },
  {
    "path": "src/test/java/seedu/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void constructor_validCreation_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        assertEquals(\"[T][✘] Dinner\", new Todo(\"Dinner\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void constructor_validTask_failure() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        assertEquals(\"Dinner\", new Todo(\"Dinner\").getTask());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 18
    }
  },
  {
    "path": "src/test/java/seedu/duke/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void constructor_validCreation_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        assertEquals(true, new Ui(new Parser(new TaskList(new ArrayList\u003cTask\u003e()))).checkDukeStatus());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void stopDuke_setStatusToFalse_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Ui stopDuke \u003d new Ui(new Parser(new TaskList(new ArrayList\u003cTask\u003e())));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        stopDuke.discontinue();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        assertEquals(false, stopDuke.checkDukeStatus());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "todo eat noodles"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "deadline homework /August 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "SET MY_PATH\u003dC:\\Users\\Jiawe\\Desktop\\Jia Wei Uni Documents\\Year 2 Sem 1\\CS2103\\IP"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "javac  -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\Duke.java\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "java -classpath \"%MY_PATH%\\bin\" Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 5,
      "-": 18
    }
  }
]
