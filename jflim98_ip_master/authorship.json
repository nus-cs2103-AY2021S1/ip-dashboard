[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 14
    }
  },
  {
    "path": "src/main/java/DeleteOutOfRangeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class DeleteOutOfRangeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public DeleteOutOfRangeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! Such a task does not exist.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 9
    }
  },
  {
    "path": "src/main/java/DoneOutOfRangeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class DoneOutOfRangeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public DoneOutOfRangeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! Such a task does not exist.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 9
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private final static String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private final static String bar \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private final static String greeting \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            + \"What can I do for you?\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private final static String goodbye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    //----- level 3 here -----"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private static int count \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private final static String done \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    //----- level 4 here -----"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private final static String add \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(\"Hello from\\n\" + Duke.logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(Duke.bar);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(Duke.greeting);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(Duke.bar);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        while (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            System.out.println(Duke.bar);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                if (userInput.length() \u003e\u003d 4 \u0026\u0026 userInput.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    if (userInput.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        throw new MissingDoneArgumentException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    int index \u003d Integer.parseInt(userInput.substring(5)) - 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    if (index \u003e\u003d Duke.count || index \u003c 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        throw new DoneOutOfRangeException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    Duke.list.get(index).markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    System.out.println(Duke.done);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    System.out.println(\"  \" + Duke.list.get(index));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                } else if (userInput.length() \u003e\u003d 6 \u0026\u0026 userInput.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    if (userInput.length() \u003c\u003d 7) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        throw new MissingDeleteArgumentException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    int index \u003d Integer.parseInt(userInput.substring(7)) - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    if (index \u003e\u003d Duke.count || index \u003c 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        throw new DeleteOutOfRangeException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    Task toDelete \u003d Duke.list.get(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    Duke.list.remove(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    Duke.count--;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    System.out.println(\"  \" + toDelete);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    System.out.println(\"Now you have \" + Duke.count + (Duke.count\u003d\u003d1?\" task \":\" tasks \") + \"in the list.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                } else if (userInput.length() \u003e\u003d 4 \u0026\u0026 userInput.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    if (userInput.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        throw new EmptyTodoException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    String description \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        throw new EmptyTodoException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    ToDo taskToAdd \u003d new ToDo(description);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    Duke.count++;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    Duke.list.add(taskToAdd);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    System.out.println(add);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    System.out.println(\"  \" + taskToAdd);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    System.out.println(\"Now you have \" + Duke.count + (Duke.count\u003d\u003d1?\" task \":\" tasks \") + \"in the list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                } else if (userInput.length() \u003e\u003d 8 \u0026\u0026 userInput.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    int index \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        throw new MissingDeadlineDateException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    if (userInput.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        throw new EmptyDeadlineException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    String description \u003d userInput.substring(9,index-1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        throw new EmptyDeadlineException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    String date \u003d userInput.substring(index+4);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    if (date.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        throw new MissingDeadlineDateException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    Deadline taskToAdd \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    Duke.count++;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    Duke.list.add(taskToAdd);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    System.out.println(add);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    System.out.println(\"  \" + taskToAdd);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    System.out.println(\"Now you have \" + Duke.count + (Duke.count\u003d\u003d1?\" task \":\" tasks \") + \"in the list.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                } else if (userInput.length() \u003e\u003d 5 \u0026\u0026 userInput.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    int index \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        throw new MissingEventDateException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    if (userInput.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        throw new EmptyEventException();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    String description \u003d userInput.substring(6,index-1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        throw new EmptyEventException();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    String date \u003d userInput.substring(index+4);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    if (date.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        throw new MissingEventDateException();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    Event taskToAdd \u003d new Event(description, date);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    Duke.count++;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    Duke.list.add(taskToAdd);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    System.out.println(add);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    System.out.println(\"  \" + taskToAdd);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    System.out.println(\"Now you have \" + Duke.count + (Duke.count\u003d\u003d1?\" task \":\" tasks \") + \"in the list.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                } else if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    for (int i \u003d 0; i \u003c Duke.count; i++) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                        System.out.println(i+1 + \". \" + list.get(i));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                    throw new UnknownCommandException();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (MissingDoneArgumentException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (EmptyEventException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (MissingEventDateException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (MissingDeadlineDateException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (EmptyDeadlineException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (EmptyTodoException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (DoneOutOfRangeException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (MissingDeleteArgumentException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            } catch (DeleteOutOfRangeException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jflim98"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            System.out.println(Duke.bar);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jflim98"
        },
        "content": "            userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(Duke.bar);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(Duke.goodbye);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        System.out.println(Duke.bar);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 145,
      "-": 8
    }
  },
  {
    "path": "src/main/java/EmptyDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class EmptyDeadlineException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public EmptyDeadlineException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 9
    }
  },
  {
    "path": "src/main/java/EmptyEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class EmptyEventException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public EmptyEventException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 9
    }
  },
  {
    "path": "src/main/java/EmptyTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class EmptyTodoException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public EmptyTodoException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 14
    }
  },
  {
    "path": "src/main/java/MissingDeadlineDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class MissingDeadlineDateException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public MissingDeadlineDateException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! The date of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 9
    }
  },
  {
    "path": "src/main/java/MissingDeleteArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class MissingDeleteArgumentException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public MissingDeleteArgumentException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! You have to specify which task you want to delete.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 9
    }
  },
  {
    "path": "src/main/java/MissingDoneArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class MissingDoneArgumentException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public MissingDoneArgumentException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! You have to specify which task you want to mark as done.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 9
    }
  },
  {
    "path": "src/main/java/MissingEventDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class MissingEventDateException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public MissingEventDateException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! The date of an event cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 9
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 17
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 11
    }
  },
  {
    "path": "src/main/java/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jflim98"
        },
        "content": "public class UnknownCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        super(\"\\uD83D\\uDE41 OOPS! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jflim98"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jflim98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jflim98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jflim98": 9
    }
  }
]
