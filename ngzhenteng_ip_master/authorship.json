[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    String taskType \u003d \"D\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String formattedDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        String[] splitBySlash \u003d super.description.split(\"/\", 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        String[] splitBySpace \u003d splitBySlash[1].split(\" \", 2);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return splitBySlash[0] + \"(\" + splitBySpace[0] + \": \" + splitBySpace[1]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return \"[\" + taskType + \"]\" + \"[\" + super.getStatusIcon()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                + \"] \" + formattedDescription();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import main.java.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    // this method prints a horizontal line of fixed length"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public static void horiLine(int length) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        for (int i \u003d 0; i \u003c length; i++) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            System.out.print(\"-\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            if (i \u003d\u003d length - 1) System.out.println(\"\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public static void invalidInput(String errMsg) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        DukeException exception \u003d new DukeException(errMsg);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    // Note that all the outputs are formatted with two spaces before."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        // welcome message"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        horiLine(60);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        System.out.println(\"  Hello! I\u0027m IntelliGent!\\n  What can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        horiLine(60);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            String nextInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            String[] commandComponents \u003d nextInput.split(\" \", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            String taskType \u003d commandComponents[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            if (nextInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                horiLine(60);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                System.out.println(\"  Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                horiLine(60);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                sc.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            } else if (nextInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                horiLine(60);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    System.out.println(\"  \" + (i+1) + \".\" + taskList.get(i));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                horiLine(60);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            } else if (commandComponents[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                horiLine(60);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(commandComponents[1]) - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                Task toMark \u003d taskList.get(taskIndex);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                toMark.markDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                System.out.println(\"  Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                System.out.println(\"    \" + toMark.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                horiLine(60);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            } else if (commandComponents[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                horiLine(60);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(commandComponents[1]) - 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                Task toDisplay \u003d taskList.get(taskIndex);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                System.out.println(\"  Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                System.out.println(\"    \" + toDisplay.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                System.out.println(\"  Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                horiLine(60);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                // 1. split the input based on the first word(task type)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                // 2. if there is a valid string after the first word, work as intended"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                // 3. else display corresponding error."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                // adding tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                horiLine(60);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                Task taskToAdd;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    // Event task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    if (commandComponents.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        // description is empty"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        invalidInput(\"  \\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                            taskToAdd \u003d new Event(commandComponents[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                            System.out.println(\"  Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                                    + \"    \" + taskToAdd.toString() + \"\\n  Now you have \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                                    + (taskList.size()+1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                            taskList.add(taskToAdd);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                            invalidInput(\"  \\u2639 OOPS!!! An event task must be input with a forward slash and the deadline\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    // Deadline Task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    if (commandComponents.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        // description is empty"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        invalidInput(\"  \\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                            // the exception is thrown when we call the toString method."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                            taskToAdd \u003d new Deadline(commandComponents[1]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                            System.out.println(\"  Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                                    + \"    \" + taskToAdd.toString() + \"\\n  Now you have \""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                                    + (taskList.size()+1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                            taskList.add(taskToAdd);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                            invalidInput(\"  \\u2639 OOPS!!! A deadline task must be input with a forward slash and the deadline\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                } else if (taskType.equals(\"todo\")){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    // Todo task"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    if (commandComponents.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        // description is empty"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        invalidInput(\"  \\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        taskToAdd \u003d new Todo(commandComponents[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        System.out.println(\"  Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                                + \"    \" + taskToAdd.toString() + \"\\n  Now you have \""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                                + (taskList.size()+1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        taskList.add(taskToAdd);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    // invalid input, detect it and create a DukeException,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    // display the error message."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    invalidInput(\"  \\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                // include done to the test cases"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                horiLine(60);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 122,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    String taskType \u003d \"E\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String formattedDescription() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        String[] splitBySlash \u003d super.description.split(\"/\", 2);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        String[] splitBySpace \u003d splitBySlash[1].split(\" \", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return splitBySlash[0] + \"(\" + splitBySpace[0] + \": \" + splitBySpace[1]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return \"[\" + taskType + \"]\" + \"[\" + super.getStatusIcon()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                + \"] \" + formattedDescription();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 22
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public void markUndone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 28
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    String taskType \u003d \"T\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return \"[\" + taskType + \"]\" + \"[\" + super.getStatusIcon()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                + \"] \" + super.description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "return book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "todo buy iPhone"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "deadline CS2103T Assignment /by Thursday 2359"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "deadline sleep /by 3am"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "deadline invalid with no \\by ..."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "event invalid with no \\by ..."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "blah"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "1 done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 18
    }
  }
]
