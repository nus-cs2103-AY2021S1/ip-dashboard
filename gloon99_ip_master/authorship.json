[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "[E][✘] project meeting (at: Monday 10pm)"
      }
    ],
    "authorContributionMap": {
      "gloon99": 3
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return \"byebye! hope to see you again soon :-)\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 6
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public abstract class Command implements Execute {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static int completedTasks \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static int uncompletedTasks \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static String numberOfTasks() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"you have [\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(Command.uncompletedTasks).append(\"] uncompleted task(s) and [\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(Command.completedTasks).append(\"] completed task(s)\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static String returnList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (Command.tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            return \"there are no tasks in the list\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Iterator i \u003d tasks.iterator();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(counter + \". \").append(i.next());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            while (i.hasNext()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                sb.append(\"\\n\").append(counter + \". \").append(i.next());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 34
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    protected LocalDate deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public Deadline(String deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(deadline.substring(9, deadline.indexOf(\"/\")-1));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.deadline \u003d LocalDate.parse(deadline.substring(deadline.indexOf(\"/\")+4));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"[D]\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(super.toString())"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\" (\").append(\"by: \")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")))"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\")\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 21
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class DeadlineCommand extends TaskCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    DeadlineCommand(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute() throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (description.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            throw new EmptyDescriptionException(\"oops! the description of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Deadline deadline \u003d new Deadline(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Command.tasks.add(deadline);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Command.uncompletedTasks++;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            return super.commandResult(deadline);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 17
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class DeleteCommand extends EditCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(taskNumber);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute () {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Task task \u003d (Task) Command.tasks.remove(super.taskNumber - 1);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"sure thing. i have removed this task: \\n    \")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(task).append(\"\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Command.completedTasks--;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Command.uncompletedTasks--;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(Command.numberOfTasks());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        FileUpdater.updateFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 26
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class DoneCommand extends EditCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(taskNumber);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Task task \u003d (Task) Command.tasks.get(super.taskNumber - 1);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"yay! i have marked this task as done: \\n    \").append(task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Command.uncompletedTasks--;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Command.completedTasks++;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (Command.uncompletedTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(\"\\n\").append(\"woohoo! you have no more uncompleted tasks left\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(\"\\n\").append(Command.numberOfTasks());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        FileUpdater.updateFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        File f \u003d new File(\"data\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            f.mkdir();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            File duke \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            if (!duke.exists()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                duke.createNewFile();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        UpdateListFromFile.updateList(\"data/duke.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        System.out.println(new GreetCommand().execute());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Responder.responder();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 21,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 5
    }
  },
  {
    "path": "src/main/java/EditCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public abstract class EditCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    protected int taskNumber;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    EditCommand(int taskNumber) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 7
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    protected LocalDate eventTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public Event(String event) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(event.substring(6, event.indexOf(\"/\")-1));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.eventTime \u003d LocalDate.parse(event.substring(event.indexOf(\"/\")+4));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"[E]\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(super.toString())"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\" (\").append(\"at: \")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(this.eventTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")))"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\")\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 21
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class EventCommand extends TaskCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    EventCommand(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute() throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (description.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            throw new EmptyDescriptionException(\"oops! the description of an event cannot be empty\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Event event \u003d new Event(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Command.tasks.add(event);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Command.uncompletedTasks++;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            return super.commandResult(event);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 17
    }
  },
  {
    "path": "src/main/java/Execute.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public interface Execute {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute() throws EmptyDescriptionException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 3
    }
  },
  {
    "path": "src/main/java/FileUpdater.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class FileUpdater {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static void updateFile() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Iterator i \u003d Command.tasks.iterator();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            while (i.hasNext()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                fw.write(i.next().toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 22
    }
  },
  {
    "path": "src/main/java/GreetCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class GreetCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(logo).append(\"\\n\")"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"hello! i\u0027m duke :-)\\n\")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"how may i help you?\\n\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"--------------------------------------------------------------\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 16
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"here are the tasks in your list:\\n\")"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(Command.returnList());"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 9
    }
  },
  {
    "path": "src/main/java/ReadIn.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class ReadIn {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static String readIn() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        input \u003d scan.nextLine();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 12
    }
  },
  {
    "path": "src/main/java/Responder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Responder {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static void responder() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String input \u003d ReadIn.readIn();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String firstWord \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(\"--------------------------------------------------------------\\n\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                if (firstWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(new ByeCommand().execute());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(\"\\n--------------------------------------------------------------\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    System.out.println(sb.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else if (firstWord.equals(\"list\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(new ListCommand().execute());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else if (firstWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int i \u003d Integer.valueOf(input.substring(5));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(new DoneCommand(i).execute());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else if (firstWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int i \u003d Integer.valueOf(input.substring(7));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(new DeleteCommand(i).execute());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(new ToDoCommand(input).execute());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(new DeadlineCommand(input).execute());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else if (firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(new EventCommand(input).execute());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    throw new DukeException(\"oops! im sorry, but i do not know what that means :-(\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                sb.append(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                sb.append(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(\"\\n--------------------------------------------------------------\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            System.out.println(sb.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            input \u003d ReadIn.readIn();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            firstWord \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 44
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"[\").append(this.getStatus()).append(\"] \").append(this.description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 27
    }
  },
  {
    "path": "src/main/java/TaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public abstract class TaskCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    TaskCommand(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    protected String commandResult(Task task) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"yay! i have added this task to your list: \\n    \")"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(task).append(\"\\n\")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(Command.numberOfTasks());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        FileUpdater.updateFile();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 16
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public ToDo(String todo) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(todo.substring(5));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 9
    }
  },
  {
    "path": "src/main/java/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class ToDoCommand extends TaskCommand{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    ToDoCommand(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute() throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (description.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            throw new EmptyDescriptionException(\"oops! the description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            ToDo todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Command.tasks.add(todo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Command.uncompletedTasks++;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            return super.commandResult(todo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 17
    }
  },
  {
    "path": "src/main/java/UpdateListFromFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class UpdateListFromFile {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static void updateList(String filePath) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            String string;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Command command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                string \u003d s.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                if (string.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int deadline \u003d string.indexOf(\"(\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int space \u003d string.indexOf(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int colon \u003d string.indexOf(\":\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    String description \u003d \"deadline \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                            + string.substring(space + 1, deadline) + \"/\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                            + string.substring(deadline + 1, colon)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                            + string.substring(colon + 1, string.length()-1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    command \u003d new DeadlineCommand(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else if (string.contains(\"[E]\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int time \u003d string.indexOf(\"(\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int space \u003d string.indexOf(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int colon \u003d string.indexOf(\":\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    String description \u003d \"event \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                            + string.substring(space + 1, time) + \"/\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                            + string.substring(time + 1, colon)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                            + string.substring(colon + 1, string.length()-1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    command \u003d new EventCommand(description);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int space \u003d string.indexOf(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    String description \u003d \"todo \" + string.substring(7);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    command \u003d new ToDoCommand(description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                command.execute();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                if (string.contains(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    new DoneCommand(counter).execute();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                counter +\u003d 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            e.getMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 56
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "gloon99": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "gloon99": 6,
      "-": 32
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/EventCommand.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/EmptyDescriptionException.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/TaskCommand.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/ByeCommand.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/DeleteCommand.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/ListCommand.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/ReadIn.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Command.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/ToDoCommand.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Execute.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/EditCommand.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/DeadlineCommand.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/GreetCommand.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/DoneCommand.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/ToDo.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Responder.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "gloon99": 21
    }
  }
]
