[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "compileJava.options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 24,
      "-": 46
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "T , 1 , read book "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "D , 1 , return book , 2020-09-12"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "E , 0 , book fair , 2020-10-19"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " * Represents a task that needs to be done before a specific time."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Creates Deadline object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param by Deadline of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Creates Deadline object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param done Done state of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param by Deadline of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public Deadline(String done, String description, LocalDate by) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.isDone \u003d done.equals(\"1\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"D\" + super.saveString() + \" , \" + this.by;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 41
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.control.OverrunStyle;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " * A custom control that represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Creates dialog box object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param text User input or response message from Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param img Image of user or Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        dialog.setTextOverrun(OverrunStyle.CLIP);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Create dialog box for user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param text User input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param img User image."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Create dialog box for Duke."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param text Duke\u0027s response message."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param img Duke image."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 77
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import com.sun.tools.javac.Main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.shape.Rectangle;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " * Represents Duke bot and contains main information of how it works."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private static final String PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Creates Duke object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        storage \u003d new Storage(PATH);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Creates Duke object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param filePath Pathname of the file that stores tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Reads user input then acts accordingly and stores user data."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            //parser.parse(sc.nextLine(), tasks, ui, storage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Gets list of tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public TaskList getTasks() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Gets storage."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Storage of Duke."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public Storage getStorage() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return this.storage;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Gets parser."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Parser of Duke."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public Parser getParser() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return this.parser;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Gets Ui."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Ui of Duke."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return this.ui;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 102,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " * Handles incorrect user inputs."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public DukeException(String type) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        if (this.type.equals(\"other\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            return \"\\uD83D\\uDE41\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        } else if (this.type.equals(\"done\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            return \"\\uD83D\\uDE41\" + \" OOPS!!! Please indicate the numbering of task that has to be marked as done.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        } else if (this.type.equals(\"delete\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            return \"\\uD83D\\uDE41\" + \" OOPS!!! Please indicate the numbering of task that has to be deleted.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        } else if (this.type.equals(\"date\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            return \"\\uD83D\\uDE41\" + \"Please format the time in YYYY-MM-DD.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"\\uD83D\\uDE41\" + \" OOPS!!! The description of a \" + this.type + \" cannot be empty.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 24
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " * Represents a task that starts at a specific time and ends at a specific time."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Creates Event object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param description Event description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param at Event timing."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Creates Event object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param done Done state of event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param description Event description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param at Event timing."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public Event(String done, String description, LocalDate at) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.isDone \u003d done.equals(\"1\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"E\" + super.saveString() + \" , \" + this.at;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 42
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Scans and executes user inputs."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param args Command line arguments."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        //new Duke(PATH).run();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 13
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private Image userImg \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private Image dukeImg \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                DialogBox.getDukeDialog(\"Hello! I\u0027m Duke\" + \"\\nWhat can I do for you?\", dukeImg));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Duke\u0027s reply and then appends them to the dialog container. "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        String dukeText \u003d getResponse(userInput.getText());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                DialogBox.getUserDialog(userText, userImg),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, dukeImg));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Get response message by Duke."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Duke\u0027s response message."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return this.duke.getParser().parse(input, this.duke);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 63
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " * Handles parsing of user inputs."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Stores the parsed user inputs and prints response messages for user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param userInput User input read by scanner."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param duke Duke object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Duke response message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String parse(String userInput, Duke duke) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        String[] strArr \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            check(strArr);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                return duke.getUi().bye();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                //System.exit(0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            } else if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                return duke.getUi().printTaskList(duke.getTasks());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            } else if (strArr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                duke.getTasks().getTask(Integer.parseInt(strArr[1]) - 1).markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                duke.getStorage().writeFile(duke.getTasks().getTaskList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                return duke.getUi().printDoneTask(duke.getTasks().getTask(Integer.parseInt(strArr[1]) - 1));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            } else if (strArr[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                int i \u003d Integer.parseInt(strArr[1]) - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                Task t \u003d duke.getTasks().getTask(Integer.parseInt(strArr[1]) - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                duke.getTasks().deleteTask(i);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                duke.getStorage().writeFile(duke.getTasks().getTaskList());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                return duke.getUi().printDeleteTask(t, duke.getTasks());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                if (strArr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    String sd \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    for (int i \u003d 1; i \u003c strArr.length; i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                        sd +\u003d strArr[i] + \" \";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    Task task \u003d new Todo(sd);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    duke.getTasks().addTask(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    duke.getStorage().writeFile(duke.getTasks().getTaskList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    return duke.getUi().printAddTask(task, duke.getTasks());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                } else if (strArr[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    String sd \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    String sb \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    boolean b \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    for (int i \u003d 1; i \u003c strArr.length - 1; i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                        if (strArr[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                            b \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                            sd \u003d sd.substring(0, sd.length() - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                        if (b) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                            sd +\u003d strArr[i] + \" \";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                            if (i \u003d\u003d strArr.length - 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                                sb \u003d sb + strArr[i + 1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                                sb \u003d sb + strArr[i + 1] + \" \";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    Task task \u003d new Deadline(sd, LocalDate.parse(sb));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    duke.getTasks().addTask(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    duke.getStorage().writeFile(duke.getTasks().getTaskList());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    return duke.getUi().printAddTask(task, duke.getTasks());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                } else if (strArr[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    String sd \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    String sa \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    boolean b \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    for (int i \u003d 1; i \u003c strArr.length - 1; i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                        if (strArr[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                            b \u003d false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                            sd \u003d sd.substring(0, sd.length() - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                        if (b) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                            sd +\u003d strArr[i] + \" \";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                            if (i \u003d\u003d strArr.length - 2) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                                sa \u003d sa + strArr[i + 1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                                sa \u003d sa + strArr[i + 1] + \" \";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    Task task \u003d new Event(sd, LocalDate.parse(sa));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    duke.getTasks().addTask(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    duke.getStorage().writeFile(duke.getTasks().getTaskList());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    return duke.getUi().printAddTask(task, duke.getTasks());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                } else if (strArr[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    String keyword \u003d strArr[1];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    TaskList taskLst \u003d new TaskList();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    for (int i \u003d 0; i \u003c duke.getTasks().getSize(); i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                        if (duke.getTasks().getTask(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                            taskLst.addTask(duke.getTasks().getTask(i));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    return duke.getUi().printMatchingTasks(taskLst);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            return duke.getUi().showError(e.toString());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Checks whether has invalid user inputs."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param arr Array of user input."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @throws DukeException Exception specific to Duke."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void check(String[] arr) throws DukeException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        if (arr.length \u003d\u003d 1 \u0026\u0026 (arr[0].equals(\"todo\") || arr[0].equals(\"deadline\") || arr[0].equals(\"event\") ||"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                arr[0].equals(\"done\") || arr[0].equals(\"delete\") || arr[0].equals(\"find\"))) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            throw new DukeException(arr[0]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        } else if (!arr[0].equals(\"todo\") \u0026\u0026 !arr[0].equals(\"deadline\") \u0026\u0026 !arr[0].equals(\"event\") \u0026\u0026"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                !arr[0].equals(\"list\") \u0026\u0026 !arr[0].equals(\"bye\") \u0026\u0026 !arr[0].equals(\"done\") "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                \u0026\u0026 !arr[0].equals(\"delete\") \u0026\u0026 !arr[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            throw new DukeException(\"other\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 122
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Creates a Storage object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param filePath Pathname of the file that stores tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Loads file from hard disk when Duke bot is started."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @throws IOException Input error."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            FileReader fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            String line \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                String[] strArr \u003d line.split(\" , \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                switch (strArr[0]) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    taskList.add(new Todo(strArr[1], strArr[2]));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    break; "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    taskList.add(new Deadline(strArr[1], strArr[2], LocalDate.parse(strArr[3])));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    taskList.add(new Event(strArr[1], strArr[2], LocalDate.parse(strArr[3])));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Save the tasks in the hard disk automatically whenever the task list changes."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @throws IOException Input error."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void writeFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            writer.write(task.saveString() + \"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 65
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " * Represents a task entered by user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Creates task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Checks whether the task is done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Unicode character."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Checks whether the task is done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Integer that represents done state."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public int doneState() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return (isDone ? 1 : 0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Gets task description."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \" , \" + doneState() + \" , \" + this.description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 57
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Creates an empty list of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Creates a list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Gets the task at a specific index from the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param index Index of task item in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return this.taskList.get(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param task Task that needs to be added."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Deletes a task at a specific index from the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param index Index of task item in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.taskList.remove(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Gets the size of list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Size of list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Gets the list of tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        String string \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        for (int i \u003d 0; i \u003c getSize(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            if (i \u003d\u003d getSize() - 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                string +\u003d ((i + 1) + \". \" + getTask(i).toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                string +\u003d ((i + 1) + \". \" + getTask(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 78
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " * Represents a task without any time attached to it."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Creates To-do object. "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param description To-do description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Creates To-do object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param done Done state of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param description To-do description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public Todo(String done, String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        this.isDone \u003d done.equals(\"1\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"T\" + super.saveString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 33
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " * Handles interaction with users."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Greets user when Duke bot is activated."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Duke response message."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"Hello! I\u0027m Duke\" + \"\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Prints response message on user inputs."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param string Response message by Duke bot."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void printLine(String string) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        System.out.println(string);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Draws border on top and bottom of the response message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param string Response message by Duke bot."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Response message with border."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String drawBorder(String string) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        String line \u003d \"_________________________________________________________________\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return line + \"\\n\" + string + \"\\n\" + line;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Prints bye message to user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Duke response message for bye."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Prints message when a task is added."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param task Task that is added."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param lst List of tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Duke response message when user adds task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String printAddTask(Task task, TaskList lst) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\" + \"  \" "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                + task.toString() + \"\\n\" + \"Now you have \" "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                + lst.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Prints message when a task is marked as done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param task Task that is marked as done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Duke response message when a task is done."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String printDoneTask(Task task) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \\n\" "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                + \"  \" + task.toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Prints message when a task is deleted."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param task Task that needs to be deleted."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param lst List of tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Duke response message when a task is deleted."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String printDeleteTask(Task task, TaskList lst) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\" + \"  \" "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                + task.toString() + \"\\n\" + \"Now you have \" "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                + lst.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Prints the full list of tasks."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param lst List of tasks."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Duke response message of tasks in the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String printTaskList(TaskList lst) { "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"Here are the tasks in your list:\\n\" + lst.toString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "   /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Prints error messages."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param err Error message."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Duke response message for an error."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String showError(String err) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return err;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * Prints matching tasks that contains the keyword entered by user."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @param lst List of tasks."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     * @return Duke response message of matching tasks."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public String printMatchingTasks(TaskList lst) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        return \"Here are the matching tasks in your list:\\n\" + lst.toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 105
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c?import java.util.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c?import javafx.scene.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c?import java.util.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c?import javafx.scene.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003cAnchorPane xmlns\u003d\"http://javafx.com/javafx\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            xmlns:fx\u003d\"http://javafx.com/fxml\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            fx:controller\u003d\"MainWindow\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 23
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        assertEquals(\"[D]\" + \"[\" + \"\\u2718\" + \"]\" + \" read book (by: Oct 12 2020)\", "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                new Deadline(\"read book\", LocalDate.parse(\"2020-10-12\")).toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void testSaveString(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        assertEquals(\"D , 0 , read book , 2020-10-12\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "                new Deadline(\"read book\", LocalDate.parse(\"2020-10-12\")).saveString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 18
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void testGetStatusIcon(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        assertEquals(\"\\u2718\", new Task(\"read book\").getStatusIcon());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void testDoneState(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        assertEquals(0, new Task(\"read book\").doneState());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void testToString(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        assertEquals(\"[\" + \"\\u2718\" + \"]\" + \" read book\", new Task(\"read book\").toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void testSaveString(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        assertEquals(\" , 0 , read book\", new Task(\"read book\").saveString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 26
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void testToString(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        assertEquals(\"[T]\" + \"[\" + \"\\u2718\" + \"]\" + \" read book\", new Todo(\"read book\").toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    public void testSaveString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "        assertEquals(\"T , 0 , read book\", new Todo(\"read book\").saveString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 15
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "T , 0 , borrow book "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "D , 1 , return book , Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "E , 0 , project meeting , Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "D , 0 , do homework , no idea :-p"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 3,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "C:\\Users\\Qi\\Documents\\ip\\src\\main\\java\\Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "C:\\Users\\Qi\\Documents\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "C:\\Users\\Qi\\Documents\\ip\\src\\main\\java\\DukeException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "C:\\Users\\Qi\\Documents\\ip\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "C:\\Users\\Qi\\Documents\\ip\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaqi20"
        },
        "content": "C:\\Users\\Qi\\Documents\\ip\\src\\main\\java\\Todo.java"
      }
    ],
    "authorContributionMap": {
      "jiaqi20": 6
    }
  }
]
