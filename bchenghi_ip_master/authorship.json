[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return \"[D]\" + super.toString() +  \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import static java.lang.Integer.parseInt;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    enum TaskType {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        TODO(\"todo\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        EVENT(\"event\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        DEADLINE(\"deadline\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        public final String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        private TaskType(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    boolean running \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    ArrayList\u003cTask\u003e memory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    boolean isRunning() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return running;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void setRunningState(boolean bool) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        running \u003d bool;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void indent() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        System.out.print(\"    \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    boolean stringIsInt(String string) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            parseInt(string);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void printMessage(String string) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        String[] splitByNewLine \u003d string.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        for (String str : splitByNewLine) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            indent();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            System.out.println(str);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void printLine() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        indent();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        System.out.println(\"-------------------------------------------------------------\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void opener() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        String opening \u003d \"Hello! I\u0027m Duke.\\nHow can I help you today?\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        printMessage(opening);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void farewell() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        printMessage(\"Goodbye! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void list() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        if (memory.size() \u003e 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            stringBuilder.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            for (int i \u003d 0; i \u003c memory.size(); i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                Task currentTask \u003d memory.get(i);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                stringBuilder.append((i + 1) + \". \" + currentTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            printMessage(stringBuilder.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            printMessage(\"There are no tasks yet!\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void done(int index) throws DukeException{"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            Task task \u003d memory.get(index - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            printDoneMessage(task);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            throw new DukeException(\"Oops! Sorry, I couldn\u0027t find the task.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void delete(int index) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            Task task \u003d memory.remove(index - 1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            printMessage(\"Noted. I\u0027ve removed this task.\\n\" +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                    task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                    \"Now you have \" + memory.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            throw new DukeException(\"Oops! Sorry, I couldn\u0027t find the task.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void unknownCommandMessage() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        printMessage(\"Oops! I\u0027m sorry, I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void addToMemory(Task task) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        memory.add(task);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void printAddMessage(Task task) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        printMessage(\"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                \"Now you have \" + memory.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void printDoneMessage(Task task) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        printMessage(\"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                task.toString());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    String stringArrayToString(String[] arr, int startIndex, int endIndex) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            if (endIndex \u003e startIndex) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                for (int i \u003d startIndex; i \u003c endIndex - 1; i++) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                    stringBuilder.append(arr[i] + \" \");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                stringBuilder.append(arr[endIndex - 1]);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                return stringBuilder.toString();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void checkAndPrint(String string) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            String[] splitString \u003d string.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            if (string.equals(\"bye\")) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                exit();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            } else if (string.equals(\"list\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                list();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            } else if (splitString.length \u003d\u003d 2 \u0026\u0026"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                    splitString[0].equals(\"done\") \u0026\u0026 stringIsInt(splitString[1])) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                int index \u003d parseInt(splitString[1]);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                done(index);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            } else if (splitString.length \u003d\u003d 2 \u0026\u0026"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                    splitString[0].equals(\"delete\") \u0026\u0026 stringIsInt(splitString[1])) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                int index \u003d parseInt(splitString[1]);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                delete(index);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            } else if (splitString[0].equals(TaskType.TODO.name)) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                todo(splitString);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            } else if (splitString[0].equals(TaskType.DEADLINE.name)) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                deadline(splitString);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            } else if (splitString[0].equals(TaskType.EVENT.name)) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                event(splitString);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                unknownCommandMessage();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            printMessage(e.getMessage());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            printMessage(e.getMessage());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    // Takes the input as a string array, adds a new deadline to list, then prints the message"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void deadline(String[] stringArray) throws TaskException{"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        int indexOfBy \u003d -1;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        for (int i \u003d 0; i \u003c stringArray.length; i++) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            if (stringArray[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                indexOfBy \u003d i;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        if (indexOfBy \u003d\u003d 1 || stringArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            throw new TaskException(\"Oops! A deadline task needs a description\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        } else if (indexOfBy \u003d\u003d stringArray.length - 1 || indexOfBy \u003d\u003d -1) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            throw new TaskException(\"Oops! A deadline task needs a deadline\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            String by \u003d stringArrayToString(stringArray, indexOfBy + 1, stringArray.length);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            String description \u003d stringArrayToString(stringArray, 1, indexOfBy);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            addToMemory(deadline);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            printAddMessage(deadline);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    // Takes the input as a string array, then adds a new todo to list, then prints the message"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void todo(String[] stringArray) throws TaskException {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        if (stringArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            throw new TaskException(\"Oops! A todo task needs a description.\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            String description \u003d stringArrayToString(stringArray,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                    1, stringArray.length);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            ToDo todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            addToMemory(todo);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            printAddMessage(todo);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    // Takes input as a string array, then adds a new event to list, then prints the message"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void event(String[] stringArray) throws TaskException {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        int indexOfAt \u003d -1;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        for (int i \u003d 0; i \u003c stringArray.length; i++) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            if (stringArray[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                indexOfAt \u003d i;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        if (indexOfAt \u003d\u003d 1 || stringArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            throw new TaskException(\"Oops! An event task needs a description\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        } else if (indexOfAt \u003d\u003d stringArray.length - 1 || indexOfAt \u003d\u003d -1) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            throw new TaskException(\"Oops! An event task needs a date\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            String at \u003d stringArrayToString(stringArray, indexOfAt + 1, stringArray.length);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            String description \u003d stringArrayToString(stringArray, 1, indexOfAt);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            addToMemory(event);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            printAddMessage(event);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    void exit() {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        running \u003d false;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        farewell();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        duke.setRunningState(true);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        duke.opener();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        while (duke.isRunning()) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            duke.checkAndPrint(str);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 9,
      "bchenghi": 247
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 31
    }
  },
  {
    "path": "src/main/java/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class TaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public TaskException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 5
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "todo description"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "deadline description /by monday 2pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "event description /at tuesday 4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "event test description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "event test description /at"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "deadline test description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "deadline test description /by"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "list 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "bchenghi": 2
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\DukeException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\TaskException.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\ToDo.java"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 7
    }
  }
]
