[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 16,
      "-": 45
    }
  },
  {
    "path": "ip_data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "E|1|help people|2020-04-12"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "T|0|Exercise"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "T|0|Run"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "T|0|Walk"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "D|0|Do Assignment|2019-12-12"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "D|0|Sleep|2020-12-13"
      }
    ],
    "authorContributionMap": {
      "peironggg": 6
    }
  },
  {
    "path": "src/main/java/Action.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public enum Action {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    ADD, DONE, DELETE, FIND, LIST;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 3
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * The AddCommand class is used to update the current TaskList with the newly added task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * and prints the added task to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    protected String[] newTaskDetails;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    AddCommand(String[] newTaskDetails) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        this.newTaskDetails \u003d newTaskDetails;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * The execute method of the AddCommand is used to add the task in the command given into"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * the TaskList and updates the stored TaskList in saved file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @param tasks This is the current TaskList in saved file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @return A boolean to indicate whether the program should be exited."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    boolean execute(TaskList tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            Ui.printTask(tasks.addTask(newTaskDetails), Action.ADD, tasks.getSize());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            Ui.simplePrint(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        } else if (o instanceof AddCommand) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            AddCommand command \u003d (AddCommand) o;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            return Arrays.equals(command.newTaskDetails, this.newTaskDetails);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 45
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * ExitCommand inherits from Command and is called to"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * terminate the program when user inputs \"bye\"."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "class ByeCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    static String farewellMsg \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * Prints a goodbye message and terminates Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @param tasks This is the saved TaskList in saved file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @return A boolean to indicate whether the program should be exited."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    boolean execute(TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        Ui.simplePrint(farewellMsg);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 18
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * The abstract Command class is used for extension to the different commands for different interaction"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * with the saved TaskList and output printed to the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * This abstract method is inherited by all child classes of the Command class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * for different interaction with the saved TaskList and updating"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * the duke.txt file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @param tasks This is the saved TaskList in duke.txt."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @return A boolean to indicate whether the program should be exited."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    abstract boolean execute(TaskList tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 16
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class Deadline extends Task implements Saveable {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    LocalDate deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    Deadline(String label, String deadline, boolean done) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        super(label, done);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        // Remove the \"by\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        this.deadline \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * Returns a minimalistic string representation of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @return A string that describes the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        str.append(\"D\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        str.append(super.getInfo());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        str.append(super.separator);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        str.append(deadline.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 33
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * The DeleteCommand inherits from Command and is used to delete tasks in the saved TaskList."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    protected int taskNum;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * The constructor for DeleteCommand which takes in the task number to be deleted."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @param taskNum Task number to be deleted"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * The execute method of DeleteCommand is used to delete the specified task from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * the list of tasks and print the outcome."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @param tasks This is the saved TaskList in saved file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @return A boolean to indicate whether the program should be exited."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    boolean execute(TaskList tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        Ui.printTask(tasks.deleteTask(taskNum), Action.DELETE, tasks.getSize());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 31
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 59
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * The DoneCommand inherits from Command and is used whenever the markAsDone() method"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * from Task is called. This marks done the specified task in the TaskList"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * and saves it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * The constructor for a DoneCommand takes in a task number specified by the user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * to mark done the specific task in the TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @param taskNum The task number of a particular task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * The execute method in DoneCommand serves to update the TaskList with the updated status"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * of the specified task and saves it."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @param tasks This is the saved TaskList the saved file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @return A boolean to indicate whether the program should be exited."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    boolean execute(TaskList tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        Ui.printTask(tasks.markDone(taskNum), Action.DONE, tasks.getSize() - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 32
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    Duke(String filepath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        this.storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        this.ui \u003d new Ui(tasks, storage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * Runs the Duke bot to process input from user and output the response."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public void run() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        ui.getInput();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        ByteArrayOutputStream formattedOutput \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        System.setOut(new PrintStream(formattedOutput));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            Command command \u003d Parser.getCommand(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            command.execute(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            storage.saveToFile(tasks.getTasksInfo());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        String reply \u003d formattedOutput.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peironggg"
        },
        "content": "//        while (reply.contains(Ui.demarcation)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peironggg"
        },
        "content": "//            reply \u003d reply.replace(Ui.demarcation, \"\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peironggg"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        reply \u003d reply.trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        System.setOut(System.out);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        new Duke(\"ip_data.txt\").run();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 42,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    DukeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        super(String.format(\"%s OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\","
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                Character.toString(2639)));"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 10
    }
  },
  {
    "path": "src/main/java/EmptyTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class EmptyTodoException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    EmptyTodoException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        super(String.format(\"%s OOPS!!! The description of a todo cannot be empty.\","
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                Character.toString(2639)));"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class Event extends Task implements Saveable {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    Event(String label, String date, boolean done) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        super(label, done);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        // Remove the \"at\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        str.append(\"E\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        str.append(super.getInfo());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        str.append(super.separator);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        str.append(date.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 28
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * FindCommand inherits from Command and is used when user input starts with \"find\"."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    protected String word;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * Constructor for FindCommand which takes in the input keyed in by user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @param word The word to be found within the list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    FindCommand(String word) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * Used to find the tasks that match the user\u0027s input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @param tasks This is the saved TaskList in saved file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @return A boolean to indicate whether the program should be exited."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    boolean execute(TaskList tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        Ui.printTasks(tasks.find(word), Action.FIND);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 31
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * ListCommand inherits from Command and is called to print"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * the todo items when user inputs \"list\"."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * Used to print the current TaskList to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @param tasks This is the saved TaskList in saved file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @return A boolean to indicate whether the program should be exited."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    boolean execute(TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        Ui.printTasks(tasks.getTasksDescription(), Action.LIST);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 18
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private Duke duke \u003d new Duke(\"ip_data.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 27
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 49
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public static Command getCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        String[] commandArr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        String commandType \u003d commandArr[0];"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case (\"bye\"):"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case (\"find\"):"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            return new FindCommand(commandArr[1]);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case (\"list\"):"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case (\"delete\"):"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(commandArr[1]));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case (\"done\"):"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            return new DoneCommand(Integer.parseInt(commandArr[1]));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            return new AddCommand(Parser.getNewTask(commandType, command, commandArr));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * Returns an array of strings that make up the details of one task. Eg: [\"T\", \"Read Book\"]."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @param addType The type of todo that is to be added."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @param inputArr A string array of input commands."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @return Details of a single task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @throws DukeException If the \"todo\" command keyed by user does not contain a todo task string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private static String[] getNewTask(String addType, String command, String[] inputArr) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        String[] newTaskDetails;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        switch (addType) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case (\"todo\"):"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            // Only has the word todo"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            if (inputArr.length \u003d\u003d 1) throw new EmptyTodoException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            newTaskDetails \u003d new String[]{\"T\", command.substring(5).trim()};"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case (\"deadline\"):"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            String deadlineContent \u003d command.substring(9);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            String[] deadlineArr \u003d deadlineContent.split(\"/\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            newTaskDetails \u003d new String[]{\"D\", deadlineArr[0].trim(), deadlineArr[1].substring(3).trim()};"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case(\"event\"):"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            String eventContent \u003d command.substring(6);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            String[] eventArr \u003d eventContent.split(\"/\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            newTaskDetails \u003d new String[]{\"E\", eventArr[0].trim(), eventArr[1].substring(3).trim()};"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return newTaskDetails;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 54
    }
  },
  {
    "path": "src/main/java/Saveable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public interface Saveable {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    String getInfo();"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 3
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    File savedFile;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    Storage(String filepath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        // Check if file exists and create file otherwise"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            File savedFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            if (!savedFile.exists()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                savedFile.createNewFile();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            this.savedFile \u003d savedFile;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * Returns a list of task details loaded from the text file that contains saved data."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @return A list of string arrays, each containing the details of the saved tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public ArrayList\u003cString[]\u003e load() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        ArrayList\u003cString[]\u003e taskDetails \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        String currLine;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        // Read from file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(savedFile));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            while ((currLine \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                String[] taskArr \u003d currLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                taskDetails.add(taskArr);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                exception.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return taskDetails;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * Takes in a list of task details and saves them line-by-line to the specified text file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @param tasksInfo A list of string containing the details of each task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public void saveToFile(ArrayList\u003cString\u003e tasksInfo) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        // Write to file"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(savedFile));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            for (String info : tasksInfo) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                writer.write(info);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                writer.newLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                writer.flush();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            exception.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 60
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    String label;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    protected final String separator \u003d \"|\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    Task(String label, boolean done) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        this.label \u003d label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    protected String getInfo() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        str.append(separator);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        str.append(done ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        str.append(separator);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        str.append(label);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public boolean containsWord(String word) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return label.contains(word);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        String symbol \u003d Character.toString(done ? 10003 : 88);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return String.format(\"[%s] %s\", symbol, label);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 38
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    TaskList(ArrayList\u003cString[]\u003e taskDetails) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        for (String[] taskArr : taskDetails) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            String taskType \u003d taskArr[0];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            boolean done \u003d taskArr[1].equals(\"1\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            case (\"T\"):"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                tasks.add(new Todo(taskArr[2], done));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            case (\"D\"):"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                tasks.add(new Deadline(taskArr[2], taskArr[3], done));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            case (\"E\"):"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                tasks.add(new Event(taskArr[2], taskArr[3], done));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * Returns the number of tasks in Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @return The number of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public Integer getSize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * Returns a list of string containing the minimal information of each task in the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @return A list of each task\u0027s information."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public ArrayList\u003cString\u003e getTasksInfo() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        ArrayList\u003cString\u003e tasksInfo \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            tasksInfo.add(task.getInfo());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return tasksInfo;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public ArrayList\u003cString\u003e getTasksDescription() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        ArrayList\u003cString\u003e tasksDescription \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            tasksDescription.add(task.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return tasksDescription;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public Task addTask(String[] newTaskDetails) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        String taskType \u003d newTaskDetails[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case (\"T\"):"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            task \u003d new Todo(newTaskDetails[1], false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case (\"D\"):"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            task \u003d new Deadline(newTaskDetails[1],  newTaskDetails[2], false);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case(\"E\"):"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            task \u003d new Event(newTaskDetails[1],  newTaskDetails[2], false);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        // Add task"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * Mark the specified task as done and return it."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @param index The task number to be marked done."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * @return The task that was marked done."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public Task markDone(int index) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        int itemToMark \u003d index - 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        tasks.get(itemToMark).markDone();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return tasks.get(itemToMark);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        int itemToDelete \u003d index - 1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        Task removedTask \u003d tasks.remove(itemToDelete);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return removedTask;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public ArrayList\u003cString\u003e find(String word) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        ArrayList\u003cString\u003e tasksWithWord \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            if (task.containsWord(word)) tasksWithWord.add(task.toString());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return tasksWithWord;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 106
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class Todo extends Task implements Saveable {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    Todo(String label, boolean done) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        super(label, done);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        str.append(\"T\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        str.append(super.getInfo());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    static String indentation \u003d \"    \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    static String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    static String prompt \u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    static String demarcation \u003d Ui.indentation + \"-------------------------------------------------------------------\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    Ui(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private static String indentWord(String word) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        return Ui.indentation + word;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    private void greetings() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        System.out.println(\"Hello from\\n\" + Ui.logo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        System.out.println(Ui.prompt);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public static void simplePrint(String message) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        System.out.println(indentWord(message));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public static void printTask(Task task, Action action, int size) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case ADD:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            message \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            message \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            message \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        System.out.println(indentWord(message));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        System.out.println(indentWord(task.toString()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        System.out.println(indentWord(String.format(\"Now you have %s tasks in the list.\", size)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public static void printTasks(ArrayList\u003cString\u003e tasksDescription, Action action) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        String prompt;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            prompt \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            prompt \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            prompt \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        System.out.println(indentWord(prompt));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        for (String description : tasksDescription) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            System.out.print(indentWord(counter + \". \"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            System.out.println(description);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     * Runs a scanner to parse user input and print response."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "peironggg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public void getInput() throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        greetings();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            Command command \u003d Parser.getCommand(input);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            System.out.println(Ui.demarcation);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            // Dispatch respective handlers depending on command"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            boolean exit \u003d command.execute(tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            System.out.println(Ui.demarcation);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            if (exit) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                storage.saveToFile(tasks.getTasksInfo());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 103
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "peironggg": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "peironggg": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public void getNewTaskTest() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        AddCommand addCommand \u003d (AddCommand) Parser.getCommand(\"event attend wedding /at 2019-12-10\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        AddCommand expectedCommand \u003d new AddCommand(new String[] {\"E\", \"attend wedding\", \"2019-12-10\"});"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        assertEquals(addCommand, expectedCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 14
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public void getTasksInfoTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        ArrayList\u003cString[]\u003e taskDetails \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        taskDetails.add(new String[]{\"T\", \"1\", \"Read Book\"});"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        taskDetails.add(new String[]{\"D\", \"0\", \"Complete assignment\", \"2019-02-10\"});"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        TaskList tasks \u003d new TaskList(taskDetails);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        ArrayList\u003cString\u003e expectedResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        expectedResult.add(\"T|1|Read Book\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        expectedResult.add(\"D|0|Complete assignment|2019-02-10\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        assertEquals(expectedResult, tasks.getTasksInfo());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    public void getTasksDescriptionTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        ArrayList\u003cString[]\u003e taskDetails \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        taskDetails.add(new String[]{\"T\", \"1\", \"Read Book\"});"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        taskDetails.add(new String[]{\"D\", \"0\", \"Complete assignment\", \"2019-02-10\"});"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        TaskList tasks \u003d new TaskList(taskDetails);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        ArrayList\u003cString\u003e expectedResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        expectedResult.add(\"[T][✓] Read Book\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        expectedResult.add(\"[D][X] Complete assignment (by: Feb 10 2019)\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "peironggg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "peironggg"
        },
        "content": "        assertEquals(expectedResult, tasks.getTasksDescription());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "peironggg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "peironggg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "peironggg": 33
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "peironggg"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "peironggg"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "peironggg"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "peironggg"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "peironggg"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "peironggg"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "peironggg"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "peironggg": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "peironggg"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin /Users/wupeirong/Documents/ip/src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "peironggg"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "peironggg": 2,
      "-": 36
    }
  }
]
