[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "E | 1 | meeting | 2020-08-22 14:00-16:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "D | 0 | return book | 2020-08-22"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "T | 0 | borrow book"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Deadline class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Extends from Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains deadline name and date."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param taskName name of deadline"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param date date of deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Deadline(String taskName, String date) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // date format must be in YYYY-MM-DD e.g. 2020-08-22"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        super(taskName.stripTrailing());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.println(\"Date is in the wrong format\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Return deadline information to be stored locally."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return deadline information"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return String.format(\"D | %d | %s | %s\\n\", isDone ? 1 : 0, taskName, date.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return \"[D]\" + super.toString()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                + \" (by: \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 47
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Duke class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Driver class for Duke."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains task list, storage, parser and ui."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static Storage storage \u003d new Storage(taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static Parser parser \u003d new Parser(taskList, storage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static Ui ui \u003d new Ui(taskList, storage, parser);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Greeting used by Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Farewell used by Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Main method of Duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        storage.init();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        ui.echo();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 47,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Thrown to indicate that an exception with duke has occurred."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for DukeException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param str Text to be displayed for the error"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public DukeException(String str) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 15
    }
  },
  {
    "path": "src/main/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // to test correctness of task output"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void TodoTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        ToDo todo \u003d new ToDo(\"return book\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        Assert.assertEquals(todo.toString(), \"[T][\\u2718] return book\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void deadlineTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book\", \"2020-08-22\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        Assert.assertEquals(deadline.toString(), \"[D][\\u2718] return book (by: Aug 22 2020)\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        Event event \u003d new Event(\"return book\", \"2020-08-22 14:00-16:00\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        Assert.assertEquals(event.toString(), \"[E][\\u2718] return book (at: Aug 22 2020 14:00 - 16:00)\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 25
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Event class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Represents a event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Extends from Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains event name, date, start time and end time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    LocalTime startTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    LocalTime endTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param taskName name of deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param date date of deadline"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Event(String taskName, String date) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // date format must be in YYYY-MM-DD e.g. 2020-08-22"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // time format must by in XX:XX-YY:YY e.g. 14:00-16:00"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        super(taskName.stripTrailing());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        String[] arr \u003d date.split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        String eventDate \u003d arr[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        String[] eventTime \u003d arr[1].split(\"-\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        String eventStartTime \u003d eventTime[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        String eventEndTime \u003d eventTime[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            this.date \u003d LocalDate.parse(eventDate);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            this.startTime \u003d LocalTime.parse(eventStartTime);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            this.endTime \u003d LocalTime.parse(eventEndTime);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.println(\"Date and time is in the wrong format\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Return deadline information to be stored locally."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return deadline information"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return String.format(\"E | %d | %s | %s %s-%s\\n\", isDone ? 1 : 0,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                taskName, date.toString(), startTime.toString(), endTime.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                + \" (at: \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                + \" \" + startTime + \" - \" + endTime + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 61
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Parser class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Used to parse commands input by user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains task list and storage."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for Parser class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param taskList a TaskList object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param storage a Storage object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Parser(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Handles an event input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param input Input from user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @throws DukeException If description or date is missing"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // dates must be in this format YYYY-MM-DD"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // example of event: event meeting /at 2020-08-22 14:00-16:00"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void handleEvent(String input) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // since input is confirmed to have \"event\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // just need to ensure that stripped input \u003e 5 letters"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // input needs to be stripped to prevent trailing whitespaces eg. \"deadline    \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (input.strip().length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of a Event cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else if (!input.contains(\"/\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! Event requires a date.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            //String taskType \u003d input.substring(0, input.indexOf(\" \"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String taskName \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String[] arr \u003d taskName.split(\"/\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            Event task \u003d new Event(arr[0], arr[1].substring(arr[1].indexOf(\" \") + 1));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            storage.save();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Handles a deadline input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param input Input from user"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @throws DukeException If description or date is missing"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // example of deadline: deadline return book /by 2020-08-22"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void handleDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // since input is confirmed to have \"deadline\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // just need to ensure that stripped input \u003e 8 letters"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // input needs to be stripped to prevent trailing whitespaces eg. \"deadline    \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (input.strip().length() \u003c\u003d 8) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else if (!input.contains(\"/\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! Deadline requires a date.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            //String taskType \u003d input.substring(0, input.indexOf(\" \"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String taskName \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String[] arr \u003d taskName.split(\"/\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            Deadline task \u003d new Deadline(arr[0], arr[1].substring(arr[1].indexOf(\" \") + 1));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            storage.save();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Handles a to do input."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param input Input from user"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @throws DukeException If description is missing"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // example of To do: to do return book"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void handleToDo(String input) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // since input is confirmed to have \"to do\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // just need to ensure that stripped input \u003e 4 letters"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // input needs to be stripped to prevent trailing whitespaces eg. \"deadline    \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (input.strip().length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            //String taskType \u003d input.substring(0, input.indexOf(\" \"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String taskName \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            ToDo task \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            storage.save();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 93
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Storage class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Used to read and write files to the hard drive whenever the task list is edited."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Reads and writes to ./data/duke.txt."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static final String FILENAME \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static final String DIRECTORY_NAME \u003d \"./data/\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public TaskList list;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for Storage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param list A TaskList object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Storage(TaskList list) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //    // appends task info to existing duke.txt file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //    // only can be used by add method"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //    public static void save(Task task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //            FileWriter fw \u003d new FileWriter(FILENAME, true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //            // true to mark fw to append line to existing file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //            fw.write(task.getInfo());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //            fw.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //            System.out.println(\"File is missing\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Rewrites duke.txt file to the hard drive."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // rewrites duke.txt file by iterating though task list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // can be used by add, delete and done method"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void save() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            FileWriter fw \u003d new FileWriter(FILENAME);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            if (list.size() \u003e 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                fw.write(list.get(0).getInfo());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                for (int i \u003d 1; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    fw.write(list.get(i).getInfo());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.println(\"File is missing\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Initialises the TaskList if there is an existing duke.txt."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void init() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        File directory \u003d new File(DIRECTORY_NAME);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // checks if directory exists, else directory will be created"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        File f \u003d new File(FILENAME);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (f.exists()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                while (sc.hasNext()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    String[] split \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    if (split.length \u003c 3) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        // if after split, arr contains insufficient info, skip;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    String taskType \u003d split[0];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    String status \u003d split[1].strip();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    String details \u003d split[2].stripLeading();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    if (taskType.contains(\"T\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        ToDo task \u003d new ToDo(details);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                            task.completed();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        list.initAdd(task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    } else if (taskType.contains(\"D\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        String date \u003d split[3].stripLeading();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        Deadline task \u003d new Deadline(details, date);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                            task.completed();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        list.initAdd(task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    } else if (taskType.contains(\"E\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        String date \u003d split[3].stripLeading();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        Event task \u003d new Event(details, date);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                            task.completed();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        list.initAdd(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                sc.close();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.println(\"File not found, will be created\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                System.out.println(\"Missing input\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 125
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Abstract class to represent a task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains task name and completed status."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String taskName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param taskName Name of task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Marks the task as completed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void completed() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Return information of the task to be stored locally."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return Task information"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public abstract String getInfo();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return String.format(\"[%s] %s\", isDone ? \"\\u2713\" : \"\\u2718\", taskName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 38
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * TaskList class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Stores Task objects in an ArrayList."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains array list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Adds task to the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Also prints out remaining tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param task Task to be added to task list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.printf(\"     Now you have %d tasks in the list.\\n\", list.size());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Add method for use during Storage initialisation."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * No output will be printed out."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param task Task to be added to task list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // initAdd method for adding task to list during initialisation"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void initAdd(Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Lists out all task currently in the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void listOut() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.printf(\"     %d. %s \\n\", i + 1, list.get(i));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Deletes the task specified by the number."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param input Number of task"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @throws DukeException If number is not entered"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void delete(String input) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (!input.contains(\" \")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! Please enter delete with a number.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                index \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Invalid number.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            if (index \u003e list.size()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Invalid number.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            Task task \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            list.remove(index - 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.printf(\"     Now you have %d tasks in the list.\\n\", list.size());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Marks the specified task as completed in the list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param input Number of task"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @throws DukeException If number is not entered"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void done(String input) throws DukeException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (!input.contains(\" \")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! Please enter done with a number.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                // if string after done cannot be parsed to integer"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                index \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Invalid number.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            if (index \u003e list.size()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Invalid number.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            Task task \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            task.completed();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.println(\"     Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void find(String input) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        String keyWord \u003d arr[1];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        ArrayList\u003cTask\u003e hits \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        for (Task task: list) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            if (task.getInfo().contains(keyWord)) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                hits.add(task);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        for (int i \u003d 0; i \u003c hits.size(); i++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.printf(\"     %d. %s \\n\", i + 1, hits.get(i));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Returns the current size of the Task List."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return return size of task list"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Returns the task specified."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param i The number of task"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return The task specified"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return list.get(i);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 163
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * To Do class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Represents a to do task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Extends from Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains to do name."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for To Do."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param toDoName name of deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public ToDo(String toDoName) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        super(toDoName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Return to do information to be stored locally."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return to do information"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return String.format(\"T | %d | %s\\n\", isDone ? 1 : 0, taskName);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 33
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * UI class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Handles input from user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains task list, storage and parser"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for Ui class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param taskList A TaskList object"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param storage A Storage object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param parser A Parser object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Ui(TaskList taskList, Storage storage, Parser parser) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Prompts user for input and delegates input to Parser."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void echo() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                taskList.listOut();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } else if (input.contains(\"find\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                taskList.find(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    taskList.done(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    storage.save();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    taskList.delete(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    storage.save();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        parser.handleToDo(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        parser.handleDeadline(input);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        parser.handleEvent(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 86
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    pause"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "cmd /k"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 4,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 2,
      "-": 32
    }
  }
]
