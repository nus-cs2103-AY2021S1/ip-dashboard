[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Deadline extends TimedTask {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super(description, deadline);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.type \u003d Task.Type.DEADLINE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Deadline(String description, String deadline, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super(description, deadline);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.type \u003d Task.Type.DEADLINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.isDone \u003d isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        this.storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            this.tasks \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } catch (FileNotFoundException | DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            ui.getError(e);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            ui.say(\"It seems like you have no saved files! Creating one now...\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        boolean isBye \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        while (!isBye) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String input \u003d ui.receiveInput();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                Parser.parseInput(input, ui, tasks, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                ui.getError(e);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                isBye \u003d Parser.isBye(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        ui.goodbye();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 36,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private String exception;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        exception \u003d error;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return exception;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return \"DukeException[\" + exception + \"]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 17
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Event extends TimedTask {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Event(String description, String eventTime) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super(description, eventTime);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.type \u003d Task.Type.EVENT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Event(String description, String eventTime, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super(description, eventTime);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.type \u003d Task.Type.EVENT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.isDone \u003d isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 13
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public static void parseInput(String input, Ui ui, TaskList tasks, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String[] parsed \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String keyword \u003d parsed[0];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String body \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (parsed.length \u003e 1) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            body \u003d parsed[1];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            tasks.printList(ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            if (isValidSize(body, tasks)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                tasks.markTaskDone(getNumber(body), ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                throw new DukeException(\"Invalid number\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            if (isValidSize(body, tasks)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                tasks.deleteTask(getNumber(body), ui);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                throw new DukeException(\"Invalid number\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            if (isValidFormat(body, Task.Type.TODO)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                tasks.addTask(new Todo(body), ui);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                throw new DukeException(\"Invalid task format\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            if (isValidFormat(body, Task.Type.DEADLINE) \u0026\u0026 isValidTime(body, Task.Type.DEADLINE)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                tasks.addTask(new Deadline(getDescription(body), getTime(body, Task.Type.DEADLINE)), ui);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                throw new DukeException(\"Invalid task format\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            if (isValidFormat(body, Task.Type.EVENT) \u0026\u0026 isValidTime(body, Task.Type.EVENT)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                tasks.addTask(new Event(getDescription(body), getTime(body, Task.Type.EVENT)), ui);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                throw new DukeException(\"Invalid task format\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            tasks.findTask(body, ui);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            throw new DukeException(\"Invalid command\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        storage.writeFile(tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static boolean isValidSize(String body, TaskList tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (body.length() \u003e 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String num \u003d body;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                int number \u003d Integer.parseInt(num);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                return tasks.getListSize() \u003e\u003d number \u0026\u0026 number \u003e 0;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static int getNumber(String body) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String num \u003d body.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return Integer.parseInt(num);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static String getDescription(String body) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return body.split(\" /\", 2)[0];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static boolean isValidFormat(String body, Task.Type type) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (type \u003d\u003d Task.Type.TODO) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return !body.equals(\"\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (type \u003d\u003d Task.Type.DEADLINE) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return body.split(\" /by \", 2).length \u003d\u003d 2;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (type \u003d\u003d Task.Type.EVENT) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return body.split(\" /at \", 2).length \u003d\u003d 2;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static boolean isValidTime(String body, Task.Type type) throws DateTimeParseException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (type \u003d\u003d Task.Type.DEADLINE) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            time \u003d body.split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (type \u003d\u003d Task.Type.EVENT) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            time \u003d body.split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (time.equals(\"now\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            LocalDate.parse(time);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static String getTime(String body, Task.Type type) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (type \u003d\u003d Task.Type.DEADLINE) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            time \u003d body.split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (type \u003d\u003d Task.Type.EVENT) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            time \u003d body.split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (time.equals(\"now\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return LocalDate.now().format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return LocalDate.parse(time).format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public static boolean isBye(String input){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return input.split(\" \", 2)[0].equals(\"bye\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 137
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        file \u003d new File(filepath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                tasks.add(getTask(scanner.nextLine()));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            throw new DukeException(\"No file found\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void writeFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        writer.write(tasks.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static Task getTask(String line) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String[] parsed \u003d line.split(\"]\", 3);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String type \u003d parsed[0].substring(1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String status \u003d parsed[1].substring(1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        boolean isDone \u003d (status.equals(\"\\u2713\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String body \u003d parsed[2].substring(1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return new Todo(body, isDone);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String[] dParsed \u003d body.split(\" - \", 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String dDescription \u003d dParsed[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String deadline \u003d dParsed[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return new Deadline(dDescription, deadline, isDone);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String[] eParsed \u003d body.split(\" - \", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String eDescription \u003d eParsed[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String eventTime \u003d eParsed[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return new Event(eDescription, eventTime, isDone);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            throw new DukeException(\"Error finding task\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 58
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    protected Type type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public enum Type {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        TODO, DEADLINE, EVENT, NONE"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    protected Task(String desc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        this.description \u003d desc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        this.type \u003d Type.NONE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return this.getTypeIcon() + this.getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String icon \u003d (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return \"[\" + icon + \"]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    protected String getTypeIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String icon;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            icon \u003d \"T\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            icon \u003d \"D\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            icon \u003d \"E\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case NONE:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            icon \u003d \"?\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            icon \u003d \"!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return \"[\" + icon + \"]\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 50
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        tasks \u003d taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String listString \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            listString +\u003d task + \"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return listString;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void printList(Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) ui.say(\"Your task list is currently empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            ui.say(\"Here is your task list.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            int count \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                System.out.println(count + \". \" + task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void markTaskDone(int number, Ui ui) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Task task \u003d tasks.get(number - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        ui.say(\"I have marked it as done!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void deleteTask(int number, Ui ui) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Task task \u003d tasks.get(number - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        tasks.remove(number - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        ui.say(\"I have deleted this task!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        ui.say(\"You have \" + getListSize() + \" items in your task list now.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void addTask(Task task, Ui ui) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        ui.say(\"You have \" + getListSize() + \" items in your task list now.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void findTask(String body, Ui ui) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            ui.say(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            boolean noneFound \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                if (task.toString().contains(body)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                    System.out.println(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                    noneFound \u003d false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            if (noneFound) ui.say(\"No matching tasks.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            ui.say(\"You have no tasks yet.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 74
    }
  },
  {
    "path": "src/main/java/TimedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class TimedTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public TimedTask(String description, String when) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        this.time \u003d when;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return this.getTypeIcon() + this.getStatusIcon() + \" \" + description + \" - \" + time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 13
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.type \u003d Task.Type.TODO;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.isDone \u003d isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.type \u003d Task.Type.TODO;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 13
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String receiveInput() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(\"Duke: Hello! How may I help you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void goodbye() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(\"Duke: Bye. Hope to see you again!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void say(String something) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(\"Duke: \" + something);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void getError(Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(\"Duke: Error! \" + e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 30
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 10
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void string() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Todo todo \u003d new Todo(\"todo\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"deadline\", \"2020-08-25\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Event event \u003d new Event(\"event\", \"2020-08-25\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        tasks.addTask(todo, ui);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        tasks.addTask(deadline, ui);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        tasks.addTask(event, ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String expected \u003d \"[T][\\u2718] todo\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                + \"[D][\\u2718] deadline - 2020-08-25\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                + \"[E][\\u2718] event - 2020-08-25\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        assertEquals(tasks.toString(), expected);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 23
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void string() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Task task \u003d new Task(\"test\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        assertEquals(task.toString(), \"[?][\\u2718] test\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        assertEquals(task.toString(), \"[?][\\u2713] test\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "test"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "todo quiz"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "todo decorations"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "deadline homework /at 5pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "deadline homework /by 5pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "event birthday /by today"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "event birthday /at today"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 1,
      "-": 20
    }
  }
]
