[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    mainClassName \u003d \"duke.task.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    archiveBaseName \u003d \"Yoo\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 18,
      "-": 43
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "# Yoo: User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "---"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Yoo is a simple task-tracking chatbot that users can interact with via the command-line."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "It currently supports three types of tasks:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "- Todo (Task with no completion date)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "- Deadline (Task that has a date to complete by)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "- Event (Task that has an occurence date)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "---"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Some of the commands that Yoo supports:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "- To add tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - `todo` : adds a Todo task with description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - `event` : adds an Event task with description and date"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - `deadline` : adds a Deadline task with description and date"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "- `bye` : ends the conversation with Yoo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "- `delete` : deletes a task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "- `done` : marks a task as completed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "- `find` : finds tasks that match the given keyword  "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "- `help` : displays a list of commands"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "- `list` : displays the current list of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "- `update` : updates the description or date of a task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "##### Notes about the command format:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "- Words in `UPPER_CASE` are parameters to be supplied by the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  eg. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo borrow book`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "## Feature Usage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "---"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "#### 1. `todo`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Adds a Todo task to the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Format: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - `todo read book`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - `todo buy groceries`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "#### 2. `deadline`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Adds a Deadline task to the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Format: `deadline DESCRIPTION /by YYYY-MM-DD`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - `deadline assignment /by 2020-05-05`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - `deadline essay for XX mod /by 2020-06-06`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "#### 3. `event`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Adds a Event task to the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Format: `event DESCRIPTION /at YYYY-MM-DD`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - `event party /at 2020-04-04`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - `event lunch with mom /at 2020-03-03`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "#### 4. `bye`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Ends the conversation with Yoo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "#### 5. `delete`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Deletes a task from the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - Deletes the task at the specified `INDEX`."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - The index refers to the index number showed in the displayed task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - The index must be a **positive integer** 1,2,3,..."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Example: `delete 1`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "#### 6. `done`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Marks a task as completed."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - Marks the task at the specified `INDEX` as completed."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - The index refers to the index number showed in the displayed task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - The index must be a **positive integer** 1,2,3,..."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "#### 7. `find`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Finds tasks that match the given keyword."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - The search is case-sensitive. eg. `essay` will not match `Essay`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - Only the description of the task is searched."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - Only full words will be matched. eg. `essay` will not match `essays` "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "#### 8. `help`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Displays a list of Yoo\u0027s commands."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "#### 9. `list`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Displays the list of tasks."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "#### 10. `update`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Updates a task description or time."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Format: `update INDEX /d DESCRIPTION` or `update INDEX /t YYYY-MM-DD`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - Updates the task at `INDEX`."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - The index refers to the index number showed in the displayed task list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - The index must be a **positive integer** 1,2,3,..."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - To update the description, use the `/d` command like so: `update INDEX /d UPDATED_DESCRIPTION`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - To update the date, use the `/t` command like so: `update INDEX /t YYYY-MM-DD`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - `update 1 /d CS Assignment 1`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  - `update 4 /t 2020-02-02`"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 89,
      "-": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * Encapsulates a deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Creates a deadline task with description, a date to complete the task by, and not done by default."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param by Date to complete the task by."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Creates a deadline task with description, done status, a date to complete the task by."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param isDone Done status."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param by Date to complete the task by."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected Deadline(String description, boolean isDone, LocalDate by) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected void updateTaskDescription(String newDescription) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        this.description \u003d newDescription;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected void updateTaskTime(String newTime) throws YooException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            this.by \u003d LocalDate.parse(newTime);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            throw new YooException(\"Date format should be yyyy-mm-dd!\\nPlease try again (\u003e_\u003c)\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 53
    }
  },
  {
    "path": "src/main/java/duke/task/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        db.setBackground(new Background(new BackgroundFill(Color.LIGHTBLUE, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 67
    }
  },
  {
    "path": "src/main/java/duke/task/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * Encapsulates the chat bot program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * Yoo is a chat bot program you can use to record tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * You can add three types of tasks: todo, deadline and event."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * You can add, find, and delete tasks using commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * Terminate the program using the bye command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * @author Jace Tan"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * @since 2020-08-27"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Initialises the chat bot program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param filePath Path to the file that stores tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        ui \u003d new Ui(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            result \u003d Parser.parse(input, tasks, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (YooException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            result \u003d e.getMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 43,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * Encapsulates an event task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Creates an event task with a description and the date of the event, not done by default."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param at Date of the event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Creates an event task with a description, a done status, and the date of the event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param isDone Done status of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param at Date of the event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected Event(String description, boolean isDone, LocalDate at) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public void updateTaskDescription(String newDescription) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        this.description \u003d newDescription;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public void updateTaskTime(String newTime) throws YooException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            this.at \u003d LocalDate.parse(newTime);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            throw new YooException(\"Date format should be yyyy-mm-dd!\\nPlease try again (\u003e_\u003c)\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 53
    }
  },
  {
    "path": "src/main/java/duke/task/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 12
    }
  },
  {
    "path": "src/main/java/duke/task/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            stage.setTitle(\"Yoo\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 32
    }
  },
  {
    "path": "src/main/java/duke/task/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/yoo.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Initializes the GUI."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        String response \u003d Ui.showWelcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        response +\u003d Ui.showWelcomeTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * Encapsulates a parser that parses and executes commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Returns a boolean after parsing and executing the command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param command User\u0027s command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param ui Ui object that interacts with user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param storage Storage object to store the list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @return true if it is a bye command, false otherwise."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @throws YooException if incorrect or wrongly formatted command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected static String parse(String command, TaskList tasks, Ui ui, Storage storage) throws YooException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            storage.upload(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            result \u003d ui.showExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            if (tasks.length() \u003e 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                assert tasks.length() \u003d\u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                result \u003d \"Here\u0027s your list!\\n\" + ui.showTaskList(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                result \u003d \"You have no tasks!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        if (command.equals(\"help\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            return ui.showHelp();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //string array cmd contains keyword command in [0] and rest of the information in [1]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            String[] cmd \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            switch (cmd[0]) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                result \u003d markAsDone(tasks, cmd, ui);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                result \u003d deleteTask(tasks, cmd, ui);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            case \"update\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                result \u003d updateTask(tasks, cmd, ui);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                result \u003d addTodo(tasks, cmd, ui);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                result \u003d addDeadline(tasks, cmd, ui);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                result \u003d addEvent(tasks, cmd, ui);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                result \u003d findKeyword(tasks, cmd, ui);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                throw new YooException(\"Sorry, I didn\u0027t get that (\\u3063*\\u00B4\\u25A1`)\\u3063\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            throw new YooException(\"Please add a task description (\u003e_\u003c)\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private static String findKeyword(TaskList tasks, String[] cmd, Ui ui) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        TaskList tasksWithKeyword \u003d new TaskList();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        //if original task list is empty"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        if (tasks.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "           return ui.showCannotFindKeyword();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        //searching for matching keywords"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.length(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            if (t.getDescription().contains(cmd[1])) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                tasksWithKeyword.add(t);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        //show tasks with matching keywords"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        if (tasksWithKeyword.length() \u003e 0) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            return ui.showFoundKeyword() + \"\\n\" + ui.showTaskList(tasksWithKeyword);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            assert tasksWithKeyword.length() \u003d\u003d 0;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            return ui.showCannotFindKeyword();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    update command is as such: update [task Index] /[type of update] [update]"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    for example, to update task #1\u0027s description to \"helloWorld\": update 1 /d helloWorld"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    for example, to update task #2\u0027s time to \"2019-10-10\": update 2 /t 2019-10-10"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private static String updateTask(TaskList tasks, String[] cmd, Ui ui) throws YooException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //[0] contains task index, [1] contains rest of the command"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            String[] taskIndexAndInfo \u003d cmd[1].split(\" \\\\/\", 2);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //retrieve index of task to update"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            int index \u003d Integer.parseInt(taskIndexAndInfo[0]);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //if index is within range of task list"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            if(index \u003c\u003d tasks.length() \u0026\u0026 index \u003e 0) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                Task t \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                return executeTaskUpdate(taskIndexAndInfo, t, ui);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                assert index \u003c\u003d 0 || index \u003e tasks.length();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                throw new YooException(\"No such task (\u003e_\u003c)\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            throw new YooException(\"Please enter a valid task index (\u003e_\u003c)\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            throw new YooException(\"Sorry, your update information is missing (\\u3063*\\u00B4\\u25A1`)\\u3063\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private static String executeTaskUpdate(String[] taskIndexAndInfo, Task t, Ui ui) throws YooException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //checks if user wants to update description or time, [0] contains d or t, [1] contains update information"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            String[] updateInfo \u003d taskIndexAndInfo[1].split(\" \", 2);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            boolean isTodo \u003d t instanceof Todo;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            boolean isDeadline \u003d t instanceof Deadline;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            boolean isEvent \u003d t instanceof Event;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            if (updateInfo[0].equals(\"d\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                t.updateTaskDescription(updateInfo[1]);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            } else if (updateInfo[0].equals(\"t\") \u0026\u0026 isTodo) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                throw new YooException(\"Todo tasks don\u0027t have a date, please try again (\u003e_\u003c)\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            } else if (updateInfo[0].equals(\"t\") \u0026\u0026 isDeadline) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                ((Deadline) t).updateTaskTime(updateInfo[1]);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            } else if (updateInfo[0].equals(\"t\") \u0026\u0026 isEvent) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                ((Event) t).updateTaskTime(updateInfo[1]);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                throw new YooException(\"Please enter a valid task type, /d or /t ! (\u003e_\u003c)\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            return ui.updateSuccess(t);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            throw new YooException(\"Sorry, your update information is missing (\\u3063*\\u00B4\\u25A1`)\\u3063\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private static String markAsDone(TaskList tasks, String[] cmd, Ui ui) throws YooException {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //retrieve the index of task to be marked as done"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            int index \u003d Integer.parseInt(cmd[1]);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //if index is within range of task list"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            if (index \u003c\u003d tasks.length() \u0026\u0026 index \u003e 0) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                Task t \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                return ui.congratulate() + \"\\n\" + index + \". \" + t;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                assert index \u003c\u003d 0 || index \u003e tasks.length();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                throw new YooException(\"No such task (\u003e_\u003c)\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            throw new YooException(\"Please enter a valid task index (\u003e_\u003c)\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private static String deleteTask(TaskList tasks, String[] cmd, Ui ui) throws YooException {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //retrieve the index of task to be deleted"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            int index \u003d Integer.parseInt(cmd[1]);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //if index is within range of task list"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            if (index \u003c\u003d tasks.length() \u0026\u0026 index \u003e 0) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                Task t \u003d tasks.delete(index - 1);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                return ui.confirmDelete(t, tasks);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                assert index \u003c\u003d 0 || index \u003e tasks.length();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                throw new YooException(\"No such task (\u003e_\u003c)\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            throw new YooException(\"Please enter a valid task index (\u003e_\u003c)\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private static String addTodo(TaskList tasks, String[] cmd, Ui ui) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        Todo td \u003d new Todo(cmd[1]);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        tasks.add(td);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return ui.confirmAdd(td, tasks);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private static String addDeadline(TaskList tasks, String[] cmd, Ui ui) throws YooException {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //string array contains name in [0] and time in [1]"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            String[] dlNameAndTime \u003d cmd[1].split(\"/by \", 2);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            LocalDate by \u003d LocalDate.parse(dlNameAndTime[1]);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            Deadline dl \u003d new Deadline(dlNameAndTime[0], by);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            tasks.add(dl);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            return ui.confirmAdd(dl, tasks);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            throw new YooException(\"Sorry, your deadline time is missing (\\u3063*\\u00B4\\u25A1`)\\u3063\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            throw new YooException(\"Date format should be yyyy-mm-dd! Please try again (\u003e_\u003c)\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private static String addEvent(TaskList tasks, String[] cmd, Ui ui) throws YooException {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //string array contains name in [0] and time in [1]"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            String[] eNameAndTime \u003d cmd[1].split(\"/at \", 2);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            LocalDate at \u003d LocalDate.parse(eNameAndTime[1]);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            Event e \u003d new Event(eNameAndTime[0], at);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            tasks.add(e);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            return ui.confirmAdd(e, tasks);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            throw new YooException(\"Sorry, your event time is missing (\\u3063*\\u00B4\\u25A1`)\\u3063\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            throw new YooException(\"Date format should be yyyy-mm-dd! Please try again (\u003e_\u003c)\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 238
    }
  },
  {
    "path": "src/main/java/duke/task/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * Encapsulates a storage object that stores a list of tasks in a fixed path."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private ArrayList\u003cTask\u003e al;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Initialises a storage object containing a list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param filePath File path to store list of tasks in."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        al \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Loads a previously stored list of tasks from the file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * If no file is found, then a file is created."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @return an ArrayList of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //creating path name that can be used on different OS"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            String[] path \u003d filePath.split(\"/\", 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            java.nio.file.Path dataPath \u003d java.nio.file.Paths.get(\".\", path[0]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            java.nio.file.Path dukePath \u003d java.nio.file.Paths.get(\".\", path[0], path[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            File dataFile \u003d new File(String.valueOf(dataPath));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            File duke \u003d new File(String.valueOf(dukePath));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //if both files exist"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            if (dataFile.exists() \u0026\u0026 duke.exists()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                FileReader fr \u003d new FileReader(duke);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                String line;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                //reading past tasks from the file and convert them into a task list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                    String[] task \u003d line.split(\" // \", 4);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                    addTaskToArrayList(task, al);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                fr.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //dataFile exists but duke does not"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            } else if (dataFile.exists()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                assert !duke.exists();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                    duke.createNewFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //both files do not exist"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                assert !dataFile.exists() \u0026\u0026 !duke.exists();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                dataFile.mkdir();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                duke.createNewFile();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return al;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private static void addTaskToArrayList(String[] task, ArrayList\u003cTask\u003e al) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        /*string array \"task\" contains the following:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        [0]: type of task i.e. T, D or E"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        [1]: boolean isDone represented by 0 or 1, where 0 is not done and 1 is done"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        [2]: task description"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        [3]: task date (if any)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        boolean isDone \u003d Integer.parseInt(task[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        switch (task[0]) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            Todo td \u003d new Todo(task[2], isDone);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            al.add(td);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            LocalDate dlDate \u003d LocalDate.parse(task[3]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            Deadline dl \u003d new Deadline(task[2], isDone, dlDate);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            al.add(dl);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            LocalDate eDate \u003d LocalDate.parse(task[3]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            Event e \u003d new Event(task[2], isDone, eDate);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            al.add(e);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            System.out.println(\"task cannot be added\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Uploads a list of tasks to the file."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param tasks List of tasks to be uploaded."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @throws YooException If the file is not found in the path."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected void upload(TaskList tasks) throws YooException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        //creating path name that can be used on different OS"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        String[] path \u003d filePath.split(\"/\", 2);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        java.nio.file.Path dukePath \u003d java.nio.file.Paths.get(path[0], path[1]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        File duke \u003d new File(String.valueOf(dukePath));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            FileWriter fw \u003d new FileWriter(duke, false);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            //converting task list into text and input it into data file for storage"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.length(); i++) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                int isDone \u003d t.getStatus() ? 1 : 0;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                switch (t.getClass().getName()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                case \"duke.task.Todo\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                    fw.write(\"T // \" + isDone + \" // \" + t.getDescription() + \" // \\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                case \"duke.task.Deadline\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                    Deadline dl \u003d (Deadline) t;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                    fw.write(\"D // \" + isDone + \" // \" + dl.getDescription() + \" // \" + dl.by + \"\\n\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                case \"duke.task.Event\":"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                    Event e \u003d (Event) t;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                    fw.write(\"E // \" + isDone + \" // \" + e.getDescription() + \" // \" + e.at + \"\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                    System.out.println(\"task not written\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            throw new YooException(\"File not found!\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 141
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Creates a task with a description and marked as not done by default."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Creates a task with a description and done status."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param isDone Done status of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected boolean getStatus() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected void markAsDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected void updateTaskDescription(String newDescription) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        this.description \u003d newDescription;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 55
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * Encapsulates a list of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    private ArrayList\u003cTask\u003e al;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Initialises an empty task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        al \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Initialises a task list using an existing ArrayList of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param al ArrayList of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected TaskList(ArrayList\u003cTask\u003e al) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        this.al \u003d al;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected int length() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return al.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected Task delete(int index) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return al.remove(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        al.add(t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return al.get(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        String s \u003d \"1. \" + al.get(0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        for (int i \u003d 1; i \u003c al.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            s \u003d s + \"\\n\" + (i + 1) + \". \" + al.get(i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 52
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * Encapsulates a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Creates a deadline task with description, not done by default."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Creates a deadline task with description, and done status."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param isDone Done status of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public void updateTaskDescription(String newDescription) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        this.description \u003d newDescription;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * Encapsulates an Ui object that interacts with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected static TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    Ui(TaskList tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected static String showWelcome() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return \"Hello! I\u0027m Yoo ( ^-^)/ \\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected static String showWelcomeTaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        if (tasks.length() \u003e 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            return \"\\nBy the way, here are your saved tasks:\\n\" + tasks.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected String showExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return \"Bye! Come back soon ( ^-^)/\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * Prints the list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected String showTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return tasks.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected String congratulate() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return \"Good job completing the task! \\u256D( \\uFF65\\u3142\\uFF65)\\u0648\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected String confirmDelete(Task t, TaskList tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return \"I\u0027ve deleted the following task! \\n\" + t + \"\\nNow you have \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                + tasks.length() + \" tasks in the list (\\u00B4\\u30FB\\u03C9\\u30FB\\uFF40)\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected String confirmAdd(Task t, TaskList tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return \"I\u0027ve added the following task! \\n\" + t + \"\\nNow you have \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                + tasks.length() + \" tasks in the list (\\u00B4\\u30FB\\u03C9\\u30FB\\uFF40)\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected String showFoundKeyword() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return \"Here are the matching tasks in your list!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected String showCannotFindKeyword() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return \"Sorry, no matching tasks were found (\\u3063*\\u00B4\\u25A1`)\\u3063\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    protected String updateSuccess(Task t) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return \"Update successful! (＾◡＾)\\n\" + t;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public String showHelp() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        return \"List of Yoo\u0027s commands!\\n \\n\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"todo: add Todo task\\n\" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"       todo DESCRIPTION\\n\" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"deadline: add Deadline task\\n\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"       deadline DESCRIPTION /by YYYY-MM-DD\\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"event: add Event task\\n\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"       event DESCRIPTION /at YYYY-MM-DD\\n\" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"bye: ends convo with Yoo\\n\" +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"delete: deletes a task\\n\" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"       delete INDEX\\n\" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"done: marks a task as completed\\n\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"       done INDEX\\n\" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"find: find tasks with matching keyword\\n\" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"       find KEYWORD\\n\" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"help: displays list of Yoo\u0027s commands\\n\" +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"list: shows list of tasks\\n\" +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"update: updates task description or time\\n\" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"       update INDEX /d DESCRIPTION\\n\" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"       update INDEX /t YYYY-MM-DD\\n\" +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "                \"\\nDo refer to the User Guide for more details!\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jacetjy": 112
    }
  },
  {
    "path": "src/main/java/duke/task/YooException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " * Encapsulates exceptions that the chat bot may encounter."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "public class YooException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public YooException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 11
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"400.0\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"90.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"266.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            \u003cFont name\u003d\"Corbel\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            \u003cInsets right\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 23
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"688.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.task.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"644.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"-1.0\" prefHeight\u003d\"645.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"642.0\" prefWidth\u003d\"383.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 19
    }
  },
  {
    "path": "src/test/java/duke/task/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public void taskListOperationsTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        //creating basic TaskList"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        ArrayList\u003cTask\u003e al \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        al.add(new Todo(\"test 1\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        al.add(new Deadline(\"test 2\", false , LocalDate.of(2019, 10, 10)));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        TaskList tasks \u003d new TaskList(al);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        //testing add()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        tasks.add(new Event(\"test 3\", false, LocalDate.of(2019, 11, 10)));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        assertEquals(3, tasks.length());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        //testing delete()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        tasks.delete(0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        assertEquals(2, tasks.length());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        //testing get()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        String actual \u003d tasks.get(0).toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        String expected \u003d \"[D][✘] test 2 (by: Oct 10 2019)\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    public void storageUploadTest() throws YooException, IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        //upload() dummy text for testing"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        Storage storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        tasks.add(new Todo(\"for testing\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        storage.upload(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        //reading the uploaded dummy text"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        File test \u003d new File(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(test));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        String actual \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "            actual +\u003d line;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        assertEquals(\"T // 0 // for testing // \", actual);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 60
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "javac  -cp ..\\src\\main\\java\\* -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jacetjy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jacetjy"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "jacetjy": 3,
      "-": 20
    }
  }
]
