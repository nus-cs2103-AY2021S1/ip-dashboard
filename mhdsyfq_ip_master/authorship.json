[
  {
    "path": "src/main/java/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public Deadlines(String description, LocalDate by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String saveAs() { return \"D | \" + super.saveAs() + \" | \" + by;}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"d MMM uuuu\")) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        load(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"How can I help you today?\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                String command \u003d sc.nextLine().strip();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                String[] commandArr \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                String[] strings;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                int index;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                if (commandArr[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                switch (commandArr[0]) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        if (commandArr.length \u003d\u003d 1 || commandArr[1].strip().equals(\"\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                            throw new DukeException(\"\\nUh-oh! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        task \u003d new ToDos(commandArr[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        System.out.println(\"\\nGot it. I\u0027ve added this task:\\n \" + task + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        if (commandArr.length \u003d\u003d 1 || commandArr[1].strip().equals(\"\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                            throw new DukeException(\"\\nUh-oh! The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        strings \u003d commandArr[1].split(\"/by\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                            task \u003d new Deadlines(strings[0].strip(), LocalDate.parse(strings[1].strip()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                            throw new DukeException(\"Uh-oh! Please enter the correct date format.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        System.out.println(\"\\nGot it. I\u0027ve added this task:\\n \" + task + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        if (commandArr.length \u003d\u003d 1 || commandArr[1].strip().equals(\"\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                            throw new DukeException(\"\\nUh-oh! The description of an event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        strings \u003d commandArr[1].split(\"/at\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                            task \u003d new Events(strings[0].strip(), LocalDate.parse(strings[1].strip()));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                            throw new DukeException(\"Uh-oh! Please enter the correct date format.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        System.out.println(\"\\nGot it. I\u0027ve added this task:\\n \" + task + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        System.out.println(\"\\nHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                            System.out.println((i + 1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        System.out.println();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        index \u003d Integer.parseInt(commandArr[1]) - 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        System.out.println(\"\\nNice! I\u0027ve marked this task as done:\\n \" + tasks.get(index) + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        index \u003d Integer.parseInt(commandArr[1]) - 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        Task removedTask \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        System.out.println(\"\\nNoted. I\u0027ve removed this task:\\n \" + removedTask + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        throw new DukeException(\"\\nUh-oh! I\u0027m sorry, but I don\u0027t know what that means.\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                save(tasks);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public static void save(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"./data/tasks.txt\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                fw.write(t.saveAs() + \"\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            System.out.println(\"Uh-oh! An error occured while saving.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public static void load(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        System.out.println(\"Loading previous task list....\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            File file \u003d new File(\"./data/tasks.txt\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                String string \u003d sc.nextLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                String[] strings;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                if (string.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    strings \u003d string.split(\"\\\\|\", 3);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    task \u003d new ToDos(strings[2].strip());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    if (strings[1].strip().equals(\"true\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                } else if (string.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    strings \u003d string.split(\"\\\\|\", 4);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    task \u003d new Deadlines(strings[2].strip(), LocalDate.parse(strings[3].strip()));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    if (strings[1].strip().equals(\"true\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    strings \u003d string.split(\"\\\\| \", 4);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    task \u003d new Events(strings[2].strip(), LocalDate.parse(strings[3].strip()));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    if (strings[1].strip().equals(\"true\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            System.out.println(\"\\nTasks loaded successfully!\\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        } catch (FileNotFoundException f) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            System.out.println(\"\\nNo previous task list was found. Creating a new task list....\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                File directory \u003d new File(\"./data\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                File file \u003d new File(\"./data/tasks.txt\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                if (!(file.exists())) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    if (!(directory.exists())) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                        directory.mkdir();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    file.createNewFile();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            } catch (IOException i) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                System.out.println(\"Uh-oh! An error occured while creating the new task list.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            System.out.println(\"\\nA new task list has been created!\\n\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 149,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 5
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public Events(String description, LocalDate at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String saveAs() { return \"E | \" + super.saveAs() + \" | \" + at; }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"d MMM uuuu\")) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 19
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String saveAs() { return isDone + \" | \" + description; }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 24
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String saveAs() { return \"T | \" + super.saveAs(); }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "todo my homework"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 3
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 2,
      "-": 32
    }
  }
]
