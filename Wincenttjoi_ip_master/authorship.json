[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "buildscript {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    repositories {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        maven {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            url \"https://plugins.gradle.org/m2/\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    dependencies {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        classpath \"com.github.jengelman.gradle.plugins:shadow:6.0.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "apply plugin: \u0027java\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "apply plugin: \u0027groovy\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "apply plugin: \"com.github.johnrengelman.shadow\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    mainClassName \u003d \"duke.gui.Launcher\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 32,
      "-": 43
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Duke is a desktop application for tasks management that is best suited for fast-typists, who prefer to do tasks management entirely using Command Line Interface (CLI). "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "This application also allows user to use Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "#### There are 3 different types of task that you can put into the list, namely are: ```todo```, ```deadline``` and ```event```."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "0. Load existing tasks when application launches, if any."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "1. Add todo: ```todo```"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "2. Add deadline: ```deadline```"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "3. Add event: ```event```"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "4. Mark task as done: ```done```"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "5. List all tasks: ```list```"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "6. Delete task: ```delete```"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "7. Search keyword in list: ```find```"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "8. Show statistics: ```stats```"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "9. Exit the application: ```bye```"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "### Feature 0: Load existing tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Duke application will automatically saves your tasks after each command and loads up when everytime you enter the application."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "An example would be as shown in the image below, where the user has existing tasks that is stored in the list previously."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "![Feature0](https://github.com/Wincenttjoi/ip/blob/master/docs/feature0.JPG)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "### Feature 1: Add todo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Adds a todo task to be stored in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Type ```todo \u003ctask description\u003e``` in the textbox as provided, and click Send or press Enter button."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "todo go to the gym"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "![Feature1a](https://github.com/Wincenttjoi/ip/blob/master/docs/feature1a.JPG)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "You application should register the new todo list and should look like this:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "![Feature1b](https://github.com/Wincenttjoi/ip/blob/master/docs/feature1b.JPG)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "### Feature 2: Add deadline"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Adds a deadline task to be stored in the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "deadline \u003cdescription\u003e /by \u003cdate in yyyy-mm-dd format\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Eg: deadline submit google project PR /by 2020-11-11"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "![Feature2](https://github.com/Wincenttjoi/ip/blob/master/docs/feature2.JPG)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "### Feature 3: Adds event"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Adds an event task to be stored in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "event \u003cdescription\u003e /at \u003cdate in yyyy-mm-dd format\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Eg: event shopee webinar /at 2020-10-10"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "![Feature3](https://github.com/Wincenttjoi/ip/blob/master/docs/feature3.JPG)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "### Feature 4: Mark task as done"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Mark a task in the list as done. Ensure that number you input is not out of range."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "done \u003cnumber of item in list\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Eg: done 2"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "![Feature4](https://github.com/Wincenttjoi/ip/blob/master/docs/feature4.JPG)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "### Feature 5: List all tasks"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "List all the existing tasks."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "![Feature5](https://github.com/Wincenttjoi/ip/blob/master/docs/feature5.JPG)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "### Feature 6: Delete task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Delete a specific task in the list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "delete \u003cnumber of item in list\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Eg: delete 2"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "![Feature6](https://github.com/Wincenttjoi/ip/blob/master/docs/feature6.JPG)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "### Feature 7: Search keyword in list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "You can search for a particular keyword in the list. Duke will return you that all the tasks that contain the keyword entered."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "find \u003cdescription\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Eg: find gym"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "![Feature7](https://github.com/Wincenttjoi/ip/blob/master/docs/feature7.JPG)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "### Feature 8: Show statistics"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "You can either show the total number of items in the list, or just the items that are marked as done."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "stats total"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "stats done"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "![Feature8](https://github.com/Wincenttjoi/ip/blob/master/docs/feature8.JPG)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "### Feature 9: Exit application"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "Command would be ```bye```, or you can click on the X of the window to exit the application. Click yes to confirm exit."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "![Feature9](https://github.com/Wincenttjoi/ip/blob/master/docs/feature9.JPG)"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 109,
      "-": 15
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import duke.exceptions.DukeEmptyMessageException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import duke.exceptions.DukeInvalidMessageException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import duke.exceptions.DukeMissingTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Constructor for Command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param taskList taskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param ui Ui"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public Command(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Marks an item in the list as done and prints the necessary string message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param toEcho command and description number."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return String string from ui.printDone."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @throws DukeEmptyMessageException thrown when description is empty."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @throws DukeInvalidMessageException thrown when description is not a valid number."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String handleDone(String toEcho) throws DukeEmptyMessageException, DukeInvalidMessageException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        String[] command \u003d Parser.splitCommandAndDescription(toEcho);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        if (toEcho.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            throw new DukeEmptyMessageException(\"Done\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        if (Integer.parseInt(command[1]) \u003e TaskList.getTaskLists().size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            throw new DukeInvalidMessageException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        assert (toEcho.length() \u003e 4);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        int index \u003d Integer.parseInt(command[1]) - 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        taskList.markDone(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return ui.printDone(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Adds todo into the list and print the relevant todo message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param description description of todo."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return String string returned from ui.printTask."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String handleTodo(String description) throws DukeEmptyMessageException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        String[] command \u003d Parser.splitCommandAndDescription(description);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        if (description.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            throw new DukeEmptyMessageException(\"Todo\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        assert (description.length() \u003e 4);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        Todo todo \u003d new Todo(command[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        TaskList.getTaskLists().add(todo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return ui.printTask(todo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Adds deadline into the list and print the relevant deadline message."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param toEcho full description of deadline, including the command."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return String string returned from ui.printTask."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @throws DukeMissingTimeException thrown when user does not input the timing required."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String handleDeadline(String toEcho) throws DukeMissingTimeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String[] command \u003d Parser.splitCommandAndDescription(toEcho);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            if (toEcho.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                throw new DukeEmptyMessageException(\"Deadline\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            assert (toEcho.length() \u003e 8);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String[] strArr \u003d Parser.splitDeadlineTime(command[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String todo \u003d strArr[0];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String time \u003d strArr[1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            Deadline deadline \u003d new Deadline(todo, time);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            taskList.add(deadline);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            return ui.printTask(deadline);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            throw new DukeMissingTimeException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } catch (DukeEmptyMessageException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Adds event into the list and print the relevant event message."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param toEcho full description of event, including command."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return String string returned from ui.printTask."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @throws DukeMissingTimeException thrown when user does not input the timing required."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String handleEvent(String toEcho) throws DukeMissingTimeException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String[] command \u003d Parser.splitCommandAndDescription(toEcho);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            if (toEcho.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                throw new DukeEmptyMessageException(\"Event\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            assert (toEcho.length() \u003e 5);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String[] strArr \u003d Parser.splitEventTime(command[1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String todo \u003d strArr[0];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String time \u003d strArr[1];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            Event event \u003d new Event(todo, time);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            taskList.add(event);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            return ui.printTask(event);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            throw new DukeMissingTimeException();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } catch (DukeEmptyMessageException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Deletes an item from the list."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param toEcho delete command and description of type number."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return String string returned from ui.printDelete."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @throws DukeEmptyMessageException thrown when description is empty."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @throws DukeInvalidMessageException thrown when description is not a valid number."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String handleDelete(String toEcho) throws DukeEmptyMessageException, DukeInvalidMessageException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        String[] command \u003d Parser.splitCommandAndDescription(toEcho);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        if (toEcho.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            throw new DukeEmptyMessageException(\"Delete\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        if (Integer.parseInt(command[1]) \u003e TaskList.getTaskLists().size()"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                || Integer.parseInt(command[1]) \u003c 0) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            throw new DukeInvalidMessageException();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        assert (toEcho.length() \u003e 6);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        int indexToDelete \u003d Integer.parseInt(command[1]) - 1;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return ui.printDelete(indexToDelete);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Finds the keyword passed in argument, and returns the items from list which"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * matches the keyword."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param toEcho command and description."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return String string returned from ui.printFind."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @throws DukeEmptyMessageException thrown when keyword is empty"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String handleFind(String toEcho) throws DukeEmptyMessageException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        String[] command \u003d Parser.splitCommandAndDescription(toEcho);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        if (toEcho.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            throw new DukeEmptyMessageException(\"Find\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        assert (toEcho.length() \u003e 4);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return ui.printFind(command[1]);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Parses the command with the description and prints the statistics depending on the"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * description."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param toEcho full description"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return String string of message"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @throws DukeEmptyMessageException thrown when message is empty"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String findStats(String toEcho) throws DukeEmptyMessageException {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        String[] command \u003d Parser.splitCommandAndDescription(toEcho);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        if (toEcho.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            throw new DukeEmptyMessageException(\"Statistics\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        assert (toEcho.length() \u003e 5);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return ui.printStats(command[1]);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 172
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * Deadline is a type of task with a deadline timing."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Constructor of deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param description description of deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param time deadline time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public Deadline(String description, String time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.time \u003d Parser.stringToDate(time);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns string representation of the object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return string string representation of the object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        String timeStr \u003d Parser.dateToString(this.time);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return String.format(\"[D]%s(by: %s)\", super.toString(), timeStr);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return String.format(\"%s || deadline || %s || %s\", super.toSaveString(), this.description, this.time);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 38
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import duke.exceptions.DukeUnknownCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * Duke Class is the main class that will run based on different commands"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * given by user. Available commands include todo, deadline, event,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * done, delete. Todo, deadline and event are different types of tasks command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * Done and delete are commands to mark the list item as done or to"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * delete it respectively."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * duke.Todo, deadline and event are followed by a description or message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * Eg: todo do CS2103T project"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * This would translate to a todo list item added into the user\u0027s overall list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * Event and duke.Deadline would require /at and /by to specify the timing."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * Description of done and delete would be a number to specify which"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * item in the list that should be marked as done or deleted."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Empty constructor for duke, will be initiated when running GUI."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            storage.handleLoad();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Loads if there are any existing tasks in storage."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param filePath filepath"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            storage.handleLoad();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Invoke run for duke chatbot programme."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param args argument."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Run Duke programme depending on the different commands"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * given by user."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(ui.greeting());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(ui.showList());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                Command command \u003d new Command(taskList, ui);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                String toEcho \u003d ui.getCommand();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                if (toEcho.equals(\"bye\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    System.out.println(ui.bye());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    isExit \u003d true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else if (toEcho.equals(\"list\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    System.out.println(ui.showList());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else if (toEcho.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    System.out.println(command.handleDone(toEcho));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else if (toEcho.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    System.out.println(command.handleTodo(toEcho));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else if (toEcho.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    System.out.println(command.handleDeadline(toEcho));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else if (toEcho.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    System.out.println(command.handleEvent(toEcho));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else if (toEcho.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    System.out.println(command.handleDelete(toEcho));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else if (toEcho.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    System.out.println(command.handleFind(toEcho));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else if (toEcho.startsWith(\"stats\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    System.out.println(command.findStats(toEcho));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    throw new DukeUnknownCommandException();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                storage.saveTasks();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                ui.printDateTimeParseError(e.getMessage());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            Command command \u003d new Command(taskList, ui);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                storage.saveTasks();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                return ui.bye();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                storage.saveTasks();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                return ui.showList();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                storage.saveTasks();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                return command.handleDone(input);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                storage.saveTasks();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                return command.handleTodo(input);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                storage.saveTasks();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                return command.handleDeadline(input);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                storage.saveTasks();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                return command.handleEvent(input);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                storage.saveTasks();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                return command.handleDelete(input);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                storage.saveTasks();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                return command.handleFind(input);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            } else if (input.startsWith(\"stats\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                storage.saveTasks();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                return command.findStats(input);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                throw new DukeUnknownCommandException();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 155
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * Event is a type of task with a day time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Constructor of event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param description description of event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param time day of the event time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.time \u003d Parser.stringToDate(time);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns string representation of the object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return string string representation of the object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        String timeStr \u003d Parser.dateToString(this.time);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return String.format(\"[E]%s(at: %s)\", super.toString(), timeStr);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return String.format(\"%s || event || %s || %s\", super.toSaveString(), this.description, this.time);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 38
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * duke.Parser is responsible to do all the parsing required"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * for duke chatbot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Splits a sentence into command and its description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param fullCommand sentence given by user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return String[] string array with command in index 0 and description in index 1."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static String[] splitCommandAndDescription(String fullCommand) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Splits the deadline description and time."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param fullCommand sentence containing both description and time."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return String[] string array with description in index 0 and time in index 1."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static String[] splitDeadlineTime(String fullCommand) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return fullCommand.split(\"/by \", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Splits the event description and time."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param fullCommand sentence containing both description and time."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return String[] string array with description in index 0 and time in index 1."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static String[] splitEventTime(String fullCommand) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return fullCommand.split(\"/at \", 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Parses from string to date format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param string string of day."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return LocalDate date format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static LocalDate stringToDate(String string) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        LocalDate myDateObj \u003d LocalDate.parse(string, formatter);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return myDateObj;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Parses from date format to string."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param date date."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return string string of the date."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static String dateToString(LocalDate date) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 63
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * Storage class is responsible to save the existing list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * to a hardware storage. The list will auto-load when"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * user restart duke chatbot."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Constructor for storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param path path to the storage file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Saves every tasks into the storage file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @throws IOException if storage file cannot be found."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void saveTasks() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            BufferedWriter taskWriter \u003d new BufferedWriter(new FileWriter(path));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String tasks \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            for (Task task : TaskList.getTaskLists()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                tasks +\u003d task.toSaveString() + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            taskWriter.write(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            taskWriter.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            System.out.println(\"Sorry Boss, \" + e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Loads every tasks from the storage file to the user interface."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @throws IOException if storage file cannot be found."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void handleLoad() throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        File file \u003d new File(this.path);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        // creates data directory if it does not exist"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        // creates tasks.txt if it does not exist"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String longCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String[] keywords \u003d longCommand.split(\" \\\\|\\\\| \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            Task cur \u003d null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            switch (keywords[1]) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                cur \u003d new Todo(keywords[2]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                cur \u003d new Deadline(keywords[2], keywords[3]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                cur \u003d new Event(keywords[2], keywords[3]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                System.out.println(\"error\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            if (keywords[0].equals(\"1\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                cur.markAsDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            TaskList.getTaskLists().add(cur);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 89
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * duke.Task contains the description of command by user and"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * the state of task, whether it is done or not done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Constructor of task, item initialized as not done by default."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param description description of task command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns the status icon depending on done status of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return string icon of tick or cross."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return (isDone ? \"\\u2714\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Marks task status to done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns description of task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return string description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns 1 if status is done, 0 if not done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return string 1 if status is done, 0 if not done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            return \"1\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            return \"0\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns string representation of the object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return string string representation of the object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + this.description;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 67
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * TaskList is responsible to store the array of lists temporarily,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * and able to add new task into the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private static List\u003cTask\u003e taskLists;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private static List\u003cTask\u003e tempLists \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Constructor of Tasklist."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        taskLists \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static List\u003cTask\u003e getTaskLists() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return taskLists;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static List\u003cTask\u003e getTempLists() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return tempLists;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Marks task item as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param index number of item in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        taskLists.get(index).markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Searches the keyword in tempLists and returns each item in tempLists if exist."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param description keyword."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static void searchKeyword(String description) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        tempLists.clear();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        for (Task task : taskLists) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            if (task.getDescription().contains(description)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                tempLists.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Adds task into the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param task task to be added into list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        taskLists.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 62
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * Todo is a type of task with a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Constructor of todo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param description description of todo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns string representation of the object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return string string representation of the object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return String.format(\"%s || todo || %s\", super.toSaveString(), this.description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 31
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * Ui class is responsible for printing the necessary messages"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * such that the user would be able to view them on"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * the interface."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private static final String GREETING \u003d \"Hello Boss! How can I help you?\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private static final String SHOW_TASK \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private static final String BYE \u003d \"Bye Boss! Hope to see you again!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private static final String TAB \u003d \"   \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private static final String FIND_OPENING \u003d \"Alright Boss, here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private static final String FIND_NOTHING \u003d \"Sorry Boss, duke can\u0027t find anything that matches in your list\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Constructor of Ui."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns the next sentence of user input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return string sentence of user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns greeting message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String greeting() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return GREETING;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Shows all the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String showList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        if (TaskList.getTaskLists().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            return \"Currently, you do not have any item in the list.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.getTaskLists().size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            int number \u003d i + 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            list \u003d list + number + \".\" + TaskList.getTaskLists().get(i) + \"\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return SHOW_TASK + \"\\n\" + list;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns bye message."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return BYE + \"\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Searches and returns the keywords found in the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param description keyword."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String printFind(String description) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        TaskList.searchKeyword(description);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        if (TaskList.getTempLists().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            output \u003d FIND_NOTHING;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            output \u003d FIND_OPENING;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            for (int i \u003d 0; i \u003c TaskList.getTempLists().size(); i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                int number \u003d i + 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                output +\u003d number + \".\" + TaskList.getTempLists().get(i) + \"\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns task message when added."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String printTask(Task task) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\" + \"\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                + TAB + task + \"\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                + \"Now you have \" + TaskList.getTaskLists().size() + \" tasks in the list.\" + \"\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns done message."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param index number of list item to be marked done."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String printDone(int index) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\" + \"\\n\" + TAB + TaskList.getTaskLists().get(index) + \"\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns message of delete and deletes the item from the list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param indexToDelete number of list item to be deleted."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String printDelete(int indexToDelete) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\" + \"\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                + TAB + TaskList.getTaskLists().get(indexToDelete) + \"\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                + TaskList.getTaskLists().remove(indexToDelete) + \"\\n\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                + \"Now you have \" + TaskList.getTaskLists().size() + \" tasks in the list.\" + \"\\n\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Prints the statistics depending on command."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * If command is total, duke will return total number of items in the list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * If command is done, duke will return total number of items that"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * are done in the list and return the list itself."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param command command"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return String string"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String printStats(String command) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            if (command.toLowerCase().equals(\"total\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                return \"You have \" + String.valueOf(TaskList.getTaskLists().size())"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                        + \" pending jobs to do in total Boss!\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                List\u003cTask\u003e tasks \u003d TaskList.getTaskLists();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                List\u003cTask\u003e tasksDone;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                tasksDone \u003d tasks.stream().filter(task -\u003e task.isDone).collect(Collectors.toList());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                String output \u003d \"Here are the done list: \" + \"\\n\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                for (int i \u003d 0; i \u003c tasksDone.size(); i++) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    int number \u003d i + 1;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    output +\u003d number + \".\" + tasksDone.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                output +\u003d \"Boss you have a total of \" + tasksDone.size() + \" things that are done\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                return \"Sorry Boss! There is no tasks that are done.\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns the error message."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param e error message."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void printError(String e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(e + \"\\n\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns the error message of date time parse error."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param e error message."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void printDateTimeParseError(String e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(TAB + \"Please enter date in \u0027yyyy-MM-dd\u0027 format\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 171
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeEmptyMessageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * If a command does not have any descriptions,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * then \u003ctt\u003eDukeEmptyMessageException\u003c/tt\u003e will be thrown."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class DukeEmptyMessageException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Returns a specific message depending on the command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * that is passed as parameter."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param message command given to the chatbot."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public DukeEmptyMessageException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(\"Oops! Command cannot have an empty message!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 18
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * If there is any error related to duke chatbot,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * \u003ctt\u003eDukeException\u003c/tt\u003e will be thrown."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Same message will be thrown to user in DukeException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param message message that will be thrown to user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 17
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeInvalidMessageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * If a command entered does not have a valid description,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * \u003ctt\u003eDukeInvalidMessageException\u003c/tt\u003e will be thrown."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class DukeInvalidMessageException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Specific message that will be sent to user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * when description of command is invalid."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * An example would be putting done or delete description which"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * does not exist in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public DukeInvalidMessageException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(\"Sorry Boss! The description that you put is invalid..\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 18
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeMissingTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * If event or deadline does not have a time,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * \u003ctt\u003eDukeMissingTimeException\u003c/tt\u003e will be thrown."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class DukeMissingTimeException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Override the message specifically that will be thrown"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * to user when there is missing time in event or deadline command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public DukeMissingTimeException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(\"Sorry Boss! Please ensure that you have input the time\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 16
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeUnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * If command is unknown, \u003ctt\u003eDukeUnknownCommandException\u003c/tt\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * will be thrown."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class DukeUnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Override the message to be sent to user when"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * the command input by user is unknown."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public DukeUnknownCommandException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(\"Oops! I\u0027m sorry Boss! I do not know what that means :-(\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 16
    }
  },
  {
    "path": "src/main/java/duke/gui/ConfirmBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.stage.Modality;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class ConfirmBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private static boolean answer;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Displays a pop up box to with a yes or no button,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * user is able to put generic title and message"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * to this method."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param title title"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @param message message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * @return boolean true or false"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static boolean display(String title, String message) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        Stage window \u003d new Stage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        window.initModality(Modality.APPLICATION_MODAL);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        window.setTitle(title);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        window.setMinWidth(250);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        Label label \u003d new Label();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        label.setText(message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        //Create 2 buttons"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        Button yesButton \u003d new Button(\"Yes\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        Button noButton \u003d new Button(\"No\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        yesButton.setOnAction(e -\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            answer \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            window.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        });"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        noButton.setOnAction(e -\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            answer \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            window.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        VBox layout \u003d new VBox(10);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        layout.getChildren().addAll(label, yesButton, noButton);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        layout.setAlignment(Pos.CENTER);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        Scene scene \u003d new Scene(layout);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        window.setScene(scene);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        window.showAndWait();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 54
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 61
    }
  },
  {
    "path": "src/main/java/duke/gui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 14
    }
  },
  {
    "path": "src/main/java/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            stage.setTitle(\"Duke Chatbot\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            stage.setOnCloseRequest(e -\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                e.consume();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                Boolean answer \u003d ConfirmBox.display(\"Title\", \"Are you sure you want to exit duke, Boss?\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                if (answer) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    stage.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 41
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " * Controller for duke.gui.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                DialogBox.getDukeDialog(ui.greeting() + \"\\n\" + ui.showList(), dukeImage)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 54
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        assertEquals(\"[D][\\u2718] must eat the fruit (by: Oct 10 2020)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                new Deadline(\"must eat the fruit \", \"2020-10-10\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 14
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import duke.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        assertEquals(\"[E][\\u2718] attend ninja fruit competition (at: Oct 10 2020)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                new Event(\"attend ninja fruit competition \", \"2020-10-10\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 14
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import duke.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        assertEquals(\"[T][\\u2718] Play brawl stars\", new Todo(\"Play brawl stars\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 13
    }
  },
  {
    "path": "text-ui-test/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "0 || deadline || must eat the fruit  || 2020-10-10"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "0 || event || attend ninja fruit competition  || 2020-10-10"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "todo buy some fruits"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "deadline must eat the fruit /by 2020-10-10"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "event attend ninja fruit competition /at 2020-10-10"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "helloworld"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "deadline nodeadlinetimegiven"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "event notimegiven"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "find fruit"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "find nothing"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 1,
      "-": 20
    }
  }
]
