[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "# Duke.TaskList.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.TaskList.Duke.java` file, right-click it, and choose `Run Duke.TaskList.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    mainClassName \u003d \"main.java.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 16,
      "-": 45
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.TaskList.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.UI.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.commands.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            return Parser.parseAndAddToList(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        } catch (DukeExceptions e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static String getGreeting() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return UI.getMessage(\"WELCOME_MSG\") + \"\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private static void doItAgain() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            UI.start();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            Storage.writeToFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        } catch (DukeExceptions e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            UI.printWrongInput();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            UI.printLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            doItAgain();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Main method for Duke.TaskList.Duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        System.out.println(UI.getMessage(\"LOGO\") + UI.getMessage(\"WELCOME_MSG\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        UI.printLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        Storage.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            Parser.readSave(Storage.getTmpFile());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        } catch (DukeExceptions e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        doItAgain();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 49,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Duke/DukeExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "public class DukeExceptions extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public DukeExceptions(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 7
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.TaskList.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.TaskList.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private static File tmpFile \u003d new File(System.getProperty(\"user.dir\") + File.separator + \"List.txt\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private static FileWriter writer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static void createNewFile() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            if (!tmpFile.exists()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                tmpFile.createNewFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static File getTmpFile() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return tmpFile;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static void writeToFile() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            taskList \u003d TaskList.getThingsOnList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            writer \u003d new FileWriter(tmpFile);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                writer.write(taskList.get(i).getFullText() + \"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            System.out.println(\"List Saved!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            System.out.println(\"Sorry, I couldn\u0027t save that list before closing.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 41
    }
  },
  {
    "path": "src/main/java/Duke/TaskList/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package Duke.TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.TaskList.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private static ArrayList\u003cTask\u003e thingsOnList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Returns size of current list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @return size of current list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static int getThingsOnListSize() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return thingsOnList.size();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Adds a task to list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static void addToList(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        thingsOnList.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Deletes the xth task from the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @param x Number of the task to be deleted."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static void deleteFromList(int x) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        thingsOnList.remove(x);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Gets the last task from the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @return last task on list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static Task getLastTask() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return thingsOnList.get(thingsOnList.size() - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Returns an ArrayList of the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @return ArrayList of tasks on the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static ArrayList\u003cTask\u003e getThingsOnList() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return thingsOnList;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Marks task x as done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @param x the task to be marked as done."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static void markDone(int x) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        thingsOnList.get(x).markAsDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Prints the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static void viewList() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        if (thingsOnList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            System.out.println(\"Bark bark. (No tasks right now.)\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            for (int i \u003d 0; i \u003c thingsOnList.size(); i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                System.out.println((i + 1) + \". \" + thingsOnList.get(i));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static String getListView() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        if (thingsOnList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            list \u003d \"Bark bark. (No tasks right now.)\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            list +\u003d \"BARK WOOF: (You have these tasks currently: )\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            for (int i \u003d 0; i \u003c thingsOnList.size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                list +\u003d (i + 1) + \". \" + thingsOnList.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Searches the list for the key word, and prints a new list containing tasks with the key word."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @param keyWord Key word for the search"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static void find(String keyWord) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        boolean printed \u003d false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        System.out.println(\"Woof bark: (Here are the tasks that match your key word: )\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        for (int i \u003d 0; i \u003c thingsOnList.size(); i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            if (thingsOnList.get(i).toString().contains(keyWord)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                System.out.println((i + 1) + \". \"  + thingsOnList.get(i));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                printed \u003d true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        if (!printed) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            System.out.println(\"Bark bar :\u003c (There were no tasks that matched :\u003c)\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static String getFind(String keyWord) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        String listView \u003d \"\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        boolean printed \u003d false;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        listView +\u003d (\"Woof bark: (Here are the tasks that match your key word: )\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        for (int i \u003d 0; i \u003c thingsOnList.size(); i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            if (thingsOnList.get(i).toString().contains(keyWord)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                listView +\u003d (    (i + 1) + \". \"  + thingsOnList.get(i)) + \"\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                printed \u003d true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        if (!printed) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            return (\"Bark bark :\u003c (There were no tasks that matched :\u003c)\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return listView;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 117
    }
  },
  {
    "path": "src/main/java/Duke/TaskList/tasks/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package Duke.TaskList.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private LocalDateTime due;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private DateTimeFormatter inFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private DateTimeFormatter outFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private String type \u003d \"Deadlines\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public Deadlines(String string) throws DateTimeParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        super(string.substring(0, string.indexOf(\"/\") - 1), string);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        this.due \u003d LocalDateTime.parse(string.substring(string.indexOf(\"/\") + 4), inFormat);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return \"[D] \" + super.toString() + \" (by: \" + due.getDayOfWeek() + \" \" + due.format(outFormat) + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 20
    }
  },
  {
    "path": "src/main/java/Duke/TaskList/tasks/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package Duke.TaskList.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private LocalDateTime start;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private LocalDateTime end;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private String type \u003d \"Events\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private DateTimeFormatter inFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private DateTimeFormatter outFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public Events(String string) throws DateTimeParseException, StringIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        super(string.substring(0, string.indexOf(\"/\") - 1), string);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        this.start \u003d LocalDateTime.parse(string.substring(string.indexOf(\"/\") + 4, string.indexOf(\"/\") + 19), inFormat);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        this.end \u003d LocalDateTime.parse(string.substring(string.indexOf(\"/\") + 20, string.indexOf(\"/\") + 35), inFormat);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return \"[D] \" + super.toString() + \" (at: \" + start.format(outFormat) + \" to \" + end.format(outFormat) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 22
    }
  },
  {
    "path": "src/main/java/Duke/TaskList/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package Duke.TaskList.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private String type \u003d \"Task\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private boolean done \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private String fullText;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public Task (String task, String fullText) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        this.fullText \u003d fullText + \"cone\"; // the last 4 letters say done if a task is done, and cone if its not"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    protected String getType() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Obtains fullText."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @return Raw text input combined with a status flag (completed or not) at the end."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public String getFullText() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return fullText;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        fullText \u003d fullText.substring(0, fullText.length() - 4) + \"done\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * String representation of the task, based on type and done-ness."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return done ? \"[Barked] \" + task : \"[Not barked yet] \" + task;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 41
    }
  },
  {
    "path": "src/main/java/Duke/TaskList/tasks/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package Duke.TaskList.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private String type \u003d \"Todos\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public ToDos(String string) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        super(string.substring(5), string);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return \"[T] \" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 11
    }
  },
  {
    "path": "src/main/java/Duke/UI/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package Duke.UI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.DukeExceptions;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.commands.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private static boolean isStillGoing \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private enum Messages {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        WRONG_INPUT(\"Bark bark? (This doesn\u0027t make sense?)\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        MISSING_INPUT(\"Bork bark?? Bark bark woof. (What does this command mean?? Try again with todo *task*, \" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                \"*task* /at *start date/time* *end date/time*, or *task* by *deadline.)\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        DONE_ERROR(\"Bork. (Sorry, can\u0027t be done.)\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        BYE(\"bye\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        LIST(\"list\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        DONE(\"done\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        DELETE(\"delete\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        FIND(\"find\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        GOODBYE_MSG(\"BARK! (Come back soon!)\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        WELCOME_MSG(\"BARK BARK WOOF! (Welcome! Tell me your tasks and I\u0027ll help you keep track of them!)\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        private final String value;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        Messages(String value) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            this.value \u003d value;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            return value;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private static final Messages[] ERROR_MESSAGES \u003d {Messages.WRONG_INPUT, Messages.MISSING_INPUT,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            Messages.MISSING_INPUT, Messages.DONE_ERROR};"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Prints GOODBYE_MSG."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static void printGoodbye() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        System.out.println(Messages.GOODBYE_MSG);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Prints a standard line to create spacing."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        System.out.println(\"************************************************************\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Gets a standard line to create spacing."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @return The line."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static String getLine() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return \"************************************************************\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Prints a random message chosen from ERROR_MESSAGES"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static void printWrongInput() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        int rnd \u003d new Random().nextInt(ERROR_MESSAGES.length);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        System.out.println(ERROR_MESSAGES[rnd].toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Stops the programme from running."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static void stop() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        isStillGoing \u003d false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Retrieves messages of the title cmd."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @param cmd"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @return String value stored in Messages.cmd.toString()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static String getMessage(String cmd) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return Messages.valueOf(cmd).toString();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Starts the Duke.TaskList.Duke.UI, and the rest of the programme."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @throws DukeExceptions"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static void start() throws DukeExceptions {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        isStillGoing \u003d true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            Parser.parseAndAddToList(sc.nextLine());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            if(!isStillGoing) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 97
    }
  },
  {
    "path": "src/main/java/Duke/commands/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package Duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.DukeExceptions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.TaskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.TaskList.tasks.Deadlines;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.TaskList.tasks.Events;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.TaskList.tasks.ToDos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.UI.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.io.OutputStream;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": " * Helps to parse through both user inputs and the save file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private static FileReader taskReader;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Reads save file and fills up the list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * with the old save file\u0027s tasks, including"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * status."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @param tmpFile file containing the saved tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @throws DukeExceptions"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static void readSave(File tmpFile) throws DukeExceptions {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            taskReader \u003d new FileReader(tmpFile);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            PrintStream oldOutput \u003d System.out;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            PrintStream dummyOut \u003d new PrintStream(new OutputStream() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                public void write(int i) throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            System.setOut(dummyOut);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            BufferedReader bufferedTaskReader \u003d new BufferedReader(taskReader);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            String lineWithStatus;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            String status;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            while ((lineWithStatus \u003d bufferedTaskReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                line \u003d lineWithStatus.substring(0, lineWithStatus.length() - 4);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                status \u003d lineWithStatus.substring(lineWithStatus.length() - 4);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                parseAndAddToList(line);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                if (status.equals(\"done\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                    TaskList.markDone(TaskList.getThingsOnListSize() - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            System.setOut(oldOutput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            System.out.println(\"BARK WOOF: (You have these tasks currently: )\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            TaskList.viewList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        } catch ( IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            throw new DukeExceptions(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Parses through input text to check for Duke.TaskList.Duke.commands"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * then adds a type of Task to the ArrayList of tasks."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @param input User-input string."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * @throws DukeExceptions"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static String parseAndAddToList(String input) throws DukeExceptions {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        int startingSize \u003d TaskList.getThingsOnListSize();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        boolean searched \u003d false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        if (!input.isEmpty()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            UI.printLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            if (input.equals(UI.getMessage(\"BYE\"))) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                UI.stop();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                return UI.getMessage(\"GOODBYE_MSG\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            } else if (input.equals(UI.getMessage(\"LIST\"))) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                return TaskList.getListView();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            } else if (!input.isEmpty()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                int spaceIndex \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                if (spaceIndex !\u003d -1 \u0026\u0026 spaceIndex !\u003d input.length() - 1"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        \u0026\u0026 (input.contains(UI.getMessage(\"DELETE\"))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        || input.contains(UI.getMessage(\"DONE\")))) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        int x \u003d Integer.parseInt(input.substring(spaceIndex + 1)) - 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        if (x + 1 \u003e TaskList.getThingsOnListSize()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                            throw new DukeExceptions(\"Woof? (This task doesn\u0027t exist?)\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        if (input.substring(0, spaceIndex).equals(UI.getMessage(\"DONE\"))) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                            TaskList.markDone(x);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                            return TaskList.getListView() + \"BARK BARK!!! (Task marked as done!!!)\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        } else if (input.substring(0, spaceIndex).equals(UI.getMessage(\"DELETE\"))) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                            TaskList.deleteFromList(x);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                            return (\"Bark bark: bork bark. (Removing task: \" +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                                    TaskList.getThingsOnList().get(x) + \".\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        throw new DukeExceptions(\"Bark bark. (That number isn\u0027t on the list.)\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                    int cmdIndex \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                    if ((cmdIndex \u003d\u003d 0 || (input.contains(\"todo\") || input.contains(\"find\")) \u0026\u0026 input.length() \u003d\u003d 4)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        throw new DukeExceptions(\"Bark bark? (There\u0027s no content for this command?)\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                    } else if (cmdIndex !\u003d -1 \u0026\u0026 cmdIndex !\u003d input.length() - 1) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        String cmd \u003d input.substring(cmdIndex, cmdIndex + 3);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                            if (cmd.equals(\"/by\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                                TaskList.addToList(new Deadlines(input));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                            } else if (cmd.equals(\"/at\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                                TaskList.addToList(new Events(input));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                            throw new DukeExceptions("
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                                    \"Bark (Please make sure format of Date/Time is yyyy-MM-dd HHmm)\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                    } else if (input.contains(\"todo\") \u0026\u0026 !(input.substring(input.length() - 4).contains(\"todo\"))) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        if (input.substring(5).isEmpty()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                            throw new DukeExceptions(\"Bork? (This todo is empty?)\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        TaskList.addToList(new ToDos(input));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                    } else if (input.contains(\"find\") \u0026\u0026 !input.substring(4).contains(\"find\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        searched \u003d true;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        if (input.substring(5).isEmpty()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                            throw new DukeExceptions(\"Bork?? (This find is empty?)\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        return TaskList.getFind(input.substring(5));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                    if (TaskList.getThingsOnListSize() \u003d\u003d startingSize \u0026\u0026 !searched) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        throw new DukeExceptions(\"Bark bark bark! (Please use me with proper commands!)\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                        return (\"Bark. Bork: bark bark woof. (Roger. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                                TaskList.getLastTask() + \"\\n    \" +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                                \"Now you have \" + TaskList.getThingsOnListSize() + \" tasks in the list.)\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 141
    }
  },
  {
    "path": "src/main/java/GUI/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 61
    }
  },
  {
    "path": "src/main/java/GUI/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 9
    }
  },
  {
    "path": "src/main/java/GUI/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 32
    }
  },
  {
    "path": "src/main/java/GUI/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.TaskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.UI.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.DukeExceptions;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.commands.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private String greeting \u003d Duke.getGreeting();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        Storage.createNewFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            Parser.readSave(Storage.getTmpFile());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        } catch (DukeExceptions e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            dialogContainer.getChildren().add(DialogBox.getDukeDialog(e.getMessage(), dukeImage));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greeting + \"\\n\" + TaskList.getListView(), dukeImage));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            UI.stop();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            Storage.writeToFile();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 71
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"GUI.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 19
    }
  },
  {
    "path": "src/test/main/java/TaskList/tasks/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package main.java.TaskList.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.TaskList.tasks.ToDos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public void enumTest(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        ToDos testTask \u003d new ToDos(\"todo hello\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        assertEquals(testTask.toString(), \"[T] [Not barked yet] hello\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 14
    }
  },
  {
    "path": "src/test/main/java/UI/UITest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "package main.java.UI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import Duke.UI.UI;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "public class UITest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    public void enumTest(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "        assertEquals(UI.getMessage(\"GOODBYE_MSG\"), \"BARK BARK WOOF! (Welcome! Tell me your tasks and I\u0027ll he\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "                \"lp you keep track of them!)\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "todo test input.txt"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "test input.txt /by 10am"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "test input.txt /at 4-6pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "line"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "hehehehe"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.TaskList.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "REM run the program, feed Duke.TaskList.Duke.commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "java -classpath ..\\bin main.Duke.TaskList.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 3,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.TaskList.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "# run the program, feed Duke.TaskList.Duke.commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theyellowfellow"
        },
        "content": "java -classpath ../bin Duke.TaskList.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "theyellowfellow": 3,
      "-": 35
    }
  }
]
