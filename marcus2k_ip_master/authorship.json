[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "# Pikachu Task Manager ChatBot"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "This is a project for a greenfield Java project, adapted from CS2103 Duke, named after the Java mascot _Duke_. Given below are instructions on how to use it. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "## Chatbot Commands:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "- find [keyword]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "- date [task date]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "- todo [new todo list]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "- event [new event] \\at [DD-MM-YYYY HH:MM]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "- deadline [new event] \\by [DD-MM-YYYY HH:MM]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "- tag [task number] [new tag]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "- findtag [tag]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "- untag [task number] [tag]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "- untag [tag]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "- delete [task number]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "- done [task number]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "## Sample App Preview"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "![image](other/app-preview.gif)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 19,
      "-": 25
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    //mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 18,
      "-": 44
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### Todo Feature"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Add a todo task to your list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### `todo \u003ctask name\u003e`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Adds the todo to your list of tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`todo buy new shoes`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`[T][x] \u003ctask name\u003e`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### Event Feature"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Add an event to your list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### `event \u003cevent name\u003e /at \u003cDD-MM-YYYY\u003e`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Adds the event to your list of tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`event party/at9-08-2020 23:59`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`[E][x] \u003cevent name\u003e (at: 09 Sep 2020 11.59pm)`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### Deadline Feature"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Add a deadline to your list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### `deadline \u003cdeadline name\u003e /by \u003cDD-MM-YYYY\u003e` "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Adds the deadline to your list of tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`deadline homework/at9-08-2020 23:59`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`[D][x] \u003cevent name\u003e (by: 09 Sep 2020 11.59pm)`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### Find Feature"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Finds tasks with a specific keyword within your list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### `find \u003ckeyword\u003e` - "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Displays a list of tasks containing the keyword."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`find meeting`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`1. [E][x] meeting for CS2103 (at: 14 Sep 2020 10.00pm)`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`2. [E][x] CCAmeeting (at: 20 Sep 2020 7.00am)`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### Date Feature"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Finds tasks with a specific date within your list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### `date \u003cDD-MM-YYYY\u003e` - "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Displays a list of tasks containing the keyword."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`find meeting`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`1. [E][x] meeting for CS2103 (at: 14 Sep 2020 10.00pm)`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`2. [T][x] Group Project Task (at: 14 Sep 2020 7.00am)`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### Tag Feature"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Tags your task with a specific tag."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### `tag \u003cindex\u003e \u003ctag\u003e` - "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Adds the tag to your task. You need to use the list feature to view the task indices."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`tag 2 urgent`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`1. [E][x] meeting for CS2103 (at: 14 Sep 2020 10.00pm)`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`2. [T][x] Group Project Task (at: 14 Sep 2020 7.00am) #urgent`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### Find Tag Feature"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Display a list of tasks with the specified tag."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### `findtag \u003ctag\u003e` - "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Display a list of tasks with the specified tag."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`findtag urgent`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`1. [E][x] meeting for CS2103 (at: 14 Sep 2020 10.00pm) #urgent #important`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`2. [T][x] Group Project Task (at: 14 Sep 2020 7.00am) #abc #urgent`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### Untag Feature"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Untags all tasks (or a specified index of task) by removing the specified tag."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### `untag \u003ctag\u003e` - "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Removes the tag from all tasks"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`untag urgent`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`1. [E][x] meeting for CS2103 (at: 14 Sep 2020 10.00pm) #important`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`2. [T][x] Group Project Task (at: 14 Sep 2020 7.00am) #abc`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### `untag \u003cindex\u003e \u003ctag\u003e` - "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Removes the tag from tasks at the specified index number. You need to use the list feature to view the task indices. "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`untag 2 urgent`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`1. [E][x] meeting for CS2103 (at: 14 Sep 2020 10.00pm) #urgent #important`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`2. [T][x] Group Project Task (at: 14 Sep 2020 7.00am) #abc`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### Delete Feature"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Delete a specific task number."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### `delete \u003cindex\u003e` - "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Deletes the task at the specified index. You need to use the list feature to view the task indices."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`1. [T][x] Group Project Task (at: 14 Sep 2020 7.00am) #abc #urgent`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### Done Feature"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Marks a task as done."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "### `done \u003cindex\u003e` - "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Marks the task at specific index as done. You need to use the list feature to view the task indices."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "`1. [T][✔] Group Project Task (at: 14 Sep 2020 7.00am) #abc #urgent`"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 177,
      "-": 14
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author marcus2k-reused"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        //Adapted from zhangj1an\u0027s Duke GUI"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        //GUI settings copied with minor modification on dialog box min width."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        dialog.setMinSize(250, Label.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setBackground(new Background(new BackgroundFill("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                Color.gray(0.865), new CornerRadii(10), new Insets(5, 5, 5, 5))));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setSpacing(10);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 62,
      "-": 8
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a Duke chat bot. A \u003ccode\u003eDuke\u003c/code\u003e object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * has a specific storage instance, a list of tasks, and"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * a user interface."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        TaskList taskList;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            taskList \u003d this.storage.loadList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            System.out.println(\"Creating a new list instead...\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            // perhaps create the specified filePath and request for user confirmation?"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        TaskList taskList;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.storage \u003d new Storage(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            taskList \u003d this.storage.loadList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            System.out.println(\"Creating a new list instead...\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            // perhaps create the specified filePath and request for user confirmation?"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Starts the Duke ChatBot with storage file at ./data/duke.txt."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Duke chatBot \u003d new Duke(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        chatBot.run();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        System.out.println(ui.getLogo());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        System.out.println(ui.getWelcomeMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                String query \u003d ui.readLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                Command c \u003d Parser.parse(query);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                String response \u003d c.execute(this.taskList, this.ui, this.storage);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                System.out.println(response);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                System.out.println(ui.getError(e));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        });"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        });"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String dukeText \u003d userInput.getText();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                DialogBox.getUserDialog(userText, user),"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, duke)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        );"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String getResponse(String input) throws DukeException {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            assert c !\u003d null: \"No command available\";"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            response \u003d c.execute(this.taskList, this.ui, this.storage);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            response \u003d ui.getError(e);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marcus2k": 208,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final String topLine \u003d \"-----------------------------------------\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final String bottomLine \u003d \"\\n-----------------------------------------\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            //+ \"-------------------\";;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        /*String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";*/"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String text \u003d this.topLine + \"Pika Pika Pikachu!\\nWhat can I do for you?\" + this.bottomLine;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                DialogBox.getDukeDialog(text, dukeImage)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private void handleUserInput() throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                DialogBox.getUserDialog(this.topLine + input + this.bottomLine, userImage),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                DialogBox.getDukeDialog(this.topLine + response + this.bottomLine, dukeImage)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 71
    }
  },
  {
    "path": "src/main/java/duke/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents an add command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Creates a new AddCommand instance."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param command type of task to be added."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param input description of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public AddCommand(String command, String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Executes the add command by processing the input TaskList, Ui, and Storage instances."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param list a TaskList containing all Duke\u0027s current tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param ui a user interface in charge of Duke\u0027s I/O."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param storage a storage system that handles .txt file manipulation."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Task task \u003d list.addTask(command, input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task: \\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        output +\u003d task;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        output +\u003d \"\\nNow you have \" + list.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        storage.updateTextFile(list);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 36
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Checks if this object is an ExitCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if this is ExitCommand instance, else false."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Executes the command by processing the input TaskList, Ui, and Storage instances."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param list a TaskList containing all Duke\u0027s current tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param ui a user interface in charge of Duke\u0027s I/O."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param storage a storage system that handles .txt file manipulation."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public abstract String execute(TaskList list, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 25
    }
  },
  {
    "path": "src/main/java/duke/DateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a \"get tasks at a specific date\" command in Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class DateCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Creates a new DateCommand instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param dateString string representing date of tasks to be retrieved."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public DateCommand(String dateString) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"d-M-yyyy\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Executes the date command by processing the input TaskList, Ui, and Storage instances."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param list a TaskList containing all Duke\u0027s current tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param ui a user interface in charge of Duke\u0027s I/O."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param storage a storage system that handles .txt file manipulation."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String formattedDate \u003d this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        TaskList timedTasks \u003d list.getTimedTasks(this.date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String output \u003d \"Here are your tasks for \" + formattedDate + \":\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        output +\u003d timedTasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return ui.getLine(output);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 37
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a deadline containing a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Inherits from abstract class TimedTask."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class Deadline extends TimedTask {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Create a new Deadline instance."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param description describes the deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param datetime contains date and time info."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Deadline(String description, String datetime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(description, datetime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a text representation of object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * This is for purpose of storage in .txt file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String of .txt format"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected String getTxtFormat() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String[] splitTag \u003d super.getTxtFormat().split(\"#\", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (splitTag.length \u003e 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            return \"deadline, \" + splitTag[0] + \"/by\" + this.dateTime.format(Deadline.INPUT_FORMAT)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    + \" #\" + splitTag[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"deadline, \" + splitTag[0] + \"/by\" + this.dateTime.format(Deadline.INPUT_FORMAT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a string representation of object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String[] splitTag \u003d super.toString().split(\"#\", 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (splitTag.length \u003e 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            return \"[D]\" + splitTag[0] + \" (by: \" + super.getDateTimeString() + \")\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    + \" #\" + splitTag[1];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"[D]\" + splitTag[0] + \" (by: \" + super.getDateTimeString() + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 49
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a delete command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Creates a new DeleteCommand instance."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param index index of task that was done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Executes the delete command by processing the input TaskList, Ui, and Storage instances."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param list a TaskList containing all Duke\u0027s current tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param ui a user interface in charge of Duke\u0027s I/O."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param storage a storage system that handles .txt file manipulation."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Task task \u003d list.deleteTask(this.index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String textOutput \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        textOutput +\u003d task;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        storage.updateTextFile(list);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return ui.getLine(textOutput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 32
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a done command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Creates a new DoneCommand instance."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param index index of task that was done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Executes the done command by processing the input TaskList, Ui, and Storage instances."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param list a TaskList containing all Duke\u0027s current tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param ui a user interface in charge of Duke\u0027s I/O."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param storage a storage system that handles .txt file manipulation."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Task task \u003d list.setDone(this.index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String textOutput \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        textOutput +\u003d task;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        storage.updateTextFile(list);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return ui.getLine(textOutput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 32
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents Exceptions specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 10
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a event containing a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Inherits from abstract class TimedTask."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class Event extends TimedTask {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Create a new Event instance."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param description describes the event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param datetime contains date and time info."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Event(String description, String datetime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(description, datetime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a text representation of object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * This is for purpose of storage in .txt file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String of .txt format"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected String getTxtFormat() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String[] splitTag \u003d super.getTxtFormat().split(\"#\", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (splitTag.length \u003e 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            return \"event, \" + splitTag[0] + \"/at\" + this.dateTime.format(Deadline.INPUT_FORMAT)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    + \" #\" + splitTag[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"event, \" + splitTag[0] + \"/at\" + this.dateTime.format(Deadline.INPUT_FORMAT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a string representation of object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String[] splitTag \u003d super.toString().split(\"#\", 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (splitTag.length \u003e 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            return \"[E]\" + splitTag[0] + \" (at: \" + super.getDateTimeString() + \")\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    + \" #\" + splitTag[1];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"[E]\" + splitTag[0] + \" (at: \" + super.getDateTimeString() + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 49
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents an exit command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Executes the exit command by processing the input TaskList, Ui, and Storage instances."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param list a TaskList containing all Duke\u0027s current tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param ui a user interface in charge of Duke\u0027s I/O."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param storage a storage system that handles .txt file manipulation."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return ui.printBye();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 22
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Executes the find command by processing the input TaskList, Ui, and Storage instances."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param list a TaskList containing all Duke\u0027s current tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param ui a user interface in charge of Duke\u0027s I/O."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param storage a storage system that handles .txt file manipulation."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        TaskList keywordTasks \u003d list.findTask(keyword);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String output \u003d \"Here are your tasks with keyword(s) \\\"\" + this.keyword + \"\\\" :\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        output +\u003d keywordTasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return ui.getLine(output);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 24
    }
  },
  {
    "path": "src/main/java/duke/FindTagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class FindTagCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final String tag;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public FindTagCommand(String tag) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        TaskList taskList \u003d list.findTag(this.tag);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String textOutput \u003d \"Here are your tasks tagged with #\" + this.tag + \":\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        textOutput +\u003d taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        storage.updateTextFile(list);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return ui.getLine(textOutput);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 17
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a list command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Executes the list command by processing the input TaskList, Ui, and Storage instances."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param list a TaskList containing all Duke\u0027s current tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param ui a user interface in charge of Duke\u0027s I/O."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param storage a storage system that handles .txt file manipulation."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, your list is empty :\u003c\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String textOutput \u003d \"Here is the complete list of your task: \\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        textOutput +\u003d list.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return ui.getLine(textOutput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 23
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Responsible to make sense of user input in Duke and converts it to command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Takes in a user query string, and interprets it into commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param query user input query."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return Command instance."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public static Command parse(String query) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String[] queryArr \u003d query.split(\" \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        assert !queryArr[0].equals(\"\"): \"No query available\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            switch (queryArr[0]) { // command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new DoneCommand(Integer.parseInt(queryArr[1]) - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(queryArr[1]) - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            case \"date\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new DateCommand(queryArr[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new FindCommand(queryArr[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            case \"tag\": // format: tag \u003citemNumber\u003e \u003cnewTag\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                String[] tagInfo \u003d queryArr[1].split(\" \", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new TagCommand(Integer.parseInt(tagInfo[0]) - 1, tagInfo[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            case \"untag\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    String[] untagInfo \u003d queryArr[1].split(\" \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    return new UntagCommand(Integer.parseInt(untagInfo[0]) - 1, untagInfo[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    return new UntagCommand(queryArr[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            case \"findtag\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new FindTagCommand(queryArr[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new AddCommand(queryArr[0], queryArr[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"Sorry, which task number?\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, I don\u0027t know what that means :\u003c\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 53
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Handles storage, reading, and writing of tasks to .txt file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Instantiates a new storage object located at the input filePath string."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param filePath location of storage file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Reads the tasks from the storage file, and returns a TaskList object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * containing the tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return TaskList containing tasks in storage file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if storage file not found."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public TaskList loadList() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            this.file \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            Scanner sc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            while (sc.hasNext()) { // e.g. deadline, 1, description/by date#tag1,tag2"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                String[] arr \u003d sc.nextLine().split(\", \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                assert arr.length \u003d\u003d 3: \"duke.txt data not in correct format\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                if (arr.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    list.addTask(arr[0], arr[2], arr[1].equals(\"1\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    throw new DukeException(\"Invalid text format in file.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"Sorry, \" + e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Overwrites the .txt file to contain the tasks in the input TaskList object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if file cannot be found / created / opened."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void updateTextFile(TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            StringBuilder text \u003d new StringBuilder();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                text.append(task.getTxtFormat());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                text.append(\"\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fw.write(text.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"Sorry, \" + e.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 70
    }
  },
  {
    "path": "src/main/java/duke/TagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class TagCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final String tag;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public TagCommand(int index, String tag) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Task task \u003d list.tagTask(this.index, this.tag);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String textOutput \u003d \"Nice! I\u0027ve tagged this task with #\" + this.tag + \":\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        textOutput +\u003d task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        storage.updateTextFile(list);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return ui.getLine(textOutput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 19
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Abstract class representing a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected HashSet\u003cString\u003e tagSet \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Constructor that initializes with description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param description task info."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Marks this task as done, and returns this task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return this Task object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected Task setDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a text representation of object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * This is for purpose of storage in .txt file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String of .txt format"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected String getTxtFormat() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        StringBuilder tags \u003d new StringBuilder();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        for (String t: tagSet) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            tags.append(\"#\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            tags.append(t);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            tags.append(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return (this.isDone ? \"1, \" : \"0, \") + this.description + tags.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a string representation of object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String status \u003d (this.isDone) ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        StringBuilder tags \u003d new StringBuilder();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        for (String t: tagSet) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            tags.append(\"#\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            tags.append(t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            tags.append(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return status + \" \" + description + \" \" + tags.toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public boolean hasTag(String tag) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.tagSet.contains(tag);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Task addTag(String tag) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (this.tagSet.contains(tag)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"Tag already exist for task \" + this.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.tagSet.add(tag);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Task untag(String tag) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.tagSet.remove(tag);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 86
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Stores the list of task for the current Duke instance."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class TaskList implements Iterable\u003cTask\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Instantiates a new TaskList object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private TaskList(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.list \u003d arr;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns an iterator() of tasks in this TaskList object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return Tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Iterator\u003cTask\u003e iterator() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.list.iterator();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns number of tasks in this TaskList object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return size"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns true if no tasks in this TaskList object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if empty, \u003ccode\u003efalse\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.list.isEmpty();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Creates and adds a new task to the TaskList object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param type describing task type."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param input describing task information."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return Task object if successfully created and added."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if failed to add task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Task addTask(String type, String input) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.addTask(type, input, false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Creates and adds a new task to the TaskList object."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param type describing task type."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param input describing task information."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param done describing status of task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return Task object if successfully created and added."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if failed to add task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Task addTask(String type, String input, boolean done) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (input.isEmpty()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, the description cannot be empty :\u003c\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String[] splitTags \u003d input.split(\"#\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            task \u003d new Todo(splitTags[0]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            String[] arr \u003d splitTags[0].split(\"/by\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                task \u003d new Deadline(arr[0].trim(), arr[1].trim());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, when is the deadline? (/by...)\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                throw new DukeException(\"Invalid date-time format! (/by...)\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            arr \u003d splitTags[0].split(\"/at\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                task \u003d new Event(arr[0].trim(), arr[1].trim());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, when is the event? (/at...)\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                throw new DukeException(\"Invalid date-time format! (/at...)\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, I don\u0027t know what that means :\u003c\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        task \u003d done ? task.setDone() : task;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (splitTags.length \u003e 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            for (String i: splitTags) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                if (i !\u003d splitTags[0]) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    task.addTag(i.trim());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a TaskList containing TimedTask instances with the input date."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param date date of the timed-tasks we wish to retrieve."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return TaskList object if successfully retrieved."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if no tasks on the input date."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public TaskList getTimedTasks(LocalDate date) throws DukeException { // input of form \"dd-MM-yyyy\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            ArrayList\u003cTask\u003e timedTasks \u003d new ArrayList\u003c\u003e(this.list);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            timedTasks.removeIf(i -\u003e !(i instanceof TimedTask));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            Task[] timedTasksArr \u003d timedTasks.toArray(new Task[0]);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            for (Task i : timedTasksArr) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                assert i instanceof TimedTask: \"Non-timed tasks found.\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                if (!((TimedTask) i).getDate().equals(date)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    timedTasks.remove(i);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            if (timedTasks.isEmpty()) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, no tasks on that date :\u003c\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                return new TaskList(timedTasks);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                //return new TaskList(new ArrayList\u003c\u003e(timedTasks));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"Invalid date-time format! (/at...)\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Sets the i-th task as done and returns the task"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param i index of the tasks that was done."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return Task if task is in this TaskList object."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if index out of bounds."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Task setDone(int i) throws DukeException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            return this.list.get(i).setDone();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, the task number is out of range :\u003c\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Deletes the i-th task and returns the task"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param i index of the tasks to be deleted."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return Task if task is in this TaskList object."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if index out of bounds."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Task deleteTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            return this.list.remove(i);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, the task number is out of range :\u003c\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Tags the i-th task with input tag."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param i index of the tasks to be deleted."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param tag String tag for the ith item."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return Task if task is in this TaskList object."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if index out of bounds."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Task tagTask(int i, String tag) throws DukeException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            return this.list.get(i).addTag(tag);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, the task number is out of range :\u003c\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a string representation of object."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String object."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        for (int i \u003d 0; i \u003c this.size(); i++) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            int taskNum \u003d i + 1;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            output.append(taskNum);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            output.append(\".\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            output.append(this.list.get(i).toString());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            output.append((i \u003d\u003d this.size() - 1) ? \"\" : \u0027\\n\u0027);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns tasks containing the keyword."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param keyword"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return list of tasks containing keyword"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if no such task"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public TaskList findTask(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        ArrayList\u003cTask\u003e keywordTasks \u003d new ArrayList\u003c\u003e(this.list);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        keywordTasks.removeIf(i -\u003e !i.getDescription().contains(keyword));"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (keywordTasks.isEmpty()) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, no such keyword :\u003c\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return new TaskList(keywordTasks);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns tasks containing the specific tag."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param tag tag of tasks we want to retrieve"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return list of tasks containing tag"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @throws DukeException if no such task"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public TaskList findTag(String tag) throws DukeException {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        ArrayList\u003cTask\u003e taggedTasks \u003d new ArrayList\u003c\u003e(this.list);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        taggedTasks.removeIf(i -\u003e !i.hasTag(tag));"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (taggedTasks.isEmpty()) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, no such tag :\u003c\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return new TaskList(taggedTasks);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Task untagTask(int i, String tag) throws DukeException {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            return this.list.get(i).untag(tag);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, the task number is out of range :\u003c\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public TaskList untagAllTasks(String tag) throws DukeException {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        ArrayList\u003cTask\u003e taggedTasks \u003d new ArrayList\u003c\u003e(this.list);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        taggedTasks.removeIf(i -\u003e !i.hasTag(tag));"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (taggedTasks.isEmpty()) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, no such tag :\u003c\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Object[] arr \u003d taggedTasks.stream().map((Task i) -\u003e i.untag(tag)).toArray();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return new TaskList(new ArrayList(Arrays.asList(arr)));"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 262
    }
  },
  {
    "path": "src/main/java/duke/TimedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a timed task containing a description and date-time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Inherits from abstract class Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public abstract class TimedTask extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy k:mm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected static final DateTimeFormatter PRINT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh.mma\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * (Abstract) constructor to be called by concrete subclasses."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param description describes the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param datetime contains date and time info."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected TimedTask(String description, String datetime) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.dateTime \u003d LocalDateTime.parse(datetime, TimedTask.INPUT_FORMAT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a string representing date and time."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Format is \"dd MMM yyyy hh.mma\"."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return date and time string."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected String getDateTimeString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.dateTime.format(TimedTask.PRINT_FORMAT);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a LocalDate object containing date info."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return LocalDate date."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    protected LocalDate getDate() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return this.dateTime.toLocalDate();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 46
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Represents a to-do task containing a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Inherits from abstract class Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Instantiates a new to-do task with input as description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param description concise info of to-do task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a text representation of object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * This is for purpose of storage in .txt file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String of .txt format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String getTxtFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"todo, \" + super.getTxtFormat();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Returns a string representation of object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 39
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " * Handles Duke\u0027s File I/O."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private static final Scanner INPUT_READER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private static final String LINE \u003d \"------------------------------\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            + \"------------------------------\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Prints out the Duke logo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String getLogo() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return LOGO;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Prints out the welcome message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"Hello! I\u0027m Duke.\\nWhat can I do for you?\\n\" + LINE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Scans the input line from System.in and returns it."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @return String of trimmed input line."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String readLine() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return INPUT_READER.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Prints out the input message to System.out."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param message message to be printed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String getLine(String message) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Prints out the farewell message."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String printBye() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"Bye. Hope to see you again!\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * Prints out the farewell message."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     * @param exception exception to be printed."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String getError(Exception exception) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return exception.getMessage();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 66
    }
  },
  {
    "path": "src/main/java/duke/UntagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class UntagCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private static final int ALL \u003d -1;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    private final String tag;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public UntagCommand(int index, String tag) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public UntagCommand(String tag) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        this(ALL, tag);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String textOutput \u003d \"Nice! I\u0027ve removed the tag #\" + this.tag;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        if (this.index !\u003d ALL) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            Task task \u003d list.untagTask(this.index, this.tag);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            textOutput +\u003d \" from this task:\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            textOutput +\u003d task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            TaskList taskList \u003d list.untagAllTasks(this.tag);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            textOutput +\u003d \" from these tasks:\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            textOutput +\u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        storage.updateTextFile(list);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return ui.getLine(textOutput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 31
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 19
    }
  },
  {
    "path": "src/test/java/duke/DeadlineStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/** Stub for Deadline class, for JUnit testing purposes."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class DeadlineStub extends TimedTask {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public DeadlineStub(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(description, \"9-08-2020 9:00\"); // dummy datetime string"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String[] arr \u003d description.split(\"/by\", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        arr[1] \u003d LocalDateTime.parse(arr[1].trim(), DeadlineStub.INPUT_FORMAT).format(DeadlineStub.PRINT_FORMAT);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"[D]\" + \"[✗]\" + \" \" + arr[0].trim() + \" (by: \" + arr[1].trim() + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 19
    }
  },
  {
    "path": "src/test/java/duke/EventStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/** Stub for Event class, for JUnit testing purposes."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class EventStub extends TimedTask {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public EventStub(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(description, \"9-08-2020 7:00\"); // dummy datetime string"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String[] arr \u003d description.split(\"/at\", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        arr[1] \u003d LocalDateTime.parse(arr[1].trim(), EventStub.INPUT_FORMAT).format(EventStub.PRINT_FORMAT);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"[E]\" + \"[✗]\" + \" \" + arr[0].trim() + \" (at: \" + arr[1].trim() + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 20
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/** JUnit test for TaskList class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void addTaskTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String listString \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        int size \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 0: ensures that list is empty (pre condition: duke.txt is empty)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        assertEquals(\"\", list.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 1: add todo task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            task \u003d new TodoStub(\"abc\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            listString \u003d \"1.\" + task.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            list.addTask(\"todo\", \"abc\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            size++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            assertEquals(listString, list.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 2: add event task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            task \u003d new EventStub(\"today/at8-09-2020 8:00\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            list.addTask(\"event\", \"today/at8-09-2020 8:00\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            listString +\u003d \u0027\\n\u0027 + \"2.\" + task.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            size++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            assertEquals(listString, list.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 3: add deadline task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        for (int i \u003d 9; i \u003c 24; i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                task \u003d new DeadlineStub(\"lock/by9-10-2021 \" + i + \":00\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                list.addTask(\"deadline\", \"lock/by9-10-2021 \" + i + \":00\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                size++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                listString +\u003d \"\\n\" + size + \".\" + task.toString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                fail();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        assertEquals(listString, list.toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 4: add a series of event task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        for (int i \u003d 1; i \u003c 10; i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                task \u003d new EventStub(\"test/at9-10-2021 \" + i + \":00\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                size++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                list.addTask(\"event\", \"test/at9-10-2021 \" + i + \":00\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                listString +\u003d \"\\n\" + size + \".\" + task.toString();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                fail();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        assertEquals(listString, list.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 5: add event task with INVALID format"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            list.addTask(\"event\", \"today8-09-2020 8:00\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            assertEquals(\"OOPS!!! I\u0027m sorry, when is the event? (/at...)\", e.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public void getTimedTasksTest() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        String listString;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 0"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // start condition: duke.txt empty"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            list.getTimedTasks(LocalDate.parse(\"9-12-2020\", DateTimeFormatter.ofPattern(\"d-M-yyyy\")));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            assertEquals(\"OOPS!!! I\u0027m sorry, no tasks on that date :\u003c\", e.getMessage());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 2"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            task \u003d new EventStub(\"today/at8-09-2020 8:00\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            list.addTask(\"event\", \"today/at8-09-2020 8:00\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            listString \u003d \"1.\" + task.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            assertEquals(listString, list.getTimedTasks(LocalDate.parse((\"8-09-2020\"),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"d-M-yyyy\"))).toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // test 3"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        listString \u003d \"\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        for (int i \u003d 9; i \u003c 24; i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                task \u003d new DeadlineStub(\"lock/by9-10-2021 \" + i + \":00\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                list.addTask(\"deadline\", \"lock/by9-10-2021 \" + i + \":00\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                int listIndex \u003d i - 8;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                String maybeLinebreak \u003d listIndex \u003d\u003d 1 ? \"\" : \"\\n\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                listString +\u003d maybeLinebreak + listIndex + \".\" + task.toString();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                assertEquals(listString, list.getTimedTasks(LocalDate.parse(\"9-10-2021\","
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                        DateTimeFormatter.ofPattern(\"d-M-yyyy\"))).toString());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "                fail();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 125
    }
  },
  {
    "path": "src/test/java/duke/TodoStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "/** Stub for Todo class, for JUnit testing purposes."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "public class TodoStub extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public TodoStub(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        // String status \u003d done ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "        return \"[T]\" + \"[✗]\" + \" \" + description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "date 27-08-2020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "todo cs2105 lecture"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event cs2030 TA meeting /at 24-08-2020 16:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "deadline cs2030 /by 27-08-2020 09:00"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "date 27-08-2020"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event test /at 27-08-2020"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event test /at 27-08-2020 7:00"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event test /at 27-08-2020 07:00"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event test /at 27-8-2020 7:00"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event test /at 27-08-2020 7:00"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event test /at 7-08-2020 7:00"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "event test /at 07-08-2020 7:00"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "date 07-08-2020"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "date 27-08-2020"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "delete 9"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "date 07-8-2020"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "date 7-8-2020"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "date 7-08-2020"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 25
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus2k"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "marcus2k": 1,
      "-": 36
    }
  }
]
