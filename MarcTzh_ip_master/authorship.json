[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    Deadline(String name, String dateTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        String dateTimeFormat \u003d String.format(\" (by: %s)\", dateTime);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return \"[D]\" + super.toString() + dateTimeFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private static String HORIZONTAL_LINE \u003d \"____________________________________________________________\" + \"\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private static ArrayList\u003cTask\u003e List \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private static void greet() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\" + \"\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        System.out.println(HORIZONTAL_LINE + greeting + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private static void addTask(Task task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        List.add(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        System.out.println(HORIZONTAL_LINE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + \"Got it. I\u0027ve added this task: \" + \"\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + String.format(\"Now you have %s tasks in the list.\", List.size()) + \"\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private static void deleteTask(int i) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        Task task \u003d List.get(i - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        List.remove(i - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        System.out.println(HORIZONTAL_LINE"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + \"Noted. I\u0027ve removed this task: \" + \"\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + String.format(\"Now you have %s tasks in the list.\", List.size()) + \"\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private static void echo() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                if (input.equals(\"bye\")) { //exit condition"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    String goodbye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    System.out.println(HORIZONTAL_LINE + goodbye + \"\\n\" + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    System.out.println(HORIZONTAL_LINE + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    int i \u003d 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    for (Task task : List) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                        //print out task with numbering"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                        System.out.println(String.format(\"%s.\", i) + task.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                        i++;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    String[] number \u003d input.split(\"done \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    markDone(Integer.parseInt(number[1]));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    //whatever is after deadline"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    String[] deadlineInput \u003d input.split(\"deadline \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    if(deadlineInput.length \u003c 2) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                        throw new DukeIllegalArgumentException(\"\", DukeException.DukeExceptionType.DEADLINE);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    if((deadlineInput[1].split(\" /by \")).length \u003c 2) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                        throw new DukeIllegalArgumentException(\"\", DukeException.DukeExceptionType.DEADLINE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    String deadlineName \u003d (deadlineInput[1].split(\" /by \"))[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    String deadlineTime \u003d (deadlineInput[1].split(\" /by \"))[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(deadlineName, deadlineTime);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    addTask(newDeadline);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    String[] todoInput \u003d input.split(\"todo \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    if(todoInput.length \u003c 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                        throw new DukeIllegalArgumentException(\"\", DukeException.DukeExceptionType.TODO);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    String todoName \u003d todoInput[1];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    Todo newTodo \u003d new Todo(todoName);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    addTask(newTodo);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    if(input.split(\"event \").length \u003c 2) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                        throw new DukeIllegalArgumentException(\"\", DukeException.DukeExceptionType.EVENT);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    String eventInput \u003d (input.split(\"event \"))[1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    if(eventInput.split(\" /at \").length \u003c 2) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                        throw new DukeIllegalArgumentException(\"\", DukeException.DukeExceptionType.EVENT);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    String eventName \u003d (eventInput.split(\" /at \"))[0];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    String eventTime \u003d (eventInput.split(\" /at \"))[1];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    Event newEvent \u003d new Event(eventName, eventTime);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    addTask(newEvent);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    String deleteNumber \u003d (input.split(\"delete \"))[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    deleteTask(Integer.parseInt(deleteNumber));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    throw new DukeUnknownArgumentException(\"\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                System.out.println(HORIZONTAL_LINE + e + \"\\n\" + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private static void markDone(int i) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        Task task \u003d List.get(i - 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        System.out.println(HORIZONTAL_LINE + \"Nice! I\u0027ve marked this task as done:\" +  \"\\n\" +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                task.toString() + \"\\n\" + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        echo();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "MarcTzh": 106
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public enum DukeExceptionType {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        EVENT,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        DEADLINE"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    DukeExceptionType dukeExceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public DukeException(String message, DukeExceptionType dukeExceptionType) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.dukeExceptionType \u003d dukeExceptionType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return String.format(\"Error: %s\", getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 23
    }
  },
  {
    "path": "src/main/java/DukeIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class DukeIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    DukeIllegalArgumentException(String message, DukeExceptionType dukeExceptionType) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(message, dukeExceptionType);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        switch (dukeExceptionType) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                message \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                return String.format(\"OOPS!!! The description of a %s cannot be empty.\", message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                message \u003d \"event\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                return String.format(\"OOPS!!! The description of a %s cannot be empty.\", message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                message \u003d \"deadline\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                return String.format(\"OOPS!!! The description of a %s cannot be empty.\", message);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                return \"OOPS!!! The description cannot be empty.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 24
    }
  },
  {
    "path": "src/main/java/DukeUnknownArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class DukeUnknownArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    DukeUnknownArgumentException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    Event(String name, String dateTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        String dateTimeFormat \u003d String.format(\" (at: %s)\", dateTime);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return \"[E]\" + super.toString() + dateTimeFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    protected Boolean done;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    protected String icon; //tick or cross"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private static String tick \u003d \"O\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private static String cross \u003d \"X\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.icon \u003d cross;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public Boolean getDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.icon \u003d tick;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return String.format(\"[%s] %s\", icon, name);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 32
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    Todo(String name) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 32,
      "MarcTzh": 2
    }
  }
]
