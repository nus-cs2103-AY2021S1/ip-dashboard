[
  {
    "path": "src/main/java/Colour.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "public class Colour {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public static String Red(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return \"\\033[0;31m\" + s + \"\\033[0m\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public static String Green(String s) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return \"\\033[0;32m\" + s + \"\\033[0m\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public static String Cyan(String s) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return \"\\033[0;96m\" + s + \"\\033[0m\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public static String Magenta(String s) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return \"\\033[0;95m\" + s + \"\\033[0m\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public static String Yellow(String s) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return \"\\033[0;93m\" + s + \"\\033[0m\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public static String Blue(String s) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return \"\\033[0;34m\" + s + \"\\033[0m\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tankangliang": 25
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "public class Deadline extends  Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public Deadline(String desc, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return Colour.Magenta(\"[D]\") + super.getStatus() + \" (by: \" + this.date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tankangliang": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    private static final String LINE \u003d Colour.Blue(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    private static final String INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        System.out.println(INDENT + LINE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public static void respond(List\u003cString\u003e responses) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        for (String s : responses) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "            System.out.print(INDENT);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "            System.out.println(s);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    private static String[] parseWithDate(String s, String sep) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        String[] split \u003d s.split(sep);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        if (split.length \u003c 2) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "            throw new DukeException(\"Please specify a date\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return split;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    private static String getNumberOfTasks() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return \"Now you have \" + Duke.tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        List\u003cString\u003e welcomeMessage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        welcomeMessage.add(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        welcomeMessage.add(\"What can I do for you?\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        respond(welcomeMessage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        boolean run \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        while (run) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "            List\u003cString\u003e responses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "            String[] inputSplit \u003d input.split(\" \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "            Option option \u003d Option.from(inputSplit[0]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                switch (option) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                    case BYE:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        responses.add(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        run \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                    case LIST:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        responses.add(\"Here are the tasks in your list\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        for (int i \u003d 0; i \u003c Duke.tasks.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            String item \u003d \"\" + (i + 1) + \". \" + Duke.tasks.get(i).getStatus();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            responses.add(item);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        if (inputSplit.length !\u003d 2) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            throw new DukeException(\"Please provide a task number!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            int taskNumber \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            if (taskNumber \u003e Duke.tasks.size()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                                throw new DukeException(\"No such task with that number!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                                responses.add(\"Nice! I\u0027ve marked this as \" + Colour.Green(\"done\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                                Task task \u003d Duke.tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                                task.markDone();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                                responses.add(\"  \" + task.getStatus());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            throw new DukeException(\"Invalid number provided\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        if (inputSplit.length !\u003d 2) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            throw new DukeException(\"Please provide a task number!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            int taskNumber \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            if (taskNumber \u003e Duke.tasks.size()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                                throw new DukeException(\"No such task with that number!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                                responses.add(\"Noted. I\u0027ve removed this task\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                                Task task \u003d Duke.tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                                Duke.tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                                responses.add(\"  \" + task.getStatus());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                                responses.add(Duke.getNumberOfTasks());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            throw new DukeException(\"Invalid number provided\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        Task newTask;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        String description \u003d String.join(\" \", Arrays.copyOfRange(inputSplit, 1, inputSplit.length));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            throw new DukeException(\"The description field cannot be empty!\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        if (option.equals(Option.TODO)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        } else if (option.equals(Option.DEADLINE)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            String[] parsedString \u003d Duke.parseWithDate(description, \"/by\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            String desc, date;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            desc \u003d parsedString[0].strip();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            date \u003d parsedString[1].strip();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            newTask \u003d new Deadline(desc, date);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            String[] parsedString \u003d Duke.parseWithDate(description, \"/at\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            String desc, date;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            desc \u003d parsedString[0].strip();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            date \u003d parsedString[1].strip();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                            newTask \u003d new Event(desc, date);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        Duke.tasks.add(newTask);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        responses.add(\"Got it. I\u0027ve added this task\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        responses.add(\"  \" + newTask.getStatus());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        responses.add(Duke.getNumberOfTasks());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                    case UNRECOGNIZED:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                        throw new DukeException(\"Instruction not recognized\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                responses.add(e.toString());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                respond(responses);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tankangliang": 153,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return Colour.Red(super.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tankangliang": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public Event(String desc, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return Colour.Cyan(\"[E]\") + super.getStatus() + \" (at: \" + this.date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tankangliang": 14
    }
  },
  {
    "path": "src/main/java/Option.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "public enum Option {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    UNRECOGNIZED;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    private static final Map\u003cString, Option\u003e mappings;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    Option() { }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    Option(String name) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        Map\u003cString, Option\u003e map \u003d new HashMap\u003cString, Option\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        for (Option option : Option.values()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "            map.put(option.getName(), option);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        mappings \u003d map;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public static Option from (String option) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        if (mappings.containsKey(option.toLowerCase())) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "            return mappings.get(option.toLowerCase());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "            return Option.UNRECOGNIZED;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tankangliang": 43
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "abstract public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public Task(String d) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        this.description \u003d d;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        String check \u003d this.done ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        String status \u003d \"[\" + check + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return this.done ?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                Colour.Green(status)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                :"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "                Colour.Red(status);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tankangliang": 30
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public Todo(String d) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        super(d);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "        return Colour.Yellow(\"[T]\") + super.getStatus();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tankangliang": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tankangliang": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "if exist ACTUAL.TXT del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "javac  -cp ..\\src\\main\\java\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tankangliang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tankangliang"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "tankangliang": 6,
      "-": 18
    }
  }
]
