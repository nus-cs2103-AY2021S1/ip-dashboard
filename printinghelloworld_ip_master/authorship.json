[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 46
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ":end"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 103
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import duke.AdditionalInfo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import duke.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import duke.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import duke.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private String printTasks(TaskList tasklist, boolean isFind) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String output \u003d String.format(\"Here are the %stasks in your list:\", isFind ? \"matching \" : \"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        for (int i \u003d 0; i \u003c tasklist.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            Task currentTask \u003d tasklist.get(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            String num \u003d Integer.toString(i + 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            output +\u003d \"\\n\" + num + \".\" + currentTask;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public void execute(Command command) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        int commandType \u003d command.getCommandType();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        boolean print \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        if (commandType \u003d\u003d Command.LIST) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            output +\u003d printTasks(this.taskList, false);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } else if (commandType \u003d\u003d Command.DONE || commandType \u003d\u003d Command.DELETE) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            int taskIndex \u003d command.getAdditionalInfo().getTaskIndex();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            Task selectedTask \u003d taskList.get(taskIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            if (commandType \u003d\u003d Command.DONE) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                selectedTask.markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                output +\u003d \"Nice! I\u0027ve marked this task as done:\\n  \" + selectedTask;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                output +\u003d \"Noted. I\u0027ve removed this task:\\n  \" + selectedTask;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            output +\u003d \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } else if (commandType \u003d\u003d Command.EXIT) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            storage.save(taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            print \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } else if (commandType \u003d\u003d Command.INVALID) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            print \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } else if (commandType \u003d\u003d Command.FIND) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            String keyword \u003d command.getAdditionalInfo().getDescription();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            TaskList tempTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                Task tempTask \u003d taskList.get(i);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                String taskDescription \u003d tempTask.getDescription();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                // contains will return true for \"bookstore\" when searching for \"book\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                // contains is case - sensitive \"Book\" and \"book\" is different"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                if (taskDescription.contains(keyword)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    tempTaskList.add(tempTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            output +\u003d printTasks(tempTaskList, true);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            AdditionalInfo info \u003d command.getAdditionalInfo();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            if (commandType \u003d\u003d Command.CREATE_TODO) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                newTask \u003d new ToDo(info.getDescription());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else if (commandType \u003d\u003d Command.CREATE_DEADLINE) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                newTask \u003d new Deadline(info.getDescription(), info.getDate(), info.getTime());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                newTask \u003d new Event(info.getDescription(), info.getTime());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            output +\u003d \"Got it. I\u0027ve added this task:\\n  \" + newTask;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            output +\u003d \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        if (print) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            ui.printMessage(output);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        runLoopUntilExit();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private void runLoopUntilExit() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            String input \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            this.execute(command);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } while (command.getCommandType() !\u003d Command.EXIT);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String filePath \u003d \"./data\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String fileName \u003d \"data.txt\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            this.storage \u003d new Storage(filePath + \"/\" + fileName);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            File dir \u003d new File(filePath);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            File file \u003d new File(filePath, fileName);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            if (dir.exists() \u0026\u0026 file.exists()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                this.taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else if (dir.exists()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                // case where only folder exist"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                storage.createFile();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                // case where folder does not exist"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                dir.mkdir();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                storage.createFile();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            ui.showStartFailedMessage();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            ui.printException(e);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            ui.printException(e);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "printinghelloworld": 135
    }
  },
  {
    "path": "src/main/java/duke/AdditionalInfo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class AdditionalInfo {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public AdditionalInfo(int taskIndex, String description, String time, LocalDate date) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public AdditionalInfo(int taskIndex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public AdditionalInfo(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public AdditionalInfo(String description, String time, LocalDate date) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public AdditionalInfo(String description, String time) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public int getTaskIndex() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return taskIndex;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 52
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static final int EXIT \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static final int LIST \u003d 1;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static final int DONE \u003d 2;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static final int DELETE \u003d 3;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static final int FIND \u003d 4;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static final int INVALID \u003d 99;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static final int CREATE_TODO \u003d 11;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static final int CREATE_DEADLINE \u003d 12;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static final int CREATE_EVENT \u003d 13;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private int commandType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private AdditionalInfo info;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public Command(int commandType, AdditionalInfo additionalInfo) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.info \u003d additionalInfo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public Command(int commandType) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * Getter method for commandType."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @return Type of command in integer form."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public int getCommandType() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return this.commandType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * Getter method for additionalInfo."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @return AdditionalInfo ."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public AdditionalInfo getAdditionalInfo() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return this.info;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 41
    }
  },
  {
    "path": "src/main/java/duke/Common.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class Common {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static DateTimeFormatter BASIC_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 7
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public Deadline(String description, LocalDate by, String time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.date \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate date, String time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String str \u003d super.toText(\"D\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        str +\u003d \"| \" + this.date.format(Common.BASIC_FORMATTER) + \" | \" + this.time;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String dateOutput \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateOutput + \" \" + time + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 35
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 7
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String str \u003d super.toText(\"E\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        str +\u003d \"| \" + this.at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 27
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private static Command parsing(String input) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        AdditionalInfo info;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String firstWord \u003d input.split(\" \")[0].trim();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            command \u003d new Command(Command.EXIT);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            command \u003d new Command(Command.LIST);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } else if (firstWord.equals(\"find\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            String[] arr \u003d input.split(\"find \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                throw new DukeException(\"What are you trying to find?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                String findKeyword \u003d arr[1].trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                info \u003d new AdditionalInfo(findKeyword);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                command \u003d new Command(Command.FIND, info);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } else if (firstWord.matches(\"done|delete\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            String[] splitted \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(splitted[1]) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            info \u003d new AdditionalInfo(taskIndex);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            command \u003d new Command(firstWord.equals(\"done\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    ? Command.DONE"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    : Command.DELETE,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    info);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } else if (firstWord.matches(\"todo|deadline|event\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                String[] arr \u003d input.split(\"todo \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    String task \u003d arr[1].trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    info \u003d new AdditionalInfo(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                String[] arr \u003d input.split(firstWord.equals(\"deadline\") ? \"deadline\" : \"event\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                if (arr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    String exceptionMessage \u003d String.format(\"The description of %s cannot be empty.\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                            firstWord.equals(\"deadline\") ? \"a deadline\" : \"an event\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    throw new DukeException(exceptionMessage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                        String[] parsing \u003d input.split(\"/by \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                        String task \u003d parsing[0].split(\"deadline\")[1].trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                        String deadline \u003d parsing[1].trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                        String dateString \u003d deadline.split(\" \")[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                        String time \u003d deadline.split(\" \")[1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                        LocalDate date \u003d LocalDate.parse(dateString, Common.BASIC_FORMATTER);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                        info \u003d new AdditionalInfo(task, time, date);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                        String[] parsing \u003d input.split(\"/at \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                        String time \u003d parsing[1].trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                        String task \u003d parsing[0].split(\"event \")[1].trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                        info \u003d new AdditionalInfo(task, time);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            command \u003d new Command(firstWord.equals(\"todo\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    ? Command.CREATE_TODO"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    : firstWord.equals(\"deadline\")"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    ? Command.CREATE_DEADLINE"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    : Command.CREATE_EVENT,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    info);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static Command parse(String input) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String trimInput \u003d input.trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            return parsing(trimInput);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            Ui.printException(e);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            return new Command(Command.INVALID);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 86
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    // read file contents and return a String"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private static String readFileContents(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            content +\u003d s.nextLine() + System.lineSeparator();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private static ArrayList\u003cTask\u003e createTaskList(String content) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        Scanner s \u003d new Scanner(content);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            String[] arr \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            String type \u003d arr[0].trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            int status \u003d Integer.parseInt(arr[1].trim());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            String description \u003d arr[2].trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                list.add(new ToDo(description, status \u003d\u003d Task.DONE));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                String additionalInfo \u003d arr[3].trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    String dateInString \u003d additionalInfo;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    String time \u003d arr[4].trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    list.add(new Deadline(description, status \u003d\u003d Task.DONE, LocalDate.parse(dateInString, Common.BASIC_FORMATTER), time));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    list.add(new Event(description, additionalInfo, status \u003d\u003d Task.DONE));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * Creates an ArrayList of Tasks using the contents of the file."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @return An ArrayList of Tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @throws FileNotFoundException If the file does not exist in the FilePath."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String contentsInString \u003d Storage.readFileContents(this.filePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return createTaskList(contentsInString);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * Creates a file to so that we are able to save all the tasks in the TaskList."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @throws IOException If the directory of the file being created doesn\u0027t exist."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public void createFile() throws IOException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    //TODO: Throw DukeException"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * Saves all the tasks in TaskList to a text file."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @param taskList TaskList containing all the existing tasks entered by user."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public void save(TaskList taskList) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String dataToSave \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            Task currentTask \u003d taskList.get(i);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            if (i \u003d\u003d taskList.size() - 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                dataToSave +\u003d currentTask.toText();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                dataToSave +\u003d currentTask.toText() + System.lineSeparator();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            writeToFile(this.filePath, dataToSave);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            System.out.println(\"Error saving data to disk\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 104
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static final int DONE \u003d 1;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static final int NOT_DONE \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public Task(String description, boolean status) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.isDone \u003d status;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * Returns a symbol depending on status of task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @return Tick or cross symbol."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return (isDone ? \"\\u2714\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * Getter method for description."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return toText(\"T\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String toText(String type) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        int doneInt \u003d this.isDone ? DONE : NOT_DONE;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return String.format(\"%s | %d | %s\", type, doneInt, this.description);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 52
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    ArrayList\u003cTask\u003e mainList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e mainList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.mainList \u003d mainList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.mainList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * Adds task to TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @param task Task to add."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.mainList.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * Removes task from TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @param index Index of task in TaskList to remove."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.mainList.remove(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * Gets the task in the TaskList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @param index Index of task in TaskList to get."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @return Task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return this.mainList.get(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * Gets the size of TaskList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @return Size of TaskList."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return this.mainList.size();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 48
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public ToDo(String description, boolean status) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        super(description, status);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 16
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * Creates a \u0027frame\u0027 for the output that is being printed"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @param s The output that is going to get printed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static void printMessage(String s) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String output \u003d String.format(\"____________________________________________________________\\n%s\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                + \"____________________________________________________________\\n\", s);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * Prints message in exception."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @param e Duke Exception"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static void printException(Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String errorMessage \u003d \"☹ OOPS!!! \" + e.getMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        printMessage(errorMessage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String greetings \u003d \"Hello! I\u0027m Duke, your personal assistant.\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        printMessage(greetings);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public void showStartFailedMessage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String errorMessage \u003d \"An error occurred in during initialisation :(\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        printMessage(errorMessage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String byeMessage \u003d \"Bye. Take care!!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        printMessage(byeMessage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * Returns what the user input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     * @return One line of user input."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 54
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public void testParsingDeadline() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String input \u003d \"deadline homework /by 31/12/2020 2359\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String expectedTime \u003d \"2359\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        LocalDate expectedDate \u003d LocalDate.parse(\"2020-12-31\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String expectedDescription \u003d \"homework\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        Command result \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        AdditionalInfo resultInfo \u003d result.getAdditionalInfo();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        assertEquals(expectedTime, resultInfo.getTime());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        assertEquals(expectedDescription, resultInfo.getDescription());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        assertEquals(expectedDate, resultInfo.getDate());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        assertEquals(Command.CREATE_DEADLINE, result.getCommandType());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public void testParsingEvent() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String input \u003d \"event Jean\u0027s Birthday /at Sentosa tomorrow\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String expectedTime \u003d \"Sentosa tomorrow\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String expectedDescription \u003d \"Jean\u0027s Birthday\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        Command result \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        AdditionalInfo resultInfo \u003d result.getAdditionalInfo();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        assertEquals(expectedDescription, resultInfo.getDescription());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        assertEquals(expectedTime, resultInfo.getTime());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        assertEquals(Command.CREATE_EVENT, result.getCommandType());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public void testParsingTodo() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String input \u003d \"todo finish my 2103 assignments!\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String expectedDescription \u003d \"finish my 2103 assignments!\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        Command result \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        AdditionalInfo resultInfo \u003d result.getAdditionalInfo();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        assertEquals(expectedDescription, resultInfo.getDescription());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        assertEquals(Command.CREATE_TODO, result.getCommandType());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 47
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "printinghelloworld": 1
    }
  }
]
