[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    Deadline(String task, String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.description + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jmleong666": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    String addTaskLine;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    String doneTaskLine;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    String listTaskLine;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    String byeLine;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    String errorLine;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    String indent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        addTaskLine \u003d \"\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        doneTaskLine \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        listTaskLine \u003d \"________________________________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        byeLine \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        errorLine \u003d \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        indent \u003d \"    \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    void displayError(String errorMessage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                indent + errorLine + \"\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                + indent + errorMessage + \"\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                + indent + errorLine"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    void displayAddTaskSuccess(Task task, int taskCount) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                indent + addTaskLine + \"\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                + indent + \"Added task:\" +\"\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                + indent + indent + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                + indent + \"You now have \" + taskCount + \" task(s) in the list.\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                + indent + addTaskLine"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    public boolean handleInput(String input) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        String[] processedInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        if (DukeCommand.equalsCommand(input, DukeCommand.EXIT)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            exit();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        } else if (DukeCommand.equalsCommand(input, DukeCommand.LIST)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            System.out.println(indent + listTaskLine);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                System.out.println(indent + (tasks.indexOf(task) + 1) + \".\" + task.toString()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                System.out.println(indent + \"None\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            System.out.println(indent + listTaskLine);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        } else if (DukeCommand.equalsCommand(processedInput[0], DukeCommand.DONE)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            if (processedInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                DukeException e \u003d new DukeNoItemToMarkDoneException(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                displayError(e.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            int index \u003d Integer.parseInt(processedInput[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            if (index \u003c 1 || index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                DukeException e \u003d new DukeOutOfBoundsException(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                displayError(e.toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                    indent + doneTaskLine + \"\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                    + indent + \"The following task has been marked as done:\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                    + indent + task.toString()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                    + \"\\n\" + indent + doneTaskLine"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        } else if (DukeCommand.equalsCommand(processedInput[0], DukeCommand.TODO)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            if (processedInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                DukeException e \u003d new DukeNoDescriptionException(input);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                displayError(e.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            String taskDetails \u003d input.substring(5);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            Task task \u003d new ToDo(taskDetails);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            displayAddTaskSuccess(task, tasks.size());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        } else if (DukeCommand.equalsCommand(processedInput[0], DukeCommand.DEADLINE)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            if (processedInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                DukeException e \u003d new DukeNoDescriptionException(input);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                displayError(e.toString());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            String[] taskDetails \u003d input.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            Task task \u003d new Deadline(taskDetails[0], taskDetails[1]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            displayAddTaskSuccess(task, tasks.size());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        } else if (DukeCommand.equalsCommand(processedInput[0], DukeCommand.EVENT)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            if (processedInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                DukeException e \u003d new DukeNoDescriptionException(input);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                displayError(e.toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            String[] taskDetails \u003d input.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            Task task \u003d new Event(taskDetails[0], taskDetails[1]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                    indent + addTaskLine + \"\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                    + indent + \"Added task:\" +\"\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                    + indent + indent + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                    + indent + \"You now have \" + tasks.size() + \" task(s) in the list.\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                    + indent + addTaskLine"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            );"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        } else if (DukeCommand.equalsCommand(processedInput[0], DukeCommand.DELETE)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            if (processedInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                DukeException e \u003d new DukeNoItemToDeleteException(input);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                displayError(e.toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            int index \u003d Integer.parseInt(processedInput[1]);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            if (index \u003c 1 || index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                DukeException e \u003d new DukeOutOfBoundsException(input);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                displayError(e.toString());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            tasks.remove(index - 1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                    indent + doneTaskLine + \"\\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                            + indent + \"The following task has been removed:\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                            + indent + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                            + indent + \"You now have \" + tasks.size() + \" task(s) in the list.\\n\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                            + indent + doneTaskLine"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            );"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            DukeException e \u003d new DukeUnknownCommandException(input);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            displayError(e.toString());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    void exit() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            indent + byeLine + \"\\n\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            + indent + \"Goodbye\\n\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            + indent + byeLine"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        );"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        System.out.println(\"Hello my name\\n\" + logo + \"\\nHow may I help?\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            boolean exit \u003d duke.handleInput(input);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            if (exit) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                scanner.close();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jmleong666": 166,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "public enum DukeCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    EXIT(\"bye\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    DukeCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    String getCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    static boolean equalsCommand(String userCommand, DukeCommand dukeCommand) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        return dukeCommand.getCommand().equals(userCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jmleong666": 23
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    DukeException(String input) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        return \"ERROR: Duke doesn\u0027t know what went wrong, but Duke knows something went wrong -\u003e \" + input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jmleong666": 12
    }
  },
  {
    "path": "src/main/java/DukeNoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "public class DukeNoDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    DukeNoDescriptionException(String input) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        return \"ERROR: Duke can\u0027t find your task details -\u003e \" + input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jmleong666": 10
    }
  },
  {
    "path": "src/main/java/DukeNoItemToDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "public class DukeNoItemToDeleteException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    DukeNoItemToDeleteException(String input) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        return \"ERROR: Duke doesn\u0027t know what to delete -\u003e \" + input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jmleong666": 10
    }
  },
  {
    "path": "src/main/java/DukeNoItemToMarkDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "public class DukeNoItemToMarkDoneException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    DukeNoItemToMarkDoneException(String input) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        return \"ERROR: Duke doesn\u0027t know what to mark as done -\u003e \" + input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jmleong666": 10
    }
  },
  {
    "path": "src/main/java/DukeOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "public class DukeOutOfBoundsException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    DukeOutOfBoundsException(String input) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        return \"ERROR: Duke can\u0027t find the task in the list -\u003e \" + input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jmleong666": 10
    }
  },
  {
    "path": "src/main/java/DukeUnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "public class DukeUnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    DukeUnknownCommandException(String input) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        return \"ERROR: Duke can\u0027t recognise your command -\u003e \" + input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jmleong666": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    Event(String task, String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.description + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jmleong666": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    Task(String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    public String getStatusToString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        return done ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        return \"[\" + getStatusToString() + \"] \" + task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jmleong666": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    ToDo(String task) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jmleong666"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jmleong666": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "todo a"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "event b /at c"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "deadline d /by e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "todo "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "deadline   "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "done          "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "hello"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jmleong666": 20
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jmleong666"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "jmleong666": 1,
      "-": 20
    }
  }
]
