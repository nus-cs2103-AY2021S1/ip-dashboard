[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    BYE, LIST, DEADLINE, EVENT, TODO, DONE, DELETE;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andreatanky": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    protected String by; //deadline"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andreatanky": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "import java.util.regex.PatternSyntaxException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    static String bot \u003d \"Dave says:\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    static String line \u003d \"_______________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        //Initial greetings"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        System.out.println(bot + \"Greetings from me, Dave!\\n\" + \"How can I help you? ^_^\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            String userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            String[] input \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            int len \u003d userInput.length();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            Command command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                //parse input into string -\u003e enum"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                    String com \u003d input[0].toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                    command \u003d Command.valueOf(com.toUpperCase());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                } catch (NullPointerException | IllegalArgumentException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                    throw new DukeException(\"You have keyed in an invalid command!\\n(Valid commands: todo, deadline, event, list, delete, bye, done)\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                    case BYE:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        System.out.println(line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        System.out.println(bot + \"Goodbye! Hope to see you again soon! ^_^\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        System.out.println(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                    case LIST:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            showTaskList(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            throw new DukeException(\"You have keyed in an invalid format for command \u0027list\u0027!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        int pos \u003d Integer.parseInt(userInput.substring(5, len));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        taskIsDone(tasks, pos);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        if (!userInput.substring(4).isBlank()) { //if got space behind, it will add also"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            ToDo todo \u003d new ToDo(userInput.substring(5));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            tasks.add(todo); //adds into tasks list"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            System.out.println(line);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            System.out.print(bot);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            System.out.println(\"Got it! I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            //System.out.println(addedText + userInput);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            System.out.println(todo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            System.out.println(line);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            throw new DukeException(\"The description of a todo cannot be empty!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        if (!userInput.substring(8).isBlank()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "//                                int indexOfSlash \u003d userInput.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "//                                String description \u003d userInput.substring(9, indexOfSlash - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "//                                String date \u003d userInput.substring(indexOfSlash + 4);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                String de \u003d String.join(\" \", Arrays.copyOfRange(input, 1, input.length));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                String description \u003d de.split(\" /by \")[0];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                String date \u003d de.split(\" /by \")[1];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                Deadline deadline \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                tasks.add(deadline);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                System.out.println(line);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                System.out.print(bot);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                System.out.println(\"Got it! I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                System.out.println(deadline);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                System.out.println(line);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            } catch (PatternSyntaxException | ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                throw new DukeException(\"You have keyed in an invalid command for \u0027deadline\u0027!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            throw new DukeException(\"The description of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        if (!userInput.substring(5).isBlank()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "//                                int indexOfSlash \u003d userInput.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "//                                String description \u003d userInput.substring(6, indexOfSlash - 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "//                                String dateAndTime \u003d userInput.substring(indexOfSlash + 4);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                String ev \u003d String.join(\" \", Arrays.copyOfRange(input, 1, input.length));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                String description \u003d ev.split(\" /at \")[0];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                String dateAndTime \u003d ev.split(\" /at \")[1];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                Event event \u003d new Event(description, dateAndTime);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                tasks.add(event);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                System.out.println(line);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                System.out.print(bot);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                System.out.println(\"Got it! I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                System.out.println(event);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                System.out.println(line);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            } catch (PatternSyntaxException | ArrayIndexOutOfBoundsException ex ) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                throw new DukeException(\"You have keyed in an invalid command for \u0027event\u0027!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            throw new DukeException(\"The description of an event cannot be empty!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        if (!userInput.substring(6).isBlank()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                String toDelete \u003d userInput.substring(7);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                int index \u003d Integer.parseInt(toDelete);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                if (index \u003c\u003d tasks.size() \u0026\u0026 index \u003e 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                    System.out.println(line);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                    System.out.print(bot);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                    System.out.println(\"Noted! I\u0027ve deleted this task:\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                    System.out.println(tasks.get(index - 1));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                    tasks.remove(index - 1);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                    System.out.println(line);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                    throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            } catch (NumberFormatException | IndexOutOfBoundsException ex){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                                throw new DukeException(\"The number keyed in is invalid!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                            throw new DukeException(\"The description of a delete cannot be empty!\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                        throw new DukeException(\"You have keyed in an invalid command!\\n(Valid commands: todo, deadline, event, list, delete, bye, done)\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                System.out.print(bot);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    static void showTaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            System.out.print(bot);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            System.out.println(\"There are no tasks in your list yet! \u003e_\u003c\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            System.out.print(bot);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                //System.out.println(i + 1 + \".\" + \" \" + \"[\" + tasks.get(i).getStatusIcon() + \"]\" + \" \" + tasks.get(i).getTask());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "                System.out.println(i + 1 + \".\" + \" \" + tasks.get(i));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    static void taskIsDone(ArrayList\u003cTask\u003e tasks, int pos) throws DukeException {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        if (pos \u003c\u003d tasks.size() \u0026\u0026 pos \u003e 0) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            tasks.get(pos - 1).markAsDone(); //marking task as done"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            System.out.print(bot);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            System.out.println(\"Great work! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            //System.out.println(\"[\" + tasks.get(pos - 1).getStatusIcon() + \"]\" + \" \" + tasks.get(pos - 1).getTask());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            System.out.println(tasks.get(pos - 1));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            System.out.println(\"Keep the ticks going! ^_^\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "            throw new DukeException(\"You have keyed in an invalid number!\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "andreatanky": 182,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        super(\"OOPS!!! :( \" + message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "//    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "//        return this.message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andreatanky": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    protected String dateAndTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    public Event(String description, String dateAndTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        this.dateAndTime \u003d dateAndTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateAndTime + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andreatanky": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + getTask();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andreatanky": 26
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "public class ToDo extends Task { //added"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andreatanky"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andreatanky": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andreatanky"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "andreatanky": 7
    }
  }
]
