[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 46,
      "Caiyi34777": 21
    }
  },
  {
    "path": "src/main/java/Convert.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents methods to manipulate with formats, e.g. dates"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Convert {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a formatted string transforming from \"/at\" to \":(at)\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * The input string must contain \"/at\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param s input string"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a formatted string"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    static String at(String s) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String first \u003d s.split(\"/at \")[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String second \u003d s.split(\"/at \")[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(second);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return first + \"(at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a formatted string keeping original data"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * The input string must contain \"/at\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param s input string"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a formatted string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    static String atDigitalDate(String s) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String first \u003d s.split(\"/at \")[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String second \u003d s.split(\"/at \")[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // date of format \"yyyy-mm-dd\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(second);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return first + \"/at \" + date;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a formatted string transforming from \"/by\" to \":(by)\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * The input string must contain \"/by\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param s input string"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a formatted string"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    static String by(String s) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String first \u003d s.split(\"/by \")[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String second \u003d s.split(\"/by \")[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(second);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return first + \"(by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a formatted string keeping original data"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * The input string must contain \"/by\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param s input string"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a formatted string"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    static String byDigitalDate(String s) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String first \u003d s.split(\"/by \")[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String second \u003d s.split(\"/by \")[1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(second);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return first + \"/by \" + date;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a Task object specified by the input string"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param s input message string"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a Task object"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @throws IllegalArgumentException  If taskType can not be detected correctly"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    static Task add(String s) throws IllegalTaskTypeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String taskType \u003d s.split(\" ; \")[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String isDone \u003d s.split(\" ; \")[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String message \u003d s.split(\" ; \")[2];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // use for test purposes"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        /*System.out.println(taskType);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        System.out.println(isDone);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        System.out.println(message);*/"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return new Todo(message, getStatus(Integer.parseInt(isDone)));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return new Event(message, getStatus(Integer.parseInt(isDone)));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return new Deadline(message, getStatus(Integer.parseInt(isDone)));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            throw new IllegalTaskTypeException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a boolean status from an integer representation"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param i  a number to denote false or true (0 for false, 1 for true)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *           here, we assume the input number is correct"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return boolean status"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    static boolean getStatus(int i) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 107
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a deadline inherited from task. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * a task associated a date as deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Deadline(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Deadline(String message, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        super(message, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getPureTypeLetter() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getTypeLetter() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // dummy value"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getPrintMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return Convert.by(getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getStoreMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return Convert.byDigitalDate(getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 34
    }
  },
  {
    "path": "src/main/java/DeadlineEmptyBodyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a Deadline Empty Body Exception. A \u003ccode\u003eDeadline EmptyBody"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when \"deadline\" is called without further"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * information"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class DeadlineEmptyBodyException extends EmptyBodyException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    DeadlineEmptyBodyException() {}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 13
    }
  },
  {
    "path": "src/main/java/DeleteEmptyBodyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a Delete Empty Body Exception. A \u003ccode\u003eDelete EmptyBody"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when \"delete\" is called without further"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * information"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class DeleteEmptyBodyException extends EmptyBodyException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    DeleteEmptyBodyException() {}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"OOPS!!! Empty deletion is invalid.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 12
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 45
    }
  },
  {
    "path": "src/main/java/DoneEmptyBodyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a Done Empty Body Exception. A \u003ccode\u003eDone EmptyBody"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when \"done\" is called without further"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * information"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class DoneEmptyBodyException extends EmptyBodyException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    DoneEmptyBodyException() {}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"OOPS!!! Empty done is invalid.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 12
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents an interactive bot to handle tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    // add: javafx"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    // add: start method"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        });"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        });"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        });"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        );"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a response to user input."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param input user input string"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a response string"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return new Parser(input).getRespond(lst);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    // More OOP"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public Duke() {}"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public Duke(Path filePath) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void run() throws Exception {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        storage.writeToList(lst);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        ui.run(lst);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        storage.writeToFile(lst);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        java.nio.file.Path path \u003d java.nio.file.Paths.get(System.getProperty(\"user.home\"), \"ip\",\"start.txt\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        new Duke(path).run();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 171,
      "-": 2
    }
  },
  {
    "path": "src/main/java/EmptyBodyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents an Empty Body Exception. A \u003ccode\u003eEmptyBody"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when a command is called with"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * empty body"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class EmptyBodyException extends IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    EmptyBodyException() {}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents an event inherited from task. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * a task associated a date as event date"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Event(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Event(String message, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        super(message, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getPureTypeLetter() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getTypeLetter() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // dummy value"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getPrintMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return Convert.at(getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getStoreMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return Convert.atDigitalDate(getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 34
    }
  },
  {
    "path": "src/main/java/EventEmptyBodyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents an Event Empty Body Exception. An \u003ccode\u003eEvent Empty Body"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when \"event\" is called without further"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * information"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class EventEmptyBodyException extends EmptyBodyException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    EventEmptyBodyException() {}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 12
    }
  },
  {
    "path": "src/main/java/FindEmptyBodyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a Find Empty Body Exception. A \u003ccode\u003eFind EmptyBody"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when \"find\" is called without further"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * information"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class FindEmptyBodyException extends EmptyBodyException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    FindEmptyBodyException() {}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"OOPS!!! Empty find is invalid.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 12
    }
  },
  {
    "path": "src/main/java/IllegalTaskTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents an Illegal Task Type Exception. An \u003ccode\u003eIllegal Task Type Exception"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when invalid task type is detected"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class IllegalTaskTypeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    IllegalTaskTypeException() {}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"OOPS!!! Cannot detect task type\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 12
    }
  },
  {
    "path": "src/main/java/InvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents an Invalid Date Exception . An \u003ccode\u003eInvalid Date Exception"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * \u003c/code\u003e object is used when date is invalid"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class InvalidDateException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    InvalidDateException() {}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"OOPS!!! Date is invalid.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 11
    }
  },
  {
    "path": "src/main/java/InvalidDeletionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents an Invalid Deletion Exception . An \u003ccode\u003eInvalid Deletion Exception"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * \u003c/code\u003e object is used when attempted deletion index is invalid"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class InvalidDeletionException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    InvalidDeletionException() {}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"OOPS!!! Deletion index is invalid.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 11
    }
  },
  {
    "path": "src/main/java/InvalidDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents an Invalid Done Exception . An \u003ccode\u003eInvalid Done Exception"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * \u003c/code\u003e object is used when attempted done index is invalid"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class InvalidDoneException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    InvalidDoneException() {}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"OOPS!!! Done index is invalid.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 11
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    // changed here !!!!!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    java.nio.file.Path path \u003d java.nio.file.Paths.get(System.getProperty(\"user.home\"), \"ip\",\"start.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Duke duke \u003d new Duke(path);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 32
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        /*dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        );*/"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 49
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    // constant SPACE and LINE for format purposes"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static String SPACE \u003d \"     \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static String LINE \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    // add outer frame lines"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns formatted string, adding SPACE and LINE"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param input string to be formatted"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return formatted string"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static String format(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return SPACE + LINE +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                SPACE + \" \" + input + \"\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                SPACE + LINE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    // greeting and exit messages strings"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    // list and mark strings"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private final String messageBye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private final String messageList \u003d \" Here are the task(s) in your list:\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private final String messageMarked \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private final String messageAdded \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private final String messageDelete \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private final String messageMatching \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    // currentCommand the whole line"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private String currentCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Parser(String currentCommand) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.currentCommand \u003d currentCommand;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns respond message to be printed"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param lst the task list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return respond message by Duke"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getRespond(List\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        StringBuilder messageRespond \u003d new StringBuilder();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        if (currentCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            messageRespond \u003d new StringBuilder(format(messageBye));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } else if (currentCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            messageRespond.append(SPACE).append(LINE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            messageRespond.append(SPACE).append(messageList).append(\"\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            for (Task task : lst) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                messageRespond.append(SPACE).append(\" \").append(counter).append(\".\").append(task.getTypeLetter()).append(task.getStatusIcon()).append(task.getPrintMessage()).append(\"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            messageRespond.append(SPACE).append(LINE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            String priorCommand \u003d currentCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            if (priorCommand.equals(\"done\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    String extraCommand \u003d currentCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    int index \u003d Integer.parseInt(extraCommand) - 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    if (index \u003c 0 || index \u003e\u003d lst.size()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        messageRespond.append(format(new InvalidDoneException().toString()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    Task task \u003d lst.get(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    task.setDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    messageRespond.append(format(messageMarked + SPACE + \"   \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                            + task.getTypeLetter() + task.getStatusIcon() + task.getPrintMessage()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    messageRespond.append(format(new DoneEmptyBodyException().toString()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            } else if (priorCommand.equals(\"delete\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    String extraCommand \u003d currentCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    int index \u003d Integer.parseInt(extraCommand) - 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    if (index \u003c 0 || index \u003e\u003d lst.size()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        messageRespond.append(new InvalidDoneException().toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    Task task \u003d lst.get(index);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    lst.remove(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    String messageNum \u003d \"\\n      Now you have \" + lst.size() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    messageRespond.append(format(messageDelete + SPACE + \"   \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                            + task.getTypeLetter() + task.getStatusIcon() + task.getPrintMessage()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                            + messageNum)).append(\"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    messageRespond.append(format(new DeleteEmptyBodyException().toString()));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            } else if (priorCommand.equals(\"find\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    String extraCommand \u003d currentCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    List\u003cTask\u003e subList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    // check whether extraCommand is a subString of any task message"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    for (Task task : lst) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        if (task.getMessage().contains(extraCommand)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                            subList.add(task);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    messageRespond.append(SPACE).append(LINE).append(\"\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    messageRespond.append(SPACE).append(messageMatching).append(\"\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    int counter \u003d 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    for (Task task : subList) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        messageRespond.append(SPACE).append(\" \").append(counter).append(\".\").append(task.getTypeLetter()).append(task.getStatusIcon()).append(task.getPrintMessage()).append(\"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        counter++;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    messageRespond.append(SPACE).append(LINE).append(\"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    messageRespond.append(format(new FindEmptyBodyException().toString()));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                switch (priorCommand) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        String extraCommand \u003d currentCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        task \u003d new Deadline(extraCommand);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        lst.add(task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        messageRespond.append(format(messageAdded + SPACE + \"   \""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                                + task.getTypeLetter() + task.getStatusIcon() + task.getPrintMessage()"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                                + \"\\n \" + SPACE + \"Now you have \" + lst.size() + \" task(s) in the list.\")).append(\"\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        messageRespond.append(format(new DeadlineEmptyBodyException().toString()));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        String extraCommand \u003d currentCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        task \u003d new Event(extraCommand);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        lst.add(task);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        messageRespond.append(format(messageAdded + SPACE + \"   \""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                                + task.getTypeLetter() + task.getStatusIcon() + task.getPrintMessage()"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                                + \"\\n \" + SPACE + \"Now you have \" + lst.size() + \" task(s) in the list.\")).append(\"\\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        messageRespond.append(format(new EventEmptyBodyException().toString()));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        String extraCommand \u003d currentCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        task \u003d new Todo(extraCommand);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        lst.add(task);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        messageRespond.append(format(messageAdded + SPACE + \"   \""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                                + task.getTypeLetter() + task.getStatusIcon() + task.getPrintMessage()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                                + \"\\n \" + SPACE + \"Now you have \" + lst.size() + \" task(s) in the list.\")).append(\"\\n\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        messageRespond.append(format(new TodoEmptyBodyException().toString()));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    // invalid command: not recognised"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    messageRespond.append(format(new UnknownCommandException().toString()));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return messageRespond.toString();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 161
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a storage and deals with loading tasks from"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * the file and saving tasks in the file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Storage(Path path) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.file \u003d new File(path.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void writeToList(List\u003cTask\u003e lst) throws IllegalTaskTypeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                String task \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                lst.add(Convert.add(task));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            //System.out.println(Parser.format(ex.toString()));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void writeToFile(List\u003cTask\u003e lst) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String content;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        for (int i \u003d 0; i \u003c lst.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            Task task \u003d lst.get(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            content \u003d task.getPureTypeLetter() + \" ; \" + task.getStatusNum()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    + \" ; \" + task.getStoreMessage() + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            fileWriter.write(content);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 44
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a task. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * a message and a status (whether it is done)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Task(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Task(String message, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public int getStatusNum() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return isDone ? 1 : 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getPureTypeLetter() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        //dummy value"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getTypeLetter() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // dummy value"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getPrintMessage() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getStoreMessage() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 53
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a task list contains the task list e.g.,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * it has operations to add/delete tasks in the list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 6
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a todo inherited from task. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * a simple task without any constraints on dates"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Todo(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Todo(String message, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        super(message, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getPureTypeLetter() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getTypeLetter() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // dummy value"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getPrintMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getStoreMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 34
    }
  },
  {
    "path": "src/main/java/TodoEmptyBodyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a Todo Empty Body Exception. A \u003ccode\u003eTodo EmptyBody"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when \"todo\" is called without further"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * information"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class TodoEmptyBodyException extends EmptyBodyException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    TodoEmptyBodyException() {}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 12
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a user interface and deals with interactions"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * with the user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private static String SPACE \u003d \"     \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private final String messageHello \u003d Parser.format(\"Hello! I\u0027m Duke\\n\" + SPACE + \" \" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void run(List\u003cTask\u003e lst) throws Exception {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // set up greetings and old list from file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        System.out.println(messageHello);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        System.out.println(new Parser(\"list\").getRespond(lst));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // hand over to Parser class to handle all commands"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            String currentCommand \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            System.out.println(new Parser(currentCommand).getRespond(lst));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            if (currentCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                scanner.close();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 29
    }
  },
  {
    "path": "src/main/java/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a Unknown Command Exception. A \u003ccode\u003eUnknown Command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when an unknown command is called"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class UnknownCommandException extends IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    UnknownCommandException() {}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 12
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 19
    }
  },
  {
    "path": "src/test/java/ConvertTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class ConvertTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        assertEquals(Convert.by(\"return book /by 2020-01-01\"),\"return book (by: Jan 1 2020)\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 9
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        assertEquals(\"homework\", new Todo(\"homework\").getMessage());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 9
    }
  },
  {
    "path": "start.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "T ; 1 ; read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "D ; 0 ; return book /by 2020-01-01"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "E ; 0 ; project meeting /at 2020-02-02"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "T ; 1 ; join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "T ; 0 ; watch concert"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "D ; 1 ; do laundry /by 2020-09-27"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "T ; 1 ; some things"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "D ; 0 ; CS2103 /by 2020-08-27"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "E ; 0 ; concert /at 2021-05-01"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 7
    }
  }
]
