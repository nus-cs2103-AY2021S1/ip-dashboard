[
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class ByeCommand extends Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void perform(TaskList tasks) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\"Bye! Hope to see you again in the future!\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 14
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    abstract public void perform(TaskList tasks);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    abstract boolean isExit();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 7
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected String date2;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Constructor for Deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.date2 \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Get info to store in hard disk"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String[] getInfo() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return new String[] {\"D\", description, date2};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Return string representation of Deadline"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String dateString \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" [D]\" + super.toString() + \" (by: \" + dateString + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 30
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    Deadline deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public DeadlineCommand(String description, String date) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.deadline \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void perform(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\" Okay! I have added this task:\" + \"\\n\" + \"   \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            + deadline.toString() + \"\\n\" + \" Now you have \" + tasks.size() + (tasks.size() \u003e 1 ? \" tasks.\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            : \" task.\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 23
    }
  },
  {
    "path": "src/main/java/DeadlineIncompleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DeadlineIncompleteException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Please specify the description of a deadline.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 9
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected int taskNumber;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public DeleteCommand(String taskNumber) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.taskNumber \u003d Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void perform(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Task task \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        tasks.delete(taskNumber - 1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\" Okie! I have deleted this task: \" + \"\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \"   \" + task.toString() + \"\\n\" + \" Now you have \" + tasks.size() + (tasks.size() \u003e 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                ? \" tasks.\" : \" task.\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 24
    }
  },
  {
    "path": "src/main/java/DeleteIncompleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DeleteIncompleteException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Please specify which task to be deleted.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 9
    }
  },
  {
    "path": "src/main/java/DeleteOutOfListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DeleteOutOfListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Task number cannot be zero or negative\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \"\\n\" + \" Please refer to your task list to find the\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \"\\n\" + \" appropriate task number :)\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 11
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected int taskNumber;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public DoneCommand(String taskNumber) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.taskNumber \u003d Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void perform(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Task task \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\" Yay! I have marked this task as done: \" + \"\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \"   \" + task.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 23
    }
  },
  {
    "path": "src/main/java/DoneIncompleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DoneIncompleteException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Please specify which task to be marked as done.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 9
    }
  },
  {
    "path": "src/main/java/DoneOutOfListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DoneOutOfListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Task number cannot be zero or negative\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \"\\n\" + \" Please refer to your task list to find the\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \"\\n\" + \" appropriate task number :)\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 11
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Create storage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Read from hard disk"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        tasks \u003d new TaskList(storage.readFromHardDisk());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Initialize Ui"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Display greeting message"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        ui.showGreetingMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Process user input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                command.perform(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 48,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected String date2;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Constructor for Event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.date2 \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Get info to store in hard disk"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String[] getInfo() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return new String[] {\"E\", description, date2};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Return string representation of Event"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String dateString \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" [E]\" + super.toString() + \" (at: \" + dateString + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 34
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected Event event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public EventCommand(String taskDescription, String date) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.event \u003d new Event(taskDescription, date);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void perform(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\" Okay! I have added this task:\" + \"\\n\" + \"   \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            + event.toString() + \"\\n\" + \" Now you have \" + tasks.size() + (tasks.size() \u003e 1 ? \" tasks.\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            : \" task.\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 23
    }
  },
  {
    "path": "src/main/java/EventIncompleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class EventIncompleteException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Please specify the description of an event.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 9
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void perform(TaskList tasks) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\" These are the tasks in your list:\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            System.out.println(\" \" + (i + 1) + \".\" + t.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 18
    }
  },
  {
    "path": "src/main/java/NoInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class NoInputException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" No input detected.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 9
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public static String[] commands \u003d {\"list\", \"done\", \"deadline\", \"event\", \"todo\", \"delete\", \"bye\"};"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public static ArrayList\u003cString\u003e VALID_COMMAND \u003d new ArrayList\u003c\u003e(Arrays.asList(commands));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Method to check user input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public static void checkInput(String line) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String[] input \u003d line.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String command \u003d input[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        if (command.equals(\"\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            throw new NoInputException();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else if (!VALID_COMMAND.contains(input[0])) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            throw new UnknownInputException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    throw new DoneIncompleteException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    throw new DeadlineIncompleteException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    throw new EventIncompleteException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    throw new TodoIncompleteException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    throw new DeleteIncompleteException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            if (Integer.parseInt(input[1]) \u003c 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                throw new DoneOutOfListException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            if (Integer.parseInt(input[1]) \u003c 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                throw new DeleteOutOfListException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public static Command parse(String c) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Check command input"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        checkInput(c);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String[] s \u003d c.split(\" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String commandType \u003d s[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        case \"done\": {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String taskNumber \u003d s[1];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return new DoneCommand(taskNumber);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        case \"delete\": {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String taskNumber \u003d s[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return new DeleteCommand(taskNumber);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String taskDescription \u003d c.substring(5);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return new TodoCommand(taskDescription);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        case \"deadline\": {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            // Split string to get date"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String[] str \u003d c.split(\" /by \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            // Ignore task type"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String description \u003d str[0].substring(9);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String date \u003d str[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return new DeadlineCommand(description, date);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            // Split string to get date"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String[] str \u003d c.split(\" /at \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            // Ignore task type"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String description \u003d str[0].substring(6);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String date \u003d str[1];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return new EventCommand(description, date);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 82
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Method to convert task from hard disk"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public Task convertFromHardDisk(String s) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String[] data \u003d s.split(\" / \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String taskType \u003d data[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        boolean isDone \u003d data[1].equals(\"1\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String description \u003d data[2];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            task \u003d new Todo(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String date \u003d data[3];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            task \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            String date \u003d data[3];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            task \u003d new Event(description, date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Method to convert task to hard disk"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public static String convertToHarDisk(Task t) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String[] info \u003d t.getInfo();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String taskType \u003d info[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String description \u003d info[1];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return taskType + \" / \" + (t.isDone() ? \"1\" : \"0\") + \" / \" + description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return taskType + \" / \" + (t.isDone() ? \"1\" : \"0\") + \" / \" + description + \" / \" + info[2];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return taskType + \" / \" + (t.isDone() ? \"1\" : \"0\") + \" / \" + description + \" / \" + info[2];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Method to read all tasks from hard disk"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public ArrayList\u003cTask\u003e readFromHardDisk() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Create paths for the file"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String projectRoot \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // p1 is used for creating directory"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Path p1 \u003d Paths.get(projectRoot, \"data\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Path p2 \u003d Paths.get(projectRoot, \"data\", \"task.txt\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String path \u003d p2.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        File data \u003d new File(path);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // Make directory if it does not exist"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        if (!Files.exists(p1)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            File temp \u003d new File(p1.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            boolean created \u003d temp.mkdir();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            if (!created) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                System.out.println(\"Cannot create directory for storage file! List will not\" + \"\\n\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    \"be saved until the directory and the file are created.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        // ArrayList to store task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            Scanner sc \u003d new Scanner(data);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                // Convert line to task, then add to storage"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                storage.add(convertFromHardDisk(sc.nextLine()));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                // Create file if it does not exist"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                /* The case for file does not exist is handled separately so that the"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                 * user does not need to delete the entire folder."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                boolean created \u003d data.createNewFile();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                if (!created) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                    System.out.println(\"Cannot create storage file! List will not be saved until the \" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                        \"file is created\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            } catch (IOException x) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                x.printStackTrace();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return  storage;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Method to write all task to hard disk"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void writeToHardDisk(TaskList storage) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        String projectRoot \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        Path p2 \u003d Paths.get(projectRoot, \"data\", \"task.txt\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            FileWriter fw \u003d new FileWriter(p2.toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            StringBuilder text \u003d new StringBuilder();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            for (int i \u003d 0; i \u003c storage.size(); i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                Task t \u003d storage.get(i);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                text.append(convertToHarDisk(t)).append(\"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            fw.write(text.toString());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 115
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Constructor for task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Check if this task is done or not"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Mark this task as done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Return the appropriate icon for this task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return \"✓\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "            return \"✘\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String[] getInfo() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return new String[] {description};"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Return string representation of Task, added with tick or x symbol"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \"[\" + getIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 42
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // ArrayList to store task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Constructor for TaskList"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e data) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.taskList \u003d data;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void delete(int i) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        taskList.remove(i);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return taskList.get(i);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 34
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Get info to store in hard disk"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String[] getInfo() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return new String[] {\"T\", description};"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Return the type icon"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" [T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 20
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    protected Todo todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public TodoCommand(String taskDescription) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        this.todo \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void perform(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\" Okay! I have added this task:\" + \"\\n\" + \"   \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + todo.toString() + \"\\n\" + \" Now you have \" + tasks.size() + (tasks.size() \u003e 1 ? \" tasks.\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                : \" task.\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 23
    }
  },
  {
    "path": "src/main/java/TodoIncompleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class TodoIncompleteException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Please specify the description of a todo.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 9
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Method to show horizontal line"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\"_\".repeat(55));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    // Method to print greeting message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public void showGreetingMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        System.out.println(\" Hey there! I am Popi\" + \"\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "                + \" How can I help you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 15
    }
  },
  {
    "path": "src/main/java/UnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "public class UnknownInputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "        return \" Oh no! Sorry, but I do not know what that means :(\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "deadline watch anime /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "event project meeting /at Tue 3-5PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "delete"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 21
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michael-setia"
        },
        "content": "java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "michael-setia": 2,
      "-": 19
    }
  }
]
