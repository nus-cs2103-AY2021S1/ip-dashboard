[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "clean {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    delete \u0027tasks\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "yan-soon": 20
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Deadline extends Task implements Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            this.by \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return \"[D][\" + this.getStatusIcon() + \"] \" + this.getDescription() + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 26
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 59
    }
  },
  {
    "path": "src/main/java/DialogBox2.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class DialogBox2 extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private DialogBox2(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public static DialogBox2 getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return new DialogBox2(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public static DialogBox2 getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        var db \u003d new DialogBox2(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Duke extends Application implements Serializable {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/greg.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Constructor for Duke"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param filepath"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Constructor for Duke"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        Duke duke \u003d new Duke(\"tasks\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.storage \u003d duke.storage;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.tasks \u003d duke.tasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.ui \u003d duke.ui;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        });"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        });"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private void handleUserInput() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        String userText \u003d (userInput.getText());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        String dukeText \u003d (getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                DialogBox.getUserDialog(userText, (user)),"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, (duke))"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        );"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String getResponse(String input) throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return parser.commandParser(input, tasks, storage);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     *  * Starts up the bot by calling the Parser class and its methods"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void run() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        System.out.println(\"Hello I\u0027m Greg!\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        System.out.println(\"How may I be of service today?\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        //parser.commandParser(tasks, storage);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Creates a new Duke Instance and calls upon the run method to start up the bot."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        new Duke(\"tasks\").run();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 184,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class DukeException extends Throwable {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private String s;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.s \u003d s;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Handles various exceptions for the bot and returns messages accordingly"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @return Refer to various messages at the bottom"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        if (this.s.equals(\"\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter your command.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"todo\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter the description of your todo with the command.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter the description and timing of the deadline with the command.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"event\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter the description and timing of the event with the command.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"list\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"The list is currently empty, add items with the todo, deadline or event command.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"delete\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter the number position of the item that you wish to delete.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"delete2\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"That item has already been deleted or it does not exist.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter the number position of the item that you wish to mark done.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"find\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter what you wish to find along with the find command.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"find2\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"No results found :(\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Sorry I do not understand that command.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 38
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Events extends Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Constructor for Events"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param by"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public Events(String description, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            this.by \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return \"[E][\" + this.getStatusIcon() + \"] \" + this.getDescription() + \" (at:\" + by + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 30
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/greg.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private void handleUserInput() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 52
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Helps to parse commands from the scanner, that tells the bot what actions"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * to take"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param store"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String commandParser(String command, TaskList list, Storage store)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        ArrayList\u003cTask\u003e storage \u003d list.getTasks();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            assert !command.equals(\"\") : \"Please type in your command.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                if (list.isEmpty()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                String tasks \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                for (Task item : storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    int position \u003d storage.indexOf(item) + 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    tasks \u003d tasks + position + \".\" + item + \"\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    int number \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    Task current \u003d storage.get(number - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    current.setDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    store.save(storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    return \"Nice! I\u0027ve marked this task as done: \" + \"\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                            + current.getStatusIcon() + \" \" + current.getDescription();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(\"delete2\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(command);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(command);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                String[] string \u003d command.split(\"do \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                if (string.length \u003c 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                String desc \u003d string[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                Todo todo \u003d new Todo(desc);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                store.save(storage, todo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                int size \u003d storage.size();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                return \"Got it. I\u0027ve added this task: \" + \"\\n\" + todo + \"\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        + \"Now you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                if (!command.startsWith(\"deadline /by\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                String[] string \u003d command.split(\"/by \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                if (string.length \u003c 2) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                Deadline deadline \u003d new Deadline(string[0], string[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                store.save(storage, deadline);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                int size \u003d storage.size();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                return \"Got it. I\u0027ve added this task: \" + \"\\n\" + deadline + \"\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        + \"Now you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                if (!command.startsWith(\"event /at\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                String[] string \u003d command.split(\"/at \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                if (string.length \u003c 2) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                Events event \u003d new Events(string[0], string[1]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                store.save(storage, event);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                int size \u003d storage.size();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                return \"Got it. I\u0027ve added this task: \" + \"\\n\" + event + \"\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        + \"Now you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                String bye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                return bye;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    int number \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    Task task \u003d storage.get(number - 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    storage.remove(number - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    store.save(storage);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    int size \u003d storage.size();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    return \"Noted, I\u0027ve removed this task: \" + \"\\n\" + task + \"\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                            + \"Now you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(\"delete2\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(command);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                String[] desc \u003d command.split(\"find\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                if (desc.length \u003c 2) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(command);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                String keyword \u003d command.split(\"nd \")[1];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                int count \u003d 0;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                String tasks \u003d \"\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                for (Task item : storage) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    if (item.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        count++;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        tasks \u003d tasks + count + \".\" + item + \"\\n\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                if (tasks.equals(\"\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(\"find2\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    return tasks;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                throw new DukeException(command);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } catch (DukeException | FileNotFoundException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 129
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.EOFException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    Storage(String filepath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Loads up an ArrayList of Tasks from an existing filepath"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Returns an empty ArrayList if the file does not exist"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @return the specified ArrayList of Tasks or an empty one"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try (ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(filepath));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            ) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return (ArrayList\u003cTask\u003e) ois.readObject();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } catch (EOFException | FileNotFoundException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            System.out.println(\"An error has occurred\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Takes a task and an ArrayList of Tasks as arguments"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * and stores the task into that particular ArrayList."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list, Task task) throws FileNotFoundException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try (FileOutputStream tasks \u003d new FileOutputStream(filepath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "             ObjectOutputStream oos \u003d new ObjectOutputStream(tasks)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            oos.writeObject(list);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Takes an ArrayList of Tasks and saves it into the hard disk"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list) throws FileNotFoundException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try (FileOutputStream tasks \u003d new FileOutputStream(filepath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "             ObjectOutputStream oos \u003d new ObjectOutputStream(tasks)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            oos.writeObject(list);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 63
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Constructor for Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Returns the status icon of the task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @return returns a tick or a cross, to indicate the status of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Returns the description of the task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @return Description of task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Returns a true or false, to indicate if the task has been done"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @return Whether the task has been done"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Sets the status of a task to \"Done\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 47
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    TaskList(){}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Retrieves the ArrayList of Tasks attribute"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @return returns the TaskList\u0027s ArrayList of Tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 20
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Todo extends Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return \"[T][\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 13
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return \"Duke is facing some loading issues, please try again later!\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 5
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 19
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    Task task \u003d new Task(\"return book\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Tests the getDescription method from the Task Class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void testGetDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        assertEquals(\"return book\", task.getDescription());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Tests the testIsDone method from the Task Class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void testIsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        assertEquals(false, task.isDone());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 27
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "event soccer match /at tomorrow"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    pause"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "yan-soon": 6
    }
  }
]
