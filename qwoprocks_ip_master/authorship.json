[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "# chatterbox.Chatterbox project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "This is a project template for a greenfield Java project. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/chatterbox.Chatterbox.java` file, right-click it, and choose `Run chatterbox.Chatterbox.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "   Hello I\u0027m chatterbox.Chatterbox. What can I do for you?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 4,
      "-": 17
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "test {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "application {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    mainClassName \u003d \"chatterbox.Chatterbox\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "run {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 41
    }
  },
  {
    "path": "data/chatterbox.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "true todo add face"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "false event nope /at 12pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "true todo borrow books"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 3
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":end"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 103
    }
  },
  {
    "path": "src/main/java/chatterbox/Chatterbox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Handles the main loop and the high level logic flow of the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Chatterbox {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final Scanner scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Initializes the task list and load stored tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public Chatterbox() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Storage store \u003d new Storage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        tasks \u003d new TaskList(store);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        tasks.loadTasks();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Shows the welcome message, then processes each line of user input until \"bye\" is typed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                processInput(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            } catch (ChatterboxException | IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                Ui.showErrorMessage(e.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Ui.showFarewellMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Processes user input and executes actions based on them."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param input Raw user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws ChatterboxException  If input string is empty or invalid command is given."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException  If data cannot be read/written from the save file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private void processInput(String input) throws ChatterboxException, IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // Check if input is just whitespace"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (input.strip().equals(\"\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            throw new ChatterboxException(\"Input cannot be empty.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // Get first word of input"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        String command \u003d (input + \" \").split(\" \")[0].toLowerCase();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // Process command"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            tasks.printAllTasks();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else if (command.equals(\"done\") || command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            // Get the task number after the command, check if it is valid"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            int taskNo;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                taskNo \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                throw new ChatterboxException(\"Please enter a number after the command.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            // Mark as done or delete based on the command"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                tasks.setTaskAsDone(taskNo);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                tasks.deleteTask(taskNo);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            tasks.findAndPrintTasks(input.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else if (command.equals(\"deadline\") || command.equals(\"todo\") || command.equals(\"event\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            Task t \u003d Parser.parseTask(input);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            tasks.addTask(t);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            throw new ChatterboxException(\"That\u0027s not a valid command.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Initializes and runs the Chatterbox program."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        new Chatterbox().run();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 92,
      "-": 2
    }
  },
  {
    "path": "src/main/java/chatterbox/ChatterboxException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Class of exceptions thrown by the Chatterbox program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class ChatterboxException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final String msg;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public ChatterboxException(String msg) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 17
    }
  },
  {
    "path": "src/main/java/chatterbox/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.ToDo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Utility class for parsing date and time, as well as task inputs."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String[] dateFormats \u003d new String[] {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        \"d/M/y HHmm\", \"d-M-y HHmm\", \"d/M/y\", \"d-M-y\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    };"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Tries to parse a raw string into a date and time, and returns a LocalDateTime if possible."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param dateTime  The raw string to be parsed into datetime."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return  The string parsed as a LocalDateTime if possible, else null"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static LocalDateTime parseDateTime(String dateTime) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        for (String format : dateFormats) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                Date d \u003d new SimpleDateFormat(format).parse(dateTime);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                return d.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Parses user input with task command to create a Task object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Task can be a deadline, a todo, or an event."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param input Raw user input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return  Task object created based on user input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws ChatterboxException  If description of the task command is empty or the command is invalid."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static Task parseTask(String input) throws ChatterboxException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // Get first word of input"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        String command \u003d (input + \" \").split(\" \")[0];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // Check if description of command is empty"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (!input.contains(\" \") || input.substring(input.indexOf(\u0027 \u0027)).strip().equals(\"\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            throw new ChatterboxException(\"The description of a \" + command + \" cannot be empty\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        // Return a Task based on the command word"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        String contents \u003d input.substring(input.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return new Deadline(contents);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return new ToDo(contents);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return new Event(contents);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            throw new ChatterboxException(\"Invalid command.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 70
    }
  },
  {
    "path": "src/main/java/chatterbox/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Handles the loading and saving of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String SAVE_FOLDER_PATH \u003d \"./data\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String SAVE_FILE_PATH \u003d SAVE_FOLDER_PATH + \"/chatterbox.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final File saveFolder \u003d new File(SAVE_FOLDER_PATH);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final File saveFile \u003d new File(SAVE_FILE_PATH);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Creates the save folder and save file if they do not exist."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException  If folder or file cannot be created."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private void ensureExistence() throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (!saveFolder.exists()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            saveFolder.mkdir();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            saveFile.createNewFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else if (!saveFile.exists()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            saveFile.createNewFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Gets task items from the saved file and parses them into a list of Task objects."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return  The list of tasks saved in the file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException  If the file cannot be read or parsed properly."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public List\u003cTask\u003e getItems() throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        List\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        ensureExistence();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Scanner scanner \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            if (line.strip().equals(\"\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                Task t \u003d Parser.parseTask(line.substring(line.indexOf(\u0027 \u0027) + 1));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                t.setDone(Boolean.parseBoolean(line.substring(0, line.indexOf(\u0027 \u0027))));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                items.add(t);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            } catch (ChatterboxException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                Ui.showErrorMessage(\"One or more lines in the save file may have been corrupted.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return items;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Saves the list of Task objects into the save file in text format."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param items List of Task objects to save."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException  If the program is unable to write to the save file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void saveItems(List\u003cTask\u003e items) throws IOException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        StringBuilder saveText \u003d new StringBuilder();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        for (Task t : items) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            saveText.append(t.getDone() ? \"true \" : \"false \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            saveText.append(t.getInputString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            saveText.append(\"\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        ensureExistence();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        FileWriter writer \u003d new FileWriter(SAVE_FILE_PATH);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        writer.write(saveText.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 79
    }
  },
  {
    "path": "src/main/java/chatterbox/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Utility class for printing formatted messages of the Chatterbox program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String SEPARATOR \u003d \"++++++++++++++++++++++++++++++++++++++++++++++++++++++\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static String formatMessage(String msg) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return SEPARATOR + \"\\n\" + msg + \"\\n\" + SEPARATOR;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Shows a normal Chatterbox message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param msg   The message to show."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static void showMessage(String msg) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        System.out.println(formatMessage(msg));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Shows the add task message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param t The task that has been added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param totalTasks    The total number of tasks in the list currently."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static void showAddTaskMessage(Task t, int totalTasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        showMessage(\"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            + t + \"\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            + \"Now you have \" + totalTasks + \" tasks in the list\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Shows the delete task message."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param t The task that has been deleted."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param totalTasks    The total number of tasks in the list currently."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static void showDeleteTaskMessage(Task t, int totalTasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        showMessage(\"Noted! I\u0027ve removed this task from your list: \\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            + t + \"\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            + \" Now you have \" + totalTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Shows the first message the user sees when the program starts."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static void showWelcomeMessage() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        System.out.println(\"Hello I\u0027m Chatterbox. What can I do for you?\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Shows an error message."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param error The message to show."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static void showErrorMessage(String error) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        showMessage(\"☹ OOPS!!! \" + error);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Shows the last message the user sees when the program exits."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static void showFarewellMessage() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        showMessage(\"Goodbye! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 70
    }
  },
  {
    "path": "src/main/java/chatterbox/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Task with a deadline (must be done by a certain date)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Stores the original user input including the command word, then formats and sets task content."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param contents  User input without the command word."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public Deadline(String contents) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        inputString \u003d this.getClass().getSimpleName().toLowerCase() + \" \" + contents;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        setContents(format(contents));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Formats the deadline contents to change the date display."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param s String to format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return  The formatted string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private String format(String s) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (s.contains(\"/\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String[] split \u003d s.split(\"/\", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String dateTime \u003d split[1].substring(split[1].indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            deadline \u003d Parser.parseDateTime(dateTime);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            if (deadline !\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                dateTime \u003d deadline.format(DF);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return split[0] + \"(\" + split[1].split(\" \")[0] + \": \" + dateTime + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return s;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return \"[D]\" + super.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 43
    }
  },
  {
    "path": "src/main/java/chatterbox/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Task that happens at a certain defined period of time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Stores the original user input including the command word, then formats and sets task content."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param contents  User input without the command word."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public Event(String contents) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        inputString \u003d this.getClass().getSimpleName().toLowerCase() + \" \" + contents;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        setContents(format(contents));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Formats the event contents to change the date display."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param s String to format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return  The formatted string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private String format(String s) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (s.contains(\"/\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String[] split \u003d s.split(\"/\", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String dateTime \u003d split[1].substring(split[1].indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            deadline \u003d Parser.parseDateTime(dateTime);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            if (deadline !\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                dateTime \u003d deadline.format(DF);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return split[0] + \"(\" + split[1].split(\" \")[0] + \": \" + dateTime + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            return s;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return \"[E]\" + super.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 43
    }
  },
  {
    "path": "src/main/java/chatterbox/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * General task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    protected static final DateTimeFormatter DF \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\u0027H\u0027\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    protected LocalDateTime deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    protected String inputString;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private String contents;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    protected void setContents(String contents) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        this.contents \u003d contents;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Returns the original user input string used to create this task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @return Original user input string."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String getInputString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return inputString;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return (isDone ? \"[✓]\" : \"[✗]\") + \" \" + contents;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 42
    }
  },
  {
    "path": "src/main/java/chatterbox/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.ChatterboxException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import chatterbox.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Handles the modification of and other operations relating to the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final Storage store;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public TaskList(Storage store) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        this.store \u003d store;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Gets tasks from storage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void loadTasks() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            tasks \u003d store.getItems();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            Ui.showErrorMessage(\"Failed to load the save file, starting afresh.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Find all tasks that match the given keyword and print them."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param keyword   Keyword to match the tasks with."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void findAndPrintTasks(String keyword) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        keyword \u003d keyword.strip();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (keyword.equals(\"\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            printAllTasks();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            StringBuilder foundTasks \u003d new StringBuilder(\"\\nI\u0027ve found these matching tasks in your list!\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                if (t.inputString.contains(keyword)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                    foundTasks.append(i + 1).append(\". \").append(t).append(\"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            Ui.showMessage(foundTasks.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Prints the full task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void printAllTasks() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (tasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            StringBuilder fullList \u003d new StringBuilder(\"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                fullList.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            Ui.showMessage(fullList.toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            Ui.showMessage(\"Your list is currently empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Adds a task to the task list, and updates storage."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException  If task list fails to save."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void addTask(Task t) throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Ui.showAddTaskMessage(t, tasks.size());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        store.saveItems(tasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Sets a task as done, and updates storage."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param taskNo    The index of the task to be set as done."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws ChatterboxException  If task number if invalid."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException  If task list fails to save."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void setTaskAsDone(int taskNo) throws ChatterboxException, IOException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (taskNo \u003c 0 || taskNo \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            throw new ChatterboxException(\"Invalid task number.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Task t \u003d tasks.get(taskNo);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        t.setDone(true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Ui.showMessage(\"Nice! I\u0027ve marked this task as done: \\n\" + t);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        store.saveItems(tasks);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Deletes a task, and updates storage."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param taskNo    The index of the task to be deleted."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws ChatterboxException  If task number if invalid."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @throws IOException  If task list fails to save."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void deleteTask(int taskNo) throws ChatterboxException, IOException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (taskNo \u003c 0 || taskNo \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            throw new ChatterboxException(\"Invalid task number.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Task t \u003d tasks.remove(taskNo);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Ui.showDeleteTaskMessage(t, tasks.size());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        store.saveItems(tasks);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 114
    }
  },
  {
    "path": "src/main/java/chatterbox/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " * Task that has no specific timing."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * Stores the original user input including the command word, then sets task content."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     * @param contents  User input without the command word."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public ToDo(String contents) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        inputString \u003d this.getClass().getSimpleName().toLowerCase() + \" \" + contents;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        setContents(contents);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 20
    }
  },
  {
    "path": "src/test/java/chatterbox/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void testParseDateTime() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertNull(Parser.parseDateTime(\"0293a\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(Parser.parseDateTime(\"1/12/2020 1800\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                LocalDateTime.of(2020, 12, 1, 18, 0, 0, 0));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(Parser.parseDateTime(\"12-6-2020 2330\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                LocalDateTime.of(2020, 6, 12, 23, 30, 0, 0));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(Parser.parseDateTime(\"1/1/2012\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                LocalDateTime.of(2012, 1, 1, 0, 0, 0, 0));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(Parser.parseDateTime(\"24-8-1900\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                LocalDateTime.of(1900, 8, 24, 0, 0, 0, 0));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void parse_emptyCommandDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            Parser.parseTask(\"todo\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } catch (ChatterboxException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            assertEquals(\"The description of a todo cannot be empty\", e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void parse_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            Parser.parseTask(\"todos check\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } catch (ChatterboxException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            assertEquals(\"Invalid command.\", e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 44
    }
  },
  {
    "path": "src/test/java/chatterbox/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void checkDeadlineFormatting() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Deadline d \u003d new Deadline(\"read book /by 20/1/2019 1800\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(d.inputString, \"deadline read book /by 20/1/2019 1800\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(d.toString(), \"[D][✗] read book (by: Jan 20 2019 1800H)\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        d.setDone(true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(d.toString(), \"[D][✓] read book (by: Jan 20 2019 1800H)\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 16
    }
  },
  {
    "path": "src/test/java/chatterbox/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "package chatterbox.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void checkEventFormatting() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Event e \u003d new Event(\"borrow books /at 20/1/2019 1800\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(e.inputString, \"event borrow books /at 20/1/2019 1800\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(e.toString(), \"[E][✗] borrow books (at: Jan 20 2019 1800H)\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        e.setDone(true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        assertEquals(e.toString(), \"[E][✓] borrow books (at: Jan 20 2019 1800H)\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "deadline return 1st book /by 2/3/2008 1200"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "deadline return book /by 2/3/2008"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "event project meeting /at 29/2/2002"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "delete 6"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "find book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "find deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\chatterbox\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "java -classpath ..\\bin chatterbox.Chatterbox \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 2,
      "-": 19
    }
  }
]
