[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    Deadline(String description, String time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.time \u003d Parser.stringToDate(time);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        String timeStr \u003d Parser.dateToString(this.time);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return String.format(\"[D]%s(by: %s)\", super.toString(), timeStr);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return String.format(\"%s || deadline || %s || %s\", super.toSaveString(), this.description, this.time);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import exceptions.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public final static String FILEPATH \u003d System.getProperty(\"user.dir\") + (System.getProperty(\"user.dir\").endsWith(\"text-ui-test\")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            ? \"/saved-tasks.txt\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            : \"/text-ui-test/saved-tasks.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        storage \u003d new Storage(FILEPATH);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        storage.handleLoad();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        ui.greeting();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        ui.showList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                String toEcho \u003d ui.getCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                String[] command \u003d Parser.splitCommandAndDescription(toEcho);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                if (toEcho.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    ui.bye();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    isExit \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else if (toEcho.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    ui.showList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else if (toEcho.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    if (toEcho.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                        throw new DukeEmptyMessageException(\"Done\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    } else if (Integer.parseInt(command[1]) \u003e TaskList.taskList.size()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                        throw new DukeInvalidMessageException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                        int index \u003d Integer.parseInt(command[1]) - 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                        taskList.markDone(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                        ui.printDone(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else if (toEcho.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    if (toEcho.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                        throw new DukeEmptyMessageException(\"Todo\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    handleTodo(command[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else if (toEcho.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    if (toEcho.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                        throw new DukeEmptyMessageException(\"Deadline\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    handleDeadline(command[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else if (toEcho.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    if (toEcho.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                        throw new DukeEmptyMessageException(\"Event\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    handleEvent(command[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else if (toEcho.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    if (toEcho.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                        throw new DukeEmptyMessageException(\"Delete\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    } else if (Integer.parseInt(command[1]) \u003e TaskList.taskList.size() ||"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                            Integer.parseInt(command[1]) \u003c 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                        throw new DukeInvalidMessageException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    int indexToDelete \u003d Integer.parseInt(command[1]) - 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    ui.printDelete(indexToDelete);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    throw new DukeUnknownCommandException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                storage.saveTasks();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                ui.printDateTimeParseError(e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void handleTodo(String description) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        TaskList.taskList.add(todo);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        ui.printTask(todo);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void handleDeadline(String description) throws DukeMissingTimeException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String[] strArr \u003d Parser.splitDeadlineTime(description);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String todo \u003d strArr[0];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String time \u003d strArr[1];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            Deadline deadline \u003d new Deadline(todo, time);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            taskList.add(deadline);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            ui.printTask(deadline);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            throw new DukeMissingTimeException();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void handleEvent(String description) throws DukeMissingTimeException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String[] strArr \u003d Parser.splitEventTime(description);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String todo \u003d strArr[0];"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String time \u003d strArr[1];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            Event event \u003d new Event(todo, time);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            taskList.add(event);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            ui.printTask(event);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            throw new DukeMissingTimeException();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 114,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    Event(String description, String time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.time \u003d Parser.stringToDate(time);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        String timeStr \u003d Parser.dateToString(this.time);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return String.format(\"[E]%s(at: %s)\", super.toString(), timeStr);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return String.format(\"%s || event || %s || %s\", super.toSaveString(), this.description, this.time);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 22
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static String[] splitCommandAndDescription(String string) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return string.split(\" \", 2);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static String[] splitDeadlineTime(String string) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return string.split(\"/by \", 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static String[] splitEventTime(String string) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return string.split(\"/at \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static LocalDate stringToDate(String string) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        LocalDate myDateObj \u003d LocalDate.parse(string, formatter);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return myDateObj;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static String dateToString(LocalDate date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 27
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void saveTasks() throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        BufferedWriter taskWriter \u003d new BufferedWriter(new FileWriter(path));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        String tasks \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        for (Task task: TaskList.taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            tasks +\u003d task.toSaveString() + \"\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        taskWriter.write(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        taskWriter.close();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void handleLoad() throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        BufferedReader taskLoader \u003d new BufferedReader(new FileReader(path));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        String longCommand \u003d taskLoader.readLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        while (longCommand !\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            String[] keywords \u003d longCommand.split(\" \\\\|\\\\| \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            Task cur \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            switch (keywords[1]) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    cur \u003d new Todo(keywords[2]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    cur \u003d new Deadline(keywords[2], keywords[3]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    cur \u003d new Event(keywords[2], keywords[3]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    System.out.println(\"error\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            if (keywords[0].equals(\"1\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "                cur.markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            TaskList.taskList.add(cur);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            longCommand \u003d taskLoader.readLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        taskLoader.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 50
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            return \"1\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            return \"0\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 31
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public static List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        taskList.get(index).markAsDone();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 20
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return String.format(\"%s || todo || %s\", super.toSaveString(), this.description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    static final String GREETING \u003d \"Hello Boss! How can I help you?\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    static final String HORIZONTAL_LINE \u003d \"--------------------------------------\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    static final String SHOW_TASK \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    static final String BYE \u003d \"Bye Boss! Hope to see you again!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    static final String TAB \u003d \"   \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void greeting() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(GREETING);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void showList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(SHOW_TASK);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.taskList.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            int number \u003d i + 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "            System.out.println(number + \".\" + TaskList.taskList.get(i));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(BYE + \"\\n\" + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void printTask(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(TAB + task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(\"Now you have \" + TaskList.taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void printDone(int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(TAB + TaskList.taskList.get(index));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void printDelete(int indexToDelete) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(TAB + TaskList.taskList.get(indexToDelete));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        TaskList.taskList.remove(indexToDelete);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(\"Now you have \" + TaskList.taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void printError(String e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(e + \"\\n\" + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void printDateTimeParseError(String e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        System.out.println(TAB + \"Please enter date in \u0027yyyy-MM-dd\u0027 format\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 66
    }
  },
  {
    "path": "src/main/java/exceptions/DukeEmptyMessageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class DukeEmptyMessageException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public DukeEmptyMessageException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(\"Oops! \" + message + \" cannot have an empty message!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 8
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 8
    }
  },
  {
    "path": "src/main/java/exceptions/DukeInvalidMessageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class DukeInvalidMessageException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public DukeInvalidMessageException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(\"Sorry Boss! The description that you put is invalid..\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 8
    }
  },
  {
    "path": "src/main/java/exceptions/DukeMissingTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class DukeMissingTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public DukeMissingTimeException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(\"Sorry Boss! Please ensure that you have input the time\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 8
    }
  },
  {
    "path": "src/main/java/exceptions/DukeUnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class DukeUnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public DukeUnknownCommandException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        super(\"Oops! I\u0027m sorry Boss! I do not know what that means :-(\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 8
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import exceptions.DukeMissingTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void handleDone_exceptionThrown() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        assertThrows(DukeMissingTimeException.class, () -\u003e duke.handleDeadline(\"notime\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void handleEvent_exceptionThrown() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        assertThrows(DukeMissingTimeException.class, () -\u003e duke.handleEvent(\"notime\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 19
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    public void testStringConversion(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "        assertEquals(\"[T][✘] Play brawl stars\", new Todo(\"Play brawl stars\").toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "todo buy some fruits"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "deadline must eat the fruit /by 2020-10-10"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "event attend ninja fruit competition /at 2020-10-10"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "helloworld"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "deadline nodeadlinetimegiven"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "event notimegiven"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/saved-tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "0 || deadline || must eat the fruit  || 2020-10-10"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wincenttjoi"
        },
        "content": "0 || event || attend ninja fruit competition  || 2020-10-10"
      }
    ],
    "authorContributionMap": {
      "Wincenttjoi": 2
    }
  }
]
