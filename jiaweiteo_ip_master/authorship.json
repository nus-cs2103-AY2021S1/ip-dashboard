[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "E ~ 1 ~ gym  ~ tomorrow 10pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "D ~ 0 ~ ip3  ~ today"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "T ~ 1 ~ bathe"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "D ~ 1 ~ water  ~ 2020-08-23"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "T ~ 0 ~ drink water"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "E ~ 0 ~ asdas  ~ Oct 10 2020"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "E ~ 1 ~ ssss  ~ Aug 8 2020"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "D ~ 0 ~ sssaasd  ~ Oct 10 2020"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Creates deadlines that are a subtype of Task and stores the name of the deadline and its deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private String due;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initialize an instance of Deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param description Name of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param due Date that the task will be due by."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Deadline(String description, String due) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        LocalDate d \u003d LocalDate.parse(due);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.localDate \u003d d;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String convertedDate \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.due \u003d convertedDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initialise an instance of Deadline for local storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task Name of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param isDone Status of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param due Date that the task will be due by."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Deadline(String task, boolean isDone, String due) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.due \u003d due;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Date of deadline formatted."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return Formatted version of date."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String getFormattedDate() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return this.due;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Provide a string describing the Deadline class."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return description of Deadline."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.due + \")\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 57
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Main class to run Duke program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Creates and stores tasks such as todo, event and deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private TaskList taskLists;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initialize the Duke class and creates an instance of Storage, Tasklist, Ui and Parser."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param filePath directory of txt file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            taskLists \u003d new TaskList(storage.load(new ArrayList\u003cTask\u003e()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            this.parser \u003d new Parser(taskLists);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            this.ui \u003d new Ui(parser);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            this.parser \u003d new Parser(taskLists);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            this.ui \u003d new Ui(parser);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Method to run Duke program."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        ui.intro();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        while (ui.getContinue()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            ui.getNewInput();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 49,
      "-": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Exception class customized for Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Creates events that are a subtype of Task and stores the name of the event and its date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initialize an instance of Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param event Name of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param date Date that the event will happen."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Event(String event, String date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        super(event);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        LocalDate d \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.localDate \u003d d;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String convertedDate \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.date \u003d convertedDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initialise an instance of Event for local storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task Name of the event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param isDone Status of the event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param date Date that the event will happen."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Event(String task, boolean isDone, String date) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Date of event formatted."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return Formatted version of date."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String getFormattedDate() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Provide a string describing the Event class."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return description of Event."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.date + \")\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 57
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Parser processes each command from Ui and executes program accordingly."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private TaskList taskLists;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initialize an instance of a Parser."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param taskLists List of Tasks stored in a TaskList class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Parser(TaskList taskLists) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.taskLists \u003d taskLists;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Check for invalid inputs."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param input String that is input by user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @throws DukeException if input does not contain any of the keywords in the method."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void checkForInvalidInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (!input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            if (!input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (!input.contains(\"event\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    if (!input.contains(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                        if (!input.contains(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                            if (!input.contains(\"list\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                                if (!input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                                    if (!input.contains(\"find\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                                        Ui.printLines();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                                        throw new DukeException(\"I don\u0027t know what that means! Try again.\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                                                + \"\\n-----------------------------------------------\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Process input by user and execute accordingly."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param input String input by user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void read(String input) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            this.checkForInvalidInput(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                this.showTaskList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                taskLists.completeTask(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                taskLists.deleteTask(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                taskLists.addToDo(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                taskLists.addDeadline(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                taskLists.addEvent(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (input.contains(\"find\")){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                taskLists.find(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Print out list of Tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void showTaskList() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Ui.print(taskLists.toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 80
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Class that store, read and write data to local txt file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private final static String DIRECTORY_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private final static String STORAGE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initialize an instance of Storage class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Creates new folder and file if directory did not exist."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param filePath Directory of file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @throws IOException If invalid path name given."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        File folderDirectory \u003d new File(DIRECTORY_PATH);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (!folderDirectory.exists()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            folderDirectory.mkdir();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.filepath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        File txt \u003d new File(STORAGE_PATH);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (!txt.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            txt.createNewFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Erase and wipe out all data in the txt file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @throws IOException If invalid path name given."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private static void clearTasks() throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        FileWriter storageWriter \u003d new FileWriter(STORAGE_PATH, false);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        storageWriter.write(\"\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        storageWriter.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Writes new task to local txt file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task Name of the task to be written."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @throws IOException If invalid path name given."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static void addTask(String task) throws IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        File data \u003d new File(STORAGE_PATH);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        FileWriter writer \u003d new FileWriter(data, true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        writer.write(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        writer.write(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Load up existing data in a txt file stored in locally when Duke program starts."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param ls of tasks stored in ArrayList."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return Arraylist storing Tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @throws FileNotFoundException If no file is found on the local directory."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @throws IOException If invalid input given."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static ArrayList\u003cTask\u003e load(ArrayList\u003cTask\u003e ls) throws FileNotFoundException, IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        File data \u003d new File(STORAGE_PATH);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        FileReader fr \u003d new FileReader(data);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String tasks \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            tasks \u003d br.readLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            if (tasks \u003d\u003d null) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String[] arrTasks \u003d tasks.split(\" ~ \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String typeOfTask \u003d arrTasks[0];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String isDone \u003d arrTasks[1];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String nameOfTask \u003d arrTasks[2];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            if (typeOfTask.equals(\"T\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    Todo temp \u003d new Todo(nameOfTask, true);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    ls.add(temp);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    Todo temp \u003d new Todo(nameOfTask, false);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    ls.add(temp);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (typeOfTask.equals(\"D\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                String date \u003d arrTasks[3];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    Deadline temp \u003d new Deadline(nameOfTask, true, date);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    ls.add(temp);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    Deadline temp \u003d new Deadline(nameOfTask, false, date);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    ls.add(temp);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else if (typeOfTask.equals(\"E\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                String date \u003d arrTasks[3];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    Event temp \u003d new Event(nameOfTask, true, date);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    ls.add(temp);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    Event temp \u003d new Event(nameOfTask, false, date);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    ls.add(temp);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return ls;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Make task as complete in a local txt file."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param taskNo Index of the task."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param size Size of tasklist."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static void completeTask(int taskNo, int size) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            File data \u003d new File(STORAGE_PATH);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            FileReader fr \u003d new FileReader(data);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            ArrayList\u003cString\u003e tempArr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                String task \u003d br.readLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (i \u003d\u003d taskNo) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    String temp \u003d task.replaceFirst(\"0\", \"1\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    task \u003d temp;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                tempArr.add(task);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.clearTasks();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Storage.addTask(tempArr.get(i));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException ee) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(ee.getMessage());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Delete a task locally from the txt file."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param index Index of the task."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param size Size of the tasklist."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static void deleteTask(int index, int size) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            File data \u003d new File(STORAGE_PATH);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            FileReader fr \u003d new FileReader(data);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            ArrayList\u003cString\u003e tempArr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            for (int i \u003d 0; i \u003c\u003d size; i++) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                String task \u003d br.readLine();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (i !\u003d index) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    tempArr.add(task);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.clearTasks();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            for (int i \u003d 0; i \u003c tempArr.size(); i++) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Storage.addTask(tempArr.get(i));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException ee) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(ee.getMessage());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 176
    }
  },
  {
    "path": "src/main/java/seedu/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Provide properties of a task to be completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initialise a task class that is not completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task Name of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initialise a task class that is not completed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task Name of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param isDone Status of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Task(String task, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Gets status of a task in a form of a tick or cross."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return Status of a task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return this.isDone ? \"[✓]\" : \"[✘]\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Mark task as done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Name of the task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return Description of a task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Status of a task in a form of a boolean."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return true or false depending on whether a task is completed."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return this.getStatus() + \" \" + this.getTask();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Converts a task to a string to be saved locally in a txt file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task name of a task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String formatted to be saved in a txt file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String getStorageString(String task) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String done \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            done \u003d \"0\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return task + \" ~ \" + done + \" ~ \" + this.getTask();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Converts a task to a string to be saved locally in a txt file."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task name of a task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param date date of a task for Event or Deadline."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String formatted to be saved in a txt file."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String getStorageString(String task, String date) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String done \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            done \u003d \"0\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return task + \" ~ \" + done + \" ~ \" + this.getTask() + \" ~ \" + date;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 103
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Class that stores all the tasks in an arraylist."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private ArrayList\u003cTask\u003e taskLists;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initialize an instance of Tasklist."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param ls Arraylist of Tasks to be completed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.taskLists \u003d ls;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Check if a input for a new task is valid."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param input Name of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task Task type."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @throws DukeException if empty input is given."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void checkForItem(String input, String task) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (input.isBlank()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            throw new DukeException(\"The description of a \" + task + \" cannot be empty!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Mark the task as done in a list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param userInput Task to be completed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void completeTask(String userInput) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            int index \u003d userInput.charAt(5) - \u00270\u0027;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            if (index \u003c 1 || index \u003e taskLists.size()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Ui.print(\"Index out of range! Try Again.\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (taskLists.get(index - 1).getIsDone()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    Ui.print(\"This task has already been completed!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    taskLists.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    Storage.completeTask(index - 1, taskLists.size());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    String info \u003d \"  Nice! I have marked this task as done:\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    info +\u003d taskLists.get(index - 1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    Ui.print(info);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Ui.print(\"Index out of range! Try again.\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Task to be deleted from tasklist."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param userInput String of the task to be deleted."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void deleteTask(String userInput) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        int index \u003d userInput.charAt(7) - \u00270\u0027;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (index \u003c 1 || index \u003e taskLists.size()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Ui.print(\"Index out of range! Try Again.\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String info \u003d \"Noted. I have removed this task:\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"  \" + taskLists.get(index - 1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            taskLists.remove(index - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.deleteTask(index - 1, taskLists.size());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"Now you have \" + taskLists.size() + \" tasks in the list\" + \"\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Ui.print(info);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Todo to be added to tasklist."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param userInput String of the todo."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void addToDo(String userInput) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            this.checkForItem(userInput.substring(4), \"todo\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String task \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String info \u003d (\"Got it. I have added this task:\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Todo temp \u003d new Todo(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.addTask(temp.getStorageString(\"T\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"  \" + temp.toString() + \"\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            this.taskLists.add(temp);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"Now you have \" + taskLists.size() + \" tasks in the list\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Ui.print(info);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Deadline to be added to tasklist."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param userInput String of the deadline."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void addDeadline(String userInput) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            checkForItem(userInput.substring(8), \"deadline\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            int dateIndex \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String task \u003d userInput.substring(9, dateIndex);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String time \u003d userInput.substring(dateIndex + 1);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String info \u003d \"Got it. I have added this task:\\n\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Deadline temp \u003d new Deadline(task, time);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String formatDate \u003d temp.getFormattedDate();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"  \" + temp.toString() + \"\\n\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            taskLists.add(temp);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.addTask(temp.getStorageString(\"D\", formatDate));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"Now you have \" + taskLists.size() + \" tasks in the list\\n\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Ui.print(info);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Event to be added to the tasklist."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param userInput String of the event."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void addEvent(String userInput) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            checkForItem(userInput.substring(5), \"event\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            int dateIndex \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String task \u003d userInput.substring(6, dateIndex);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String time \u003d userInput.substring(dateIndex + 1);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String info \u003d \"Got it. I have added this task:\\n\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Event temp \u003d new Event(task, time);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String formatDate \u003d temp.getFormattedDate();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"  \" + temp.toString() + \"\\n\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Storage.addTask(temp.getStorageString(\"E\", formatDate));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            taskLists.add(temp);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            info +\u003d \"Now you have \" + taskLists.size() + \" tasks in the list\\n\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            Ui.print(info);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void find(String input) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            checkForItem(input.substring(5), \"find\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            ArrayList\u003cTask\u003e keywordInTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            for (int i \u003d 0; i \u003c this.taskLists.size(); i++) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Task current \u003d this.taskLists.get(i);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (current.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    keywordInTasks.add(current);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            if (keywordInTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Ui.print(\"There are no tasks related to this keyword!\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                String info \u003d \"Here are the matching tasks in your list: \\n\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                for (int i \u003d 0; i \u003c keywordInTasks.size(); i++) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    info +\u003d keywordInTasks.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                Ui.print(info);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Iterates through the arraylist of tasks and print it out."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String describing each tasks in the list."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        String temp \u003d \"\";"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        temp +\u003d (\"  Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        for (int i \u003d 0; i \u003c taskLists.size(); i++) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            temp +\u003d (\"  \" + (i + 1) + \". \" + taskLists.get(i).toString() + \" \\n\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 195
    }
  },
  {
    "path": "src/main/java/seedu/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Create Todos that are a subtype of Task and stores the name of the Todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initialize an instance of Todo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task Name of the Todo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initialize an instance of Todo."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param task Name of the Todo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param isDone Status of the Todo."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Todo(String task, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Provide a description of a Todo instance."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return String describing Todo."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Main class that interacts with user inputs."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private final static String LINES \u003d \"------------------------------------------------\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private final static String INTRO \u003d \"Hello! I\u0027m Duke!\\n\" + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private Parser parse;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private boolean cont \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Initialize an instance of Ui."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param parse Parser to be part of Ui."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Ui(Parser parse) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.parse \u003d parse;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Print out introduction when Duke start up."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void intro() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        System.out.println(LINES + INTRO + LINES);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Static method to print out divider lines."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static void printLines() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        System.out.println(LINES);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Get userInput from user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void getNewInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        parse.read(this.userInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (this.userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            this.disContinue();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Get status of Ui."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @return false if \"bye\" command is input by user. Otherwise, true."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public boolean getContinue() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return this.cont;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Set cont to false."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void disContinue() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.cont \u003d false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Print out output from Parser."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param input String that is processed by Parser."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static void print(String input) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Ui.printLines();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        System.out.println(input);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Ui.printLines();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Method to end Duke Program when user input \"Bye\"."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Ui.printLines();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        System.out.println(\"    Bye! Hope to see you again soon.\" + \"\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Ui.printLines();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 86
    }
  },
  {
    "path": "src/test/java/seedu/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void deadlineCreation_StringInput_Success() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        assertEquals(\"[D][✘] Dinner (by: Aug 24 2020)\", new Deadline(\"Dinner\", \"2020-08-24\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void deadlineCreation_storageString_Success() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        assertEquals( \"D ~ 0 ~ Dinner ~ Aug 24 2020\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                new Deadline(\"Dinner\", \"2020-08-24\").getStorageString(\"D\", \"Aug 24 2020\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 18
    }
  },
  {
    "path": "src/test/java/seedu/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void eventCreation_StringInput_Success() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        assertEquals(\"[E][✘] Dinner (at: Aug 24 2020)\", new Event(\"Dinner\", \"2020-08-24\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void eventCreation_storageString_Success() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        assertEquals( \"D ~ 0 ~ Dinner ~ Aug 24 2020\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                new Event(\"Dinner\", \"2020-08-24\").getStorageString(\"D\", \"Aug 24 2020\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 18
    }
  },
  {
    "path": "src/test/java/seedu/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import seedu.duke.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void toDoCreation_StringInput_Success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        assertEquals(\"[T][✘] Dinner\", new Todo(\"Dinner\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void toDoCreation_getTask_Failure() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        assertEquals( \"Dinner\", new Todo(\"Dinner\").getTask());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 19
    }
  },
  {
    "path": "src/test/java/seedu/duke/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void UiCreation_true_Success(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        assertEquals(true, new Ui(new Parser(new TaskList(new ArrayList\u003cTask\u003e()))).getContinue());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "todo eat noodles"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "deadline homework /August 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "SET MY_PATH\u003dC:\\Users\\Jiawe\\Desktop\\Jia Wei Uni Documents\\Year 2 Sem 1\\CS2103\\IP"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "javac  -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\Duke.java\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "java -classpath \"%MY_PATH%\\bin\" Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 5,
      "-": 18
    }
  }
]
