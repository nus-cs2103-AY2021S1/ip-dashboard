[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "BILLXYR": 17
    }
  },
  {
    "path": "data/bill.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "D | ✘ | return book  | Dec 15 2019 09:00 AM"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "D | ✘ | return book  | Dec 12 2019 05:00 PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "E | ✘ | return book  | Dec 12 2019 06:00 PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "T | ✓ | borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "T | ✘ | borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "T | ✘ | return book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "T | ✘ | hey"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "T | ✘ | yes"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "T | ✘ | no"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "T | ✘ | llll"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "T | ✘ | 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "T | ✘ | hey"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "T | ✘ | lah"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 13
    }
  },
  {
    "path": "src/main/java/AnchorPane.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class AnchorPane {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 2
    }
  },
  {
    "path": "src/main/java/Bill.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//import java.nio.file.Files;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//import java.util.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//import java.util.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//import java.util.Date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//public class Bill {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    private static final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    private static final String horizontal_line \u003d \"------------------------------------------\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    private static final List\u003cTask\u003e list_of_Content \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    private static final String filePath \u003d \"./data/bill.txt\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    private static void welcome_message() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        System.out.println(\"Hello from Bill \\n\" + logo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        System.out.println(\"Hello! I\u0027m Bill \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        System.out.println(\"What Can I do for you? \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    private static void session_end() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    private static void print_the_list() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        int no_of_tasks \u003d list_of_Content.size();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        if (no_of_tasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            System.out.println(\"There is no tasks in the list, please add some tasks first \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            for (int i \u003d 0; i \u003c list_of_Content.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                String counter \u003d Integer.toString(i + 1) + \". \";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                System.out.println(counter + list_of_Content.get(i).timeConverted());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    private static void findKeyword(String keyword) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        int no_of_tasks \u003d list_of_Content.size();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        int counter \u003d 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        if (no_of_tasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            System.out.println(\"There is no tasks in the list \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            for (int i \u003d 0; i \u003c list_of_Content.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                if (list_of_Content.get(i).containKeyWord(keyword)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    System.out.println(counter + list_of_Content.get(i).timeConverted());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    counter \u003d counter + 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        welcome_message();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        fileManager openFile \u003d new fileManager(filePath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    session_end();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    sc.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    int length \u003d input.length();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    String[] isDone \u003d input.split(\" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    String firstChar \u003d isDone[0];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        print_the_list();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    } else if (firstChar.equals(\"find\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        String keyword \u003d isDone[isDone.length - 1];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        findKeyword(keyword);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    } else if (firstChar.equals(\"done\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        if (isDone.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            throw new InvalidDoneException(\"OOPS!!! please provide me with the task to be marked as done\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        if (isDone.length \u003e 2) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            throw new InvalidDoneException(\"OOPS!!! I can only mark one task as done at a time\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        String lastChar \u003d isDone[isDone.length - 1];"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        int index \u003d Integer.parseInt(lastChar);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        if (index \u003e list_of_Content.size()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            int no_of_tasks \u003d list_of_Content.size();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            throw new InvalidException(\"There are only \" + no_of_tasks + \" tasks in the list; Please restate\" +"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                                    \" the task to be mark as done\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        Task current \u003d list_of_Content.get(index - 1);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        current.set_Task_As_Done();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        System.out.println(current.timeConverted());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    } else if (firstChar.equals(\"delete\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        if (isDone.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            throw new InvalidDeleteException(\"OOPS!!! please provide me with the task to be deleted\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        if (isDone.length \u003e 2) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            throw new InvalidDeleteException(\"OOPS!!! I can only delete one task at a time\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        String lastChar \u003d isDone[isDone.length - 1];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        int index \u003d Integer.parseInt(lastChar);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "////                        System.out.println(index);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "////                        System.out.println(isDone.length);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        if (index \u003e list_of_Content.size()) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            int no_of_tasks \u003d list_of_Content.size();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            throw new InvalidException(\"There are only \" + no_of_tasks + \" tasks in the list; Please restate\" +"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                                    \" the task to be deleted\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        Task toBeRemove \u003d list_of_Content.get(index - 1);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        list_of_Content.remove(index - 1);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        int no_of_tasks_left \u003d list_of_Content.size();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        System.out.println(\" Noted. I\u0027ve removed this task:  \");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        System.out.println(toBeRemove);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        System.out.println(\" Now you have \" + no_of_tasks_left + \" tasks in the list. \");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        if (firstChar.equals(\"todo\")) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            if (isDone.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                                throw new InvalidTodoException(\"OOPS!!! The description of a todo cannot be empty.\" +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                                        \"please provide me with the task to be completed\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            ToDo new_task \u003d new ToDo(input.substring(firstChar.length() + 1));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            list_of_Content.add(new_task);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            System.out.println(new_task.timeConverted());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            System.out.println(\"Now you have \" + list_of_Content.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        } else if (firstChar.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            if (isDone.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                                throw new InvalidDeadlineException(\"OOPS!!! The description of a task cannot be empty.\" +"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                                        \"please provide me with the name and duration of the task to be completed\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            if (input.split(\"/by\").length \u003c 2) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                                throw new InvalidDeadlineException(\"OOPS!!! please provide me with the\" +"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                                        \" duration of the task to be completed\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            int index \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            String task \u003d input.substring(firstChar.length() + 1, index);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            String time \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "////                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEEE, MMM dd, yyyy HH:mm:ss a\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "////                            LocalDateTime localDate \u003d LocalDate.parse(time, formatter);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "////                            System.out.println(localDate);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "////                            System.out.println(formatter.format(localDate));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            Deadline deadline \u003d new Deadline(task, time);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            list_of_Content.add(deadline);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            System.out.println(deadline.timeConverted());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            System.out.println(\"Now you have \" + list_of_Content.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        } else if (firstChar.equals(\"event\")) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            if (isDone.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                                throw new InvalidDeadlineException(\"OOPS!!! The description of a task cannot be empty.\" +"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                                        \"please provide me with the name and time of the task\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            if (input.split(\"/at\").length \u003c 2) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                                throw new InvalidDeadlineException(\"OOPS!!! please provide me with the\" +"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                                        \" time of the task to be completed\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            int index \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            String task \u003d input.substring(firstChar.length() + 1, index);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            String duration \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            Event event \u003d new Event(task, duration);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            list_of_Content.add(event);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            System.out.println(event.timeConverted());"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            System.out.println(\"Now you have \" + list_of_Content.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        } else {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "////                            Task task \u003d new Task(input);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "////                            list_of_Content.add(task);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "////                            System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "////                            System.out.println(\"Got it. I\u0027ve added this task: \" + task);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "////                            System.out.println(\"Now you have \" + list_of_Content.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "////                            System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                            throw new InvalidException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            } catch (InvalidException e){"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            } catch (Exception e) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        openFile.write(list_of_Content);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//}"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class Bill {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private static final String filePath \u003d \"./data/bill.txt\";"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    Bill() throws IOException {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        ui.welcome_message();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        Parser.initiateTaskList(taskList);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            return Parser.processInput(input);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        } catch (InvalidException e) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            return Ui.getErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    String getResponse(String input) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "  //  private static final String filePath \u003d \"./data/bill.txt\";"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        Ui ui \u003d new Ui(); "
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        ui.welcome_message();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        Parser.initiateTaskList(taskList);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        boolean isCompleted \u003d false;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        while (!isCompleted) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            try {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                String input \u003d ui.getInput();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                if (Parser.exit(input)) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    isCompleted \u003d true;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    storage.write(taskList.getTheList());"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    ui.session_end();"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                } else {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    ui.printHorizontalLine();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    Parser.processInput(input);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    ui.printHorizontalLine();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                } "
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            } catch (Exception e) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 306
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Contructs an event object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param new_task Name of event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param deadline Time at which event happens."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public Deadline(String new_task, String deadline) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        super(new_task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Return the file format form for the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return \"D\" + \" | \" + super.fileFormat() + \" | \" + deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Return the converted time form of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String timeConverted() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        timeParser inputTime \u003d new timeParser(deadline);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        String outputTime \u003d inputTime.timeConverter();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return \"D\" + \" | \" + super.fileFormat() + \" | \" + outputTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return \"[D]\" +  super.toString() + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 38
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 59
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Contructor for an event object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param new_task Name of event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param duration Time at which event happens."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public Event(String new_task, String duration) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        super(new_task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Return the file format form for the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return \"E\" + \" | \" + super.fileFormat() + \" | \" + duration;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Return the converted time form of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String timeConverted() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        timeParser inputTime \u003d new timeParser(duration);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        String outputTime \u003d inputTime.timeConverter();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return \"E\" + \" | \" + super.fileFormat() + \" | \" + outputTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return \"[E]\" +  super.toString() + \" (at: \" + duration + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 37
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class InvalidDeadlineException extends InvalidException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Returns a InvalidDeadlineException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param message Message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public InvalidDeadlineException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 10
    }
  },
  {
    "path": "src/main/java/InvalidDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class InvalidDeleteException extends InvalidException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Returns a InvalidDeleteException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param message Message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public InvalidDeleteException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 10
    }
  },
  {
    "path": "src/main/java/InvalidDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class InvalidDoneException extends InvalidException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Returns a InvalidDoneException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param message Message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public InvalidDoneException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 10
    }
  },
  {
    "path": "src/main/java/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class InvalidEventException extends InvalidException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Returns a InvalidEventExceptio."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param message Message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public InvalidEventException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 10
    }
  },
  {
    "path": "src/main/java/InvalidException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class InvalidException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Returns a InvalidException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param message Message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public InvalidException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 10
    }
  },
  {
    "path": "src/main/java/InvalidTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class InvalidTodoException extends InvalidException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Returns a InvalidTodoException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param message Message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public InvalidTodoException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 10
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private Bill duke \u003d new Bill();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public Main() throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": " "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 33
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private Bill duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bill.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public void setDuke(Bill d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                DialogBox.getDukeDialog(Ui.welcome_message(), dukeImage)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    void showAction() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                DialogBox.getDukeDialog(Ui.welcome_message(), dukeImage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 59
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static TaskList listOfContent;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Returns a boolean to indicate whether program should exit."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @return Returns a boolean."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static boolean exit(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return input.equals(\"bye\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * initiate taskList for Parser."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param list TaskList that manages tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static void initiateTaskList(TaskList list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        listOfContent \u003d list;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Processes input and add the tasks to taskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @throws InvalidException InvalidException if input is illegal."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static String processInput(String input) throws InvalidException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            int length \u003d input.length();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            String[] isDone \u003d input.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            String firstChar \u003d isDone[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            Storage.write(listOfContent);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            return Ui.exitMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "   "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                return listOfContent.showAllContent();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            } else if (firstChar.equals(\"find\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String keyword \u003d isDone[isDone.length - 1];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                return listOfContent.findKeyword(keyword);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            } else if (firstChar.equals(\"done\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                if (isDone.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    throw new InvalidDoneException(\"OOPS!!! please provide me with the task to be marked as done\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                if (isDone.length \u003e 2) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    throw new InvalidDoneException(\"OOPS!!! I can only mark one task as done at a time\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String lastChar \u003d isDone[isDone.length - 1];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                int index \u003d Integer.parseInt(lastChar);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                if (index \u003e listOfContent.getSizeOfList()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    int no_of_tasks \u003d listOfContent.getSizeOfList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    throw new InvalidException(\"There are only \" + no_of_tasks + \" tasks in the list; Please restate\" +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                            \" the task to be mark as done\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                Task current \u003d listOfContent.getTheList().get(index - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                current.setTaskAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(current.timeConverted());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                return current.timeConverted();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            } else if (firstChar.equals(\"delete\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                if (isDone.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    throw new InvalidDeleteException(\"OOPS!!! please provide me with the task to be deleted\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                if (isDone.length \u003e 2) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    throw new InvalidDeleteException(\"OOPS!!! I can only delete one task at a time\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String lastChar \u003d isDone[isDone.length - 1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                int index \u003d Integer.parseInt(lastChar);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                if (index \u003e listOfContent.getSizeOfList()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    int no_of_tasks \u003d listOfContent.getSizeOfList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    throw new InvalidException(\"There are only \" + no_of_tasks + \" tasks in the list; Please restate\" +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                            \" the task to be deleted\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                Task toBeRemove \u003d listOfContent.getTheList().get(index - 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                            int no_of_tasks_left \u003d listOfContent.getSizeOfList();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\" Noted. I\u0027ve removed this task:  \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(toBeRemove);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\" Now you have \" + no_of_tasks_left + \" tasks in the list. \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                return listOfContent.removeTask(index - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                if (firstChar.equals(\"todo\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    if (isDone.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                        throw new InvalidTodoException(\"OOPS!!! The description of a todo cannot be empty.\" +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                                \"please provide me with the task to be completed\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    ToDo new_task \u003d new ToDo(input.substring(firstChar.length() + 1));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    listOfContent.addTask(new_task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    System.out.println(new_task.timeConverted());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    System.out.println(\"Now you have \" + listOfContent.getSizeOfList() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    return listOfContent.addStringTask(new_task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                } else if (firstChar.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    System.out.println(\"reach deadline\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    if (isDone.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                        throw new InvalidDeadlineException(\"OOPS!!! The description of a task cannot be empty.\" +"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                                \"please provide me with the name and duration of the task to be completed\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    if (input.split(\"/by\").length \u003c 2) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                        throw new InvalidDeadlineException(\"OOPS!!! please provide me with the\" +"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                                \" duration of the task to be completed\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    int index \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                   "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    String task \u003d input.substring(firstChar.length() + 1, index);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    String time \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    Deadline deadline \u003d new Deadline(task, time);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    listOfContent.addTask(deadline);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                                        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    System.out.println(deadline.timeConverted());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    System.out.println(\"Now you have \" + listOfContent.getSizeOfList() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    return listOfContent.addStringTask(deadline);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                } else if (firstChar.equals(\"event\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    if (isDone.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                        throw new InvalidDeadlineException(\"OOPS!!! The description of a task cannot be empty.\" +"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                                \"please provide me with the name and time of the task\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    if (input.split(\"/at\").length \u003c 2) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                        throw new InvalidDeadlineException(\"OOPS!!! please provide me with the\" +"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                                \" time of the task to be completed\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    int index \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    String task \u003d input.substring(firstChar.length() + 1, index);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    String duration \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    Task event \u003d new Event(task, duration);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    listOfContent.addTask(event);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                                        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    System.out.println(event.timeConverted());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    System.out.println(\"Now you have \" + listOfContent.getSizeOfList() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    return listOfContent.addStringTask(event);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    throw new InvalidException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        return firstChar;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 162
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    Storage (String filePath) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            System.out.println(\"I will open up the file now\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            read(file);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            System.out.println(\"The file is not exist, i will create a file for the Tasks now\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                read(file);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        this.file \u003d file;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * read the content of the file in bill.txt"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param file The file to be read."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static void read(File file) throws FileNotFoundException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        if (!scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            System.out.println(\"There is no tasks in the list yet, please add in the tasks now\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            System.out.println(\"The Tasks are shown here: \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String currentLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(currentLine);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Stores the updated Lists that contain the tasks to bill.txt."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param list_of_Content TaskList that manages tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static void write(TaskList list_of_Content) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            for (Task task : list_of_Content.getTheList()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                fileWriter.write(task.fileFormat() + \"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                fileWriter.write(task.timeConverted() + \"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            read(file);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 68
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    protected String new_task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Constructs a task object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param new_task Name of task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public Task(String new_task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        this.new_task \u003d new_task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Marks the task as done or completed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public void setTaskAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Return the file format form for the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return this.getStatusIcon() + \" | \" + new_task;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Return the converted time form of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String timeConverted() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return this.getStatusIcon() + \" | \" + new_task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * To check whether the task contain the keyword searched by the user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public boolean containKeyWord(String keyword) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return new_task.contains(keyword);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return  \"[\" + this.getStatusIcon() + \"] \" + new_task;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 55
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private List\u003cTask\u003e listOfContents;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Constructor for TaskList object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        listOfContents \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Adds a task to taskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public void addTask (Task task) throws InvalidException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        int totalTasks \u003d listOfContents.size();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        boolean containDuplicate \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        for (int i \u003d 0; i \u003c totalTasks; i \u003d i + 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            if (task.new_task.equals(listOfContents.get(i).new_task)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                containDuplicate \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        if (!containDuplicate) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            listOfContents.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            throw new InvalidException(\"detect duplicates, the tasks is already in the list\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String addStringTask (Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        String message \u003d \"Got it. I\u0027ve added this task: \\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        message \u003d message + task.timeConverted() + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        int currentSize \u003d listOfContents.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        message \u003d message + \"Now you have \" + currentSize + \" tasks in the list. \\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Prints the current task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param task Task to be printed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public void showNewContent(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Now you have \" + listOfContents.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Prints the whole taskList."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String showAllContent() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            int no_of_tasks \u003d listOfContents.size();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            String allTasks \u003d \"Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            allTasks \u003d allTasks + ui.printLine() + \"\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            ui.printHorizontalLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            if (no_of_tasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String noTasks \u003d \"There is no tasks in the list, please add some tasks first \\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                allTasks \u003d  allTasks + noTasks;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                System.out.println(\"There is no tasks in the list, please add some tasks first \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                for (int i \u003d 0; i \u003c listOfContents.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    String counter \u003d Integer.toString(i + 1) + \". \";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    String oneTask \u003d counter + listOfContents.get(i).timeConverted();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    allTasks \u003d allTasks + oneTask + \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                   // System.out.println(counter + list_of_Contents.get(i).timeConverted());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        //            ui.printHorizontalLine(); "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            return allTasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Returns the number of task in the list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @return Integer indicating number of task in list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public int getSizeOfList() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return listOfContents.size();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Returns the taskList."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @return TaskList."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public List\u003cTask\u003e getTheList() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return listOfContents;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public void setTaskAsDone(int n) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        assert n \u003c\u003d listOfContents.size();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        Task task \u003d listOfContents.get(n - 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        task.setTaskAsDone();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Deletes the nth task."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param n Index of the task to be deleted."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String removeTask(int n) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        assert listOfContents.size() \u003c n : \"The number you choose is more than the total number of tasks it contains\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        String reply \u003d \"Noted. I\u0027ve removed this task: \\n\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        Task task \u003d listOfContents.get(n);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        reply \u003d reply + task.toString();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        listOfContents.remove(n);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Now you have \" + listOfContents.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        int currentSize \u003d listOfContents.size();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        reply \u003d reply + \"\\n\" + \"Now you have \" + currentSize + \" tasks in the list. \\n\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "       "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * find whether the keyword from the user is in the list"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String findKeyword(String keyword) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        int no_of_tasks \u003d listOfContents.size();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        String tasks \u003d \"Here are the possible matches: \\n\" + ui.printLine() + \"\\n\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        ui.printHorizontalLine();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        if (no_of_tasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            String noTasks \u003d \"There is no tasks in the list, please add some tasks first \\n\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            tasks \u003d tasks + noTasks;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            System.out.println(\"There is no tasks in the list \");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            boolean isTaskFound \u003d false;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            for (int i \u003d 0; i \u003c listOfContents.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                if (listOfContents.get(i).containKeyWord(keyword)) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    isTaskFound \u003d true;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    String oneTask \u003d counter + \". \" + listOfContents.get(i).timeConverted();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    tasks \u003d tasks + oneTask + \"\\n\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                    System.out.println(counter + list_of_Contents.get(i).timeConverted());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    counter \u003d counter + 1;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            if (!isTaskFound) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                tasks \u003d tasks + \"Sorry, we cannot find a tasks that match the keyword in the list :( \\n\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//        ui.printHorizontalLine();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        tasks \u003d tasks + ui.printLine();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 164
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Constructor for a todo object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param new_task Name of todo object."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public ToDo(String new_task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        super(new_task);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Return the file format form for the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return \"T\" + \" | \" + super.fileFormat();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Return the converted time form of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String timeConverted() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return \"T\" + \" | \" + super.fileFormat();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return \"[T]\" +  super.toString() ;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 31
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private static final String horizontal_line \u003d \"------------------------------------------\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private static final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Returns the user input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @return String of user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Prints the horizontal line."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public void printHorizontalLine() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String printLine() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return horizontal_line;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Prints the welcome message"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static String welcome_message() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        String message \u003d \"Hello from Bill \\n\" + logo + \"\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        message \u003d message + horizontal_line + \"\\n \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        message \u003d message + \"Hello! I\u0027m Bill \\n\" + \"What Can I do for you? \\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        message \u003d message + horizontal_line + \"\\n \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Hello from Bill \\n\" + logo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Bill \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"What Can I do for you? \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Prints the exit message."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static void session_end() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(horizontal_line);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static String exitMessage() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return horizontal_line + \"\\n\" + \"Bye. Hope to see you again soon! \\n\" + horizontal_line + \"\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Returns the error message."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static String getErrorMessage(String message) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return \"OOPS!!! \" + message;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 78
    }
  },
  {
    "path": "src/main/java/fileManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class fileManager {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    fileManager (String filePath) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            System.out.println(\"I will open up the file now\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            read(file);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            System.out.println(\"The file is not exist, i will create a file for the Tasks now\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                read(file);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        this.file \u003d file;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public void read(File file) throws FileNotFoundException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        if (!scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            System.out.println(\"There is no tasks in the list yet, please add in the tasks now\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            System.out.println(\"The Tasks are shown here: \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String currentLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(currentLine);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public void write(List\u003cTask\u003e list_of_Content) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            for (Task task : list_of_Content) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                fileWriter.write(task.fileFormat() + \"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                fileWriter.write(task.timeConverted() + \"\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            read(file);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 59
    }
  },
  {
    "path": "src/main/java/level2.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class level2 {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Bill \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"What Can I do for you? \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        List list_Of_Content \u003d new ArrayList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                for (int i \u003d 0; i \u003c list_Of_Content.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    String counter \u003d Integer.toString(i + 1) + \". \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    System.out.println(counter + list_Of_Content.get(i));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                list_Of_Content.add(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"added: \" + input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 49
    }
  },
  {
    "path": "src/main/java/level3.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class level3 {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Bill \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"What Can I do for you? \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        List list_Of_Content \u003d new ArrayList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            int length \u003d input.length();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            String[] isDone \u003d input.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            String firstChar \u003d isDone[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//            String lastChar \u003d isDone[length - 1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                for (int i \u003d 0; i \u003c list_Of_Content.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    String counter \u003d Integer.toString(i + 1) + \". \";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    System.out.println(counter + list_Of_Content.get(i));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            } else if (firstChar.equals(\"done\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String lastChar \u003d isDone[isDone.length - 1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                int index \u003d Integer.parseInt(lastChar);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String current \u003d String.valueOf(list_Of_Content.get(index - 1));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                String replaced \u003d \"[✓]\" + current.substring(3);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String replaced \u003d current.replace(\"[x]\", \"[✓]\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                list_Of_Content.set(index - 1, replaced);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(replaced);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                list_Of_Content.add(\"[x] \" + input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"added: \" + input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 72
    }
  },
  {
    "path": "src/main/java/level4.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class level4 {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Bill \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"What Can I do for you? \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        List list_Of_Content \u003d new ArrayList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            int length \u003d input.length();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            String[] isDone \u003d input.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            String firstChar \u003d isDone[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                for (int i \u003d 0; i \u003c list_Of_Content.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    String counter \u003d Integer.toString(i + 1) + \". \";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                    System.out.println(counter + list_Of_Content.get(i));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            } else if (firstChar.equals(\"done\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String lastChar \u003d isDone[isDone.length - 1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                int index \u003d Integer.parseInt(lastChar);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String current \u003d String.valueOf(list_Of_Content.get(index - 1));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String replaced \u003d current.replace(\"[x]\", \"[✓]\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                list_Of_Content.set(index - 1, replaced);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(replaced);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            } else if (firstChar.equals(\"todo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String content_todo \u003d \"[T]\" + \"[x] \" + input.substring(firstChar.length() + 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                list_Of_Content.add(content_todo);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(content_todo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"Now you have \" + list_Of_Content.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            } else if (firstChar.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                int index \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String content_deadline \u003d \"[D]\" + \"[x] \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                        + input.substring(firstChar.length() + 1, index)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                        + \" (by: \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                        + input.substring(index + 4)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                        + \")\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                list_Of_Content.add(content_deadline);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(content_deadline);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"Now you have \" + list_Of_Content.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            } else if (firstChar.equals(\"event\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                int index \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String content_event \u003d \"[E]\" + \"[x] \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                        + input.substring(firstChar.length() + 1, index)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                        + \" (at: \""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                        + input.substring(index + 4)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                        + \")\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                list_Of_Content.add(content_event);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(content_event);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"Now you have \" + list_Of_Content.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                list_Of_Content.add(\"[x] \" + input);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                System.out.println(\"added: \" + input);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "//                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                String content_todo \u003d \"[T]\" + \"[x] \" + input;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                list_Of_Content.add(content_todo);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(content_todo);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"Now you have \" + list_Of_Content.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        System.out.println(\"------------------------------------------\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 123
    }
  },
  {
    "path": "src/main/java/timeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class timeParser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    private String inputTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Contructor for a time parser object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * @param inputTime input time from the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public timeParser(String inputTime) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        this.inputTime \u003d inputTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     * Return the converted time form of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    public String timeConverter() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.parse(inputTime, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        return localDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 25
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    void processInput_Parser_Test() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            Parser.processInput(\"hey\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        } catch (InvalidException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    void exit_Parser_Test() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        assertTrue(Parser.exit(\"bye\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 21
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    void getSizeOfList_Ui_Test() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "        assertEquals(taskList.getSizeOfList(),0 );"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "todo hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "todo k"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "todo h"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "todo l"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 14
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "if !("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "find ../src/main/java -name \"*.java\" \u003e sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": ")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "java -classpath ../bin Bill \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "BILLXYR": 8
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "../src/main/java/InvalidDeadlineException.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "../src/main/java/InvalidEventException.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "../src/main/java/InvalidException.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "../src/main/java/level4.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "../src/main/java/InvalidDeleteException.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "../src/main/java/level3.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "../src/main/java/InvalidDoneException.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "../src/main/java/Bill.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "../src/main/java/ToDo.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "../src/main/java/InvalidTodoException.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BILLXYR"
        },
        "content": "../src/main/java/level2.java"
      }
    ],
    "authorContributionMap": {
      "BILLXYR": 14
    }
  }
]
