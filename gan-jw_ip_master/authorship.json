[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            ui.showError(e.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                ui.showError(e.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 43,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return \"â˜¹ OOPSIE!! \" + super.getMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 12
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.command.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String splitCommand[] \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String commandWord \u003d splitCommand[0];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            if (checkInputLength(splitCommand, 2)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return prepareDelete(splitCommand[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            if (checkInputLength(splitCommand, 2)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return prepareDone(splitCommand[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case OwoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return new OwoCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case UwuCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return new UwuCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case AddCommand.COMMAND_WORD_TODO:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case AddCommand.COMMAND_WORD_DEADLINE:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case AddCommand.COMMAND_WORD_EVENT:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            if (checkInputLength(splitCommand, 2)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                return prepareAdd(commandWord, splitCommand[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"I don\u0027t understand what you\u0027re saying HMM...\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static boolean checkInputLength(String[] input, int len) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        if (input.length \u003c len) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Input is missing some arguments!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static Command prepareDelete(String input) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        int taskNum \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return new DeleteCommand(taskNum);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static Command prepareDone(String input) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        int taskNum \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return new DoneCommand(taskNum);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static Command prepareAdd(String command, String descript) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case (\"todo\"):"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return new AddCommand(new Todo(descript));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case (\"deadline\"):"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            String delete[] \u003d descript.split(\" /by \", 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            if (checkInputLength(delete, 2)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                return new AddCommand(new Deadline(delete[0], delete[1].replace(\u0027/\u0027, \u0027-\u0027)));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case (\"event\"):"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            String event[] \u003d descript.split(\" /at \", 2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            if (checkInputLength(event, 2)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                return new AddCommand(new Deadline(event[0], event[1].replace(\u0027/\u0027, \u0027-\u0027)));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Couldn\u0027t add item..\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 86
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.tasks.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.tasks.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.tasks.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Storage(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                throw new DukeException(\"Unable to create file...\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            Scanner scanner \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                String[] currLine \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                String typeOfTask \u003d currLine[0];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                switch (typeOfTask) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    Task todo \u003d new Todo(currLine[2]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    if (Integer.parseInt(currLine[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                        todo.doTask();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    list.add(todo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    Task deadline \u003d new Deadline(currLine[2], currLine[3]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    if (Integer.parseInt(currLine[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                        deadline.doTask();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    list.add(deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    Task event \u003d new Event(currLine[2], currLine[3]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    if (Integer.parseInt(currLine[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                        event.doTask();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    list.add(event);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Unable to load file.. :c\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void saveTaskList(String taskToAdd) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.file, true);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            fw.write(taskToAdd + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Error editing file!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void editTaskList(String newTask, int taskNum, boolean delete) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            ArrayList\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(this.filePath)));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            if (delete) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                fileContent.remove(taskNum - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                fileContent.set(taskNum - 1, newTask);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            Files.write(Paths.get(this.filePath), fileContent);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Error editing file!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 96
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String listAllTasks() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            res +\u003d String.format(\"%d. %s\", i + 1, taskList.get(i));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            if (i \u003c taskList.size() - 1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                res +\u003d \"\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Task doneTask(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        if (taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d taskList.size()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            Task task \u003d taskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            task.doTask();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"What are you done with? Gotta specify a valid task number!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Task removeTask(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        if (taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d taskList.size()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            Task task \u003d taskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            taskList.remove(taskNum - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"What are you deleting? Gotta specify a valid task number!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public int getTaskCount() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 57
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String BORDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private final String LOGO \u003d \" ____        ____\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"|  _ \\\\  ___ |  _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"| | | |/ _ \\\\| | | |\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"| |_| || __/| |_| |\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"|____/ \\\\___||____/\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        System.out.println(\"Hello I am\\n\" + LOGO + \"\\n\" + \"Feed me some stuff! :3\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        System.out.println(String.format(message));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 42
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String MESSAGE_ADD_ACKNOWLEDGEMENT \u003d \"*Gobble gobble* the following has been eated OwO:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String MESSAGE_ADD_UPDATE \u003d \"Number of thing(s) in my belly has now become \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        storage.saveTaskList(task.saveToString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        ui.printMessage(String.format(\"%s\\n%s\\n%s%d!\", MESSAGE_ADD_ACKNOWLEDGEMENT, task.toString(),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                MESSAGE_ADD_UPDATE, tasks.getTaskCount()));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 30
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 16
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String MESSAGE_DELETE_ACKNOWLEDGEMENT \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            \"Nooo you can\u0027t take away what you\u0027ve already given me...\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    + \"Okay fine. It\u0027s in my stomach tho... ASDFGUUVHHH!!\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    + \"The following has been removed: \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String MESSAGE_DELETE_CONTINUED \u003d \"Now I\u0027m feeling sick :( there\u0027s \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String MESSAGE_DELETE_END \u003d \" thing(s) in my belly now...HUNGRY!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        Task task \u003d tasks.removeTask(taskNum);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        storage.editTaskList(\"\", taskNum, true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        ui.printMessage(String.format(\"%s\\n%s\\n%s%d%s\", MESSAGE_DELETE_ACKNOWLEDGEMENT,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                task.toString(), MESSAGE_DELETE_CONTINUED, tasks.getTaskCount(), MESSAGE_DELETE_END));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String MESSAGE_DONE_ACKNOWLEDGEMENT \u003d \"Nice I\u0027ve digested the following: \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String MESSAGE_DONE_END \u003d \"Now I\u0027m hungry again! FEED ME MORE :3\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        Task task \u003d tasks.doneTask(taskNum);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        storage.editTaskList(task.saveToString(), taskNum, false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        ui.printMessage(String.format(\"%s\\n%s\\n%s\", MESSAGE_DONE_ACKNOWLEDGEMENT,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                task.toString(), MESSAGE_DONE_END));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 28
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"bb cya again!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public ExitCommand() {}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        ui.printMessage(MESSAGE_EXIT_ACKNOWLEDGEMENT);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 22
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public ListCommand() {}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        ui.printMessage(tasks.listAllTasks());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 16
    }
  },
  {
    "path": "src/main/java/duke/command/OwoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class OwoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"owo\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String MESSAGE_OWO_ACKNOWLEDGEMENT \u003d \"uwu\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public OwoCommand() {}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        ui.printMessage(MESSAGE_OWO_ACKNOWLEDGEMENT);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 17
    }
  },
  {
    "path": "src/main/java/duke/command/UwuCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class UwuCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"uwu\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String MESSAGE_UWU_ACKNOWLEDGEMENT \u003d \"owo\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public UwuCommand() {}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        ui.printMessage(MESSAGE_UWU_ACKNOWLEDGEMENT);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 17
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private char type \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private final String BY \u003d \"best consumed by: \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Deadline(String task, String date) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Time format should be yyyy/mm/dd or yyyy-mm-dd.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"[%c]%s %s%s\", type, super.toString(), BY,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String saveToString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"%c | %s | %s\", type, super.saveToString(), date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 31
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private char type \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private final String AT \u003d \"bought at: \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Event(String task, String date) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Time format should be yyyy/mm/dd or yyyy-mm-dd.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"[%c]%s %s%s\", type, super.toString(), AT,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String saveToString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"%c | %s | %s\", type, super.saveToString(), date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 31
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    Task(String task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void doTask() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String check \u003d isDone ? \"âœ“\" : \"âœ—\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"[%s] %s\", check, task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String saveToString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        int check \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"%d | %s\", check, task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 27
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package main.java.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private char type \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"[%c]%s\", type, super.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String saveToString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"%c | %s\", type, super.saveToString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "todo pork"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "todo beef"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "todo veggies"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "deadline milk /by yesterday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "event bread /at today"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "java -classpath ../bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 1,
      "-": 37
    }
  }
]
