[
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    String deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public DeadlineTask(String desc, String deadline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static void printNice(String s) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        System.out.println(\"________________________________________\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        System.out.println(\"    \" + s);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        System.out.println(\"________________________________________\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static void greet() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m duckmoon99\u0027s Duke\\n    What can I do for you?\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        printNice(greeting);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static void bye() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        String exit \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        printNice(exit);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static void listOut(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        StringBuilder s \u003d new StringBuilder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            s.append((i \u003e 0 ? \"\\n    \" : \"\") + String.format(\"%d.%s\", i+1, tasks.get(i)));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        printNice(s.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static boolean isBye(String s){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return s.toLowerCase().equals(\"bye\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static boolean isList(String s){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return s.toLowerCase().equals(\"list\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static boolean isDone(String s) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return s.length() \u003e\u003d 4 \u0026\u0026 s.substring(0, 4).toLowerCase().equals(\"done\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static boolean isDelete(String s){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return s.length() \u003e\u003d 6 \u0026\u0026 s.substring(0, 6).toLowerCase().equals(\"delete\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static void done(ArrayList\u003cTask\u003e tasks, int i) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        tasks.get(i).done();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        printNice(\"Nice! I\u0027ve marked this task as done:\\n      \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static void add(ArrayList\u003cTask\u003e tasks, String s) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            String[] processed;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            Task toAdd;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            switch (s.split(\" \")[0]) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    toAdd \u003d new ToDoTask(s.substring(5));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    processed \u003d s.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    toAdd \u003d new EventTask(processed[0], processed[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    processed \u003d s.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    toAdd \u003d new DeadlineTask(processed[0], processed[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            tasks.add(toAdd);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            printNice(\"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    \"        \" + toAdd.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    \"    Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            printNice(\"Please reformat the add task command properly.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            printNice(\"Unrecognizable command.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static void delete(ArrayList\u003cTask\u003e tasks, int i) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        printNice(\"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                \"      \" + tasks.get(i) +         \"\\n\" +"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                \"    Now you have \" + (tasks.size() - 1) + \" tasks in the list.\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        );"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        tasks.remove(i);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static String genString(Random rng, int length){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return rng.ints(97, 123)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                .limit(length)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                .mapToObj(x -\u003e (char) x)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                .reduce(\"\", (a, b) -\u003e a + b, (a, b) -\u003e a + b);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    // Run this once to generate input for testing, input.txt should be located at path"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public static void generateInput(String path){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        Random rng \u003d new Random(500); //constant seed for regression test, or use Time as seed for new set of test cases"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        String[] action \u003d {\"list\", \"done\", \"delete\", \"todo\", \"deadline\", \"event\"};"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        int cnt \u003d 0;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(path));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            for (int i \u003d 0; i \u003c 30; i++) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                switch (action[rng.nextInt(action.length)]) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                        bufferedWriter.write(\"list\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                        bufferedWriter.write(\"done \" + (1 + rng.nextInt(cnt + cnt/10)));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                        bufferedWriter.write(\"delete \" + (1 + rng.nextInt(cnt + cnt/10)));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                        cnt++;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                        bufferedWriter.write(\"todo \" + genString(rng, 15));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                        cnt++;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                        bufferedWriter.write(\"deadline \" + genString(rng, 15) + \" /by \" + genString(rng, 10));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                        cnt++;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                        bufferedWriter.write(\"event \" + genString(rng, 15) + \" /at \" + genString(rng, 10));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            bufferedWriter.write(\"bye\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            bufferedWriter.newLine();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            input \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            if (isBye(input)) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                bye();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            } else if (isList(input)) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                listOut(tasks);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            } else if (isDone(input)) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    done(tasks, Integer.parseInt(input.split(\" \")[1]) - 1);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    printNice(\"No such task.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            } else if (isDelete(input)) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    delete(tasks, Integer.parseInt(input.split(\" \")[1]) - 1);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    printNice(\"No such task.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                add(tasks, input);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 168,
      "-": 4
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    String period;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public EventTask(String desc, String period) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        this.period \u003d period;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return \"[E]\" + super.toString()  + \" (at: \" + period + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private String desc;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return String.format(\"[%c] %s\", done ? \u0027\\u2713\u0027 : \u0027\\u2717\u0027, desc);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 17
    }
  },
  {
    "path": "src/main/java/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public ToDoTask(String desc) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo omanpqcdopxpmoj"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "event lawwhpyctjxwqfz /at tfmxowwugx"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "event ybjbyomjlvfrrul /at akujwntuqw"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo lwbssjwdswrlmxq"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo mvtxnwvxhhxxunz"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "deadline bplugnrsvfozqid /by oleonxhvvg"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo ibgxbftdfnowuwf"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo gawyhtvjlpoqgrq"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "delete 6"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo ybzwwfgbnwoerbp"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "deadline zndsdzdqcprvtge /by qfdhveiuhv"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "deadline ascqiujaavkljun /by ugjawcyiwg"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "done 11"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "deadline plwzjygipzfuozr /by ystqvcnxdl"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "deadline uxpmimaywzsugwf /by trtlftiqis"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo nsgjwvtxsspyopy"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "delete 13"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo zjnghbhzkwvlixr"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 31
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "SET JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    pause"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 6,
      "-": 20
    }
  }
]
