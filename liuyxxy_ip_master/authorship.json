[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Deadline(String name, String time) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"[D]\" + super.getStatus() + \" (by: \" + this.time + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    static String[] flavour \u003d {\"(Ф Д Ф)\", \"(\u003dↀ ω ↀ\u003d)✧\", \"ฅ( *Φ ω Φ* ) ฅ\", \"( *Φ ω Φ* )\", \"(ꐦ°᷄ д °᷅)\", \"(ꐦ ಠ皿ಠ )\", \"(ꐦ°᷄ д °᷅)\"};"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    static Random ran \u003d new Random();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    static int magic \u003d 7;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static String linePrinter() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return (\"\\n-------------------------------------------------------------------------\\n\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static String start() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String s \u003d (\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                \"What can I do for you?            \" + flavour[ran.nextInt(7)]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return linePrinter() +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                s.replaceAll(\"(?m)^\", \"\\t\") +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                linePrinter();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static String[] splitString(String s) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return s.split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String endCommand \u003d \"bye\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String listCommand \u003d \"list\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String doneCommand \u003d \"done\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String deleteCommand \u003d \"delete\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String toDoCommand \u003d \"todo\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String deadlineCommand \u003d \"deadline\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String eventCommand \u003d \"event\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        ArrayList\u003cTask\u003e ls \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        System.out.println(start());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String s \u003d in.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        while(!s.equals(endCommand)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            System.out.println(linePrinter());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                if (s.equals(listCommand)) { // the case where tasks are listed"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    System.out.println((\"Here are the tasks in your list:            \" + flavour[ran.nextInt(7)]).replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    for (Task t : ls) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        System.out.println("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                ((ls.indexOf(t) + 1) + \". \" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                        t.getStatus()).replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    String[] words \u003d s.split(\" \", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    if (words[0].equals(doneCommand)) { // the case where something is done"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        if (words.length \u003c 2) { // if nothing written after done"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            throw new DukeDoneException(\"Nothing\u0027s done :?            \" + flavour[ran.nextInt(magic)]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            int number \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            if (number \u003e ls.size()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                throw new DukeNotSureException(\"This task doesn\u0027t seem to exist :?            \" + flavour[ran.nextInt(magic)]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                Task oldTask \u003d ls.get(number - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                oldTask.checkTask();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                System.out.println((\"Nice! I\u0027ve marked this task as done:             \" + flavour[ran.nextInt(magic)] +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                        \"\\n\" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                        oldTask.getStatus()).replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    } else if (words[0].equals(deleteCommand)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        if (words.length \u003c 2) { // if nothing written after done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            throw new DukeDoneException(\"Nothing\u0027s deleted :?             \" + flavour[ran.nextInt(magic)]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            int number \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            if (number \u003e ls.size()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                throw new DukeNotSureException(\"This task doesn\u0027t seem to exist :?             \" + flavour[ran.nextInt(magic)]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                Task oldTask \u003d ls.get(number - 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                ls.remove(number - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                String thing \u003d \"Running away from your responsibilities huh. Deleted:             \" + flavour[ran.nextInt(magic)] +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                        \"\\n\" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                        oldTask.getStatus().replaceAll(\"(?m)^\", \"\\t\") +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                        \"\\nNow you have \" + ls.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                System.out.println(thing.replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    } else { // the case where tasks are added"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        if (words[0].equals(toDoCommand)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                throw new DukeNotSureException(\"What are you trying to do :?             \" + flavour[ran.nextInt(magic)]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                ToDo newTD \u003d new ToDo(words[1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                ls.add(newTD);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                String thing \u003d \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                        newTD.getStatus().replaceAll(\"(?m)^\", \"\\t\") +"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                        \"\\nNow you have \" + ls.size() + \" tasks in the list.             \" + flavour[ran.nextInt(magic)];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                System.out.println(thing.replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        } else if (words[0].equals(deadlineCommand)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                throw new DukeNotSureException(\"What are deadlines :?             \" + flavour[ran.nextInt(magic)]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                String[] stuff \u003d words[1].split(\" /by \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                Deadline newDL \u003d new Deadline(stuff[0], stuff[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                ls.add(newDL);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                String thing \u003d \"Got it. I\u0027ve added this task:\\n\" + newDL.getStatus().replaceAll(\"(?m)^\", \"\\t\")"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                        + \"\\nNow you have \" + ls.size() + \" tasks in the list.             \" + flavour[ran.nextInt(magic)];"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                System.out.println(thing.replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        } else if (words[0].equals(eventCommand)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                throw new DukeNotSureException(\"What event are you making :?\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                String[] stuff \u003d words[1].split(\" /at \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                Event newE \u003d new Event(stuff[0], stuff[1]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                ls.add(newE);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                String thing \u003d \"Got it. I\u0027ve added this task:\\n\" + newE.getStatus().replaceAll(\"(?m)^\", \"\\t\")"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                        + \"\\nNow you have \" + ls.size() + \" tasks in the list.             \" + flavour[ran.nextInt(magic)];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                System.out.println(thing.replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            throw new DukeNotSureException(\"Man I don\u0027t know what you want :?             \" + flavour[ran.nextInt(magic)]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            } catch (DukeDoneException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            } catch (DukeNotSureException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            System.out.println(linePrinter());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            s \u003d in.nextLine();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String byeText \u003d \"Running away huh?? \" + flavour[ran.nextInt(7)];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        System.out.println(linePrinter() +"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                byeText.replaceAll(\"(?m)^\", \"\\t\") +"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                linePrinter());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "liuyxxy": 138
    }
  },
  {
    "path": "src/main/java/DukeDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class DukeDoneException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public DukeDoneException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super((\"ERROR!! \" + message).replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 5
    }
  },
  {
    "path": "src/main/java/DukeNotSureException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class DukeNotSureException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public DukeNotSureException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Event(String name, String time) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"[E]\" + super.getStatus() + \" (at: \" + this.time + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.isDone? (\"[\\u2713] \" + toString()) : (\"[\\u2718] \" + toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void checkTask() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.isDone \u003d !this.isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"[T]\" + super.getStatus();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java ../src/main/java/Task.java  ../src/main/java/Event.java ../src/main/java/ToDo.java ../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "liuyxxy": 1
    }
  }
]
