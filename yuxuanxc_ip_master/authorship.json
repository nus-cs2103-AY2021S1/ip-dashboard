[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The Duke program is a chat bot which will keep track of"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * tasks from the user input and store the them in a list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * @author yuxuan."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * @version v0.3."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * @since 2020-08-15."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param filePath The path of the file which stores the task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Reads user input and executes the type of reply accordingly."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Initialises Duke and runs the chat bot."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param args an array of command-line arguments for Duke to read."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 60,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 7
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The Parser class will deal with making sense of the user command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns a boolean to determine if the String is empty after the"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * command word."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param input The String which represents the user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param x The minimum length of the input for the details to be non-empty."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A boolean, true or false."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public static boolean isEmpty(String input, int x) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return input.length() \u003c\u003d x || input.substring(x).trim().isEmpty();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Reads the input to determine which type of command Duke"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * should execute to reply the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param input The user input entered in the command line."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return The Command to be executed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @throws DukeException if the input is formatted wrongly."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else if (input.trim().equals(\"list\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else if (input.startsWith(\"done \") || input.equals(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (isEmpty(input, 5)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"Which task do you want to mark as done?\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String item \u003d input.substring(5).trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new DoneCommand(item);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else if (input.startsWith(\"delete \") || input.equals(\"delete\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (isEmpty(input, 7)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"Which task do you want to delete?\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String item \u003d input.substring(7).trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new DeleteCommand(item);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else if (input.startsWith(\"find \") || input.equals(\"find\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (input.length() \u003c 6 || input.substring(5).trim().isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"Which task do you want to find?\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String keyword \u003d input.substring(5).trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else if (input.startsWith(\"todo \") || input.equals(\"todo\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (isEmpty(input, 5)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String name \u003d input.substring(5).trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new AddCommand(TaskType.TODO, name);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else if (input.startsWith(\"deadline \") || input.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (isEmpty(input, 9)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String details \u003d input.substring(9).trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String[] split \u003d details.split(\" /by \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"Please use the format: deadline (name) /by \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        + \"(yyyy-mm-dd)\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String name \u003d split[0];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String time \u003d split[1];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new AddCommand(TaskType.DEADLINE, name, time);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else if (input.startsWith(\"event \") || input.equals(\"event\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (isEmpty(input, 6)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String details \u003d input.substring(6).trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String[] split \u003d details.split(\" /at \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"Please use the format: event (name) /at \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        + \"(yyyy-mm-dd)\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String name \u003d split[0];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String time \u003d split[1];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new AddCommand(TaskType.EVENT, name, time);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new NoCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 90
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The Storage class will deal with loading tasks from the file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * and saving tasks in the file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor for a Storage object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Loads the file which is stored in the hard disk and"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * retrieves the information from the file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return An arraylist which contains the Tasks stored in the file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @throws DukeException if an IO error occurred and createNewFile() throws IOException."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            boolean hasFolder \u003d file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            boolean hasFile \u003d file.createNewFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (!hasFile \u0026\u0026 !hasFolder) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                while (sc.hasNext()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                    String task \u003d sc.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                    String[] details \u003d task.split(\" \\\\| \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                    if (details[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        list.add(new ToDo(details[2]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                    } else if (details[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        list.add(new Deadline(details[2], LocalDate.parse(details[3])));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        list.add(new Event(details[2], LocalDate.parse(details[3])));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                    if (details[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        list.get(list.size() - 1).done();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                sc.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            throw new DukeException(\"IOException\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Updates the data file to store all the Tasks in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param list An arraylist which contains information for all the Tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @throws IOException if the file in filePath does not exist or cannot be opened."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void updateDataFile(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        PrintWriter print_line \u003d new PrintWriter(writer);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String[] details \u003d new String[4];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            details[2] \u003d task.getName();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                details[0] \u003d \"T\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                details[0] \u003d \"D\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                details[3] \u003d ((Deadline) task).getBy().toString();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                details[0] \u003d \"E\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                details[3] \u003d ((Event) task).getDuration().toString();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (task.getIsDone()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                details[1] \u003d \"1\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                details[1] \u003d \"0\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String textLine \u003d details[0] + \" | \" + details[1] + \" | \" + details[2]"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                    + \" | \" + details[3];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            print_line.printf(\"%s\" + \"%n\", textLine);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        print_line.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 99
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The TaskList class contains the task list and has operations"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * to modify the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor for a TaskList object with a new list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor for a TaskList object with an existing list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param list An arraylist which is used to store Tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns the list in the TaskList object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return An arraylist containing all the Tasks stored in the TaskList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Adds a new Task to the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param task A Task which contains the name and details of a task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (list.size() \u003e 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            System.out.println(\"Now you have \" + list.size() + \" tasks in your list\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            System.out.println(\"Now you have \" + list.size() + \" task in your list\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Modifies a specific task stored in the list using the done()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * method of the Task object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param number The number of the task to be marked as done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void markAsDone(int number) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        list.get(number).done();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(list.get(number));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Removes a specific task stored in the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param number The number of the task to be deleted from the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void deleteTask(int number) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        Task deletedTask \u003d list.get(number);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        list.remove(number);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(deletedTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"You now have \" + list.size() + \" tasks in your list\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 78
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The Ui class will deal with interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Shows the Duke logo and welcomes the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Scans the entire line of text which is inputted by user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return a String which is an exact copy of the user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Prints out the error message."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param message error message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Prints out the error message in the event where file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * could not be loaded."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"Error: File cannot be loaded\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Prints out a line to mark the start and end of each command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"___________________________________________________\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Closes the scanner when the program exits."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void closeScanner() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 62
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final TaskType type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public AddCommand(TaskType type, String name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.time \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public AddCommand(TaskType type, String name, String time) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (type \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                tasks.addTask(new ToDo(this.name));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else if (this.type \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                LocalDate by \u003d LocalDate.parse(this.time);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                tasks.addTask(new Deadline(this.name, by));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else if (this.type \u003d\u003d TaskType.EVENT) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                LocalDate at \u003d LocalDate.parse(this.time);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                tasks.addTask(new Event(name, at));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            storage.updateDataFile(tasks.getList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            error.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (DateTimeException error) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            System.out.println(\"Please provide a valid date and time\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 53
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 12
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final String item;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public DeleteCommand(String item) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.item \u003d item;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            int number \u003d Integer.parseInt(item) - 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            tasks.deleteTask(number);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            storage.updateDataFile(tasks.getList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            error.printStackTrace();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            System.out.println(\"Please provide a valid task number to delete\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IndexOutOfBoundsException error) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            System.out.println(\"This task is not in your list\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 35
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final String item;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public DoneCommand(String item) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.item \u003d item;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            int number \u003d Integer.parseInt(item) - 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            tasks.markAsDone(number);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            storage.updateDataFile(tasks.getList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            error.printStackTrace();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            System.out.println(\"Please provide a valid task number to mark as done\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IndexOutOfBoundsException error) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            System.out.println(\"This task is not in your list\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ui.closeScanner();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 18
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        for (Task task : tasks.getList()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (task.getName().contains(this.keyword)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            System.out.println(\"There are no task which matches this keyword\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                System.out.println(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 39
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            System.out.println(\"There are no tasks in your list\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            for (int i \u003d 1; i \u003c list.size() + 1; i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                System.out.println(i + \". \" + list.get(i - 1));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 28
    }
  },
  {
    "path": "src/main/java/duke/command/NoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class NoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        System.out.println(\"I\u0027m sorry, but I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 17
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The Deadline class contains the name, completion status"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * and deadline of a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor for a Deadline object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param name The name of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param by The deadline of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public Deadline(String name, LocalDate by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns the deadline of a Deadline object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A LocalDate which represents the deadline of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public LocalDate getBy() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns a string representation of a Deadline object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A String which contains the name, completion"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * status and deadline of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 44
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The Event class contains the name, completion status"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * and duration of a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    protected LocalDate duration;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor for an Event object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param name The name of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param duration The duration of the event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public Event(String name, LocalDate duration) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns the duration of an Event object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A LocalDate which represents the duration of the event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public LocalDate getDuration() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return this.duration;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns a string representation of an Event object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A String which contains the name, completion"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * status and the duration of the event."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                + duration.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 44
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The Task class contains the name and completion"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * status of a task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    protected final String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor for a Task object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param name The name of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Changes the completion status of the task to done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns the name of the Task object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A String which represents the name of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns the completion status of the Task object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A boolean which is true if the task is done, false otherwise."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns a string representation of a Task object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A String which contains the name and completion"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * status of the task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return \"[\\u2713] \" + this.name;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return \"[\\u2718] \" + this.name;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 60
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    TODO, DEADLINE, EVENT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 5
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The ToDo class contains the name and completion status"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * of a task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor of a ToDo object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param name The name of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns a string representation of a ToDo object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A String which contains the name and completion"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * status of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 28
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 14
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        Deadline task \u003d new Deadline(\"return book\", LocalDate.parse(\"2020-08-29\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        assertEquals(\"[D][\\u2718] return book (by: Aug 29 2020)\", task.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        task.done();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        assertEquals(\"[D][\\u2713] return book (by: Aug 29 2020)\", task.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 18
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        Event task \u003d new Event(\"borrow book\", LocalDate.parse(\"2020-09-24\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        assertEquals(\"[E][\\u2718] borrow book (at: Sep 24 2020)\", task.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        task.done();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        assertEquals(\"[E][\\u2713] borrow book (at: Sep 24 2020)\", task.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 18
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ToDo task \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        assertEquals(\"[T][\\u2718] read book\", task.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        task.done();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        assertEquals(\"[T][\\u2713] read book\", task.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 1,
      "-": 20
    }
  }
]
