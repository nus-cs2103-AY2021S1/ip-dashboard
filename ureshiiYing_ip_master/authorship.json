[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":45,"author":{"gitId":"ureshiiYing"},"content":"    systemProperty \"file.encoding\", \"utf-8\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":49,"author":{"gitId":"ureshiiYing"},"content":"    mainClassName \u003d \"pandabot.pandabot.Launcher\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":53,"author":{"gitId":"ureshiiYing"},"content":"    archiveBaseName \u003d \"PandaBot\""},{"lineNumber":54,"author":{"gitId":"ureshiiYing"},"content":"    archiveVersion \u003d \"0.2\""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":59,"author":{"gitId":"ureshiiYing"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":64,"author":{"gitId":"ureshiiYing"},"content":"    systemProperty \"file.encoding\", \"utf-8\""},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"},{"lineNumber":66,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":67,"author":{"gitId":"ureshiiYing"},"content":"compileJava.options.encoding \u003d \u0027UTF-8\u0027"},{"lineNumber":68,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":69,"author":{"gitId":"ureshiiYing"},"content":"tasks.withType(JavaCompile) {"},{"lineNumber":70,"author":{"gitId":"ureshiiYing"},"content":"    options.encoding \u003d \u0027UTF-8\u0027"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ureshiiYing":27,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"Welcome to PandaBot\u0027s User Guide. PandaBot is a desktop application for managing"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"the tasks that you have."},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"This guide aims to get you familiar with the features of PandaBot."},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"### Exit the PandaBot Application: `bye`"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"Exits the program."},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"Format: `bye`"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"### List all tasks recorded: `list`"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"Shows a list of all the tasks that you have given."},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"Format: `list`"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"### Help page: `help`"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"Presents a help page that contains all the available commands that you can use."},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"Format: `help`"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"### Delete a task: `delete`"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"Deletes a specified task, according to its task number in the task list."},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"Format: `delete NUMBER`, where NUMBER refers to its task number in the task list"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"* `NUMBER` should be a positive integer."},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"Example Use: `delete 1`"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"### Complete a task: `done`"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"Marks a specified task, according to its task number in the task list, as done."},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"Format: `done NUMBER`, where NUMBER refers to its task number in the task list"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"* `NUMBER` should be a positive integer."},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"Example Use: `done 1`"},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"### Find a list of tasks using a keyword: `find`"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"Presents a list of tasks with description that contains the keyword."},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":44,"author":{"gitId":"ureshiiYing"},"content":"Format: `find KEYWORD`"},{"lineNumber":45,"author":{"gitId":"ureshiiYing"},"content":"* `KEYWORD` refers to the keyword used to find tasks with matching description."},{"lineNumber":46,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":47,"author":{"gitId":"ureshiiYing"},"content":"Example Use: `find CS2103T`"},{"lineNumber":48,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":49,"author":{"gitId":"ureshiiYing"},"content":"### Add a Deadline task: `deadline`"},{"lineNumber":50,"author":{"gitId":"ureshiiYing"},"content":"Adds a Deadline task to the list of tasks. These are tasks that have to be done "},{"lineNumber":51,"author":{"gitId":"ureshiiYing"},"content":"by a certain time."},{"lineNumber":52,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":53,"author":{"gitId":"ureshiiYing"},"content":"Format: `deadline DESCRIPTION /by TIME`"},{"lineNumber":54,"author":{"gitId":"ureshiiYing"},"content":"* `DESCRIPTION` refers to the description of the Deadline task."},{"lineNumber":55,"author":{"gitId":"ureshiiYing"},"content":"* `TIME` refers to the due date of the Deadline task."},{"lineNumber":56,"author":{"gitId":"ureshiiYing"},"content":"* `TIME` can be formatted as *dd/MM/yyyy HHmm*."},{"lineNumber":57,"author":{"gitId":"ureshiiYing"},"content":"* If you prefer not to use a formatted `TIME`, any type of input for `TIME` is possible."},{"lineNumber":58,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":59,"author":{"gitId":"ureshiiYing"},"content":"Example Use: "},{"lineNumber":60,"author":{"gitId":"ureshiiYing"},"content":"* `deadline CS2103T iP /by 18/09/2000 2359`"},{"lineNumber":61,"author":{"gitId":"ureshiiYing"},"content":"* `deadline CS2100 assignment /by Friday`"},{"lineNumber":62,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":63,"author":{"gitId":"ureshiiYing"},"content":"### Add a DoAfter task: `do`"},{"lineNumber":64,"author":{"gitId":"ureshiiYing"},"content":"Adds a DoAfter task to the list of tasks. These are tasks that have to done after "},{"lineNumber":65,"author":{"gitId":"ureshiiYing"},"content":"a certain time or task."},{"lineNumber":66,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":67,"author":{"gitId":"ureshiiYing"},"content":"Format: `do DESCRIPTION /after` `TIME` or `TASK`"},{"lineNumber":68,"author":{"gitId":"ureshiiYing"},"content":"* `DESCRIPTION` refers to the description of the DoAfter task."},{"lineNumber":69,"author":{"gitId":"ureshiiYing"},"content":"* `TIME/TASK` can refer to the time, or the task, that the DoAfter task should be done after."},{"lineNumber":70,"author":{"gitId":"ureshiiYing"},"content":"* If `TIME` is used, it can be formatted as *dd/MM/yyyy HHmm*."},{"lineNumber":71,"author":{"gitId":"ureshiiYing"},"content":"* If you prefer not to use a formatted `TIME`, any type of input for `TIME` is possible."},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"ureshiiYing"},"content":"Example Use: "},{"lineNumber":74,"author":{"gitId":"ureshiiYing"},"content":"* `do CS2103T tP assignment /after CS2103T iP assignments`"},{"lineNumber":75,"author":{"gitId":"ureshiiYing"},"content":"* `do CS2103T quiz /after 18/09/2000 1200`"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"ureshiiYing"},"content":"### Add an Event task: `event`"},{"lineNumber":78,"author":{"gitId":"ureshiiYing"},"content":"Adds an Event task to the list of tasks. These are tasks that occur at a certain time."},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"ureshiiYing"},"content":"Format: `event DESCRIPTION /at TIME`"},{"lineNumber":81,"author":{"gitId":"ureshiiYing"},"content":"* `DESCRIPTION` refers to the description of the Event task."},{"lineNumber":82,"author":{"gitId":"ureshiiYing"},"content":"* `TIME` refers to the due date of the Event task."},{"lineNumber":83,"author":{"gitId":"ureshiiYing"},"content":"* `TIME` can be formatted as *dd/MM/yyyy HHmm*."},{"lineNumber":84,"author":{"gitId":"ureshiiYing"},"content":"* If you prefer not to use a formatted `TIME`, any type of input for `TIME` is possible."},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"ureshiiYing"},"content":"Example Use: "},{"lineNumber":87,"author":{"gitId":"ureshiiYing"},"content":"* `event Webinar /at 19/09/2000 1430`"},{"lineNumber":88,"author":{"gitId":"ureshiiYing"},"content":"* `event Online Concert /at Friday 2pm`"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"ureshiiYing"},"content":"### Add a ToDo task: `todo`"},{"lineNumber":91,"author":{"gitId":"ureshiiYing"},"content":"Adds a ToDo task to the list of tasks. These are tasks that are not time-based."},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"ureshiiYing"},"content":"Format: `todo DESCRIPTION`"},{"lineNumber":94,"author":{"gitId":"ureshiiYing"},"content":"* `DESCRIPTION` refers to the description of the ToDo task."},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"ureshiiYing"},"content":"Example Use: `todo Revision for CS2100 midterms`"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"ureshiiYing"},"content":"## Note:"},{"lineNumber":99,"author":{"gitId":"ureshiiYing"},"content":"Formatted `TIME` in the form of *dd/MM/yyyy HHmm* will be displayed in a new format after processing"},{"lineNumber":100,"author":{"gitId":"ureshiiYing"},"content":"by PandaBot. If `TIME` is not formatted as such, PandaBot will just record the given input as is."}],"authorContributionMap":{"ureshiiYing":88,"-":12}},{"path":"src/main/java/pandabot/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.commands;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":" * Represents an add command which allows users to add tasks to the TaskList."},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"public class AddCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"    private final Task task;"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"     * Creates an AddCommand object."},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     * @param task the task to be added"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"    public AddCommand(Task task) {"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"        this.task \u003d task;"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"     * Executes the addition of tasks. The user will be notified through the"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"     * printed messages by the ui and the current tasks are saved."},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"     * @param tasks the current TaskList object being used"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"     * @param ui the current Ui object being used"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"     * @param storage the current Storage object being used"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"     * @return the String representation to display"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"        // add the task"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"        tasks.addTask(task);"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"        // save"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"        storage.write(tasks.getTaskList());"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"        return ui.displayOnAdd(task, tasks.size());"},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":41}},{"path":"src/main/java/pandabot/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.commands;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":" * Represents a bye command which allows users to exit the program."},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"public class ByeCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"     * Executes the bye command, where the program stops running and exits."},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"     * The user will be notified through printed messages by the ui."},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     * @param tasks the current TaskList object being used"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     * @param ui the current Ui object being used"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"     * @param storage the current Storage object being used"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"     * @return the String representation to display"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"        return ui.displayOnExit();"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"     * Returns true if the program should exit."},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"     * Otherwise, returns false if the program should continue to run."},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"     * @return true as the program exits on bye command"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"    public boolean isExit() {"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"        return true;"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":36}},{"path":"src/main/java/pandabot/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.commands;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotException;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":" * Represents a Command, which is an abstract class."},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":" * The Command class is used to execute a command."},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"public abstract class Command {"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"     * Executes the command. The user will be notified through the"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     * printed messages by the ui and the current tasks are saved."},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"     * @param tasks the current TaskList object being used"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"     * @param ui the current Ui object being used"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"     * @param storage the current Storage object being used"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"     * @return the String representation to display"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"     * @throws PandaBotException If any errors occurs when executing the command"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws PandaBotException;"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"     * Returns true if the program should exit."},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"     * Otherwise, returns false if the program should continue to run."},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"     * @return false by default as the program is still running"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"    public boolean isExit() {"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"        return false;"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"    };"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":35}},{"path":"src/main/java/pandabot/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.commands;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotException;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":" * Represents a delete command which allows users to delete tasks."},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"    private final int taskNum;"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a DeleteCommand object."},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"     * @param taskNum the task number to be deleted"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"    public DeleteCommand(int taskNum) {"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"     * Executes the deletion of tasks. The user will be notified through the"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"     * printed messages by the ui and the tasks remaining are saved."},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"     * @param tasks the current TaskList object being used"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"     * @param ui the current Ui object being used"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"     * @param storage the current Storage object being used"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"     * @return the String representation to display"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"     * @throws PandaBotException If any errors occurs when executing the command"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws PandaBotException {"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"        // delete task"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"        Task t \u003d tasks.getTaskAt(taskNum);"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"        tasks.deleteTask(taskNum);"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"        // save"},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"        storage.write(tasks.getTaskList());"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"        return ui.displayOnDelete(t, tasks.size());"},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":44}},{"path":"src/main/java/pandabot/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.commands;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotException;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":" * Represents the done command which allows users to mark a task as done."},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"public class DoneCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"    private final int taskNum;"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a DoneCommand object."},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"     * @param taskNum the task number that is done"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"    public DoneCommand(int taskNum) {"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"     * Executes marking the task as done. The user will be notified through the"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"     * printed messages by the ui and the tasks are saved."},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"     * @param tasks the current TaskList object being used"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"     * @param ui the current Ui object being used"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"     * @param storage the current Storage object being used"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"     * @return the String representation to display"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"     * @throws PandaBotException If any errors occurs when executing the command"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws PandaBotException {"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"        // mark as done"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"        Task t \u003d tasks.getTaskAt(taskNum);"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"        t.markTaskDone();"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"        assert t.getStatusIcon().equals(\"\\u2713\") : \"Failed to mark task as done.\";"},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"        // save the changes"},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"        storage.write(tasks.getTaskList());"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"        return ui.displayOnDone(tasks.getTaskAt(taskNum));"},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":45,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":45}},{"path":"src/main/java/pandabot/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.commands;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":" * Represents a find command which allows users to search for tasks with description"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":" * that matches the search word."},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"public class FindCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"    private final String keyword;"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a FindCommand object."},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     * @param keyword the word used in the search for tasks with matching descriptions"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"     * Executes the finding of tasks. The user will be notified of the matching tasks"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"     * through the printed messages by the ui."},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"     * @param tasks the current TaskList object being used"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"     * @param ui the current Ui object being used"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"     * @param storage the current Storage object being used"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"     * @return the String representation to display"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"        TaskList matchingTasks \u003d tasks.findTask(keyword);"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"        return ui.displayOnFind(matchingTasks);"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":37}},{"path":"src/main/java/pandabot/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.commands;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":" * Represents a help command which provides the user a help page that contains"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":" * a list of commands that the user can use."},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"public class HelpCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"     * Executes the help command, which brings up a help page that contains"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"     * a list of commands that the user can use."},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     * @param tasks   the current TaskList object being used"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"     * @param ui      the current Ui object being used"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"     * @param storage the current Storage object being used"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"     * @return the String representation to display"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"        return ui.displayOnHelp();"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":26}},{"path":"src/main/java/pandabot/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.commands;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":" * Represents a list command which allows users to view the"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":" * current list of tasks."},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"public class ListCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"     * Executes the list command, where the list of tasks will be printed by the ui."},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     * @param tasks the current TaskList object being used"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     * @param ui the current Ui object being used"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"     * @param storage the current Storage object being used"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"     * @return the String representation to display"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"        return ui.displayOnList(tasks);"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":26}},{"path":"src/main/java/pandabot/exceptions/PandaBotEmptyTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.exceptions;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":" * Represents a type of PandaBotException which is thrown when the task description is empty."},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"public class PandaBotEmptyTaskDescriptionException extends PandaBotException {"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a PandaBotEmptyTaskDescriptionException object which is used to"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"     * show that the description of the task is empty."},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"     * @param taskName the name of the task that has an empty description"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"    public PandaBotEmptyTaskDescriptionException(String taskName) {"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"        super(String.format(\":c OOPS! The description of the %s cannot be empty.\", taskName));"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":17}},{"path":"src/main/java/pandabot/exceptions/PandaBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.exceptions;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":" *  Represents a general exception thrown by PandaBot."},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"public class PandaBotException extends Exception {"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a PandaBotException object."},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"     * @param msg the error message to show"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"    public PandaBotException(String msg) {"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"        super(msg);"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":16}},{"path":"src/main/java/pandabot/exceptions/PandaBotInsufficientArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.exceptions;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":" * Represents a type of PandaBotException which is thrown when insufficient"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":" * number of arguments is passed into a method."},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"public class PandaBotInsufficientArgumentException extends PandaBotException {"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a new PandaBotInsufficientArgumentException object which"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"     * is used to show that there is insufficient number of arguments passed"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"     * into a method."},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"    public PandaBotInsufficientArgumentException() {"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"        super(\"OOPS! Insufficient arguments given. Make sure you give me all the details!\");"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":17}},{"path":"src/main/java/pandabot/exceptions/PandaBotInvalidArgumentFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.exceptions;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":" * Represents a type of PandaBotException which is thrown when an an invalid input"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":" * is passed as an argument into a method."},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"public class PandaBotInvalidArgumentFormatException extends PandaBotException {"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a new PandaBotInvalidArgumentFormatException object which"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"     * is used to show that an invalid input is passed as an argument"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"     * into a method."},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"    public PandaBotInvalidArgumentFormatException(String msg) {"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"        super(\"Invalid format given: \" + msg);"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":17}},{"path":"src/main/java/pandabot/exceptions/PandaBotInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.exceptions;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":" * Represents a type of PandaBotException which is thrown when the user passes in"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":" * an invalid command."},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"public class PandaBotInvalidCommandException extends PandaBotException {"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a new PandaBotInvalidCommandException object which"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"     * is used to show that the command passed cannot be recognised and is invalid."},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"    public PandaBotInvalidCommandException() {"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"        super(\"OOPS! I\u0027m sorry, but I don\u0027t know what that means :c\");"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":16}},{"path":"src/main/java/pandabot/exceptions/PandaBotLoadingTasksErrorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.exceptions;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":" * Represents a type of PandaBotException which is thrown when there is an error in"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":" * loading a task from the save file."},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"public class PandaBotLoadingTasksErrorException extends PandaBotException {"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a new PandaBotLoadingTasksErrorException object which"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"     * is used to show that there is an error with loading a task from the save file."},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"    public PandaBotLoadingTasksErrorException(String msg) {"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"        super(\"Error in loading the task: \" + msg);"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":16}},{"path":"src/main/java/pandabot/exceptions/PandaBotOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.exceptions;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":" * Represents a type of PandaBotException which is thrown when a value is exceeds"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":" * the range of values available."},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"public class PandaBotOutOfRangeException extends PandaBotException {"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a new PandaBotOutOfRangeException object which"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"     * is used to show that there a value exceeded the range available."},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"    public PandaBotOutOfRangeException() {"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"        super(\"Task number given is not in range. Which task are you referring to?\");"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":16}},{"path":"src/main/java/pandabot/pandabot/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.pandabot;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":" * Represents a dialog box that is used to display messages in the PandaBot GUI."},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"ureshiiYing"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"ureshiiYing"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"ureshiiYing"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"ureshiiYing"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":50,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a DialogBox from the user with the user\u0027s input."},{"lineNumber":52,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"ureshiiYing"},"content":"     * @param text the message from the user"},{"lineNumber":54,"author":{"gitId":"ureshiiYing"},"content":"     * @param img the user\u0027s display picture"},{"lineNumber":55,"author":{"gitId":"ureshiiYing"},"content":"     * @return a DialogBox with the user\u0027s input"},{"lineNumber":56,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"ureshiiYing"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":58,"author":{"gitId":"ureshiiYing"},"content":"        return new DialogBox(text, img);"},{"lineNumber":59,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":61,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a DialogBox from PandaBot with PandaBot\u0027s messages."},{"lineNumber":63,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"ureshiiYing"},"content":"     * @param text the message from PandaBot"},{"lineNumber":65,"author":{"gitId":"ureshiiYing"},"content":"     * @param img PandaBot\u0027s display picture"},{"lineNumber":66,"author":{"gitId":"ureshiiYing"},"content":"     * @return a DialogBox with PandaBot\u0027s messages"},{"lineNumber":67,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"ureshiiYing"},"content":"    public static DialogBox getPandaBotDialog(String text, Image img) {"},{"lineNumber":69,"author":{"gitId":"ureshiiYing"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":70,"author":{"gitId":"ureshiiYing"},"content":"        db.flip();"},{"lineNumber":71,"author":{"gitId":"ureshiiYing"},"content":"        return db;"},{"lineNumber":72,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":73}},{"path":"src/main/java/pandabot/pandabot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.pandabot;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":" * A Launcher for the PandaBot GUI application."},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"     * Executes the PandaBot GUI application."},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"     * @param args command line arguments"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":19}},{"path":"src/main/java/pandabot/pandabot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.pandabot;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":" * A GUI for PandaBot using FXML."},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"    private PandaBot pandaBot \u003d new PandaBot();"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"     * Starts the GUI application for PandaBot."},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"     * @param stage the stage for this application, onto which the application scene can be set."},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"    public void start(Stage stage) {"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"            stage.setScene(scene);"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setPandaBot(pandaBot);"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"            stage.setTitle(\"PandaBot\");"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"            stage.show();"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":38}},{"path":"src/main/java/pandabot/pandabot/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.pandabot;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"import javafx.application.Platform;"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"import javafx.util.Duration;"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"    private static final double EXIT_DELAY \u003d 2.0;"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    private VBox dialogContainer;"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"    private Button sendButton;"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"    private PandaBot pandaBot;"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"    private final Image pandaBotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/panda notetaker.png\"));"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"     * Initializes the GUI window."},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"    public void initialize() {"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"     * Sets up PandaBot in the GUI. A welcome message will be displayed."},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"ureshiiYing"},"content":"     * @param pandaBot the PandaBot program to run"},{"lineNumber":45,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"ureshiiYing"},"content":"    public void setPandaBot(PandaBot pandaBot) {"},{"lineNumber":47,"author":{"gitId":"ureshiiYing"},"content":"        this.pandaBot \u003d pandaBot;"},{"lineNumber":48,"author":{"gitId":"ureshiiYing"},"content":"        // show greetings using a dialog box"},{"lineNumber":49,"author":{"gitId":"ureshiiYing"},"content":"        dialogContainer.getChildren().add(DialogBox.getPandaBotDialog(pandaBot.displayWelcome(), pandaBotImage));"},{"lineNumber":50,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":52,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"ureshiiYing"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing PandaBot\u0027s reply and then appends them"},{"lineNumber":54,"author":{"gitId":"ureshiiYing"},"content":"     * to the dialog container. Clears the user input after processing. Exits Application when the bye message"},{"lineNumber":55,"author":{"gitId":"ureshiiYing"},"content":"     * is received."},{"lineNumber":56,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"ureshiiYing"},"content":"    @FXML"},{"lineNumber":58,"author":{"gitId":"ureshiiYing"},"content":"    private void handleUserInput() {"},{"lineNumber":59,"author":{"gitId":"ureshiiYing"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":60,"author":{"gitId":"ureshiiYing"},"content":"        String response \u003d pandaBot.getResponse(input);"},{"lineNumber":61,"author":{"gitId":"ureshiiYing"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":62,"author":{"gitId":"ureshiiYing"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":63,"author":{"gitId":"ureshiiYing"},"content":"                DialogBox.getPandaBotDialog(response, pandaBotImage)"},{"lineNumber":64,"author":{"gitId":"ureshiiYing"},"content":"        );"},{"lineNumber":65,"author":{"gitId":"ureshiiYing"},"content":"        userInput.clear();"},{"lineNumber":66,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":67,"author":{"gitId":"ureshiiYing"},"content":"        if (pandaBot.canExitProgram()) {"},{"lineNumber":68,"author":{"gitId":"ureshiiYing"},"content":"            PauseTransition delay \u003d new PauseTransition((Duration.seconds(EXIT_DELAY)));"},{"lineNumber":69,"author":{"gitId":"ureshiiYing"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());"},{"lineNumber":70,"author":{"gitId":"ureshiiYing"},"content":"            delay.play();"},{"lineNumber":71,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":74,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":74}},{"path":"src/main/java/pandabot/pandabot/PandaBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.pandabot;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.commands.Command;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotException;"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":" * Represents the main driver of the PandaBot program."},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"public class PandaBot {"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"    private Ui ui;"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"    private TaskList tasks;"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"    private boolean isExit;"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a new PandaBot object."},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"     * @param fileName the file name of the save file"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"    public PandaBot(String fileName) {"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"        ui \u003d new Ui();"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"        storage \u003d new Storage(fileName);"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"        tasks \u003d new TaskList(storage.load());"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"        isExit \u003d false;"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a new PandaBot object, without requiring a file name."},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"    public PandaBot() {"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"        this(\"PandaBot_GUI_Save.txt\");"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"     * Runs the PandaBot program from the command line."},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"    public void run() {"},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":"        ui.printWelcome();"},{"lineNumber":44,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":45,"author":{"gitId":"ureshiiYing"},"content":"        // runs the program"},{"lineNumber":46,"author":{"gitId":"ureshiiYing"},"content":"        while (!isExit) {"},{"lineNumber":47,"author":{"gitId":"ureshiiYing"},"content":"            try {"},{"lineNumber":48,"author":{"gitId":"ureshiiYing"},"content":"                String fullCommand \u003d ui.readCmd();"},{"lineNumber":49,"author":{"gitId":"ureshiiYing"},"content":"                ui.printHorizontalLine();"},{"lineNumber":50,"author":{"gitId":"ureshiiYing"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":51,"author":{"gitId":"ureshiiYing"},"content":"                ui.printMessage(c.execute(tasks, ui, storage));"},{"lineNumber":52,"author":{"gitId":"ureshiiYing"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":53,"author":{"gitId":"ureshiiYing"},"content":"            } catch (PandaBotException e) {"},{"lineNumber":54,"author":{"gitId":"ureshiiYing"},"content":"                ui.printMessage(e.getMessage());"},{"lineNumber":55,"author":{"gitId":"ureshiiYing"},"content":"            } finally {"},{"lineNumber":56,"author":{"gitId":"ureshiiYing"},"content":"                ui.printHorizontalLine();"},{"lineNumber":57,"author":{"gitId":"ureshiiYing"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":61,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String containing the response to the given user input from the GUI."},{"lineNumber":63,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"ureshiiYing"},"content":"     * @param input the user input"},{"lineNumber":65,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String containing the response to the given user input"},{"lineNumber":66,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"ureshiiYing"},"content":"    public String getResponse(String input) {"},{"lineNumber":68,"author":{"gitId":"ureshiiYing"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"ureshiiYing"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":70,"author":{"gitId":"ureshiiYing"},"content":"            isExit \u003d c.isExit();"},{"lineNumber":71,"author":{"gitId":"ureshiiYing"},"content":"            return c.execute(tasks, ui, storage);"},{"lineNumber":72,"author":{"gitId":"ureshiiYing"},"content":"        } catch (PandaBotException e) {"},{"lineNumber":73,"author":{"gitId":"ureshiiYing"},"content":"            return e.getMessage();"},{"lineNumber":74,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":77,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the welcome message to be displayed onto the GUI"},{"lineNumber":79,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the welcome message"},{"lineNumber":81,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"ureshiiYing"},"content":"    public String displayWelcome() {"},{"lineNumber":83,"author":{"gitId":"ureshiiYing"},"content":"        return ui.displayWelcomeMessage();"},{"lineNumber":84,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":86,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"ureshiiYing"},"content":"     * Checks whether the program exits."},{"lineNumber":88,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"ureshiiYing"},"content":"     * @return true if the program can exit, otherwise false if the program continues to run"},{"lineNumber":90,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"ureshiiYing"},"content":"    public boolean canExitProgram() {"},{"lineNumber":92,"author":{"gitId":"ureshiiYing"},"content":"        return isExit;"},{"lineNumber":93,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":95,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"ureshiiYing"},"content":"     * Executes the PandaBot program."},{"lineNumber":97,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"ureshiiYing"},"content":"     * @param args command line arguments"},{"lineNumber":99,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"ureshiiYing"},"content":"    public static void main(String[] args) {"},{"lineNumber":101,"author":{"gitId":"ureshiiYing"},"content":"        new PandaBot(\"PandaBot_Save.txt\").run();"},{"lineNumber":102,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":103}},{"path":"src/main/java/pandabot/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.parser;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.commands.AddCommand;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.commands.ByeCommand;"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.commands.Command;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.commands.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.commands.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.commands.FindCommand;"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.commands.HelpCommand;"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.commands.ListCommand;"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotException;"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotInsufficientArgumentException;"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotInvalidArgumentFormatException;"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotInvalidCommandException;"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.Deadline;"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.DoAfter;"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.Event;"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.ToDo;"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":" * Represents a parser that is able to make sense of the user input commands."},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"public class Parser {"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"     * Parses a String command into actual commands that PandaBot can perform."},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"     * @param input the input command to be parsed"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"     * @return a Command that the program understands"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"     * @throws PandaBotException If the input cannot be understood or is invalid"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"    public static Command parse(String input) throws PandaBotException {"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"        // split up first word as the command from the rest of the input"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"        String[] cmd \u003d input.split(\" \", 2);"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"        switch(cmd[0]) {"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"        case \"bye\":"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"            return new ByeCommand();"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"        case \"list\":"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"            return new ListCommand();"},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"        case \"help\":"},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"            return new HelpCommand();"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"        case \"done\":"},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":"            verifyArguments(cmd, 2);"},{"lineNumber":44,"author":{"gitId":"ureshiiYing"},"content":"            try {"},{"lineNumber":45,"author":{"gitId":"ureshiiYing"},"content":"                int i \u003d Integer.parseInt(cmd[1]) - 1;"},{"lineNumber":46,"author":{"gitId":"ureshiiYing"},"content":"                return new DoneCommand(i);"},{"lineNumber":47,"author":{"gitId":"ureshiiYing"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":48,"author":{"gitId":"ureshiiYing"},"content":"                throw new PandaBotInvalidArgumentFormatException(input);"},{"lineNumber":49,"author":{"gitId":"ureshiiYing"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"ureshiiYing"},"content":"        case \"delete\":"},{"lineNumber":51,"author":{"gitId":"ureshiiYing"},"content":"            verifyArguments(cmd, 2);"},{"lineNumber":52,"author":{"gitId":"ureshiiYing"},"content":"            try {"},{"lineNumber":53,"author":{"gitId":"ureshiiYing"},"content":"                int j \u003d Integer.parseInt(cmd[1]) - 1;"},{"lineNumber":54,"author":{"gitId":"ureshiiYing"},"content":"                return new DeleteCommand(j);"},{"lineNumber":55,"author":{"gitId":"ureshiiYing"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":56,"author":{"gitId":"ureshiiYing"},"content":"                throw new PandaBotInvalidArgumentFormatException(input);"},{"lineNumber":57,"author":{"gitId":"ureshiiYing"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"ureshiiYing"},"content":"        case \"todo\":"},{"lineNumber":59,"author":{"gitId":"ureshiiYing"},"content":"            verifyArguments(cmd, 2);"},{"lineNumber":60,"author":{"gitId":"ureshiiYing"},"content":"            return new AddCommand(new ToDo(cmd[1]));"},{"lineNumber":61,"author":{"gitId":"ureshiiYing"},"content":"        case \"deadline\":"},{"lineNumber":62,"author":{"gitId":"ureshiiYing"},"content":"            verifyArguments(cmd, 2);"},{"lineNumber":63,"author":{"gitId":"ureshiiYing"},"content":"            String[] deadlineDescription \u003d obtainDescription(cmd[1], \"/by \");"},{"lineNumber":64,"author":{"gitId":"ureshiiYing"},"content":"            return new AddCommand(new Deadline(deadlineDescription[0], deadlineDescription[1]));"},{"lineNumber":65,"author":{"gitId":"ureshiiYing"},"content":"        case \"event\":"},{"lineNumber":66,"author":{"gitId":"ureshiiYing"},"content":"            verifyArguments(cmd, 2);"},{"lineNumber":67,"author":{"gitId":"ureshiiYing"},"content":"            String[] eventDescription \u003d obtainDescription(cmd[1], \"/at \");"},{"lineNumber":68,"author":{"gitId":"ureshiiYing"},"content":"            return new AddCommand(new Event(eventDescription[0], eventDescription[1]));"},{"lineNumber":69,"author":{"gitId":"ureshiiYing"},"content":"        case \"do\":"},{"lineNumber":70,"author":{"gitId":"ureshiiYing"},"content":"            verifyArguments(cmd, 2);"},{"lineNumber":71,"author":{"gitId":"ureshiiYing"},"content":"            String[] doAfterDescription \u003d obtainDescription(cmd[1], \"/after \");"},{"lineNumber":72,"author":{"gitId":"ureshiiYing"},"content":"            return new AddCommand(new DoAfter(doAfterDescription[0], doAfterDescription[1]));"},{"lineNumber":73,"author":{"gitId":"ureshiiYing"},"content":"        case \"find\":"},{"lineNumber":74,"author":{"gitId":"ureshiiYing"},"content":"            verifyArguments(cmd, 2);"},{"lineNumber":75,"author":{"gitId":"ureshiiYing"},"content":"            return new FindCommand(cmd[1]);"},{"lineNumber":76,"author":{"gitId":"ureshiiYing"},"content":"        default:"},{"lineNumber":77,"author":{"gitId":"ureshiiYing"},"content":"            throw new PandaBotInvalidCommandException();"},{"lineNumber":78,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":81,"author":{"gitId":"ureshiiYing"},"content":"    private static void verifyArguments(String[] cmd, int len) throws PandaBotInsufficientArgumentException {"},{"lineNumber":82,"author":{"gitId":"ureshiiYing"},"content":"        boolean isInsufficientArguments \u003d cmd.length \u003c len;"},{"lineNumber":83,"author":{"gitId":"ureshiiYing"},"content":"        boolean isEmptyArgument \u003d cmd[cmd.length - 1].length() \u003d\u003d 0;"},{"lineNumber":84,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":85,"author":{"gitId":"ureshiiYing"},"content":"        if (isInsufficientArguments || isEmptyArgument) {"},{"lineNumber":86,"author":{"gitId":"ureshiiYing"},"content":"            throw new PandaBotInsufficientArgumentException();"},{"lineNumber":87,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":89,"author":{"gitId":"ureshiiYing"},"content":"        assert cmd[cmd.length - 1].length() \u003e 0 : \"Command arguments should not be empty.\";"},{"lineNumber":90,"author":{"gitId":"ureshiiYing"},"content":"        assert cmd.length \u003d\u003d len : \"Command arguments should match the number of arguments required.\";"},{"lineNumber":91,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":93,"author":{"gitId":"ureshiiYing"},"content":"    private static String[] obtainDescription(String description, String separator)"},{"lineNumber":94,"author":{"gitId":"ureshiiYing"},"content":"            throws PandaBotInsufficientArgumentException {"},{"lineNumber":95,"author":{"gitId":"ureshiiYing"},"content":"        String[] res \u003d description.split(separator, 2);"},{"lineNumber":96,"author":{"gitId":"ureshiiYing"},"content":"        verifyArguments(res, 2);"},{"lineNumber":97,"author":{"gitId":"ureshiiYing"},"content":"        return res;"},{"lineNumber":98,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":99}},{"path":"src/main/java/pandabot/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.storage;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"import java.io.BufferedWriter;"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"import java.nio.file.Path;"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"import java.nio.file.Paths;"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotException;"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotLoadingTasksErrorException;"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.Deadline;"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.DoAfter;"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.Event;"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.Task;"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.ToDo;"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":" * Represents the storage class, which is responsible for"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":" * loading and saving tasks into the save file."},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"public class Storage {"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"    private final Path saveFilePath;"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a Storage object, which is used to load and save tasks"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"     * into a save file."},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"     * @param fileName the name of the save file"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"    public Storage(String fileName) {"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"        String home \u003d System.getProperty(\"user.home\");"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"        Path dirPath \u003d Paths.get(home, \"PandaBot\");"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"        boolean directoryExists \u003d Files.exists(dirPath);"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"        // create a dir for save files to be saved in"},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"        if (!directoryExists) {"},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"            try {"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"                java.nio.file.Files.createDirectory(dirPath);"},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":"            } catch (IOException e) {"},{"lineNumber":44,"author":{"gitId":"ureshiiYing"},"content":"                e.printStackTrace();"},{"lineNumber":45,"author":{"gitId":"ureshiiYing"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":48,"author":{"gitId":"ureshiiYing"},"content":"        this.saveFilePath \u003d Paths.get(home, \"PandaBot\", fileName);"},{"lineNumber":49,"author":{"gitId":"ureshiiYing"},"content":"        boolean saveFileExists \u003d Files.exists(saveFilePath);"},{"lineNumber":50,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":51,"author":{"gitId":"ureshiiYing"},"content":"        // create a save file where the data will be written to"},{"lineNumber":52,"author":{"gitId":"ureshiiYing"},"content":"        if (!saveFileExists) {"},{"lineNumber":53,"author":{"gitId":"ureshiiYing"},"content":"            try {"},{"lineNumber":54,"author":{"gitId":"ureshiiYing"},"content":"                Files.createFile(saveFilePath);"},{"lineNumber":55,"author":{"gitId":"ureshiiYing"},"content":"            } catch (IOException e) {"},{"lineNumber":56,"author":{"gitId":"ureshiiYing"},"content":"                e.printStackTrace();"},{"lineNumber":57,"author":{"gitId":"ureshiiYing"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":60,"author":{"gitId":"ureshiiYing"},"content":"        assert Files.exists(saveFilePath) : \"Save file should be successfully created.\";"},{"lineNumber":61,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":63,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"ureshiiYing"},"content":"     * Loads contents from the save file into an ArrayList of Task."},{"lineNumber":65,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"ureshiiYing"},"content":"     * @return a list of tasks as an ArrayList"},{"lineNumber":67,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"ureshiiYing"},"content":"    public ArrayList\u003cTask\u003e load() {"},{"lineNumber":69,"author":{"gitId":"ureshiiYing"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":70,"author":{"gitId":"ureshiiYing"},"content":"        try {"},{"lineNumber":71,"author":{"gitId":"ureshiiYing"},"content":"            BufferedReader reader \u003d Files.newBufferedReader(saveFilePath);"},{"lineNumber":72,"author":{"gitId":"ureshiiYing"},"content":"            loadTasks(tasks, reader);"},{"lineNumber":73,"author":{"gitId":"ureshiiYing"},"content":"            reader.close();"},{"lineNumber":74,"author":{"gitId":"ureshiiYing"},"content":"        } catch (IOException e) {"},{"lineNumber":75,"author":{"gitId":"ureshiiYing"},"content":"            System.out.println(\"OOPS! :c There was an error in reading save file: \" + e.getMessage() + \"\\n\""},{"lineNumber":76,"author":{"gitId":"ureshiiYing"},"content":"                                + \"I\u0027ll get you a new save file!\");"},{"lineNumber":77,"author":{"gitId":"ureshiiYing"},"content":"            tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":78,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":80,"author":{"gitId":"ureshiiYing"},"content":"        return tasks;"},{"lineNumber":81,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":83,"author":{"gitId":"ureshiiYing"},"content":"    private void loadTasks(ArrayList\u003cTask\u003e tasks, BufferedReader reader) throws IOException {"},{"lineNumber":84,"author":{"gitId":"ureshiiYing"},"content":"        String task;"},{"lineNumber":85,"author":{"gitId":"ureshiiYing"},"content":"        while ((task \u003d reader.readLine()) !\u003d null) {"},{"lineNumber":86,"author":{"gitId":"ureshiiYing"},"content":"            // convert the line read into a task"},{"lineNumber":87,"author":{"gitId":"ureshiiYing"},"content":"            try {"},{"lineNumber":88,"author":{"gitId":"ureshiiYing"},"content":"                tasks.add(convertToTask(task));"},{"lineNumber":89,"author":{"gitId":"ureshiiYing"},"content":"            } catch (PandaBotException e) {"},{"lineNumber":90,"author":{"gitId":"ureshiiYing"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":91,"author":{"gitId":"ureshiiYing"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":95,"author":{"gitId":"ureshiiYing"},"content":"    private Task convertToTask(String input) throws PandaBotException {"},{"lineNumber":96,"author":{"gitId":"ureshiiYing"},"content":"        String[] taskDetails \u003d input.split(\" \\\\| \");"},{"lineNumber":97,"author":{"gitId":"ureshiiYing"},"content":"        Task task;"},{"lineNumber":98,"author":{"gitId":"ureshiiYing"},"content":"        try {"},{"lineNumber":99,"author":{"gitId":"ureshiiYing"},"content":"            switch (taskDetails[0]) {"},{"lineNumber":100,"author":{"gitId":"ureshiiYing"},"content":"            case \"T\":"},{"lineNumber":101,"author":{"gitId":"ureshiiYing"},"content":"                task \u003d new ToDo(taskDetails[2]);"},{"lineNumber":102,"author":{"gitId":"ureshiiYing"},"content":"                break;"},{"lineNumber":103,"author":{"gitId":"ureshiiYing"},"content":"            case \"D\":"},{"lineNumber":104,"author":{"gitId":"ureshiiYing"},"content":"                task \u003d new Deadline(taskDetails[2], taskDetails[3]);"},{"lineNumber":105,"author":{"gitId":"ureshiiYing"},"content":"                break;"},{"lineNumber":106,"author":{"gitId":"ureshiiYing"},"content":"            case \"E\":"},{"lineNumber":107,"author":{"gitId":"ureshiiYing"},"content":"                task \u003d new Event(taskDetails[2], taskDetails[3]);"},{"lineNumber":108,"author":{"gitId":"ureshiiYing"},"content":"                break;"},{"lineNumber":109,"author":{"gitId":"ureshiiYing"},"content":"            case \"A\":"},{"lineNumber":110,"author":{"gitId":"ureshiiYing"},"content":"                task \u003d new DoAfter(taskDetails[2], taskDetails[3]);"},{"lineNumber":111,"author":{"gitId":"ureshiiYing"},"content":"                break;"},{"lineNumber":112,"author":{"gitId":"ureshiiYing"},"content":"            default:"},{"lineNumber":113,"author":{"gitId":"ureshiiYing"},"content":"                throw new PandaBotLoadingTasksErrorException(input);"},{"lineNumber":114,"author":{"gitId":"ureshiiYing"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"ureshiiYing"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":116,"author":{"gitId":"ureshiiYing"},"content":"            throw new PandaBotLoadingTasksErrorException(input);"},{"lineNumber":117,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":119,"author":{"gitId":"ureshiiYing"},"content":"        String isDone \u003d taskDetails[1];"},{"lineNumber":120,"author":{"gitId":"ureshiiYing"},"content":"        if (isDone.equals(\"1\")) {"},{"lineNumber":121,"author":{"gitId":"ureshiiYing"},"content":"            task.markTaskDone();"},{"lineNumber":122,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":124,"author":{"gitId":"ureshiiYing"},"content":"        return task;"},{"lineNumber":125,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":127,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"ureshiiYing"},"content":"     * Writes each task in the list of tasks into the save file."},{"lineNumber":129,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"ureshiiYing"},"content":"     * @param tasks the ArrayList of tasks to be written and saved"},{"lineNumber":131,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"ureshiiYing"},"content":"    public void write(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":133,"author":{"gitId":"ureshiiYing"},"content":"        try {"},{"lineNumber":134,"author":{"gitId":"ureshiiYing"},"content":"            BufferedWriter writer \u003d Files.newBufferedWriter(saveFilePath);"},{"lineNumber":135,"author":{"gitId":"ureshiiYing"},"content":"            for (Task t : tasks) {"},{"lineNumber":136,"author":{"gitId":"ureshiiYing"},"content":"                writer.write(t.saveAsText());"},{"lineNumber":137,"author":{"gitId":"ureshiiYing"},"content":"                writer.newLine();"},{"lineNumber":138,"author":{"gitId":"ureshiiYing"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"ureshiiYing"},"content":"            writer.flush();"},{"lineNumber":140,"author":{"gitId":"ureshiiYing"},"content":"            writer.close();"},{"lineNumber":141,"author":{"gitId":"ureshiiYing"},"content":"        } catch (IOException e) {"},{"lineNumber":142,"author":{"gitId":"ureshiiYing"},"content":"            System.out.println(\"OOPS! :c There is an error in trying to write to the save file.\""},{"lineNumber":143,"author":{"gitId":"ureshiiYing"},"content":"                                + \"I couldn\u0027t save the entire list of tasks here.\");"},{"lineNumber":144,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":147,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":147}},{"path":"src/main/java/pandabot/tasks/DateAndTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.tasks;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":" * Allows PandaBot to understand date and time in the format of dd/mm/yyyy hhmm"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"public class DateAndTime {"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"    private final LocalDateTime dateAndTime;"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a DateAndTime object by taking in an input"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"     * of the format dd/mm/yyyy hhmm."},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     * @param dateAndTime the given input"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"     * @throws DateTimeParseException if the given input is not in the accepted format"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"    public DateAndTime (String dateAndTime) throws DateTimeParseException {"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"        this.dateAndTime \u003d LocalDateTime.parse(dateAndTime, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"    private String parseDate(LocalDateTime input) {"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"        // Day of Month Counter"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"        String ending;"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"        int day \u003d input.getDayOfMonth();"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"        switch (day % 10) {"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"        case 1:"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"            ending \u003d \"st\";"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"            break;"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"        case 2:"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"            ending \u003d \"nd\";"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"            break;"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"        case 3:"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"            ending \u003d \"rd\";"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"            break;"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"        default:"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"            ending \u003d \"th\";"},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"            break;"},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"        return day + ending + \" of \" + input.format(DateTimeFormatter.ofPattern(\"MMMM yyyy\"));"},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":45,"author":{"gitId":"ureshiiYing"},"content":"    private String parseTime(LocalDateTime input) {"},{"lineNumber":46,"author":{"gitId":"ureshiiYing"},"content":"        if (input.getMinute() \u003d\u003d 0) {"},{"lineNumber":47,"author":{"gitId":"ureshiiYing"},"content":"            return input.format(DateTimeFormatter.ofPattern(\"ha\"));"},{"lineNumber":48,"author":{"gitId":"ureshiiYing"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"ureshiiYing"},"content":"            return input.format(DateTimeFormatter.ofPattern(\"h.mma\"));"},{"lineNumber":50,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":53,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the DateAndTime object"},{"lineNumber":55,"author":{"gitId":"ureshiiYing"},"content":"     * in the format date of month year, hour.min AM/PM."},{"lineNumber":56,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the DateAndTime object"},{"lineNumber":58,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"ureshiiYing"},"content":"    public String toString() {"},{"lineNumber":61,"author":{"gitId":"ureshiiYing"},"content":"        return parseDate(dateAndTime) + \", \" + parseTime(dateAndTime);"},{"lineNumber":62,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":63}},{"path":"src/main/java/pandabot/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.tasks;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotException;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":" * The Deadline class represents a Deadline task which needs to be"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":" * done before a specific time."},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"public class Deadline extends TimedTask {"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a Deadline object."},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"     * It can accept both formatted and unformatted due dates."},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"     * Formatted due dates have to be in the format: dd/MM/yyyy HHmm"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     * @param description the description of the Deadline task"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     * @param dueBy the due date and time of the Deadline task"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"     * @throws PandaBotException If the description or due date given is empty"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"    public Deadline(String description, String dueBy) throws PandaBotException {"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"        super(description, dueBy);"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the task that is displayed to the user"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String Representation of the task that is displayed to the user"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + time + \")\";"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the task for saving to the save file"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the task for saving to the save file"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"    public String saveAsText() {"},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"        return \"D | \" + super.saveAsText() + \" | \" + time;"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":43}},{"path":"src/main/java/pandabot/tasks/DoAfter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.tasks;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotException;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":" * The DoAfter class represents a DoAfter task which needs to be"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":" * done after a specific time or task."},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"public class DoAfter extends TimedTask {"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a DoAfter object."},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"     * It can accept both formatted and unformatted times."},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"     * Formatted time have to be in the format: dd/MM/yyyy HHmm"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     * @param description the description of the DoAfter task"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     * @param after the time or task that the DoAfter task has to be done after"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"     * @throws PandaBotException if the description or time given is empty"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"    public DoAfter(String description, String after) throws PandaBotException {"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"        super(description, after);"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the task that is displayed to the user"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String Representation of the task that is displayed to the user"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"        return \"[A]\" + super.toString() + \" (after: \" + time + \")\";"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the task for saving to the save file"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the task for saving to the save file"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"    public String saveAsText() {"},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"        return \"A | \" + super.saveAsText() + \" | \" + time;"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":43}},{"path":"src/main/java/pandabot/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.tasks;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotException;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":" * Represents an event which is a type of task that starts at a specific time"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":" * and ends at a specific time"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"public class Event extends TimedTask {"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"     * Creates an Event object."},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"     * It can accept both formatted and unformatted times."},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"     * Formatted time have to be in the format: dd/MM/yyyy HHmm"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     * @param description the description of the Event task"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     * @param duration the duration of the Event task"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"     * @throws PandaBotException If description or duration given is empty"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"    public Event(String description, String duration) throws PandaBotException {"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"        super(description, duration);"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the task that is displayed to the user"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String Representation of the task that is displayed to the user"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the task for saving to the save file"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the task for saving to the save file"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"    public String saveAsText() {"},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"        return \"E | \" + super.saveAsText() + \" | \" + time;"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":43}},{"path":"src/main/java/pandabot/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.tasks;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotEmptyTaskDescriptionException;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":" * Represents a Task, which is an abstract class that can be used to represent"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":" * different types of tasks."},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"public abstract class Task {"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"    protected String description;"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"    protected boolean isDone;"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a Task object with the given description."},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     * @param description the description of the task"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     * @throws PandaBotEmptyTaskDescriptionException If the description given is empty"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"    public Task(String description) throws PandaBotEmptyTaskDescriptionException {"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"        this.description \u003d description.strip();"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"        if (this.description.length() \u003d\u003d 0) {"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"            throw new PandaBotEmptyTaskDescriptionException(this.getClass().getSimpleName());"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"        isDone \u003d false;"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String that represents a status icon"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"     * which marks whether the task is done"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String that represents a status icon which marks whether the task is done"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"    public String getStatusIcon() {"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the task description."},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the task description"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":"    public String getDescription() {"},{"lineNumber":44,"author":{"gitId":"ureshiiYing"},"content":"        return description;"},{"lineNumber":45,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":47,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the task that is displayed to the user"},{"lineNumber":49,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String Representation of the task that is displayed to the user"},{"lineNumber":51,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"ureshiiYing"},"content":"    public String toString() {"},{"lineNumber":54,"author":{"gitId":"ureshiiYing"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);"},{"lineNumber":55,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":57,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the task for saving to the save file"},{"lineNumber":59,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the task for saving to the save file"},{"lineNumber":61,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"ureshiiYing"},"content":"    public String saveAsText() {"},{"lineNumber":63,"author":{"gitId":"ureshiiYing"},"content":"        return String.format(\"%d | %s\", (isDone ? 1 : 0), description);"},{"lineNumber":64,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":66,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"ureshiiYing"},"content":"     * Marks the task as done."},{"lineNumber":68,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"ureshiiYing"},"content":"    public void markTaskDone() {"},{"lineNumber":70,"author":{"gitId":"ureshiiYing"},"content":"        isDone \u003d true;"},{"lineNumber":71,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":72}},{"path":"src/main/java/pandabot/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.tasks;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotOutOfRangeException;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":" *  Represents Tasks in a TaskList object and stores the various Tasks in a TaskList."},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a TaskList object that stores the tasks."},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     * @param taskList an ArrayList of tasks to be stored"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"     * Returns the list of tasks stored."},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"     * @return an ArrayList of tasks stored"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"        return taskList;"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"     * Returns the task in the list based on the index given."},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"     * @param index the index of the task in the list of tasks"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"     * @return the task requested"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"     * @throws PandaBotOutOfRangeException If the index given is negative or"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"     * greater than the number of tasks stored"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"    public Task getTaskAt(int index) throws PandaBotOutOfRangeException {"},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"            return taskList.get(index);"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":"            throw new PandaBotOutOfRangeException();"},{"lineNumber":44,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":47,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"ureshiiYing"},"content":"     * Returns the number of tasks in the list."},{"lineNumber":49,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"ureshiiYing"},"content":"     * @return the number of tasks in the list"},{"lineNumber":51,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"ureshiiYing"},"content":"    public int size() {"},{"lineNumber":53,"author":{"gitId":"ureshiiYing"},"content":"        return taskList.size();"},{"lineNumber":54,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":56,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"ureshiiYing"},"content":"     * Deletes the task from the list at the given index."},{"lineNumber":58,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"ureshiiYing"},"content":"     * @param index the index of the task in the list of tasks"},{"lineNumber":60,"author":{"gitId":"ureshiiYing"},"content":"     * @throws PandaBotOutOfRangeException If the index given is negative or"},{"lineNumber":61,"author":{"gitId":"ureshiiYing"},"content":"     * greater than the number of tasks stored"},{"lineNumber":62,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"ureshiiYing"},"content":"    public void deleteTask(int index) throws PandaBotOutOfRangeException {"},{"lineNumber":64,"author":{"gitId":"ureshiiYing"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"ureshiiYing"},"content":"            int originalSize \u003d taskList.size();"},{"lineNumber":66,"author":{"gitId":"ureshiiYing"},"content":"            taskList.remove(index);"},{"lineNumber":67,"author":{"gitId":"ureshiiYing"},"content":"            assert taskList.size() \u003c originalSize : \"Failed to delete task.\";"},{"lineNumber":68,"author":{"gitId":"ureshiiYing"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":69,"author":{"gitId":"ureshiiYing"},"content":"            throw new PandaBotOutOfRangeException();"},{"lineNumber":70,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":73,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"ureshiiYing"},"content":"     * Adds a task to the list"},{"lineNumber":75,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"ureshiiYing"},"content":"     * @param task the task to be added"},{"lineNumber":77,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"ureshiiYing"},"content":"    public void addTask(Task task) {"},{"lineNumber":79,"author":{"gitId":"ureshiiYing"},"content":"        int originalSize \u003d taskList.size();"},{"lineNumber":80,"author":{"gitId":"ureshiiYing"},"content":"        taskList.add(task);"},{"lineNumber":81,"author":{"gitId":"ureshiiYing"},"content":"        assert taskList.size() \u003e originalSize : \"Failed to add task.\";"},{"lineNumber":82,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":84,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"ureshiiYing"},"content":"     * Finds the tasks among the list of tasks, where their descriptions"},{"lineNumber":86,"author":{"gitId":"ureshiiYing"},"content":"     * contains the given input keyword."},{"lineNumber":87,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"ureshiiYing"},"content":"     * @param keyword the word used in the search for tasks with matching descriptions"},{"lineNumber":89,"author":{"gitId":"ureshiiYing"},"content":"     * @return a TaskList containing the list of tasks with matching descriptions"},{"lineNumber":90,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"ureshiiYing"},"content":"    public TaskList findTask(String keyword) {"},{"lineNumber":92,"author":{"gitId":"ureshiiYing"},"content":"        assert keyword.length() \u003e 0 : \"The keyword to search for should not be empty.\";"},{"lineNumber":93,"author":{"gitId":"ureshiiYing"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":94,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":95,"author":{"gitId":"ureshiiYing"},"content":"        for (Task t : taskList) {"},{"lineNumber":96,"author":{"gitId":"ureshiiYing"},"content":"            if (t.getDescription().contains(keyword)) {"},{"lineNumber":97,"author":{"gitId":"ureshiiYing"},"content":"                matchingTasks.add(t);"},{"lineNumber":98,"author":{"gitId":"ureshiiYing"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":101,"author":{"gitId":"ureshiiYing"},"content":"        return new TaskList(matchingTasks);"},{"lineNumber":102,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":104,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the current list of tasks."},{"lineNumber":106,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the current list of tasks"},{"lineNumber":108,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":110,"author":{"gitId":"ureshiiYing"},"content":"    public String toString() {"},{"lineNumber":111,"author":{"gitId":"ureshiiYing"},"content":"        StringBuilder result \u003d new StringBuilder();"},{"lineNumber":112,"author":{"gitId":"ureshiiYing"},"content":"        int i \u003d 0;"},{"lineNumber":113,"author":{"gitId":"ureshiiYing"},"content":"        for (Task t : taskList) {"},{"lineNumber":114,"author":{"gitId":"ureshiiYing"},"content":"            result.append(i + 1).append(\". \").append(t.toString()).append(\"\\n\");"},{"lineNumber":115,"author":{"gitId":"ureshiiYing"},"content":"            i++;"},{"lineNumber":116,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":118,"author":{"gitId":"ureshiiYing"},"content":"        return result.toString();"},{"lineNumber":119,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":120}},{"path":"src/main/java/pandabot/tasks/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.tasks;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotException;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotInsufficientArgumentException;"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":" * Represents a TimedTask, which is an abstract class that can be used to"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":" * represent tasks which are time-based."},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"public abstract class TimedTask extends Task {"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"    protected String time;"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a TimedTask object with the given description and time."},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     * It can accept both formatted and unformatted times."},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"     * Formatted time have to be in the format: dd/MM/yyyy HHmm"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"     * @param description the given task description"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"     * @param inputTime the given task time"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"     * @throws PandaBotException if description or inputTime is empty"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"    public TimedTask(String description, String inputTime) throws PandaBotException {"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"        super(description);"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"        String time \u003d inputTime.strip();"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"        if (time.length() \u003d\u003d 0) {"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"            throw new PandaBotInsufficientArgumentException();"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"        // check if a formatted date and time is given"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"            DateAndTime dateTime \u003d new DateAndTime(time);"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"            this.time \u003d dateTime.toString();"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"            // if the input couldn\u0027t be parsed, the input is an unformatted dueBy"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"            this.time \u003d inputTime;"},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":42}},{"path":"src/main/java/pandabot/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.tasks;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotEmptyTaskDescriptionException;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":" * Represents a ToDo task, which is a type of task without any date or time attached to it"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"public class ToDo extends Task {"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a ToDo object."},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"     * @param description the description of the ToDo task"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"     * @throws PandaBotEmptyTaskDescriptionException If the description given is empty"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"    public ToDo(String description) throws PandaBotEmptyTaskDescriptionException {"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the task that is displayed to the user"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String Representation of the task that is displayed to the user"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the task for saving to the save file"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the task for saving to the save file"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"    public String saveAsText() {"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"        return \"T | \" + super.saveAsText();"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":39}},{"path":"src/main/java/pandabot/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"package pandabot.ui;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":" *  Represents the user interface which is responsible for generating and printing the"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":" *  messages that is used to interact with the user."},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":" */"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"public class Ui {"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"    private final Scanner scanner;"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"     * Creates a Ui object."},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"    public Ui () {"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"        scanner \u003d new Scanner(System.in);"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"     * Prints the welcome message."},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"    public void printWelcome() {"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"        String logo \u003d \" ____                    _\\n\""},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"                        + \"|  _ \\\\                  | |\\n\""},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"                        + \"| |_| |___  _ _  __  ___| | ___  _\\n\""},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"                        + \"| ___/  _ \\\\| | |/  |/ _   |/ _ \\\\| |\\n\""},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"                        + \"| |  | |_|   |  _  | |_|  | |_|   |\\n\""},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"                        + \"|_|  \\\\____,__|_| |_|\\\\___,_|\\\\___,__|\" + \" bot\\n\\n\";"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"        System.out.println(logo + displayWelcomeMessage());"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the welcome message."},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the welcome message."},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"    public String displayWelcomeMessage() {"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"        return \"Hello! I\u0027m PandaBot.\\n What can I do for you?\\n\""},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":"            + \"To start, you can enter \u0027help\u0027 to bring up the help page.\\n\";"},{"lineNumber":44,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":46,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"ureshiiYing"},"content":"     * Prints a horizontal line."},{"lineNumber":48,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"ureshiiYing"},"content":"    public void printHorizontalLine() {"},{"lineNumber":50,"author":{"gitId":"ureshiiYing"},"content":"        System.out.println(\" ___________________________________________________\");"},{"lineNumber":51,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":53,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the user input."},{"lineNumber":55,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the user input"},{"lineNumber":57,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"ureshiiYing"},"content":"    public String readCmd() {"},{"lineNumber":59,"author":{"gitId":"ureshiiYing"},"content":"        return scanner.nextLine();"},{"lineNumber":60,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":62,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"ureshiiYing"},"content":"     * Prints a message."},{"lineNumber":64,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"ureshiiYing"},"content":"     * @param message the message to be printed"},{"lineNumber":66,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"ureshiiYing"},"content":"    public void printMessage(String message) {"},{"lineNumber":68,"author":{"gitId":"ureshiiYing"},"content":"        System.out.println(message);"},{"lineNumber":69,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":71,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the bye message."},{"lineNumber":73,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the bye message"},{"lineNumber":75,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"ureshiiYing"},"content":"    public String displayOnExit() {"},{"lineNumber":77,"author":{"gitId":"ureshiiYing"},"content":"        scanner.close();"},{"lineNumber":78,"author":{"gitId":"ureshiiYing"},"content":"        return \"Bye! Remember to finish the rest of your work! See you soon~\";"},{"lineNumber":79,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":81,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the list tasks message."},{"lineNumber":83,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"ureshiiYing"},"content":"     * @param tasks the TaskList to be printed"},{"lineNumber":85,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the list tasks message"},{"lineNumber":86,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"ureshiiYing"},"content":"    public String displayOnList(TaskList tasks) {"},{"lineNumber":88,"author":{"gitId":"ureshiiYing"},"content":"        int len \u003d tasks.size();"},{"lineNumber":89,"author":{"gitId":"ureshiiYing"},"content":"        if (len \u003d\u003d 0) {"},{"lineNumber":90,"author":{"gitId":"ureshiiYing"},"content":"            return \"WOOTS! You don\u0027t have any tasks to do at the moment.\";"},{"lineNumber":91,"author":{"gitId":"ureshiiYing"},"content":"        } else {"},{"lineNumber":92,"author":{"gitId":"ureshiiYing"},"content":"            return \"These are the task(s) you have:\\n\" + tasks.toString();"},{"lineNumber":93,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":96,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the done message."},{"lineNumber":98,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"ureshiiYing"},"content":"     * @param task the task that is done"},{"lineNumber":100,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the done message"},{"lineNumber":101,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"ureshiiYing"},"content":"    public String displayOnDone(Task task) {"},{"lineNumber":103,"author":{"gitId":"ureshiiYing"},"content":"        return \"Great! I\u0027ve marked this task as done:\\n\" + task;"},{"lineNumber":104,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":106,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the delete message."},{"lineNumber":108,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"ureshiiYing"},"content":"     * @param task the Task to be deleted"},{"lineNumber":110,"author":{"gitId":"ureshiiYing"},"content":"     * @param numOfTasks the number of tasks in the list"},{"lineNumber":111,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the delete message"},{"lineNumber":112,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"ureshiiYing"},"content":"    public String displayOnDelete(Task task, int numOfTasks) {"},{"lineNumber":114,"author":{"gitId":"ureshiiYing"},"content":"        return \"Will do! I\u0027ve removed this task:\\n\" + task + \"\\n\""},{"lineNumber":115,"author":{"gitId":"ureshiiYing"},"content":"                + \"Now you have \" + numOfTasks + \" task(s) in this list.\";"},{"lineNumber":116,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":118,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the add task message."},{"lineNumber":120,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":121,"author":{"gitId":"ureshiiYing"},"content":"     * @param task the Task to be printed"},{"lineNumber":122,"author":{"gitId":"ureshiiYing"},"content":"     * @param numOfTasks the number of tasks in the list"},{"lineNumber":123,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the add task message"},{"lineNumber":124,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"ureshiiYing"},"content":"    public String displayOnAdd(Task task, int numOfTasks) {"},{"lineNumber":126,"author":{"gitId":"ureshiiYing"},"content":"        return \"Noted! I\u0027ve added this task:\\n\" + task.toString() + \"\\n\""},{"lineNumber":127,"author":{"gitId":"ureshiiYing"},"content":"                + \"Now you have \" + numOfTasks + \" task(s) in this list.\";"},{"lineNumber":128,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":130,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the list of tasks with matching description."},{"lineNumber":132,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":133,"author":{"gitId":"ureshiiYing"},"content":"     * @param tasks the TaskList which contains the tasks with matching description."},{"lineNumber":134,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the list of tasks with matching description"},{"lineNumber":135,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":136,"author":{"gitId":"ureshiiYing"},"content":"    public String displayOnFind(TaskList tasks) {"},{"lineNumber":137,"author":{"gitId":"ureshiiYing"},"content":"        return \"Here are the matching tasks I found:\\n\" + tasks.toString();"},{"lineNumber":138,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":140,"author":{"gitId":"ureshiiYing"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"ureshiiYing"},"content":"     * Returns a String representation of the help page, which contains"},{"lineNumber":142,"author":{"gitId":"ureshiiYing"},"content":"     * a list of commands that users can use."},{"lineNumber":143,"author":{"gitId":"ureshiiYing"},"content":"     *"},{"lineNumber":144,"author":{"gitId":"ureshiiYing"},"content":"     * @return a String representation of the help page."},{"lineNumber":145,"author":{"gitId":"ureshiiYing"},"content":"     */"},{"lineNumber":146,"author":{"gitId":"ureshiiYing"},"content":"    public String displayOnHelp() {"},{"lineNumber":147,"author":{"gitId":"ureshiiYing"},"content":"        String helpMsg \u003d \"PandaBot is here to help you~~\\n\""},{"lineNumber":148,"author":{"gitId":"ureshiiYing"},"content":"                        + \"\\u27A4 \u0027bye\u0027 - exits the app\\n\""},{"lineNumber":149,"author":{"gitId":"ureshiiYing"},"content":"                        + \"\\u27A4 \u0027list\u0027 - to list all the tasks you have now\\n\""},{"lineNumber":150,"author":{"gitId":"ureshiiYing"},"content":"                        + \"\\u27A4 \u0027help\u0027 - brings you to this help page\\n\""},{"lineNumber":151,"author":{"gitId":"ureshiiYing"},"content":"                        + \"\\u27A4 \u0027delete x\u0027 - to delete a task, numbered x\\n\""},{"lineNumber":152,"author":{"gitId":"ureshiiYing"},"content":"                        + \"\\u27A4 \u0027done x\u0027 - to mark a task, numbered x, as done\\n\""},{"lineNumber":153,"author":{"gitId":"ureshiiYing"},"content":"                        + \"\\u27A4 \u0027deadline \u003cdescription\u003e /by \u003ctime\u003e\u0027 - to add a deadline task\\n\""},{"lineNumber":154,"author":{"gitId":"ureshiiYing"},"content":"                        + \"\\u27A4 \u0027do \u003cdescription\u003e /after \u003ctime or task\u003e\u0027 - to add a \u0027do after\u0027 task\\n\""},{"lineNumber":155,"author":{"gitId":"ureshiiYing"},"content":"                        + \"\\u27A4 \u0027event \u003cdescription\u003e /at \u003ctime\u003e\u0027 - to add an event task\\n\""},{"lineNumber":156,"author":{"gitId":"ureshiiYing"},"content":"                        + \"\\u27A4 \u0027todo \u003cdescription\u003e\u0027 - to add a todo task\\n\""},{"lineNumber":157,"author":{"gitId":"ureshiiYing"},"content":"                        + \"\\u27A4 \u0027find \u003ckeyword\u003e\u0027 - lists all the tasks with description that contains the keyword\\n\""},{"lineNumber":158,"author":{"gitId":"ureshiiYing"},"content":"                        + \"Time should be formatted like this: dd/MM/yyyy HHmm\";"},{"lineNumber":159,"author":{"gitId":"ureshiiYing"},"content":"        return helpMsg;"},{"lineNumber":160,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":161}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"\u003c?import javafx.geometry.Rectangle2D?\u003e"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\""},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"         minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\""},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"         xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"    \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"        \u003cLabel fx:id\u003d\"dialog\" contentDisplay\u003d\"CENTER\" styleClass\u003d\"label-text\" stylesheets\u003d\"@stylesheet.css\""},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"               text\u003d\"Label\" textOverrun\u003d\"LEADING_WORD_ELLIPSIS\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"         \u003cviewport\u003e"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"            \u003cRectangle2D /\u003e"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"         \u003c/viewport\u003e\u003c/ImageView\u003e"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"    \u003c/children\u003e"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"    \u003cpadding\u003e"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    \u003c/padding\u003e"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"ureshiiYing":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"            prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"            fx:controller\u003d\"pandabot.pandabot.MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"    \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"7.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\""},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"                   prefWidth\u003d\"396.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"7.0\""},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"                   AnchorPane.rightAnchor\u003d\"97.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"410.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" styleClass\u003d\"send-button\" stylesheets\u003d\"@stylesheet.css\" text\u003d\"Send\""},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"14.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"-3.0\" prefHeight\u003d\"560.0\""},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"                    prefWidth\u003d\"500.0\" styleClass\u003d\"viewport\" stylesheets\u003d\"@stylesheet.css\" vvalue\u003d\"1.0\""},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"                    AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\""},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"                    AnchorPane.topAnchor\u003d\"-3.0\"\u003e"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"            \u003ccontent\u003e"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"${scrollPane.width}\" /\u003e"},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"            \u003c/content\u003e"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"    \u003c/children\u003e"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"ureshiiYing":28}},{"path":"src/test/java/DateAndTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.DateAndTime;"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"public class DateAndTimeTest {"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"    public void dateTime_passedInCorrectInputFormat_correctStringFormat() {"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"        //set up"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"        DateAndTime dT \u003d new DateAndTime(\"26/08/2020 2359\");"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"        String dTStr \u003d dT.toString();"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"        assertEquals(\"26th of August 2020, 11.59PM\", dTStr);"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"    public void dateTime_passedInIncorrectInputFormat_exceptionThrown() {"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":"        Exception exception \u003d assertThrows(DateTimeParseException.class, () -\u003e new DateAndTime("},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"                \"26-08-2020 2300\"));"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"        String expected \u003d \"Text \u002726-08-2020 2300\u0027 could not be parsed at index 2\";"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"        String actual \u003d exception.getMessage();"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"        assertTrue(actual.contains(expected));"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":32}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;"},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotEmptyTaskDescriptionException;"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.exceptions.PandaBotOutOfRangeException;"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.Task;"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.TaskList;"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"import pandabot.tasks.ToDo;"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"public class TaskListTest {"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"    public void addTask_addThreeTasks_successful() {"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"        //set up"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"ureshiiYing"},"content":"            Task a \u003d new ToDo(\"a\");"},{"lineNumber":22,"author":{"gitId":"ureshiiYing"},"content":"            Task b \u003d new ToDo(\"b\");"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"            Task c \u003d new ToDo(\"c\");"},{"lineNumber":24,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":25,"author":{"gitId":"ureshiiYing"},"content":"            //add"},{"lineNumber":26,"author":{"gitId":"ureshiiYing"},"content":"            tasks.addTask(a);"},{"lineNumber":27,"author":{"gitId":"ureshiiYing"},"content":"            tasks.addTask(b);"},{"lineNumber":28,"author":{"gitId":"ureshiiYing"},"content":"            tasks.addTask(c);"},{"lineNumber":29,"author":{"gitId":"ureshiiYing"},"content":"        } catch (PandaBotEmptyTaskDescriptionException e) {"},{"lineNumber":30,"author":{"gitId":"ureshiiYing"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":31,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":33,"author":{"gitId":"ureshiiYing"},"content":"        //test"},{"lineNumber":34,"author":{"gitId":"ureshiiYing"},"content":"        assertEquals(3, tasks.size());"},{"lineNumber":35,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":37,"author":{"gitId":"ureshiiYing"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"ureshiiYing"},"content":"    public void deleteAndAddTask_deleteTwoTasksThenAddOneTask_successful() {"},{"lineNumber":39,"author":{"gitId":"ureshiiYing"},"content":"        //set up"},{"lineNumber":40,"author":{"gitId":"ureshiiYing"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":41,"author":{"gitId":"ureshiiYing"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"ureshiiYing"},"content":"            Task a \u003d new ToDo(\"a\");"},{"lineNumber":43,"author":{"gitId":"ureshiiYing"},"content":"            Task b \u003d new ToDo(\"b\");"},{"lineNumber":44,"author":{"gitId":"ureshiiYing"},"content":"            Task c \u003d new ToDo(\"c\");"},{"lineNumber":45,"author":{"gitId":"ureshiiYing"},"content":"            tasks.addTask(a);"},{"lineNumber":46,"author":{"gitId":"ureshiiYing"},"content":"            tasks.addTask(b);"},{"lineNumber":47,"author":{"gitId":"ureshiiYing"},"content":"            tasks.addTask(c);"},{"lineNumber":48,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":49,"author":{"gitId":"ureshiiYing"},"content":"            //delete and add"},{"lineNumber":50,"author":{"gitId":"ureshiiYing"},"content":"            tasks.deleteTask(0);"},{"lineNumber":51,"author":{"gitId":"ureshiiYing"},"content":"            tasks.deleteTask(1);"},{"lineNumber":52,"author":{"gitId":"ureshiiYing"},"content":"            tasks.addTask(new ToDo(\"d\"));"},{"lineNumber":53,"author":{"gitId":"ureshiiYing"},"content":"        } catch (PandaBotEmptyTaskDescriptionException | PandaBotOutOfRangeException e) {"},{"lineNumber":54,"author":{"gitId":"ureshiiYing"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":55,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":57,"author":{"gitId":"ureshiiYing"},"content":"        //test"},{"lineNumber":58,"author":{"gitId":"ureshiiYing"},"content":"        assertEquals(2, tasks.size());"},{"lineNumber":59,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":61,"author":{"gitId":"ureshiiYing"},"content":"    @Test"},{"lineNumber":62,"author":{"gitId":"ureshiiYing"},"content":"    public void deleteTask_taskOutOfRange_exceptionThrownAndNotDeleted() {"},{"lineNumber":63,"author":{"gitId":"ureshiiYing"},"content":"        //set up"},{"lineNumber":64,"author":{"gitId":"ureshiiYing"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":65,"author":{"gitId":"ureshiiYing"},"content":"        try {"},{"lineNumber":66,"author":{"gitId":"ureshiiYing"},"content":"            Task a \u003d new ToDo(\"a\");"},{"lineNumber":67,"author":{"gitId":"ureshiiYing"},"content":"            Task b \u003d new ToDo(\"b\");"},{"lineNumber":68,"author":{"gitId":"ureshiiYing"},"content":"            tasks.addTask(a);"},{"lineNumber":69,"author":{"gitId":"ureshiiYing"},"content":"            tasks.addTask(b);"},{"lineNumber":70,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":71,"author":{"gitId":"ureshiiYing"},"content":"            //delete"},{"lineNumber":72,"author":{"gitId":"ureshiiYing"},"content":"            tasks.deleteTask(4);"},{"lineNumber":73,"author":{"gitId":"ureshiiYing"},"content":"        } catch (PandaBotEmptyTaskDescriptionException | PandaBotOutOfRangeException e) {"},{"lineNumber":74,"author":{"gitId":"ureshiiYing"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":75,"author":{"gitId":"ureshiiYing"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":77,"author":{"gitId":"ureshiiYing"},"content":"        //test"},{"lineNumber":78,"author":{"gitId":"ureshiiYing"},"content":"        assertNotEquals(1, tasks.size());"},{"lineNumber":79,"author":{"gitId":"ureshiiYing"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"ureshiiYing"},"content":"}"}],"authorContributionMap":{"ureshiiYing":80}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ureshiiYing"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"ureshiiYing"},"content":"todo return book"},{"lineNumber":3,"author":{"gitId":"ureshiiYing"},"content":"todo"},{"lineNumber":4,"author":{"gitId":"ureshiiYing"},"content":"deadline cs2103t /by 26/08/2020 2359"},{"lineNumber":5,"author":{"gitId":"ureshiiYing"},"content":"todo buy bread"},{"lineNumber":6,"author":{"gitId":"ureshiiYing"},"content":"event project meeting /at sun 4pm"},{"lineNumber":7,"author":{"gitId":"ureshiiYing"},"content":"list"},{"lineNumber":8,"author":{"gitId":"ureshiiYing"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"done 7"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":"done 2"},{"lineNumber":11,"author":{"gitId":"ureshiiYing"},"content":"list"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"event /at today"},{"lineNumber":13,"author":{"gitId":"ureshiiYing"},"content":"deadline today"},{"lineNumber":14,"author":{"gitId":"ureshiiYing"},"content":"delete 2"},{"lineNumber":15,"author":{"gitId":"ureshiiYing"},"content":"list"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"delete 3"},{"lineNumber":17,"author":{"gitId":"ureshiiYing"},"content":"list"},{"lineNumber":18,"author":{"gitId":"ureshiiYing"},"content":"bbye"},{"lineNumber":19,"author":{"gitId":"ureshiiYing"},"content":"bye"}],"authorContributionMap":{"ureshiiYing":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"ureshiiYing"},"content":"set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"},{"lineNumber":10,"author":{"gitId":"ureshiiYing"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":12,"author":{"gitId":"ureshiiYing"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":16,"author":{"gitId":"-"},"content":")"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"ureshiiYing"},"content":"java -classpath ..\\bin PandaBot \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"ureshiiYing":4,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"ureshiiYing"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/PandaBot.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"ureshiiYing"},"content":"java -classpath ../bin PandaBot \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"ureshiiYing":2,"-":36}}]
