[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super (description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String formattedDate \u003d by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return String.format(\"D|%s|%s|%s\", super.isDone, super.description, this.by);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 27
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/DukeDB.txt\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String welcome \u003d \"Hello. I am Claude! What may I do for you today?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String goodbye \u003d \"Goodbye! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        TaskManager tm \u003d new TaskManager(FILE_PATH);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        System.out.println(welcome);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                    tm.parseCommand(command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        tm.saveToFile(FILE_PATH);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        System.out.println(goodbye);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 26,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String formattedDate \u003d at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return String.format(\"E|%s|%s|%s\", super.isDone, super.description, this.at);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 27
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public  String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return String.format(\"X|%s|%s\", this.isDone, this.description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 31
    }
  },
  {
    "path": "src/main/java/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public TaskManager(String filePath) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            loadFromFile(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            File dukeDb \u003d new File(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            dukeDb.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            dukeDb.createNewFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void parseCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        if (command.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            printList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } else if (command.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            String[] temp \u003d command.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            int doneIndex \u003d Integer.parseInt(temp[1]) - 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            markTaskDone(doneIndex);;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } else if (command.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            String[] temp \u003d command.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            int delIndex \u003d Integer.parseInt(temp[1]) - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            deleteTask(delIndex);;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            if (command.length() \u003c\u003d 9){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                throw new DukeException(\"Sorry, the description of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            addNewDeadline(command.substring(9));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            if (command.length() \u003c\u003d 6){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                throw new DukeException(\"Sorry, the description of a event cannot be empty!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            addNewEvent(command.substring(6));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            if (command.length() \u003c\u003d 5){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            addNewTodo(command.substring(5));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            throw new DukeException(\"Command not recognised!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void addNewDeadline(String task) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String[] temp \u003d task.split(\" /by \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        if (temp.length \u003c 2) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            throw new DukeException(\"Deadline not properly formatted!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        LocalDate deadlineDate \u003d LocalDate.parse(temp[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Deadline deadline \u003d new Deadline(temp[0], deadlineDate);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        taskList.add(deadline);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        System.out.println(\"\\n Task added: \" + deadline);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void addNewEvent(String task) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String[] temp \u003d task.split(\" /at \");;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        if (temp.length \u003c 2) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            throw new DukeException(\"Event not properly formatted!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        LocalDate eventDate \u003d LocalDate.parse(temp[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Event event \u003d new Event(temp[0], eventDate);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        System.out.println(\"\\n Task added: \" + event);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void addNewTodo(String task) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        ToDo todo \u003d new ToDo(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        taskList.add(todo);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        System.out.println(\"\\n Task added: \" + todo);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void markTaskDone(int index) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Task completedTask \u003d taskList.get(index);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        completedTask.markAsDone();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        System.out.println(\"The following task has been marked as done: \\n\" + completedTask);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        Task toDeleteTask \u003d taskList.get(index);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        taskList.remove(toDeleteTask);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        System.out.println(\"The following task has been removed: \\n\" + toDeleteTask);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            System.out.println(\"List is empty!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            String s \u003d \"\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                s \u003d s + (i + 1) + \". \" + taskList.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            System.out.println(s);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void saveToFile(String filePath) throws IOException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        File dukeDb \u003d new File(filePath);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        if (!dukeDb.exists()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            dukeDb.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            dukeDb.createNewFile();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            writer.write(task.toDataString() + \"\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public void loadFromFile(String filePath) throws IOException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            String[] taskLine \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            switch (taskLine[0]) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                case(\"T\"):"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                    ToDo todo \u003d new ToDo(taskLine[2], Boolean.parseBoolean(taskLine[1]));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                    taskList.add(todo);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                case(\"D\"):"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                    LocalDate deadlineDate \u003d LocalDate.parse(taskLine[3]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                    Deadline deadline \u003d new Deadline(taskLine[2], Boolean.parseBoolean(taskLine[1]), deadlineDate);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                    taskList.add(deadline);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                case(\"E\"):"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                    LocalDate eventDate \u003d LocalDate.parse(taskLine[3]);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                    Event event \u003d new Event(taskLine[2], Boolean.parseBoolean(taskLine[1]), eventDate);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "danadi7"
        },
        "content": "                    taskList.add(event);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "danadi7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 142
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danadi7"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danadi7"
        },
        "content": "        return String.format(\"T|%s|%s\", super.isDone, super.description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danadi7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danadi7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danadi7": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danadi7"
        },
        "content": "todo eat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danadi7"
        },
        "content": "event drink /at 5pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danadi7"
        },
        "content": "deadline sleep /by 9pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danadi7"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danadi7"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danadi7"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danadi7"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danadi7"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danadi7"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "danadi7": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danadi7"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "danadi7": 1,
      "-": 20
    }
  }
]
