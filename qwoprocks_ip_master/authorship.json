[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "# Chatterbox project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "This is a project template for a greenfield Java project. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Chatterbox.java` file, right-click it, and choose `Run Chatterbox.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "   Hello I\u0027m Chatterbox. What can I do for you?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 4,
      "-": 17
    }
  },
  {
    "path": "src/main/java/Chatterbox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Chatterbox {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final String SEPARATOR \u003d \"++++++++++++++++++++++++++++++++++++++++++++++++++++++\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static final List\u003cTask\u003e ITEMS \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static String format(String s) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return SEPARATOR + \"\\n\" + s + \"\\n\" + SEPARATOR;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static void processInput(String input) throws ChatterboxException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (input.strip().equals(\"\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            throw new ChatterboxException(\"Input cannot be empty.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        String command \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            if (ITEMS.size() !\u003d 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                StringBuilder fullList \u003d new StringBuilder(\"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                for (int i \u003d 0; i \u003c ITEMS.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                    fullList.append(i + 1).append(\". \").append(ITEMS.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                System.out.println(format(fullList.toString()));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                System.out.println(format(\"Your list is currently empty.\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else if (command.equals(\"done\") || command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            int taskNo;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                taskNo \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                throw new ChatterboxException(\"Please enter a number after the command.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            if (taskNo \u003c 0 || taskNo \u003e\u003d ITEMS.size()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                throw new ChatterboxException(\"Invalid task number.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                Task t \u003d ITEMS.get(taskNo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                t.markDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                System.out.println(format(\"Nice! I\u0027ve marked this task as done: \\n\" + t));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                Task t \u003d ITEMS.remove(taskNo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                System.out.println(format(\"Noted! I\u0027ve removed this task from your list: \\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                        + t + \"\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                        + \" Now you have \" + ITEMS.size() + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else if (command.equals(\"deadline\") || command.equals(\"todo\") || command.equals(\"event\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            if (!input.contains(\" \") || input.substring(input.indexOf(\u0027 \u0027)).strip().equals(\"\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                throw new ChatterboxException(\"The description of a \" + command + \" cannot be empty\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            String contents \u003d input.substring(input.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                    ITEMS.add(new Deadline(contents));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                    ITEMS.add(new ToDo(contents));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                    ITEMS.add(new Event(contents));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            System.out.println(format(\"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                    + ITEMS.get(ITEMS.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                    + \"Now you have \" + ITEMS.size() + \" tasks in the list\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            throw new ChatterboxException(\"Invalid command.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        System.out.println(\"Hello I\u0027m Chatterbox. What can I do for you?\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        Scanner s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                processInput(input);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            } catch (ChatterboxException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "                System.out.println(format(\"☹ OOPS!!! \" + e));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "            input \u003d s.nextLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        System.out.println(format(\"Goodbye! Hope to see you again soon!\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 89,
      "-": 2
    }
  },
  {
    "path": "src/main/java/ChatterboxException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class ChatterboxException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final String msg;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public ChatterboxException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 12
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static String format(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        String[] split \u003d s.split(\"/\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return split[0] +  \"(\" + split[1].split(\" \")[0] + \":\" + split[1].substring(split[1].indexOf(\u0027 \u0027)) + \")\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public Deadline(String contents) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        super(Deadline.format(contents));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return \"[D]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private static String format(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        String[] split \u003d s.split(\"/\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return split[0] +  \"(\" + split[1].split(\" \")[0] + \":\" + split[1].substring(split[1].indexOf(\u0027 \u0027)) + \")\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public Event(String contents) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        super(Event.format(contents));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return \"[E]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private final String contents;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    private boolean done \u003d false;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public Task(String contents) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        this.contents \u003d contents;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return (done ? \"[✓]\" : \"[✗]\") + \" \" + contents;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 16
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public ToDo(String contents) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        super(contents);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qwoprocks"
        },
        "content": "java -classpath ..\\bin Chatterbox \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "qwoprocks": 2,
      "-": 19
    }
  }
]
