[
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 62
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Main class of duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Pathname of the local data file */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    final String PATH_NAME \u003d \"./data/duke_data.csv\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Storage */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Task list*/"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** User Interface using command line */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.storage \u003d new Storage(PATH_NAME);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.tasks \u003d storage.loadTasks();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Main method of Duke"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param args String arguments (not necessary)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        duke.runDukeOnCli();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Runs Duke on the command line"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void runDukeOnCli() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        ui.printHello();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        // Initialize scanner to receive user inputs"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            String[] outputStrings \u003d command.execute(storage, tasks, ui);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            ui.print(outputStrings);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            // Exit command exits the program"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            if (command instanceof ExitCommand) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    String getStartupMessage() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d ui.getHelloStrings();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        StringBuilder output;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (strings.length \u003e\u003d 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            output \u003d new StringBuilder(strings[0]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            for (int i \u003d 1; i \u003c strings.length; i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                output.append(\"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                output.append(strings[i]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return output.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return \"Hello!\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d command.execute(storage, tasks, ui);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        StringBuilder output;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (strings.length \u003e\u003d 1) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            output \u003d new StringBuilder(strings[0]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            for (int i \u003d 1; i \u003c strings.length; i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                output.append(\"\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                output.append(strings[i]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return output.toString();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return \"No response\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 102,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().handleStartUp();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 33
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.command.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private Stage stage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void setStage(Stage s) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        stage \u003d s;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    void exitStage() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            TimeUnit.SECONDS.sleep(1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } catch (InterruptedException ignored) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        stage.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    void handleStartUp() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String startupMessage \u003d duke.getStartupMessage();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(startupMessage, dukeImage));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        handleGeneralUserInput(input);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (command instanceof ExitCommand) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            exitStage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private void handleGeneralUserInput(String input) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        );"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 90
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.command.CompleteTaskCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.command.CreateDeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.command.CreateEventCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.command.CreateTodoCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.command.DeleteTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.command.InvalidInputCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.command.ListTasksCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates a parser to read user inputs in duke and determine the subsequent actions"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Symbol used to separate values in a date"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * \"-\" is used by LocalDate.toString()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private static String dateSeparator \u003d \"-\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Parses the given input from the user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param input Input from user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Command corresponding to the input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    static Command parse(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        // Parses initial input into prefix and body"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] parsedCommand \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String prefix \u003d parsedCommand[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String body \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (parsedCommand.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            body \u003d parsedCommand[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        // command determined by prefix"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        switch(prefix) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        case(\"bye\"):"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        case(\"deadline\"):"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                String[] parsedDeadline \u003d body.split(\" /by \", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                LocalDate date \u003d Parser.genDate(parsedDeadline[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                return new CreateDeadlineCommand(parsedDeadline[0], false, date);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            } catch (NullPointerException | NumberFormatException ignored) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                // return invalid command"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        case(\"delete\"):"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(body);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                return new DeleteTaskCommand(taskIndex - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            } catch (NumberFormatException ignored) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                // return invalid command"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        case(\"done\"):"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(body);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                return new CompleteTaskCommand(taskIndex - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            } catch (NumberFormatException ignored) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                // return invalid command"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        case(\"event\"):"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                String[] parsedEvent \u003d body.split(\" /at \", 2);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                LocalDate date \u003d Parser.genDate(parsedEvent[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                return new CreateEventCommand(parsedEvent[0], false, date);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            } catch (NullPointerException | NumberFormatException ignored) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                // return invalid command"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        case(\"find\"):"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return new FindCommand(body);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        case(\"list\"):"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return new ListTasksCommand();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        case(\"todo\"):"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return new CreateTodoCommand(body, false);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return new InvalidInputCommand();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Converts a string representation of a date to a LocalDate"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param input String representation of a date"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return LocalDate of the date"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @throws NumberFormatException Exception thrown if the string cannot be parsed into integers"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    static LocalDate genDate(String input) throws NumberFormatException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d input.split(Parser.dateSeparator, 3);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        int[] ints \u003d new int[3];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        for(int i \u003d 0; i \u003c 3; i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            ints[i] \u003d Integer.parseInt(strings[i]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return LocalDate.of(ints[0], ints[1], ints[2]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 107
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates the storage of data from duke to a file in the local hard drive"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Data separator to separate different data in the same entry */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String dataSeparator \u003d \"\\uff5c\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** File representation of the file specified by the pathname */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Pathname of the file. Note that loading and saving is done on the same file. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String pathName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param pathName pathname of the file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    Storage(String pathName) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.pathName \u003d pathName;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.file \u003d new File(this.pathName);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Creates new tasks based on the input strings read from the file and adds these tasks to the task list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Current task list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param strings Input strings read from the file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    void addTaskFromData(TaskList tasks, String[] strings) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (strings.length \u003e 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            String taskType \u003d strings[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            if (taskType.equals(\"todo\") \u0026\u0026 strings.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                tasks.addTodo(strings[2], Boolean.parseBoolean(strings[1]));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            } else if (taskType.equals(\"deadline\") \u0026\u0026 strings.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                tasks.addDeadline(strings[2], Boolean.parseBoolean(strings[1]), Parser.genDate(strings[3]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            } else if (taskType.equals(\"event\") \u0026\u0026 strings.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                tasks.addEvent(strings[2], Boolean.parseBoolean(strings[1]), Parser.genDate(strings[3]));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Loads data from file specified by pathName into a task list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Task list is empty if loading of data was unsuccessful"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return TaskList represented by the data in the file specified by pathName."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    TaskList loadTasks() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (this.file.exists()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                BufferedReader csvReader \u003d new BufferedReader(new FileReader(this.file));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                String eachDataEntry;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                while ((eachDataEntry \u003d csvReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                    String[] strings \u003d eachDataEntry.split(this.dataSeparator);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                    this.addTaskFromData(tasks, strings);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            } catch (IOException ignored) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Clears all the contents in the file"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return true if the contents are cleared successfully, false otherwise"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public boolean resetFile() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            this.file.delete();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            this.file.createNewFile();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Saves data in current task list into file specified by pathName"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param taskList Task list to be saved"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return true if saving is successful, false otherwise"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public boolean saveTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            FileWriter csvWriter \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getNumOfTasks(); i++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                String[] dataStringArray \u003d taskList.getTaskAt(i).getDataString();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                for (String s : dataStringArray) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                    csvWriter.append(s);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                    csvWriter.append(this.dataSeparator);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                csvWriter.append(\"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            csvWriter.flush();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            csvWriter.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 113
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates a task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Task list */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Creates a new deadline and adds it to the task list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param description Description of the deadline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param isComplete Initial completion status of the deadline"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param date Date of the deadline"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Created deadline"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public Deadline addDeadline(String description, boolean isComplete, LocalDate date) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, isComplete, date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.taskArrayList.add(deadline);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Creates a new event and adds it to the task list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param description Description of the event"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param isComplete Initial completion status of the event"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param date Date of the event"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public Event addEvent(String description, boolean isComplete, LocalDate date) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        Event event \u003d new Event(description, isComplete, date);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.taskArrayList.add(event);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Creates a new todo and adds it to the task list"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param description Description of the todo"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param isComplete Initial completion status of the todo"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Created todo"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public ToDo addTodo(String description, boolean isComplete) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        ToDo todo \u003d new ToDo(description, isComplete);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.taskArrayList.add(todo);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Marks the task with index specified by taskIndex as complete"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param taskIndex current index of the task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Completed task if completion is successful, null otherwise"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public Task completeTaskAt(int taskIndex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        // Check if task index is within valid range"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c this.taskArrayList.size()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            Task task \u003d this.taskArrayList.get(taskIndex);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            task.setComplete();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Deletes the task with index specified by taskIndex"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param taskIndex current index of the task"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Deleted task if deletion is successful, null otherwise"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public Task deleteTaskAt(int taskIndex) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        // Check if task index is within valid range"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c this.taskArrayList.size()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            Task task \u003d this.getTaskAt(taskIndex);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            this.taskArrayList.remove(taskIndex);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets the number of tasks in the current task list"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Number of tasks in the current task list"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    int getNumOfTasks() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return this.taskArrayList.size();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets the task specified by its index in the task list"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param taskIndex Current index of the task"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Task at specified index if it exists, null otherwise"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    Task getTaskAt(int taskIndex) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        // Check if task index is within valid range"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c this.getNumOfTasks()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return this.taskArrayList.get(taskIndex);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Checks if the task list is empty"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return true if the task list is empty, false otherwise"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    boolean isEmpty() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return taskArrayList.size() \u003d\u003d 0;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Retrieves a sublist of tasks whose descriptions contain the specified keyword"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param keyword Keyword"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Sublist of tasks"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public Task[] getSublistContainingKeyword(String keyword) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        ArrayList\u003cTask\u003e tasksContainingKeyword \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        for (Task task : this.taskArrayList) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            if (task.hasKeyword(keyword)) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                tasksContainingKeyword.add(task);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return tasksContainingKeyword.toArray(new Task[0]);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 148
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates the user interface of duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** String to print upon adding a new task to the task list */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String addTaskMessage \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** String to print upon completion of a task */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String completeTaskMessage \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** String to print upon deletion of a task */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String deleteTaskMessage \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** String to print on exit */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String exitMessage \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** String to print at the start of a sublist of matched tasks */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String foundTasksMessage \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** String to print if no matched tasks were found */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String foundZeroTasksMessage \u003d \"I\u0027m sorry, but none of the tasks match the keyword\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Strings to print on start-up */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String[] greetMessage \u003d new String[] {\"Hello! I\u0027m Duke\", \"What can I do for you?\"};"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Horizontal line */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String horizontalLine \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** String to print when an invalid input is detected */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String invalidSyntaxMessage \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** String to print when an invalid task index is detected */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String invalidTaskIndexMessage \u003d \"Please enter a valid task index\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** String to print as a header preceding the task list */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String listTasksMessage \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** String to print to reflect the number of tasks in the current task list */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String numOfTasksMessage \u003d \"Now you have %d tasks in the list\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Text indentation */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String textIndentation \u003d \"     \";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** String to print when the task list is empty */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String zeroTasksMessage \u003d \"Your task list is currently empty. YAY!!! :D\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets the string to print to reflect the number of tasks in the current task list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Task list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return zeroTaskMessage if the task list is empty, numOfTasksMessage formatted with the number of"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * tasks if the list is not empty"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private String getNumOfTasksString(TaskList tasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        int numOfTasks \u003d tasks.getNumOfTasks();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (numOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return zeroTasksMessage;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return String.format(numOfTasksMessage, numOfTasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Prints strings upon completing a task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param task Completed task"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void printCompleteTask(Task task) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d new String[] {this.completeTaskMessage, task.toString()};"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.print(strings);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets output strings upon completing a task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param task Completed task"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings upon completing a task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] getCompleteTaskStrings(Task task) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d new String[] {this.completeTaskMessage, task.toString()};"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return strings;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Prints strings upon creating a new task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Current task list"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param task Created task"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void printCreateTask(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d new String[] {this.addTaskMessage, task.toString(), getNumOfTasksString(tasks)};"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.print(strings);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets output strings upon creating a new task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Current task list"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param task Created task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings upon creating a new task"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] getCreateTaskStrings(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d new String[] {this.addTaskMessage, task.toString(), getNumOfTasksString(tasks)};"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return strings;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Prints strings upon deleting a task"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Current task list"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param task Deleted task"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void printDeleteTask(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d new String[] {this.deleteTaskMessage, task.toString(),getNumOfTasksString(tasks)};"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.print(strings);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets strings upon deleting a task"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Current task list"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param task Deleted task"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings upon deleting a task"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] getDeleteTaskStrings(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d new String[] {this.deleteTaskMessage, task.toString(),getNumOfTasksString(tasks)};"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return strings;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Prints strings upon exit"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void printExit() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d new String[] {this.exitMessage};"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.print(strings);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets strings upon exit"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings upon exit"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] getExitStrings() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d new String[] {this.exitMessage};"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return strings;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Prints strings upon start-up"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    void printHello() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.print(this.greetMessage);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets strings upon start-up"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings upon start-up"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    String[] getHelloStrings() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return this.greetMessage;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Prints strings upon handling an invalid input"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void printInvalidInput() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d new String[] {this.invalidSyntaxMessage};"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.print(strings);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets strings upon handling an invalid input"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings upon handling an invalid input"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] getInvalidInputStrings() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d new String[] {this.invalidSyntaxMessage};"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return strings;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Prints strings upon receiving an invalid task index"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void printInvalidTaskIndex() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d new String[] {this.invalidTaskIndexMessage};"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.print(strings);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets strings upon receiving an invalid task index"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings upon receiving an invalid task index"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] getInvalidTaskIndexStrings() {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d new String[] {this.invalidTaskIndexMessage};"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return strings;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Prints string representation of all tasks"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Current task list"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void printTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            this.print(new String[] {this.zeroTasksMessage});"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            String[] strings \u003d new String[tasks.getNumOfTasks() + 1];"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            strings[0] \u003d this.listTasksMessage;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            for (int i \u003d 1; i \u003c strings.length; i++) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                strings[i] \u003d tasks.getTaskAt(i - 1).toString();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            this.print(strings);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets string representation of all tasks"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Current task list"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output string representation of all tasks"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] getTaskListStrings(TaskList tasks) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return new String[] {this.zeroTasksMessage};"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            String[] strings \u003d new String[tasks.getNumOfTasks() + 1];"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            strings[0] \u003d this.listTasksMessage;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            for (int i \u003d 1; i \u003c strings.length; i++) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                strings[i] \u003d tasks.getTaskAt(i - 1).toString();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return strings;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Prints strings upon finding matching tasks"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Sublist of tasks"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void printTasksWithKeyword(Task[] tasks) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d new String[tasks.length + 1];"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (tasks.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            strings[0] \u003d this.foundZeroTasksMessage;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            strings[0] \u003d this.foundTasksMessage;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            for (int i \u003d 1; i \u003c strings.length; i++) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                strings[i] \u003d tasks[i - 1].toString();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.print(strings);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets strings upon finding matching tasks"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Sublist of tasks"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings upon finding matching tasks"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] getTasksWithKeywordStrings(Task[] tasks) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] strings \u003d new String[tasks.length + 1];"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (tasks.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            strings[0] \u003d this.foundZeroTasksMessage;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            strings[0] \u003d this.foundTasksMessage;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            for (int i \u003d 1; i \u003c strings.length; i++) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                strings[i] \u003d tasks[i - 1].toString();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return strings;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Prints the strings with top and bottom horizontal lines and indentation"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param strings Array of strings to be printed"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void print(String[] strings) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        System.out.println(this.horizontalLine);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        for(String string : strings) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            System.out.print(this.textIndentation);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            System.out.println(string);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        System.out.println(this.horizontalLine);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 292
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates a command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * All command types must extend from this class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param storage Storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param ui Ui"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public abstract String[] execute(Storage storage, TaskList tasks, Ui ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 22
    }
  },
  {
    "path": "src/main/java/duke/command/CompleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates a command to complete a task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class CompleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Index of the task to complete in the current task list */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    final int taskIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param taskIndex Index of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public CompleteTaskCommand(int taskIndex) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Executes the command to complete the task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param storage Storage"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Task list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param ui Ui"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        Task task \u003d tasks.completeTaskAt(this.taskIndex);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (task !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return ui.getCompleteTaskStrings(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return ui.getInvalidTaskIndexStrings();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 42
    }
  },
  {
    "path": "src/main/java/duke/command/CreateDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates a command to create a deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class CreateDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Date of the deadline */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Description of the deadline */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Initial completion status of the deadline */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final boolean isComplete;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param description Description of the deadline"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param isComplete Initial completion status of the deadline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param date Date of the deadline"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public CreateDeadlineCommand(String description, boolean isComplete, LocalDate date) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.isComplete \u003d isComplete;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Executes the command to create a deadline"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param storage Storage"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Task list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param ui Ui"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        Deadline deadline \u003d tasks.addDeadline(this.description, this.isComplete, this.date);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return ui.getCreateTaskStrings(tasks, deadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 51
    }
  },
  {
    "path": "src/main/java/duke/command/CreateEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates a command to create an event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class CreateEventCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Date of the event */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Description of the event */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Initial completion status of the event */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final boolean isComplete;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param description Description of the event"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param isComplete Initial completion status of the event"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param date Date of the event"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public CreateEventCommand(String description, boolean isComplete, LocalDate date) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.isComplete \u003d isComplete;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Executes the command to create an event"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param storage Storage"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Task list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param ui Ui"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        Event event \u003d tasks.addEvent(description, isComplete, date);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return ui.getCreateTaskStrings(tasks, event);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 51
    }
  },
  {
    "path": "src/main/java/duke/command/CreateTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates a command to create a todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class CreateTodoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Description of the todo */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Initial completion status of the todo */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    private final boolean isComplete;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param description Description of the todo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param isComplete Initial completion status of the todo"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public CreateTodoCommand(String description, boolean isComplete) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.isComplete \u003d isComplete;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Executes the command to create a todo"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param storage Storage"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Task list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param ui Ui"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        ToDo todo \u003d tasks.addTodo(this.description, this.isComplete);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return ui.getCreateTaskStrings(tasks, todo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 43
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates a command to delete a task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Index of the task to be deleted in the current task list */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    final int taskIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param taskIndex Index of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public DeleteTaskCommand(int taskIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Executes the command to delete the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param storage Storage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Task list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param ui Ui"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        Task task \u003d tasks.deleteTaskAt(this.taskIndex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (task !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return ui.getDeleteTaskStrings(tasks, task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return ui.getInvalidTaskIndexStrings();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 44
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates a command to exit duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Executes the command to exit duke"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param storage Storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param ui Ui"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        storage.resetFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        storage.saveTaskList(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return ui.getExitStrings();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 26
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates a command to find tasks that match a given keyword"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Keyword to find */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    final private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param keyword Keyword"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Execute the command to find matching tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param storage Storage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Task list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param ui Ui"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return ui.getTasksWithKeywordStrings(tasks.getSublistContainingKeyword(this.keyword));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 35
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidInputCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates a command to handle an invalid input"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class InvalidInputCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Executes the command to handle an invalid input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param storage Storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param ui Ui"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return ui.getInvalidInputStrings();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 24
    }
  },
  {
    "path": "src/main/java/duke/command/ListTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates a command to list the tasks in the current task list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class ListTasksCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Executes the command to list the tasks in the current task list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param storage Storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param tasks Task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param ui Ui"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Output strings"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return ui.getTaskListStrings(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates a deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param description Description of the deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param isComplete Completion status of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param date Date of the deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public Deadline(String description, boolean isComplete, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        super(description, isComplete, date);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets the string representation of the deadline to be written into the file upon exit"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return String representation of the deadline in the file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] getDataString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return new String[] {\"deadline\", String.valueOf(this.isComplete), this.description, this.date.toString()};"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets the string representation of the deadline to be printed in the UI"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return String representation of the deadline in the UI"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.description + \" (by: \" + super.getDateString() + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 40
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates an event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param description Description of the event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param isComplete Completion status of the event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param date Date of the event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public Event(String description, boolean isComplete, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        super(description, isComplete, date);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets the string representation of the event to be written into the file upon exit"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return String representation of the event in the file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] getDataString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return new String[] {\"deadline\", String.valueOf(this.isComplete), this.description, this.date.toString()};"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets the string representation of the event to be printed in the UI"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return String representation of the event in the UI"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.description + \" (at: \" + super.getDateString() + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 40
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates a task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * All types of task must extend from this class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Date of the task, null if date is not associated with the task */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    final LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Description of the task */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    final String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /** Completion status of the task */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    boolean isComplete;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param description Description of the task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param isCompleted Completion status of the task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param date Date of the task, null if date is not associated with the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    Task(String description, boolean isCompleted, LocalDate date) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.isComplete \u003d isCompleted;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets the string representation of the task to be written into the file upon exit"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return String representation of the task in the file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] getDataString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return new String[] {\"task\", String.valueOf(isComplete), description};"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets the string representation of the date of the task to be printed in the UI"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return String representation of the date of the task in the UI"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    String getDateString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (this.date \u003d\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return this.date.getYear() + \" \" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                    this.date.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH) + \" \" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                    this.date.getDayOfMonth();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets the status icon reflecting the completion status of the task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return Status icon"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        if (this.isComplete) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            return \"\\u2718\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Marks the task as complete"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void setComplete() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        this.isComplete \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets the string representation of the task to be printed in the UI"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return String representation of the task in the UI"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Checks if the description contains specified keyword"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param keyword Keyword"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return True if keyword is found in description, false otherwise"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public boolean hasKeyword(String keyword) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return this.description.contains(keyword);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 98
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": " * Encapsulates a todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param description Description of the todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @param isComplete Completion status of the todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public ToDo(String description, boolean isComplete) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        super(description, isComplete, null);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets the string representation of the todo to be written into the file upon exit"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return String representation of the todo in the file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String[] getDataString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return new String[] {\"todo\", String.valueOf(this.isComplete), this.description};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * Gets the string representation of the todo to be printed in the UI"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     * @return String representation of the todo in the UI"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongping827"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + super.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 37
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "yongping827": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"main.java.duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "yongping827": 19
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package test.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 12
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "package test.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import main.java.duke.task.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    void toString_normalInput_correctOutput() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        ToDo todo \u003d new ToDo(\"todo1\", false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        assertEquals(\"[T][\\u2718] todo1\", todo.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    void getDataString_noInput_correctOutput() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        ToDo todo \u003d new ToDo(\"todo1\", false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] expected \u003d new String[] {\"todo\", \"false\", \"todo1\"};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        String[] actual \u003d todo.getDataString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        assertEquals(expected.length, actual.length);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        for (int i \u003d 0; i \u003c 3; i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongping827"
        },
        "content": "            assertEquals(expected[i], actual[i]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongping827"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongping827"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongping827"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongping827": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongping827"
        },
        "content": "invalidinput"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongping827"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongping827"
        },
        "content": "todo todo1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongping827"
        },
        "content": "deadline deadline1 /by datetime1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongping827"
        },
        "content": "event event1 /at datetime2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongping827"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongping827"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongping827"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "done3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongping827"
        },
        "content": "done invalid"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongping827"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongping827"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongping827"
        },
        "content": "deadline deadline2without/by"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongping827"
        },
        "content": "deadline deadline3 /by baddatetime1 /by baddatetime2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongping827"
        },
        "content": "event event2without/at"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongping827"
        },
        "content": "event event 3 /at baddatetime3 /at baddatetime4"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongping827"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yongping827": 18
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongping827"
        },
        "content": "if exist ACTUAL.TXT del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongping827"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "yongping827": 2,
      "-": 19
    }
  }
]
