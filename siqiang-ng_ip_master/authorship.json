[
  {
    "path": "src/main/java/BotHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class BotHandler {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    private final static ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void displayList() throws DuckieException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        if (lst.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DuckieNoListException();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        BotResponses.displayListReply(lst);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addTask(String input, String type) throws DuckieException, IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        Task t1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                String todo \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                t1 \u003d new Todo(todo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                String[] splitted \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                String time \u003d splitted[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                String description \u003d splitted[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                    t1 \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                } else { //This will be Event task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                    t1 \u003d new Event(description, time);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            lst.add(t1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            writeToFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DuckieNoIndexException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        BotResponses.addTaskReply(t1, lst);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void checkTask(int ind) throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        Task t1 \u003d lst.get(ind - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        t1.checked();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        writeToFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        BotResponses.checkTaskReply(t1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void deleteTask(int ind) throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        Task t1 \u003d lst.get(ind - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        lst.remove(ind - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        writeToFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        BotResponses.deleteTaskReply(t1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void processData(Scanner sc) throws DuckieException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        while(sc.hasNextLine()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            String task \u003d sc.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] taskBreakdown \u003d task.split(\"\\\\|\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            String type \u003d taskBreakdown[0].strip();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            String isDone \u003d taskBreakdown[1].strip();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            String description \u003d taskBreakdown[2].strip();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                Todo taskToDo \u003d new Todo(description);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskToDo.checked();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                lst.add(taskToDo);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                String date \u003d taskBreakdown[3].strip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                Deadline taskD \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskD.checked();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                lst.add(taskD);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                String dateTime \u003d taskBreakdown[3].strip();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                Event taskE \u003d new Event(description, dateTime);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskE.checked();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                lst.add(taskE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"\\t\" + \"Loading tasks...\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        displayList();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void writeToFile() throws IOException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        String cwd \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        String dukeFile \u003d cwd + \"/data/duckie.txt\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(dukeFile);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        FileWriter fw \u003d new FileWriter(dukeFile);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Task t1: lst) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            toWrite +\u003d (t1.getType() + (t1.isCompleted() ? \" | 1 | \" : \" | 0 | \")"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                        + t1.getDescription())"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                        + (t1.getDate() !\u003d null ? \"| \" + t1.getDate() : \"\")"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                        + System.lineSeparator();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        fw.write(toWrite);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    //Check if a String only"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean is_word(String s) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        return (s.length() \u003e 0 \u0026\u0026 s.split(\"\\\\s+\").length \u003d\u003d 1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void serve() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                String initialInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                String input \u003d initialInput.strip();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(input);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                if (input.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.print(BotResponses.getHorizL());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                } else if (input.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                    displayList();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                } else if (input.toLowerCase().indexOf(\"done\") \u003d\u003d 0"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                        || input.toLowerCase().indexOf(\"delete\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (lst.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                        throw new DuckieNoListException();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                    } else if (is_word(input)) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                        throw new DuckieInsufficientInfoException();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                    int ind \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (lst.size() \u003c ind) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                        throw new DuckieNoIndexException();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (input.toLowerCase().indexOf(\"done\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                        checkTask(ind);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                        deleteTask(ind);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                } else if (input.toLowerCase().indexOf(\"todo\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                    addTask(input, \"todo\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                } else if (input.toLowerCase().indexOf(\"deadline\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                    addTask(input, \"deadline\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                } else if (input.toLowerCase().indexOf(\"event\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                    addTask(input, \"event\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new DuckieInvalidCommandException();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (DuckieException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 3,
      "-": 155
    }
  },
  {
    "path": "src/main/java/BotResponses.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class BotResponses {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    private final static String INDENT \u003d \"\\t\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private final static String horizL \u003d INDENT +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            \"____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    private final static String logo \u003d INDENT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            + \"           ____                   _      _\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            + INDENT + \"    __    |  _ \\\\   _   _    ___  | | _  (_)  ___     __\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            + INDENT + \"___( o)\u003e  | | | | | | | | /  __| | |/ / | | / _ \\\\  \u003c(o )___ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            + INDENT + \"\\\\ \u003c_. )   | |_| | | | | | | (__  |   \u003c  | | | __/   ( ._\u003e /\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            + INDENT + \" `---\u0027    |____/  \\\\___,_|  \\\\ __| |_|\\\\_\\\\ |_| \\\\___|    `___\u0027 \\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static String getHorizL() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return horizL;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void intro() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(horizL + \"\\n\" + logo + \"\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                INDENT + \"Quack. Duckie is here to remember your tasks!\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                INDENT + \"You can begin by adding tasks!\\n\" + horizL);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void ending() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(\"\\n\" + INDENT +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                \"Quack! Hope to see you again!\\n\" + horizL);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void addTaskReply(Task t1, ArrayList\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(horizL);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(INDENT + \"Quack! Added: \" + t1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(INDENT + \"Now you have \" + lst.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(horizL);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void displayListReply(ArrayList\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(horizL);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(INDENT + \"Quack! You have these in your list currently: \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        for (Task task : lst) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            System.out.println(INDENT + index + \". \" + task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(horizL);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void checkTaskReply(Task t1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(horizL + \"\\n\" + INDENT"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                + \"Quack! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                + INDENT + t1 + \"\\n\" + horizL);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void deleteTaskReply(Task t1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        System.out.println(horizL + \"\\n\" + INDENT + \"Quack! I\u0027ve remove this task: \\n\" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                INDENT + t1 + \"\\n\" + horizL);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 56,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 13,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Duckie.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class Duckie {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static File openFile() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String cwd \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        Path dirPath \u003d Paths.get(cwd, \"data\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        Path filePath \u003d Paths.get(cwd, \"data\", \"duckie.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            File duckieFile \u003d new File(String.valueOf(filePath));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!duckieFile.exists()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                File dir \u003d new File(String.valueOf(dirPath));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                if (!dir.exists()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (dir.mkdirs() \u0026\u0026 duckieFile.createNewFile()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                        System.out.println(\"Memory File created successfully!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                        System.out.println(\"Quack! Unable to create file!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (duckieFile.createNewFile()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                        System.out.println(\"Memory File created successfully!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                        System.out.println(\"Quack! Unable to create file!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            return duckieFile;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"Quack! Encounter problem while loading data!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        BotResponses.intro();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        File duckieFile \u003d openFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            BotHandler.processData(new Scanner(duckieFile));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"Quack! Encounter problem while loading data!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DuckieException e ) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        BotHandler.serve();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        BotResponses.ending();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 36,
      "-": 17
    }
  },
  {
    "path": "src/main/java/DuckieException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DuckieException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    DuckieException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 10
    }
  },
  {
    "path": "src/main/java/DuckieInsufficientInfoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class DuckieInsufficientInfoException extends DuckieException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    protected final static String INDENT \u003d \"\\t\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    protected final static String horizL \u003d INDENT +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            \"____________________________________________________________\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public DuckieInsufficientInfoException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(horizL + \"\\n\" + INDENT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                + \"Duckie needs more description after the first word.\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                + horizL);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 8,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DuckieInvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DuckieInvalidCommandException extends DuckieException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    protected final static String INDENT \u003d \"\\t\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    protected final static String horizL \u003d INDENT +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            \"____________________________________________________________\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public DuckieInvalidCommandException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(horizL + \"\\n\" + INDENT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                + \"Sorry, Duckie does not know what you are trying to do.\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                + horizL);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 11,
      "-": 1
    }
  },
  {
    "path": "src/main/java/DuckieNoIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DuckieNoIndexException extends DuckieException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    protected final static String INDENT \u003d \"\\t\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    protected final static String horizL \u003d INDENT +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            \"____________________________________________________________\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public DuckieNoIndexException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(horizL + \"\\n\" + INDENT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                + \"Quack. The input index is not found in the list.\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                + horizL);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 10,
      "-": 1
    }
  },
  {
    "path": "src/main/java/DuckieNoListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class DuckieNoListException extends DuckieException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    protected final static String INDENT \u003d \"\\t\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    protected final static String horizL \u003d INDENT +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            \"____________________________________________________________\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public DuckieNoListException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(horizL + \"\\n\" + INDENT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                + \"Quack. You have no tasks in the list currently.\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "                + horizL);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 10,
      "-": 1
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 13,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public void checked() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String tick \u003d \"✔\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        String cross \u003d \"✘\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            return \"[\" + tick + \"] \" + this.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "            return \"[\" + cross + \"] \" + this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 24,
      "-": 16
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 10,
      "-": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "done"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "hello"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "todo borrow books"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "event Homecoming /at 5th Aug 2-4pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "deadline quiz /by Monday"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "SET MY_PATH\u003dC:\\Users\\ngsiq\\OneDrive\\Desktop\\ip"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "javac -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\*.java\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": "java -classpath \"%MY_PATH%\\bin\" Duckie \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siqiang-ng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "siqiang-ng": 7,
      "-": 18
    }
  }
]
