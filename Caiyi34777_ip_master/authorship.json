[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    implementation \u0027org.jetbrains:annotations:15.0\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "Caiyi34777": 24
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "# User Guide - Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "### Add "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Add a new task (of type todo/event/deadline) to the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "### List"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "View the whole task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "### Set as done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Set a task in the list as done by list index."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Delete a task in the list by list index."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "### Find"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Find tasks with a exact keyword."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "### Save"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Save the task list and load with saved data when reopening."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "### Help"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Get the list of commands that can be used."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "#### `todo` - add a todo task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "`todo homework`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "       Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "         [T][✘] homework"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "       Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "#### `event /at yyyy-mm-dd` - add an event task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "`event concert /at 2020-05-01`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        [E][✘] concert (at: May 1 2020)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "#### `deadline /by yyyy-mm-dd` - add a deadline task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "`deadline assignmet /by 2020-09-23`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        [D][✘] assignmet (by: Sep 23 2020)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      Now you have 3 task(s) in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "#### `list` - list out the task list"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      Here are the task(s) in your list:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      1.[T][✘] homework"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      2.[E][✘] concert (at: May 1 2020)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      3.[D][✘] assignmet (by: Sep 23 2020)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "#### `done` - set a task as done"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        [T][✓] homework"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "#### `delete` - delete a task in the list"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        [T][✓] homework"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "#### `find` - find task by an exact keyword"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "`find concert`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     Here are the matching task(s) in your list:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      1.[E][✘] concert (at: May 1 2020)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "#### `bye` - finish duke and save the task list"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "#### `help` - get a list of duke commands "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      Here are some magic spells I understand:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      todo \u003csomething\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      event \u003csomething\u003e /at yyyy-mm-dd"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      deadline \u003csomething\u003e /by yyyy-mm-dd"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      list"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      done \u003cindex\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      delete \u003cindex\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      find \u003ckeyword\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      bye"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      Try out yourself!!! :)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      PS, if you cannot remember, fret not!!"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "      Just type \u0027help\u0027 and I will come to your savor."
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 115,
      "-": 21
    }
  },
  {
    "path": "src/main/java/duke/Converter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import duke.exceptions.IllegalTaskTypeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents methods to manipulate with formats, e.g. dates"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Converter {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a formatted string transforming from \"/at\" to \":(at)\"."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Assume the input string must contain \"/at\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param s input string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a formatted string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    static String at(String s) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String first \u003d s.split(\"/at \")[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String second \u003d s.split(\"/at \")[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(second);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return first + \"(at: \" + date.format(DateTimeFormatter"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                .ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a formatted string transforming from \"/by\" to \":(by)\"."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Assume the input string must contain \"/by\"."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param s input string"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a formatted string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static String by(String s) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String first \u003d s.split(\"/by \")[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String second \u003d s.split(\"/by \")[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(second);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return first + \"(by: \" + date.format(DateTimeFormatter"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                .ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a Task object specified by the input string."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Since this method is ensured to be called properly"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * (by implementation in class Parser),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * it will not invoke exception thrown and terminate the program."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param s input message string"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a Task object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @throws IllegalArgumentException  if cannot detect task type correctly"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    static Task add(String s) throws IllegalTaskTypeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String taskType \u003d s.split(\" ; \")[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String isDone \u003d s.split(\" ; \")[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String message \u003d s.split(\" ; \")[2];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return new Todo(message, getStatus(Integer.parseInt(isDone)));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return new Event(message, getStatus(Integer.parseInt(isDone)));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return new Deadline(message, getStatus(Integer.parseInt(isDone)));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            throw new IllegalTaskTypeException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a boolean status from an integer representation."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param i  a number to denote false or true (0 for false, 1 for true)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *           here, we assume the input number is correct"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return boolean status"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    static boolean getStatus(int i) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return i !\u003d 0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 80
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a deadline inherited from task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * a task associated a date as deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  Initialises message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  @param message deadline message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Deadline(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  Initialises message, isDone."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  @param message deadline message"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  @param isDone status of deadline task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Deadline(String message, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        super(message, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the single character string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * denoting task type."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return \"D\" denoting deadline"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getPureTypeLetter() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the task type notation with square brackets."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return \"[D]\" denoting deadline"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getTypeLetter() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the print message of this deadline."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return string of form: [D] + [done/undone notation] + message"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getPrintMessage() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return Converter.by(getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the message of this deadline."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return message"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getStoreMessage() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 63
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "@SuppressWarnings(\"CheckStyle\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @SuppressWarnings(\"CanBeFinal\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    // The label containing text to be added in DialogBox."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Constructor for DialogBox."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param label label containing text"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param circle circle-shaped image"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public DialogBox(Label label, Circle circle) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        text \u003d label;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        @SuppressWarnings(\"SpellCheckingInspection\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Font font \u003d new Font(\"Baskerville\", 14);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        text.setMinWidth(35);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        text.setMinHeight(30);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        text.setFont(font);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        text.setAlignment(Pos.CENTER);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.getChildren().addAll(text, circle);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * text on the right."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    protected void flip() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                .observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the label instance named text;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    protected Label getText() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 56
    }
  },
  {
    "path": "src/main/java/duke/DialogBoxDuke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class DialogBoxDuke extends DialogBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Constructor for DialogBoxDuke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param label label containing text"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param circle circle-shaped image"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public DialogBoxDuke(Label label, Circle circle) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        super(label, circle);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Color color \u003d Color.rgb(238, 160, 178);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        CornerRadii corn \u003d new CornerRadii(10);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Insets insets \u003d new Insets(-2, 0, -2, 3);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Background background \u003d new Background("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                new BackgroundFill(color, corn, insets));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        getText().setBackground(background);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Creates a new Duke DialogBox."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param label label containing text"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param circle circle-shaped image"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a Duke DialogBox"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static DialogBox getDukeDialog(Label label, Circle circle) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        DialogBoxDuke db \u003d new DialogBoxDuke(label, circle);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 38
    }
  },
  {
    "path": "src/main/java/duke/DialogBoxUser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class DialogBoxUser extends DialogBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Constructor for DialogBoxDuke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param label label containing text"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param circle circle-shaped image"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public DialogBoxUser(Label label, Circle circle) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        super(label, circle);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Color col \u003d Color.rgb(190, 231, 223);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        CornerRadii corn \u003d new CornerRadii(10);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Insets insets \u003d new Insets(-2, 1, -2, 0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Background background \u003d new Background("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                new BackgroundFill(col, corn, insets));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        getText().setBackground(background);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Creates a new User DialogBox."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param label label containing text"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param circle circle-shaped image"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a User DialogBox"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static DialogBox getUserDialog(Label label, Circle circle) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return new DialogBoxUser(label, circle);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 37
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents an interactive bot to handle tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Storage handles load to/from saved file. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Ui handles user interaction. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** A list that contains tasks. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @SuppressWarnings(\"CanBeFinal\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private TaskList lst \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Empty constructor. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public Duke() { }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Constructor with a valid file path."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param filePath the file path"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public Duke(Path filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  Returns the task list used in duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  @return TaskList lst"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public TaskList getLst() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return lst;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  Executes set up environment (load from file),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  run, and clean up (load to file)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  Duke\u0027s main working function"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        uiRun();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        end();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  Initialises task list from saved file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void start() throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        storage.writeToList(lst);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  Saves task list to saved file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void end() throws IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        storage.writeToFile(lst);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  Handles user \u0026 duke interaction."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void uiRun() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        ui.run(lst);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 67,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents an event inherited from task. A \u003ccode\u003eEvent\u003c/code\u003e object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * corresponds to a task associated a date as event date"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  Initialises message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param message todo message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Event(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  Initialises message, isDone."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param message event message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param isDone event task state"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Event(String message, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        super(message, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the single character string denoting task type."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return \"E\" denoting event"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getPureTypeLetter() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the task type notation with square brackets."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return \"[E]\" denoting event"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getTypeLetter() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the print message of this event."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return string of form: [E] + [done/undone notation] + message"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getPrintMessage() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return Converter.at(getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the message of this event."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return message"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getStoreMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 61
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Launches the Ui."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param args input string (not used)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Application.launch(MainWithUi.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 12
    }
  },
  {
    "path": "src/main/java/duke/MainWithUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/** Represents a main class with UI implemented. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class MainWithUi extends Application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @SuppressWarnings(\"CanBeFinal\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Image userPic \u003d new Image(this.getClass()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            .getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Image dukePic \u003d new Image(this.getClass()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            .getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private java.nio.file.Path path \u003d java.nio.file.Paths"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            .get(System.getProperty(\"user.home\"), \"start.txt\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Duke dukeBot \u003d new Duke(path);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Starts GUI."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Button sendButton;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Scene scene;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        dialogContainer.setBackground(new Background(new BackgroundFill(Color"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                .rgb(232,223,231), CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        stage.setOpacity(0.95);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        stage.setTitle(\"Duke - Personal Task Manager (ง ˙o˙)ว\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scrollPane.setPrefSize(390, 535);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        userInput.setPrefWidth(335.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        handleAtStart();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        });"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        });"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Creates dialog boxes, containing user\u0027s input and Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private void handleUserInput() throws Exception {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Circle userPicHolder \u003d new Circle(40);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        userPicHolder.setFill(new ImagePattern(userPic));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Circle dukePicHolder \u003d new Circle(40);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        dukePicHolder.setFill(new ImagePattern(dukePic));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                DialogBoxUser.getUserDialog(userText, userPicHolder),"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                new Text(\"\"),"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                DialogBoxDuke.getDukeDialog(dukeText, dukePicHolder),"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                new Text(\"\")"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        );"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private void handleAtStart() throws Exception {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        dukeBot.start();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Label dukeTextHello \u003d new Label(Ui.sayHello());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Label dukeTextListOfCommands \u003d new Label(Ui.listOfCommands());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Label dukeTextList \u003d new Label(getResponse(\"list\"));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Circle dukePicHolder1 \u003d new Circle(40);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        dukePicHolder1.setFill(new ImagePattern(dukePic));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Circle dukePicHolder2 \u003d new Circle(40);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        dukePicHolder2.setFill(new ImagePattern(dukePic));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Circle dukePicHolder3 \u003d new Circle(40);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        dukePicHolder3.setFill(new ImagePattern(dukePic));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                DialogBoxDuke.getDukeDialog(dukeTextHello, dukePicHolder1),"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                new Text(\"\"),"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                DialogBoxDuke.getDukeDialog(dukeTextListOfCommands, dukePicHolder2),"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                new Text(\"\"),"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                DialogBoxDuke.getDukeDialog(dukeTextList, dukePicHolder3),"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                new Text(\"\")"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        );"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a response to user input."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param input user input string"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a response string"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getResponse(String input) throws Exception {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            dukeBot.end();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            userInput.setDisable(true);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            delay.setOnFinished(event -\u003e Platform.exit());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            delay.play();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return new Parser(input).getRespond(dukeBot.getLst());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 184
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import duke.exceptions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    // constant SPACE and LINE for format purposes"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private static final String SPACE \u003d \"     \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private static final String INDENT \u003d \"      \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private static final String MORE_INDENT \u003d \"        \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns formatted string, adding SPACE and LINE."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param input string to be formatted"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return formatted string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static String format(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return INDENT + input + \"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    // command split indicators"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private final int PRIOR \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private final int EXTRA \u003d 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    // current command: the whole line"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Constructor of Parser."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param command current command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Parser(String command) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the bye message called by user input \"bye\"."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return formatted bye message"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private String handleBye() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String messageBye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return format(messageBye);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the list message called by user input \"list\"."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param lst the task list to be handled"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return formatted list message"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private String handleList(TaskList lst) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String messageList \u003d \" Here are the task(s) in your list:\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return formatList(taskPrint(lst), messageList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a raw list without any formatting."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param lst the task list to be printed"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a raw list string"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private String taskPrint(TaskList lst) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        StringBuilder listContent \u003d new StringBuilder();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        for (Task task : lst.getLst()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            listContent.append(INDENT).append(counter).append(\".\")"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    .append(task.print()).append(\"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return listContent.toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a formatted list message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param content the raw list"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param message the opening statement for print a list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a formatted string of \"content\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private String formatList(String content, String message) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return SPACE + message + \"\\n\" + content;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a response message of complicated commands."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param lst the task list"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param command the command to be processed"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a formatted string as user input response"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private String handleComplicatedCommands(TaskList lst, String command) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        if (!isValid(command)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return format(new UnknownCommandException().toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String type \u003d command.split(\" \")[PRIOR];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            response \u003d handleDone(lst, command);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            response \u003d handleDelete(lst, command);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            response \u003d handleFind(lst, command);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            response \u003d handleAdd(lst, command, TaskType.T);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            response \u003d handleAdd(lst, command, TaskType.D);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            response \u003d handleAdd(lst, command, TaskType.E);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return format(new UnknownCommandException().toString());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns boolean value indicating whether the command is valid."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * The command is valid if it consists of COMMAND_TYPE + \" \" + EXTRA_MESSAGE"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param command the command to be processed"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a boolean value indicating whether the command is valid"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private boolean isValid(String command) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            //noinspection unused"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            String type \u003d command.split(\" \")[PRIOR];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a response string for \"done\" command."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param lst the task list"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param command the command to be processed"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a response string for \"done\" command"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private String handleDone(TaskList lst, String command) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String extraCommand;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            extraCommand \u003d command.split(\" \", 2)[EXTRA];"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return format(new DoneEmptyBodyException().toString());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        int index \u003d Integer.parseInt(extraCommand) - 1;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            task \u003d lst.get(index);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return format(new InvalidDoneException().toString());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        assert index \u003e 0;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        assert index \u003c lst.size();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        if (!task.getStatus()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            TaskList.incrementNumberOfDoneTasks();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String messageMarked \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return format(messageMarked + MORE_INDENT + task.print());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a response string for \"delete\" command."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param lst the task list"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param command the command to be processed"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a response string for \"delete\" command"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private String handleDelete(TaskList lst, String command) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String extraCommand;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            extraCommand \u003d command.split(\" \", 2)[EXTRA];"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return format(new DeleteEmptyBodyException().toString());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        int index \u003d Integer.parseInt(extraCommand) - 1;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            task \u003d lst.get(index);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return format(new InvalidDeletionException().toString());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        assert index \u003e 0;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        assert index \u003c lst.size();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        lst.delete(index);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String messageDelete \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return format(messageDelete"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                + MORE_INDENT + task.print() + getListCountMessage(lst));"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a string listing all tasks in the task list."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param lst the task list"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a string listing all tasks in lst"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private String getListCountMessage(TaskList lst) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"\\n\" + INDENT + \"Now you have \" + lst.size()"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a response string"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * listing all tasks containing the searching string."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param lst the task list"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param command the command to be processed"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a response string for \"find\" command"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private String handleFind(TaskList lst, String command) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String keyword;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            keyword \u003d command.split(\" \", 2)[EXTRA];"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return format(new FindEmptyBodyException().toString());"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        TaskList subList \u003d new TaskList();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // check whether extraCommand is a subString of any task message"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        for (Task task : lst.getLst()) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            if (task.getMessage().contains(keyword)) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                subList.add(task);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String messageMatching \u003d \"Here are the matching task(s) in your list:\";"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return formatList(taskPrint(subList), messageMatching);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns a response string for a new task command."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param lst the task list"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param command the command to be processed"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param taskType task type, T or D or E"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a response string for a new task command"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private String handleAdd(TaskList lst, String command, TaskType taskType) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            description \u003d command.split(\" \", 2)[EXTRA];"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            case T:"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                return format(new TodoEmptyBodyException().toString());"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            case D:"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                return format(new DeadlineEmptyBodyException().toString());"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            case E:"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                return format(new EventEmptyBodyException().toString());"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            return format(new UnknownCommandException().toString());"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        lst.addOfType(description, taskType);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // a message to be printed when invoking a todo, event, or deadline"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String messageAdded \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return format(messageAdded + MORE_INDENT"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                + getMostRecentTask(lst).print() + getListCountMessage(lst));"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the most recent task in the task list."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param lst the task list"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return the most recent task"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private Task getMostRecentTask(TaskList lst) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return lst.get(lst.size() - 1);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns list of commands available."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a help message of list of commands available"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private String handleHelp() {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return Ui.listOfCommands();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns respond message to be printed generated from user input."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param lst the task list"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return respond message by Duke"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getRespond(TaskList lst) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String messageRespond;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            messageRespond \u003d handleBye();"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            messageRespond \u003d handleList(lst);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            messageRespond \u003d handleHelp();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            messageRespond \u003d handleComplicatedCommands(lst, command);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return messageRespond;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 326
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import duke.exceptions.IllegalTaskTypeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a storage and deals with loading tasks from"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * the file and saving tasks in the file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Storage(Path path) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.file \u003d new File(path.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Writes content of saved file to task list (and store extra information)."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param lst the task list to be written to"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void writeToList(TaskList lst) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                // a pure number stored in the saved file, guaranteed to be there"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                String tempNumberOfDoneTasks \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                TaskList.setNumberOfDoneTasks(Integer.parseInt("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                        tempNumberOfDoneTasks));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                // a date stored in the saved file, guaranteed to be there"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                String tempLastLoginDate \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                TaskList.setLastLoginDate(LocalDate.parse(tempLastLoginDate));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    String task \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    lst.add(Converter.add(task));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                scanner.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        } catch (IllegalTaskTypeException ex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            System.out.println(ex);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Writes content of task list to saved file (and store extra information)."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param lst the task list to be written from"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void writeToFile(TaskList lst) throws IOException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String content;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        fileWriter.write(TaskList.getNumberOfDoneTasks() + \"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        fileWriter.write(LocalDate.now() + \"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        for (int i \u003d 0; i \u003c lst.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            Task task \u003d lst.get(i);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            content \u003d task.getPureTypeLetter() + \" ; \" + task.getStatusNum()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                    + \" ; \" + task.getStoreMessage() + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            fileWriter.write(content);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 69
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a task. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * a message and a status (whether it is done)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Constructor for task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param message the message content of task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Task(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Constructor for task with status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param message the message content of task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param isDone the status of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Task(String message, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns status of task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return status boolean"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns message of task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return message string"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns status icon of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return status icon"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns integer representation of status."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return 1 for done, 0 for undone"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public int getStatusNum() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return isDone ? 1 : 0;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns normal print form of task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a string for printing"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return getTypeLetter() + getStatusIcon() + getPrintMessage();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Sets a task as done. */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public abstract String getPureTypeLetter();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public abstract String getTypeLetter();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public abstract String getPrintMessage();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public abstract String getStoreMessage();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 84
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a task list contains the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @SuppressWarnings(\"CanBeFinal\")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private static int numberOfDoneTasks \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private static LocalDate lastLoginDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns number of done tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return number of done tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static int getNumberOfDoneTasks() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return numberOfDoneTasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns last log in date."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return last log in date"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static LocalDate getLastLoginDate() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return lastLoginDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Resets number of done tasks as 0. */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static void resetNumberOfDoneTasks() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        numberOfDoneTasks \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Sets number of done tasks as input i."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param i the new number of done tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static void setNumberOfDoneTasks(int i) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        numberOfDoneTasks \u003d i;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Increments number of done tasks by 1. */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static void incrementNumberOfDoneTasks() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        numberOfDoneTasks++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Sets last log in data as date."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param date the date to be set as last log in date"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static void setLastLoginDate(LocalDate date) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        lastLoginDate \u003d date;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the array list task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return task list"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public List\u003cTask\u003e getLst() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return lst;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param task task to be added"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        lst.add(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Adds a task of a certain type to the task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param message task message"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param taskType task type"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void addOfType(String message, TaskType taskType) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        case T:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            lst.add(new Todo(message));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        case D:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            lst.add(new Deadline(message));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        case E:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            lst.add(new Event(message));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // We only use this method in our own implementation"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // with specified task type T, D, or E,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // thus task type is always valid."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // No need to throw exception"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns size of task list in int form."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return list size"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return lst.size();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns the task from task list at index i."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param i index"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return the (i+1)th task in the list"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return lst.get(i);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Deletes the task from task list at index i."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param i index"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void delete(int i) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        lst.remove(i);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 115
    }
  },
  {
    "path": "src/main/java/duke/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/** Represents task type. T for todo, D for deadline, E for event. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    T, D, E"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 6
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a todo inherited from task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * a simple task without any constraints on dates"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  Initialises message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param message todo message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public Todo(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  Initialises message, isDone."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param message todo message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param isDone todo task state"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    Todo(String message, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        super(message, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the single character string denoting task type."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return \"T\" denoting todo"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getPureTypeLetter() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the task type notation with square brackets."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return \"[T]\" denoting todo"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getTypeLetter() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the print message of this deadline."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return string of form: [T] + [done/undone notation] + message"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getPrintMessage() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Returns the message of this deadline."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return message"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getStoreMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 61
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a user interface and deals with interactions."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * with the user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    private static final String INDENT \u003d \"\\n      \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * Pops initial message and passes to Parser to interact with user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param lst the list to contain tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void run(TaskList lst) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // set up greetings and old list from file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        System.out.println(sayHello());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        System.out.println(listOfCommands());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        System.out.println(getInitialList(lst));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // set up scanner for interaction"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // hand over to Parser class to handle all commands"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            String command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            System.out.println(new Parser(command).getRespond(lst));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                scanner.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns hello message from duke and also sets up last log in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  date and number of done tasks if necessary."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return a string response"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static String sayHello() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        LocalDate today \u003d LocalDate.now();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String messageHello \u003d Parser.format(\"Hello! I\u0027m Duke\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                + INDENT + \"Today is \" + today"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                .format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \"\\n      \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                + \"Last login was \" + TaskList.getLastLoginDate()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                .format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                + INDENT + \"You have done \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                + TaskList.getNumberOfDoneTasks() + \" task(s) in the past week.\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                + INDENT + \"Keep up the good work!!!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // reset done-task-counter if today is SUNDAY or"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        // there was a SUNDAY between last login date and today (exclusive)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        LocalDate dateIterator \u003d TaskList.getLastLoginDate()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                .plus(1, ChronoUnit.DAYS);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        while (dateIterator.isBefore(today)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            if (today.getDayOfWeek().equals(DayOfWeek.SUNDAY)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                TaskList.resetNumberOfDoneTasks();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            if (dateIterator.getDayOfWeek().equals(DayOfWeek.SUNDAY)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                TaskList.resetNumberOfDoneTasks();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            dateIterator \u003d dateIterator.plus(1, ChronoUnit.DAYS);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return messageHello;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns a help list of all commands duke can recognise."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return list of commands"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public static String listOfCommands() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String welcomeMessage \u003d \"      \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                + \"Here are some magic spells I understand:\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String addCommand \u003d INDENT + \"todo \u003csomething\u003e\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                + INDENT + \"event \u003csomething\u003e /at yyyy-mm-dd\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                + INDENT + \"deadline \u003csomething\u003e /by yyyy-mm-dd\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String listCommand \u003d INDENT + \"list\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String doneCommand \u003d INDENT + \"done \u003cindex\u003e\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String deleteCommand \u003d INDENT + \"delete \u003cindex\u003e\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String findCommand \u003d INDENT + \"find \u003ckeyword\u003e\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String byeCommand \u003d INDENT + \"bye\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String closeMessage \u003d INDENT + \"Try out yourself!!! :)\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        String helpMessage \u003d INDENT + \"PS, if you cannot remember, fret not!!\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                + INDENT + \"Just type \u0027help\u0027 and I will come to your savor.\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return welcomeMessage + addCommand + listCommand + doneCommand"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                + deleteCommand + findCommand + byeCommand + closeMessage"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                + helpMessage;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns the saved list content as a string."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @param lst the saved task list"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     * @return the task list content"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String getInitialList(TaskList lst) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return new Parser(\"list\").getRespond(lst);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 103
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DeadlineEmptyBodyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a Deadline Empty Body Exception. A \u003ccode\u003eDeadline EmptyBody"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when \"deadline\" is called without further"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * information"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class DeadlineEmptyBodyException extends EmptyBodyException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Empty constructor as only toString method is repetitively used."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public DeadlineEmptyBodyException() { }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns a string message for deadline empty body exception."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 22
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DeleteEmptyBodyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a Delete Empty Body Exception. A \u003ccode\u003eDelete EmptyBody"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when \"delete\" is called without further"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * information"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class DeleteEmptyBodyException extends EmptyBodyException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Empty constructor as only toString method is repetitively used."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public DeleteEmptyBodyException() { }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns a string message for delete empty body exception."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"Empty deletion is invalid.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 21
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DoneEmptyBodyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a Done Empty Body Exception. A \u003ccode\u003eDone EmptyBody"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when \"done\" is called without further"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * information"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class DoneEmptyBodyException extends EmptyBodyException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Empty constructor as only toString method is repetitively used."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public DoneEmptyBodyException() { }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns a string message for done empty body exception."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"Empty done is invalid.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 21
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyBodyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents an Abstract Empty Body Exception. A \u003ccode\u003eEmptyBody"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when a command is called with"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * empty body"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public abstract class EmptyBodyException extends IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    EmptyBodyException() { }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EventEmptyBodyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents an Event Empty Body Exception. An \u003ccode\u003eEvent Empty Body"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when \"event\" is called without further"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * information"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class EventEmptyBodyException extends EmptyBodyException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Empty constructor as only toString method is repetitively used."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public EventEmptyBodyException() { }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns a string message for event empty body exception."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 21
    }
  },
  {
    "path": "src/main/java/duke/exceptions/FindEmptyBodyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a Find Empty Body Exception. A \u003ccode\u003eFind EmptyBody"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when \"find\" is called without further"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * information"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class FindEmptyBodyException extends EmptyBodyException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Empty constructor as only toString method is repetitively used."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public FindEmptyBodyException() { }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns a string message for find empty body exception."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"Empty find is invalid.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 21
    }
  },
  {
    "path": "src/main/java/duke/exceptions/IllegalTaskTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents an Illegal Task Type Exception. An \u003ccode\u003eIllegal Task Type"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when invalid task type is detected"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class IllegalTaskTypeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Empty constructor as only toString method is repetitively used."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public IllegalTaskTypeException() { }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns a string message for illegal task type body exception."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"Cannot detect task type\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 21
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidDeletionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents an Invalid Deletion Exception. An \u003ccode\u003eInvalid Deletion"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception \u003c/code\u003e object is used when attempted deletion index"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * is invalid"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class InvalidDeletionException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Empty constructor as only toString method is repetitively used."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public InvalidDeletionException() { }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns a string message for invalid deletion exception."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  (Index out of bounds)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"Deletion index is invalid.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 21
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents an Invalid Done Exception . An \u003ccode\u003eInvalid Done Exception"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * \u003c/code\u003e object is used when attempted done index is invalid"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class InvalidDoneException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Empty constructor as only toString method is repetitively used."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public InvalidDoneException() { }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns a string message for invalid done exception."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *  (Index out of bounds)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"Done index is invalid.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 21
    }
  },
  {
    "path": "src/main/java/duke/exceptions/TodoEmptyBodyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a Todo Empty Body Exception. A \u003ccode\u003eTodo EmptyBody"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when \"todo\" is called without further"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * information"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class TodoEmptyBodyException extends EmptyBodyException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Empty constructor as only toString method is repetitively used."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public TodoEmptyBodyException() { }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns a string message for todo empty body exception."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 21
    }
  },
  {
    "path": "src/main/java/duke/exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Represents a Unknown Command Exception. A \u003ccode\u003eUnknown Command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " * Exception\u003c/code\u003e object is used when an unknown command is called"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class UnknownCommandException extends IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Empty constructor as only toString method is repetitively used."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public UnknownCommandException() { }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    /** Returns a string message for unknown command type exception."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        return \"I\u0027m sorry, but I don\u0027t know what that means.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 21
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 19
    }
  },
  {
    "path": "src/test/java/ConvertTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import duke.Converter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class ConvertTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        assertEquals(Converter.by(\"return book /by 2020-01-01\"),\"return book (by: Jan 1 2020)\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 10
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "import duke.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "        assertEquals(\"homework\", new Todo(\"homework\").getMessage());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Caiyi34777": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caiyi34777"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 38,
      "Caiyi34777": 1
    }
  }
]
