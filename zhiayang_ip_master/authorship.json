[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    mainClassName \u003d \"ikura.Main\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    archiveBaseName \u003d \"ikura\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    options.compilerArgs \u003c\u003c \"-Xlint:unchecked\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 26,
      "-": 42
    }
  },
  {
    "path": "build.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "set -e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "javac -sourcepath src/main/java -target 11 -source 11 -Xlint:unchecked -Xdiags:verbose src/main/java/**.java -d bin/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "java -cp bin Main"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 5
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "title: User Guide"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "_ikurabowl_ is a **desktop app for tasks and todos, optimised for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, it can get your contact management tasks done faster than traditional GUI apps."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* Table of Contents"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "{:toc}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "## Quick start"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "1. Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "1. Download the latest `ikurabowl.jar` from [here](https://github.com/zhiayang/ip/releases) and save it to the folder you want to use as the _home folder_ for _ikurabowl_."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "   ![Ui](./Ui.png)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "1. Type the command in the command box and press Enter to execute it. Refer to the [Features](#features) below for details of each command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "**:information_source: Notes about the command format:**\u003cbr\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* Items in angled brackets (eg: `\u003cdescription\u003e`) are the inputs from the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* Items in square brackets (eg: `[date]`) are optional inputs from the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* Command parameters are provided after the relevant specifier (eg. `todo /desc \u003cdescription\u003e`)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* All arguments can contain whitespace; the argument for that parameter ends either at the end of the input, or when the next parameter delimiter (ie. `/foo`) is encountered."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* The date format is `YYYY-MM-DD` in all instances."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "## Types of Tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "### General"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "In general, all tasks have a title and a description; the description is optional, and"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "if not given will simply be empty."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Each task also has one piece of state --- whether or not it is completed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "### Todo"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "A Todo is the most basic type of task; it has no additional state, containing only a"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "title and an (optional) description."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "### Deadline"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "A Deadline is a Todo task, except it has a date component."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "### Event"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "An Event is functionally the same as a Deadline, in that it also has a date component."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "## Commands"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "### Adding a Todo: `todo`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Creates a new Todo task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Format: `todo \u003ctitle\u003e [/desc \u003cdescription\u003e]​`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "If the description is not specified, then it is empty."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* `todo Buy 700 eggs /desc required to bake a huge cake.`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* `todo Buy 30 cartons of milk`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "### Adding an Event: `event`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Creates a new Event; note that the date is mandatory."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Format: `event \u003ctitle\u003e /at \u003cdate\u003e [/desc \u003cdescription\u003e​]`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "The date and description can come in any order, as long as the date is present."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* `event Massive birthday party /at 2020-12-31`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* `event Clean up the mess /desc I\u0027m sure there will be a lot /at 2021-01-01`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "### Adding an Deadline: `deadline`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Creates a new Deadline; note that the date is mandatory."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Format: `deadline \u003ctitle\u003e /by \u003cdate\u003e [/desc \u003cdescription\u003e​]`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* `deadline Bake the massive cake /by 2020-12-29`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* `deadline Invite people /desc I\u0027m sure there will be a lot /by 2020-11-18`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "### Listing all tasks : `list`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Shows a list of all the tasks that are tracked."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "### Deleting all tasks : `reset`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Deletes all tasks from the list. Note that this is irreversible!"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Format: `reset`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "### Completing a task : `done`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Mark a task as done. This takes the task number, which is the same one displayed by the `list` command. Note that the number of the first task is 1."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Format: `done \u003ctask number\u003e`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* `done 3`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "### Deleting a task : `delete`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Delete a task. This takes the task number, similar to `done`."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Format: `delete \u003ctask number\u003e`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* `delete 3`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "### Editing a task : `edit`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Edits an existing task."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Format: `edit \u003ctask number\u003e [/title \u003cnew title\u003e] [/desc \u003cnew description\u003e] [/date \u003cnew date\u003e]`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* Edits the task with the given `\u003ctask number\u003e`, which is the same number displayed by `list`."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* At least one of the optional fields must be provided, but they can be in any order."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* Existing values will be updated to the input values."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* It is an error to edit the date of a Todo (which does not have a date)."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "*  `edit 3 /title I changed my mind /date 2021-12-31` changes the title and date of the 3rd task."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "### Searching for a task: `find`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Finds persons whose names contain *any* of the given keywords."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Format: `find \u003ckeyword\u003e [\u003ckeyword\u003e]...`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* The search is case-insensitive. e.g `owo` will match `OWO`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* The order of the keywords does not matter. e.g. `uwu owo` will match `OWO UWU`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* Both the title and the description of the task are searched."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* Only full words will be matched e.g. `AYAYA` will not match `AYAYAS`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* Persons matching at least one keyword will be returned (i.e. `OR` search)."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  e.g. `owo uwu` will return `monkaS owo`, `monkaMEGA uwu`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "* `find eggs` returns `Buy eggs` and `Dispose of Eggs`"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "### Exiting the program : `quit`"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Format: `quit`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "### Saving the data"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "The list of tasks and their state is saved automatically after every command, so there is no need to save it manually."
      }
    ],
    "authorContributionMap": {
      "zhiayang": 171,
      "-": 19
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "if exist \"%JAVA_EXE%\" goto execute"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 4,
      "-": 85
    }
  },
  {
    "path": "jar.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "set -e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "jar cvmf jar/manifest.mf jar/ikura.jar -C bin ."
      }
    ],
    "authorContributionMap": {
      "zhiayang": 4
    }
  },
  {
    "path": "src/main/java/ikura/Bot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Bot.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.function.BiConsumer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.DatedTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.TaskParser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.StreamUtils;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.TaskDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.InvalidInputException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * The main class containing the functionality of the application. Does not own the"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * tasklist nor the frontend."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class Bot {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final Frontend ui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final Map\u003cString, BiConsumer\u003cString, String\u003e\u003e commandMap \u003d Map.of("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        \"done\",     this::cmdDone,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        \"list\",     this::cmdList,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        \"find\",     this::cmdFind,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        \"reset\",    this::cmdReset,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        \"delete\",   this::cmdDelete,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        \"todo\",     this::cmdAddTask,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        \"event\",    this::cmdAddTask,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        \"deadline\", this::cmdAddTask,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        \"edit\",     this::cmdEditTask"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    );"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new Bot using the given Frontend interface and the given TaskList."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param ui    the frontend interface to use."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param tasks the TaskList to use."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Bot(Frontend ui, TaskList tasks) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.tasks  \u003d tasks;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.ui     \u003d ui;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Gets the task list used by the bot."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Parses a line of user input, and executes the command as appropriate. The"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * return value specifies whether or not the bot should print the exit message."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param str the line user input."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return true if the bot should continue, false if it should exit."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean processCommand(String str) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var sc \u003d new Scanner(str);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (!sc.hasNext()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var cmd \u003d sc.next().strip();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (cmd.equals(\"quit\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.ui.println(\"goodbye\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var input \u003d sc.hasNextLine()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            ? sc.nextLine().strip()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            : \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.ui.beginLog();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        Optional.ofNullable(commandMap.get(cmd)).ifPresentOrElse(x -\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            x.accept(cmd, input);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }, () -\u003e {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.ui.println(\"unknown command \u0027%s\u0027\", cmd);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.ui.endLog();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // save the tasks every time, i suppose."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.tasks.save();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private void cmdEditTask(String cmd, String input) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert cmd.equals(\"edit\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var usage \u003d \"edit \u003ctask number\u003e [/title \u003cnew title\u003e] [/desc \u003cnew description\u003e] [/date \u003cnew date\u003e]\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // usage: edit \u003cN\u003e [/title owo] [/desc uwu] [/date kekw]"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // first, extract the task number."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        int taskIndex \u003d 0;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        Runnable printUsage \u003d () -\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.ui.println(\"invalid arguments\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.ui.println(\"usage: %s\", usage);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        };"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            // split into 2, because we wanna just pass the rest of the stuff at the end to the TaskParser."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            var pieces \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            if (pieces.length \u003c 2) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                printUsage.run();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                taskIndex \u003d Integer.parseInt(pieces[0].strip());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                this.ui.println(\"invalid task number \u0027%s\u0027\", pieces[0]);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                this.ui.println(\"usage: %s\", usage);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            // java is dumb, yet again."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            final var taskIdx \u003d taskIndex;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.tasks.getTaskByNumber(taskIdx)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                .ifPresentOrElse(task -\u003e {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    TaskDescription descs \u003d null;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        descs \u003d TaskParser.parse(\"edit\", pieces[1], \"date\","
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            /* dateCompuslory: */ false, usage);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        this.ui.println(\"error: %s\", e);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        this.ui.println(\"usage: %s\", e.getUsage());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    if (descs.hasDate()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        if (task instanceof DatedTask) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            var datedTask \u003d ((DatedTask) task);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            datedTask.setDate(descs.getDate().get());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            this.ui.println(\"this task does not accept a date (task not modified)\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            return;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    System.out.printf(\"%s, %s\\n\", descs.hasTitle(), descs.hasDescription());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    if (descs.hasTitle() \u0026\u0026 !descs.getTitle().get().isEmpty()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        task.setTitle(descs.getTitle().get());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    if (descs.hasDescription()) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        task.setDescription(descs.getDescription().get());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    this.ui.println(\"successfully updated task:\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    this.ui.println(\"  %s\", task);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                }, () -\u003e {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    this.ui.println(\"task number %d does not exist\", taskIdx);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                });"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private void cmdFind(String cmd, String input) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert cmd.equals(\"find\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var matches \u003d this.tasks.findTasksByKeywords(Arrays.asList(input.split(\" \")));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.ui.println(\"found %d result%s:\", matches.size(), matches.size() \u003d\u003d 1 ? \"\" : \"s\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        matches.stream()"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .map(p -\u003e p.mapFst(x -\u003e x + 1))             // convert to 1-indexed for printing"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .map(t -\u003e String.format(\"  %d. %s\", t.fst(), t.snd()))"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .forEach(x -\u003e this.ui.println(\"%s\", x));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private void cmdReset(String cmd, String input) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert cmd.equals(\"reset\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.tasks.clearTasks();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.ui.println(\"cleared all tasks.\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private void cmdList(String cmd, String input) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert cmd.equals(\"list\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.printTaskStatistics();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        StreamUtils.indexed(this.tasks.stream())"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .map(p -\u003e p.mapFst(x -\u003e x + 1))             // convert to 1-indexed for printing"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .map(t -\u003e String.format(\"  %d. %s\", t.fst(), t.snd()))"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .forEach(x -\u003e this.ui.println(\"%s\", x));"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private void cmdDelete(String cmd, String input) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert cmd.equals(\"delete\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.parseTaskNumber(cmd, input)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .ifPresent(task -\u003e {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                this.tasks.removeTask(task);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                this.ui.println(\"deleted task:\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                this.ui.println(\"  %s\\n\", task);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                this.printTaskStatistics();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            });"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private void cmdDone(String cmd, String input) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert cmd.equals(\"done\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.parseTaskNumber(cmd, input)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .ifPresent(task -\u003e {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                if (task.isDone()) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    this.ui.println(\"task is already marked as done:\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    this.ui.println(\"  %s\", task);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    this.ui.println(\"marked as done:\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    this.ui.println(\"  %s\\n\", task);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    this.printTaskStatistics();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            });"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private void cmdAddTask(String cmd, String input) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert cmd.equals(\"todo\") || cmd.equals(\"event\") || cmd.equals(\"deadline\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            switch (cmd) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                task \u003d Todo.parse(input);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                task \u003d Event.parse(input);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                task \u003d Deadline.parse(input);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                assert false;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.tasks.addTask(task);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.ui.println(\"added: %s\", task);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.ui.println(\"error: %s\", e);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.ui.println(\"usage: %s\", e.getUsage());"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private Optional\u003cTask\u003e parseTaskNumber(String cmd, String input) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            // this is some cursed use of optional"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            var idx \u003d new Scanner(input).nextInt();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return Optional.of(this.tasks.getTaskByNumber(idx)"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                .orElseThrow(() -\u003e new IndexOutOfBoundsException(\"\")));"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.ui.println(\"error: expected an integer task number (\u0027%s\u0027 invalid)\", input);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.ui.println(\"error: expected a task number for \u0027%s\u0027 command\", cmd);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.ui.println(\"error: task \u0027%s\u0027 does not exist\", input);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private void printTaskStatistics() {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var doneTasks \u003d this.tasks.getNumCompletedTasks();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var pendingTasks \u003d this.tasks.getNumPendingTasks();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.ui.println(\"currently tracking %d task%s (%d pending, %d done, %.1f%% complete)\","
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.tasks.count(), this.tasks.count() \u003d\u003d 1 ? \"\" : \"s\", pendingTasks, doneTasks,"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.tasks.count() \u003d\u003d 0 ? 100.0 : 100.0 * ((double) doneTasks / this.tasks.count()));"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 324
    }
  },
  {
    "path": "src/main/java/ikura/Database.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Database.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.Todo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.Event;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.Either;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.Deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.TaskParser;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.InvalidInputException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.InvalidDatabaseException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A class encapsulating the serialisation and deserialisation of the list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class Database {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static final int DATABASE_VERSION \u003d 2;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final String databasePath;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new database, using the given path as the backing file. The file does"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * not have to exist, but it should be writeable."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param path the path to the file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Database(String path) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.databasePath \u003d path;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Split the input by the delimiter \u0027|\u0027, accounting for"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * escaped | in the actual input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param input the input line. this should contain at most 2 pipes."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the list of components: first one can be discarded, second one is the title, third one"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *         is the description (if it exists -- empty otherwise);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static String[] splitTitleAndDescription(String input) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // the input is something like this. so we can just make a an array of 3."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // \u003ctype, doneness and date\u003e | \u003ctitle\u003e | [description]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var currentPart \u003d 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var ret \u003d new StringBuilder[3];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        for (var i \u003d 0; i \u003c 3; i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            ret[i] \u003d new StringBuilder();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        char prev \u003d 0;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        for (int i \u003d 0; i \u003c input.length(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            char ch \u003d input.charAt(i);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            if (ch \u003d\u003d \u0027\\\\\u0027) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                if (i + 1 \u003c input.length() \u0026\u0026 input.charAt(i + 1) \u003d\u003d \u0027|\u0027) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    // append the pipe, then skip the next char (the pipe)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    ret[currentPart].append(\"|\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    i +\u003d 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    ret[currentPart].append(\"\\\\\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            } else if (ch \u003d\u003d \u0027|\u0027) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                currentPart++;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                ret[currentPart].append(input.charAt(i));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return Arrays.stream(ret)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .map(x -\u003e x.toString())"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .collect(Collectors.toList())"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .toArray(new String[0]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Load the list of tasks from the database."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the list of tasks loaded from disk."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @throws IOException if there was an error reading the file."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @throws InvalidDatabaseException if there were malformed lines in the file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public List\u003cTask\u003e loadTasks() throws IOException, InvalidDatabaseException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            here\u0027s the ideal scenario:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            no exceptions. return Pair\u003cList\u003cTask\u003e, List\u003cInteger\u003e\u003e; first is the list of"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            parsed tasks, second is the list of failed tasks."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            but that\u0027s too much effort given this useless language, so if there\u0027s a malformed"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            line in the database just abort the whole thing."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var path \u003d Path.of(this.databasePath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            // just return an empty list. we\u0027ll create the file when we save."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // the file probably exists now."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // first line indicates version. java streams are dumb, so this will have to do."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var dbVersion \u003d Files.lines(path)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .findFirst()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .flatMap(x -\u003e {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    return Optional.of(Integer.parseInt(x));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    return Optional.empty();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            })"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .orElse(DATABASE_VERSION);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (dbVersion !\u003d DATABASE_VERSION) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            throw new InvalidDatabaseException(String.format("
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                \"version mismatch; expected \u0027%d\u0027, found \u0027%d\u0027\", DATABASE_VERSION, dbVersion"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            ));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var xs \u003d Files.lines(path).collect(Collectors.toList());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // if there\u0027s no lines then return an empty list as well."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (xs.isEmpty()) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // TODO: make and use a stream zipper to make this code less obtuse"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // one might note the flagrant use of Collectors.toList() here, it\u0027s because java"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // streams suck."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // TODO: \u0027|\u0027 character needs to be escaped"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var ret \u003d xs.subList(1, xs.size())"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .stream()"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            // java is a bad language."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .map(new Function\u003cString, Either\u003cString, Task\u003e\u003e() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                @Override"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                public Either\u003cString, Task\u003e apply(String line) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    /*"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        format:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        \u003ctype\u003e \u003cdoneness\u003e [date string] \"|\" \u003ctitle\u003e \"|\" \u003cdescription\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        \u003ctype\u003e       :: char (ascii char)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                        \u0027T\u0027 \u003d todo"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                        \u0027D\u0027 \u003d deadline"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                        \u0027E\u0027 \u003d event"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        \u003cdoneness\u003e   :: char (ascii char)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                        \u00271\u0027 \u003d done"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                        \u00270\u0027 \u003d rare"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    var type \u003d line.charAt(0);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    var asdf \u003d line.charAt(1);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    var done \u003d false;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    // time for some 3Head java"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    if (asdf \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        done \u003d true;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    } else if (asdf \u003d\u003d \u00270\u0027) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        done \u003d false;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        // ideally we\u0027d tell the user the line number, but given that:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        // 1. java streams suck, so there\u0027s no way to get the index of this line"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        // 2. they\u0027re not supposed to edit the file anyway,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        // let\u0027s just not bother."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        return Either.left(String.format(\"invalid doneness \u0027%c\u0027 (expected either \u00270\u0027 or \u00271\u0027)\", asdf));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    var bits \u003d splitTitleAndDescription(line);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    // TODO: clean up this code"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    Task task \u003d null;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    if (type \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        var title \u003d bits[1];"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        var desc  \u003d bits[2];"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        task \u003d new Todo(title, desc);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    } else if (type \u003d\u003d \u0027D\u0027 || type \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            var date \u003d TaskParser.parseDate(bits[0].substring(2));"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            var title \u003d bits[1];"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            var desc  \u003d bits[2];"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            if (type \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                task \u003d new Deadline(title, desc, date);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                task \u003d new Event(title, desc, date);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            return Either.left(e.toString());"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        return Either.left(String.format(\"invalid type \u0027%c\u0027 (expected one of \u0027T\u0027, \u0027D\u0027, \u0027E\u0027)\", type));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    assert task !\u003d null;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    if (done) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    return Either.right(task);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            })"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        Optional\u003cEither\u003cString, Task\u003e\u003e error \u003d null;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if ((error \u003d ret.stream().filter(Either::isLeft).findFirst()).isPresent()) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            throw new InvalidDatabaseException(error.get().fromLeft());"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return ret.stream()"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                .filter(Either::isRight)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                .map(Either::fromRight)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Saves the list of tasks to disk."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param list the list of tasks."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @throws IOException if there were errors creating or writing the file."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void saveTasks(List\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var path \u003d Path.of(this.databasePath);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            if (!Files.exists(path.getParent())) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                // this is apparently equivalent to `mkdir -p`"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                Files.createDirectories(path.getParent());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            Files.createFile(path);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        Files.write(path,"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            Stream.concat("
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                Stream.of(String.format(\"%d\", DATABASE_VERSION)),"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                list.stream()"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    .map(task -\u003e {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        var title \u003d task.getTitle();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        var desc  \u003d task.getDescription();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        // escape any pipes in the content"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        title \u003d title.replace(\"|\", \"\\\\|\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        desc  \u003d desc.replace(\"|\", \"\\\\|\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        if (task instanceof Todo) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            return String.format(\"%c%c|%s|%s\", \u0027T\u0027,"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                task.isDone() ? \u00271\u0027 : \u00270\u0027,"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                title, desc);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            var event \u003d (Event) task;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            return String.format(\"%c%c%s|%s|%s\", \u0027E\u0027,"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                task.isDone() ? \u00271\u0027 : \u00270\u0027,"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                event.getDate().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                title, desc);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            var deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            return String.format(\"%c%c%s|%s|%s\", \u0027D\u0027,"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                task.isDone() ? \u00271\u0027 : \u00270\u0027,"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                deadline.getDate().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                title, desc);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            // asdf?!"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            return \"\";"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    })"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            )"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .collect(Collectors.toList())"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 308
    }
  },
  {
    "path": "src/main/java/ikura/Frontend.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Frontend.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public abstract class Frontend {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static final String BOT_NAME  \u003d \"ikurabowl\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    protected final Bot bot;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    protected Frontend(TaskList tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.bot \u003d new Bot(this, tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Returns the bot instance owned by this frontend."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the bot."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Bot getBot() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.bot;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Runs the main loop (or equivalent) of the frontend. When this method returns, the"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * program should exit."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public abstract void run();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Prints a line of output to this TextFrontend\u0027s output stream. Has an identical interface to"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * System.out.printf()."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param fmt  the format string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param args the list of objects."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public abstract void println(String fmt, Object... args);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Begins a \"session\", ie. the output to a given command. Used to delimit output between consecutive"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * commands."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public abstract void beginLog();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Ends a \"session\", ie. the output to a given command. Used to delimit output between consecutive"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * commands, or to signal that the frontend should update."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public abstract void endLog();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 50
    }
  },
  {
    "path": "src/main/java/ikura/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Main.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.gui.GuiFrontend;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static final String DB_PATH   \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * The entry point for the application."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param args the command ilne arguments"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var tasks \u003d new TaskList(new Database(DB_PATH));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var frontend \u003d new GuiFrontend(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        frontend.run();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 24
    }
  },
  {
    "path": "src/main/java/ikura/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// TaskList.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.Pair;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.Observable;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.StreamUtils;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.InvalidDatabaseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A class encapsulating the list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class TaskList extends Observable\u003cTaskList\u003e /* CRTP KEKW */ {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    //* this can\u0027t be final, because the compiler is dumb"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final Database db;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a TaskList, loading the tasks from disk from the given Database."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param db the Database to use."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public TaskList(Database db) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.db \u003d db;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.tasks \u003d db.loadTasks();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            System.out.printf(\"error occured while reading/creating the task list:\\n%s\\n\", e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (InvalidDatabaseException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            System.out.printf(\"malformed line while reading task list:\\n%s\\n\", e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Saves the list of tasks to disk."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void save() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.db.saveTasks(this.tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            System.out.printf(\"failed to save task list to disk:\\n%s\\n\", e);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Returns the number of tasks in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the number of tasks."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public int count() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Returns the tasks as a Stream."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return a Stream of Tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Stream\u003cTask\u003e stream() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.tasks.stream();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Returns the number of tasks in the list that are not completed."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the number of undone tasks."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public long getNumPendingTasks() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.tasks.stream().filter(x -\u003e !x.isDone()).count();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Returns the number of tasks in the list that are completed."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the number of done tasks."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public long getNumCompletedTasks() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.tasks.stream().filter(x -\u003e x.isDone()).count();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Adds a task to the list. The task should not be null."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param task the task to add."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert task !\u003d null;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        task.addObserver(t -\u003e {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.updateObservers();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.updateObservers();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Returns the list of tasks, as a new, immutable List."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the list of tasks."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return List.copyOf(this.tasks);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Removes a task from the list."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param task the task to remove."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void removeTask(Task task) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert this.tasks.size() \u003e 0;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.tasks.remove(task);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.updateObservers();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Removes all tasks from the list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void clearTasks() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.tasks.clear();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.updateObservers();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Gets a task with the given number. The number should be 1-indexed (ie. the first task is 1)."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param number the number of the wanted task."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the Task if it exists, or an empty optional otherwise."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Optional\u003cTask\u003e getTaskByNumber(int number) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // asdf"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return Optional.of(this.tasks.get(number - 1));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Finds tasks using a list of keywords. Tasks containing *ANY* of the strings in the input"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * array will be matched."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param keywords the list of words to search with"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return a list of matching Tasks, together with their task number (0-indexed)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public List\u003cPair\u003cInteger, Task\u003e\u003e findTasksByKeywords(List\u003cString\u003e keywords) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return StreamUtils.indexed(this.tasks.stream())"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .filter(x -\u003e {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                var words \u003d Stream.concat("
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    Arrays.stream(x.snd().getTitle().split(\" \")),"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    Arrays.stream(x.snd().getDescription().split(\" \"))"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                ).map(t -\u003e t.toLowerCase());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                return words.anyMatch(w -\u003e keywords.contains(w));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            })"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 179
    }
  },
  {
    "path": "src/main/java/ikura/TextFrontend.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// TextFrontend.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A class to abstract the user input and output from the rest of the application. An output stream"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * in the form of a PrintStream and an input stream in the form of a Scanner can be specified."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class TextFrontend extends Frontend {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new TextFrontend with the given name, using stdio (System.out and System.in) as"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * the input and output streams respectively."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param name the name of the bot."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public TextFrontend(TaskList tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this(tasks, new Scanner(System.in), System.out);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new TextFrontend with the given name, using the specified input and output streams."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param name    the name of the bot."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param scanner the Scanner to use as the input stream."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param out     the PrintStream to use as the output stream."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public TextFrontend(TaskList tasks, Scanner scanner, PrintStream out) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        super(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.sc     \u003d scanner;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.out    \u003d out;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private Optional\u003cString\u003e readLine() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.out.printf(\"\u003e \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.sc.hasNextLine()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            ? Optional.of(this.sc.nextLine())"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            : Optional.empty();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        println(\"Hello, I\u0027m %s\", Frontend.BOT_NAME);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        while (this.readLine().map(bot::processCommand).orElse(false))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void println(String fmt, Object... args) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.out.printf(fmt, args);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.out.println();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void beginLog() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        println(\"\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void endLog() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        println(\"--------------------------------------\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 76
    }
  },
  {
    "path": "src/main/java/ikura/gui/FxWrapper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// FxWrapper.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.gui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.gui.components.MainView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class FxWrapper extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    // this is kind of hack; javafx insists on \"taking over\" main(), so we can\u0027t control"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    // constructors or anything like that. in the run() function then we just set a"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    // static field so that we can use it from the javafx start() method."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static GuiFrontend frontend;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Runs the application with the provided GuiFrontend."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param frontend the frontend to use"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static void run(GuiFrontend frontend) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        FxWrapper.frontend \u003d frontend;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        Application.launch(new String[] { });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var main \u003d new MainView(this.frontend, 1280, 800);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var scene \u003d new Scene(main);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        stage.setTitle(GuiFrontend.BOT_NAME);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        stage.requestFocus();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 42
    }
  },
  {
    "path": "src/main/java/ikura/gui/GuiFrontend.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// GuiFrontend.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.gui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.Frontend;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class GuiFrontend extends Frontend {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final ObservableList\u003cString\u003e outputLog;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new GuiFrontend using the given tasklist."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param tasks the TaskList to use"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public GuiFrontend(TaskList tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        super(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.outputLog \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Get the output log of the Bot, as an ObservableList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the output log as an ObservableList"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public ObservableList\u003cString\u003e getOutputLog() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.outputLog;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Executes the given command with the bot instance. The interface is the same; if this returns"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * true, then the bot should not exit; if it returns false, then it should exit."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param cmd the command to execute"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return true if the bot should continue, false if it should exit"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean processCommand(String cmd) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.bot.processCommand(cmd);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        FxWrapper.run(this);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void println(String fmt, Object... args) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.outputLog.add(String.format(fmt, args));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void beginLog() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void endLog() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // make some spacing, since the user input is not echoed"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.outputLog.add(\"\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 67
    }
  },
  {
    "path": "src/main/java/ikura/gui/components/CommandHistoryView.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// CommandHistoryView.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.gui.components;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.gui.GuiFrontend;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.Priority;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A View that shows the output of the bot as lines of text."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class CommandHistoryView extends VBox {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final ObservableList\u003cString\u003e history;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new CommandHistoryView, linked to the given frontend"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param frontend the frontend to use"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public CommandHistoryView(GuiFrontend frontend) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.history \u003d frontend.getOutputLog();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var list \u003d new ListView\u003cString\u003e(this.history);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        list.setFocusTraversable(false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // imagine needing to write 14 lines of code just so you can change the"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // font of the things inside the listview."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        list.setCellFactory(cell -\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return new ListCell\u003cString\u003e() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                @Override protected void updateItem(String item, boolean empty) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    super.updateItem(item, empty);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    if (item !\u003d null \u0026\u0026 !empty) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        this.setText(item);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        this.setFont(Font.font(14));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        this.setText(null);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            };"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        VBox.setVgrow(list, Priority.ALWAYS);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.getChildren().add(list);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.setFocusTraversable(false);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.setFillWidth(true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 57
    }
  },
  {
    "path": "src/main/java/ikura/gui/components/CommandInputView.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// CommandInputView.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.gui.components;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.gui.GuiFrontend;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.input.KeyCode;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.Priority;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A view that has a button and a textfield, that is used for entering commands."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class CommandInputView extends HBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final GuiFrontend frontend;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final TextField field;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new CommandInputView, linked to the given frontend"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param frontend the frontend to use"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public CommandInputView(GuiFrontend frontend) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.frontend \u003d frontend;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.field \u003d new TextField();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.field.setPromptText(\"enter command here\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.field.setFont(Font.font(14));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var enterButton \u003d new Button(\"send\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        enterButton.setFont(Font.font(14));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        enterButton.setOnAction(event -\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.runCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.field.setOnKeyPressed(event -\u003e {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            if (event.getCode() \u003d\u003d KeyCode.ENTER) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                this.runCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        HBox.setHgrow(this.field, Priority.ALWAYS);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.getChildren().addAll(enterButton, this.field);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // focus the text field."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        Platform.runLater(() -\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.field.requestFocus();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private void runCommand() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var cmd \u003d this.field.getText();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (!cmd.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.field.setText(\"\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            if (!this.frontend.processCommand(cmd)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 71
    }
  },
  {
    "path": "src/main/java/ikura/gui/components/CommandView.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// CommandView.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.gui.components;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.gui.GuiFrontend;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.Priority;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A View that combines a CommandHistoryView and a CommandInputView. This makes up the left"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * pane of the GUI."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class CommandView extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new CommandView, linked to the given frontend"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param frontend the frontend to use"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public CommandView(GuiFrontend frontend) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var cmdHistory \u003d new CommandHistoryView(frontend);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var cmdInput \u003d new CommandInputView(frontend);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var box \u003d new VBox(cmdHistory, cmdInput);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        VBox.setVgrow(cmdHistory, Priority.ALWAYS);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        box.setFillWidth(true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.getChildren().add(box);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        AnchorPane.setTopAnchor(box, 0.0);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        AnchorPane.setLeftAnchor(box, 0.0);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        AnchorPane.setRightAnchor(box, 0.0);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        AnchorPane.setBottomAnchor(box, 0.0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 39
    }
  },
  {
    "path": "src/main/java/ikura/gui/components/MainView.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// MainView.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.gui.components;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.gui.GuiFrontend;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.control.SplitPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * The main view of the GUI, consisting of the CommandView on the left and the TaskListView on the right."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class MainView extends StackPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new CommandInputView, linked to the given frontend, with the preferred dimensions."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param frontend          the frontend to use"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param preferredWidth    the preferred width"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param preferredHeight   the preferred height"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public MainView(GuiFrontend frontend, int preferredWidth, int preferredHeight) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        StackPane.setAlignment(this, Pos.CENTER);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.setPrefWidth(preferredWidth);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.setPrefHeight(preferredHeight);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var split \u003d new SplitPane(new CommandView(frontend), new TaskListView(frontend));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        StackPane.setMargin(split, new Insets(10.0));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.getChildren().add(split);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.setFocusTraversable(false);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 38
    }
  },
  {
    "path": "src/main/java/ikura/gui/components/TaskListView.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// TaskListView.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.gui.components;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.gui.GuiFrontend;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A View that displays a list of tasks, which are themselves displayed as TaskViews,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class TaskListView extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new TaskListView, linked to the given frontend"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param frontend the frontend to use"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public TaskListView(GuiFrontend frontend) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var items \u003d new VBox(/* spacing: */ 40.0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        items.setFocusTraversable(false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        items.setFillWidth(true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var scroll \u003d new ScrollPane(items);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        scroll.setPadding(new Insets(20));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        scroll.setFocusTraversable(false);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        scroll.setFitToWidth(true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        scroll.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // TODO: deduplicate this code"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        frontend.getBot().getTaskList().addObserver(list -\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            items.getChildren().clear();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            items.getChildren().addAll(list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                .map(t -\u003e new TaskView(items, t))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        items.getChildren().addAll(frontend.getBot().getTaskList()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .stream()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .map(t -\u003e new TaskView(items, t))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.getChildren().add(scroll);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.setFocusTraversable(false);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        AnchorPane.setTopAnchor(scroll, 0.0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        AnchorPane.setLeftAnchor(scroll, 0.0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        AnchorPane.setRightAnchor(scroll, 0.0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        AnchorPane.setBottomAnchor(scroll, 0.0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 60
    }
  },
  {
    "path": "src/main/java/ikura/gui/components/TaskView.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// TaskView.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.gui.components;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// import java.util.function.Consumer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.text.TextFlow;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.control.Separator;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A View that displays a Task, including its title and description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class TaskView extends AnchorPane {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static final String SYMBOL_DONE     \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static final String SYMBOL_NOT_DONE \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new TaskView with its parent, and the task to display."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param parent the parent JavaFX component of this TaskView (should be a TaskListView)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param task   the Task to display"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public TaskView(Region parent, Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var doneButton \u003d new Button(getDonenessSymbol(task));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        doneButton.setMaxHeight(Double.MAX_VALUE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        doneButton.setFont(new Font(\"Arial\", 16));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        doneButton.setMinSize(Button.USE_PREF_SIZE, Button.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        doneButton.setMaxSize(40, 40);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // imagine not having first-class functions in 2020"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        Runnable updateButton \u003d () -\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            doneButton.setText(getDonenessSymbol(task));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        };"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        doneButton.setOnAction(event -\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            if (task.isDone()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                task.markAsNotDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            updateButton.run();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // in case the title gets too long, use a TextFlow for that as well."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var title \u003d new Label(task.getTitle());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var titleArea \u003d new HBox(20, doneButton, title);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        titleArea.setPadding(new Insets(5.0));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        title.maxWidthProperty().bind(titleArea.widthProperty());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        title.setWrapText(true);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // titleTF.prefWidthProperty().bind(titleArea.widthProperty());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        title.setFont(new Font(\"Arial\", 30));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var desc \u003d new Text(task.getDescription());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        desc.setFont(new Font(\"Arial\", 18));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        task.addObserver(t -\u003e {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            title.setText(t.getTitle());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            desc.setText(t.getDescription());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            updateButton.run();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var tf \u003d new TextFlow(desc);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        tf.prefWidthProperty().bind(parent.widthProperty());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        tf.setPadding(new Insets(10.0));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var box \u003d new VBox(titleArea, new Separator(), tf);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        AnchorPane.setTopAnchor(box, 0.0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        AnchorPane.setLeftAnchor(box, 0.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        AnchorPane.setRightAnchor(box, 0.0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        AnchorPane.setBottomAnchor(box, 0.0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.getChildren().add(box);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.setBackground(new Background(new BackgroundFill(Color.web(\"aaaaaa\"), new CornerRadii(10.0), null)));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.setMaxHeight(Double.MAX_VALUE);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static String getDonenessSymbol(Task task) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return SYMBOL_DONE;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return SYMBOL_NOT_DONE;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 109
    }
  },
  {
    "path": "src/main/java/ikura/task/DatedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// DatedTask.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * An abstract base class for tasks that have a date component."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class DatedTask extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new DatedTask with a title, description, and date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param title the task title"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param description the task description"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param date the task date"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    protected DatedTask(String title, String description, LocalDate date) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        super(title, description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean hasDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Set the date of this task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param date the new date"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Get the date of this task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the date of this task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 49
    }
  },
  {
    "path": "src/main/java/ikura/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.InvalidInputException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A class representing a Deadline task. It has a description (name), and a deadline (date)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class Deadline extends DatedTask {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new Deadline task with the given description and deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param name     the Deadline\u0027s description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param deadline the deadline of this task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Deadline(String name, LocalDate deadline) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this(name, \"\", deadline);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new Deadline task with the given title, description and date."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param title       the Deadline\u0027s description."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param description the Deadline\u0027s description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param deadline    the date of this event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Deadline(String title, String description, LocalDate deadline) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        super(title, description, deadline);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return String.format(\"[D] %s (by: %s)\", super.toString(),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.getDate().format(DateTimeFormatter.ofPattern(\"d MMMM yyyy\")));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return (other instanceof Deadline)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            \u0026\u0026 ((Deadline) other).getTitle().equals(this.getTitle())"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            \u0026\u0026 ((Deadline) other).getDate().equals(this.getDate())"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            \u0026\u0026 ((Deadline) other).getDescription().equals(this.getDescription());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Parses a Deadline from the given input. The input should be of the"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * form \"deadline (description) /by (date)\", where (date) is in the form"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * \"yyyy-mm-dd\"."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param  input the user\u0027s input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the Deadline with the given description and deadline."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @throws InvalidInputException if the input was malformed."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static Deadline parse(String input) throws InvalidInputException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var desc \u003d TaskParser.parse(\"deadline\", input, \"by\", /* dateCompulsory: */ true, getUsage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert desc.hasTitle() \u0026\u0026 desc.hasDate();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (desc.hasDescription()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return new Deadline(desc.getTitle().get(), desc.getDescription().get(), desc.getDate().get());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return new Deadline(desc.getTitle().get(), desc.getDate().get());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Gets the usage of the deadline command; this is the expected format of the input"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * passed to the parse() method."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the usage."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static String getUsage() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return \"deadline \u003cdescription\u003e /by \u003cdate\u003e\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 82
    }
  },
  {
    "path": "src/main/java/ikura/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Event.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.InvalidInputException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A class representing a Event task. It has a description (name), and a date."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class Event extends DatedTask {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new Event task with the given title and date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param title    the Event\u0027s title."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param deadline the date of this event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Event(String title, LocalDate date) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this(title, \"\", date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new Event task with the given title, description and date."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param title       the Event\u0027s description."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param description the Event\u0027s description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param deadline    the date of this event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Event(String title, String description, LocalDate date) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        super(title, description, date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return String.format(\"[E] %s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.getDate().format(DateTimeFormatter.ofPattern(\"d MMMM yyyy\")));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return (other instanceof Event)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            \u0026\u0026 ((Event) other).getTitle().equals(this.getTitle())"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            \u0026\u0026 ((Event) other).getDate().equals(this.getDate())"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            \u0026\u0026 ((Event) other).getDescription().equals(this.getDescription());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Parses an Event from the given input. The input should be of the"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * form \"event (description) /at (date)\", where (date) is in the form"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * \"yyyy-mm-dd\"."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param  input the user\u0027s input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the Event with the given description and date."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @throws InvalidInputException if the input was malformed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static Event parse(String input) throws InvalidInputException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var desc \u003d TaskParser.parse(\"event\", input, \"at\", /* dateCompulsory: */ true, getUsage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert desc.hasTitle() \u0026\u0026 desc.hasDate();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (desc.hasDescription()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return new Event(desc.getTitle().get(), desc.getDescription().get(), desc.getDate().get());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return new Event(desc.getTitle().get(), desc.getDate().get());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Gets the usage of the event command; this is the expected format of the input"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * passed to the parse() method."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the usage."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static String getUsage() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return \"event \u003cdescription\u003e /at \u003cdate\u003e\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 81
    }
  },
  {
    "path": "src/main/java/ikura/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Task.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.Observable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * An abstract class representing a Task. It contains a description (name) and records its current state"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * (done or not done)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public abstract class Task extends Observable\u003cTask\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new Task with the given description. It is set to uncompleted by default."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param title the task\u0027s title."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    protected Task(String title) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this(title, \"\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    protected Task(String title, String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Gets the title of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the task\u0027s title."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Sets the title of the task to the new title, which can neither be null nor empty."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param title the new title"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert title !\u003d null \u0026\u0026 !title.isEmpty();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.updateObservers();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Sets the description of the task, which can be empty but not null."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param description the new description"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.updateObservers();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Returns true if the task is completed, false otherwise."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return true if the task is completed, false otherwise."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Mark the task as completed. This should not be called on a task that is already"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * marked as done."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert !this.done;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.updateObservers();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Mark the task as not completed. This should only be called on tasks that are already"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * completed."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void markAsNotDone() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert this.done;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.updateObservers();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Check if the task has an associated date."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return true if the task has a date, false otherwise."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public abstract boolean hasDate();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return String.format(\"[%s] %s\", this.done ? \"\\u2713\" : \"\\u2718\", this.title);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 120
    }
  },
  {
    "path": "src/main/java/ikura/task/TaskDescription.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// TaskDescription.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A container class to hold the results of parsing a task-related command. Contains"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * a title, a description, and a date -- all of which are optional."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class TaskDescription {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final Optional\u003cString\u003e title;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final Optional\u003cString\u003e description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final Optional\u003cLocalDate\u003e date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private TaskDescription(Optional\u003cString\u003e title, Optional\u003cString\u003e description,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        Optional\u003cLocalDate\u003e date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.date           \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.title          \u003d title;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.description    \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Get the title, if any."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the title, optionally"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Optional\u003cString\u003e getTitle() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Get the description, if any."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the description, optionally"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Optional\u003cString\u003e getDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Get the date, if any."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the date, optionally"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Optional\u003cLocalDate\u003e getDate() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Checks whether a title is present."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return true if a title is present"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean hasTitle() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.title.isPresent();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Checks whether a description is present."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return true if a description is present"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean hasDescription() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.description.isPresent();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Checks whether a date is present."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return true if a date is present"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean hasDate() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.date.isPresent();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Create a task description with none of the components present."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return an empty task description"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static TaskDescription withNothing() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new TaskDescription(Optional.empty(), Optional.empty(), Optional.empty());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Create a task description with only a title."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param title the task title, not null"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return a task description"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static TaskDescription withTitle(String title) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new TaskDescription(Optional.of(title), Optional.empty(), Optional.empty());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Create a task description with only a description."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param description the task description, not null"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return a task description"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static TaskDescription withDescription(String description) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new TaskDescription(Optional.empty(), Optional.of(description), Optional.empty());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Create a task description with a title and a description."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param title the task title, not null"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param description the task description, not null"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return a task description"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static TaskDescription withTitleAndDescription(String title, String description) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new TaskDescription(Optional.of(title), Optional.of(description), Optional.empty());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Create a task description with a title and a date."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param title the task title, not null"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param date  the task date, not null"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return a task description"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static TaskDescription withTitleAndDate(String title, LocalDate date) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new TaskDescription(Optional.of(title), Optional.empty(), Optional.of(date));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Create a task description with a title, a description, and a date. Any of the"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * components can be nullable to omit them."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param title         the task title, possibly null."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param description   the task description, possibly null."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param date          the task date, possibly null."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return a task description"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static TaskDescription of(String title, String description, LocalDate date) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new TaskDescription("
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            Optional.ofNullable(title),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            Optional.ofNullable(description),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            Optional.ofNullable(date)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 151
    }
  },
  {
    "path": "src/main/java/ikura/task/TaskParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// TaskParser.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.InvalidInputException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A helper class with methods to parse task descriptions."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class TaskParser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Parses the provided input, extracting the task\u0027s description and the date. The input should"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * be of the form \"(description) /(dateSpec) (date)\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param kind           the specific kind; eg. \"deadline\" or \"event\"."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param input          the user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param dateSpec       the keyword for specifying the date (after the slash); either \u0027at\u0027 or \u0027by\u0027."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param dateCompulsory whether or not the date is compulsory for this particular command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param usage          the correct usage for the command (used for the error message)."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return a Pair of strings; first is the title, and second is the date."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @throws InvalidInputException when the input is malformed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static TaskDescription parse(String kind, String input, String dateSpec,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        boolean dateCompulsory, String usage) throws InvalidInputException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // TODO: make kind an enum"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // TODO: allow \u0027/\u0027 in description or title via escapes or something"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (input.isEmpty()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            throw new InvalidInputException(\"task description cannot be empty\", usage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var pieces \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (pieces.length \u003d\u003d 1 \u0026\u0026 dateCompulsory) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            throw new InvalidInputException(String.format(\"%s requires a date\", kind), usage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        String title   \u003d pieces[0].strip();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        String desc    \u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        LocalDate date \u003d null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        for (int i \u003d 1; i \u003c pieces.length; i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            if (!dateSpec.isEmpty() \u0026\u0026 pieces[i].startsWith(dateSpec)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                date \u003d parseDate(pieces[i].substring(dateSpec.length()).strip());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            } else if (pieces[i].startsWith(\"desc \")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                desc \u003d pieces[i].substring(5).strip();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            } else if (pieces[i].startsWith(\"title \")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                title \u003d pieces[i].substring(6).strip();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                throw new InvalidInputException(String.format(\"Unexpected argument \u0027%s\u0027\", pieces[i]), usage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return TaskDescription.of(title, desc, date);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Parses the input string as a date according to ISO-8601 format (yyyy-mm-dd)."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param date the input string."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the LocalDate representing the input date."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @throws InvalidInputException if the input was not in the correct format."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static LocalDate parseDate(String date) throws InvalidInputException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // TODO: handle more formats, eg dd/mm/yy, dd/mm/yyyy, dd/mm"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // TODO: handle offsets from now, eg. +7d or something like that"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return LocalDate.parse(date, DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            throw new InvalidInputException(String.format(\"invalid date format: %s\", e.getMessage()),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                \"yyyy-mm-dd\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 81
    }
  },
  {
    "path": "src/main/java/ikura/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Todo.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.InvalidInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A class representing a Todo task. It has a description (name), and nothing else."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new Todo task with the given title."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param title the Todo\u0027s title."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Todo(String title) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new Todo task with the given title and description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param title         the Todo\u0027s title."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param description   the Todo\u0027s description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Todo(String title, String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        super(title, description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return String.format(\"[T] %s\", super.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return (other instanceof Todo)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            \u0026\u0026 ((Todo) other).getTitle().equals(this.getTitle());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean hasDate() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Parses a Todo from the given input. In this case it is simply used verbatim"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * as the task\u0027s description."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param  input the Todo\u0027s description."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the Todo with the given description."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @throws InvalidInputException if the input was empty."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static Todo parse(String input) throws InvalidInputException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var desc \u003d TaskParser.parse(\"todo\", input, /* dateSpec: */ \"\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            /* dateCompulsory: */ false, getUsage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert desc.hasTitle();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert !desc.hasDate();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (desc.hasDescription()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return new Todo(desc.getTitle().get(), desc.getDescription().get());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return new Todo(desc.getTitle().get());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Gets the usage of the todo command; this is the expected format of the input"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * passed to the parse() method."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the usage."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static String getUsage() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return \"todo \u003ctitle\u003e\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 80
    }
  },
  {
    "path": "src/main/java/ikura/util/Either.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Either.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.util;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A container class that wraps a value of either type L (the \u0027left\u0027 value), or"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * of type R (the \u0027right\u0027 value), but not both at once -- an Either contains only"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * either a left or a right value."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class Either\u003cL, R\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final L leftValue;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final R rightValue;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private Either(L leftVal, R rightVal) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.leftValue \u003d leftVal;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.rightValue \u003d rightVal;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert this.leftValue \u003d\u003d null || this.rightValue \u003d\u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Returns true if the Either contains a left value, false otherwise."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return true if this is a left value, false otherwise."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean isLeft() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.leftValue !\u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Returns true if the Either contains a right value, false otherwise."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return True if this is a right value, false otherwise."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean isRight() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.rightValue !\u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Obtains the stored left value in the Either. If the Either contains a"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * right value, throws a NoSuchElementException."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return The left value contained in the Either."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public L fromLeft() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return Optional.ofNullable(this.leftValue).get();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Obtains the stored right value in the Either. If the Either contains a"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * right value, throws a NoSuchElementException."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return The right value contained in the Either."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public R fromRight() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return Optional.ofNullable(this.rightValue).get();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Maps the given function onto the left value of the Either, returning a new Either with"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * the updated left value. If it contains a right value, it returns the Either unmodified."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param fn the function to map with."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the new Either with the corresponding value."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public \u003cL1\u003e Either\u003cL1, R\u003e mapLeft(Function\u003c? super L, ? extends L1\u003e fn) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.isLeft()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            ? Either.left(fn.apply(this.leftValue))"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            : Either.right(this.rightValue);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Maps the given function onto the right value of the Either, returning a new Either with"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * the updated right value. If it contains a left value, it returns the Either unmodified."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param fn the function to map with."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the new Either with the corresponding value."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public \u003cR1\u003e Either\u003cL, R1\u003e mapRight(Function\u003c? super R, ? extends R1\u003e fn) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.isRight()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            ? Either.right(fn.apply(this.rightValue))"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            : Either.left(this.leftValue);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Creates an Either containing a left value."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return An Either containing a left value."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static \u003cL, R\u003e Either\u003cL, R\u003e left(L l) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new Either\u003cL, R\u003e(l, null);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Creates an Either containing a right value."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return An Either containing a right value."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static \u003cL, R\u003e Either\u003cL, R\u003e right(R r) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new Either\u003cL, R\u003e(null, r);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 108
    }
  },
  {
    "path": "src/main/java/ikura/util/InvalidDatabaseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// InvalidDatabaseException.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.util;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * An exception that is thrown when there are errors when reading the database"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * (eg. missing entries)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class InvalidDatabaseException extends Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new InvalidDatabaseException with the given message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param msg the exception message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public InvalidDatabaseException(String msg) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 20
    }
  },
  {
    "path": "src/main/java/ikura/util/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// InvalidInputException.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.util;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * An exception that is thrown when the user provides an invalid input, for example"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * invalid commands or malformed dates."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class InvalidInputException extends Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final String usage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new InvalidInputException with the given message, and"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * the expected usage of the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param msg   the exception message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param usage the expected usage of the command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public InvalidInputException(String msg, String usage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.usage \u003d usage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Gets the expected usage of the command, specific to the code that"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * threw the exception."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the expected usage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public String getUsage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.usage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // don\u0027t include the exception name."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.getMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 42
    }
  },
  {
    "path": "src/main/java/ikura/util/Observable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Observable.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.util;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A base class for all Observable objects, that can hold a list of observers, and can"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * update said observers via a callback when the object changes."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * Note that, if your observer callback modifies the object it is watching (such that"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * the object again needs to update its observers), the callback will not be called"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * a subsequent time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * Because java is a great language, this cannot be an interface."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public abstract class Observable\u003cT\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    // the list of observers."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final List\u003cConsumer\u003cT\u003e\u003e observers \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    // the reentrancy counter, so we don\u0027t end up in a recursive spiral when a"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    // callback ends up modifying the object that it is watching itself."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private int depthCounter \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Add an observer that listens for changes on this object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param observer the function to run when changes are made"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void addObserver(Consumer\u003cT\u003e observer) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.observers.add(observer);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Helper method for Observable classes; this handles checking for the reentrancy of"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * observation methods."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    protected void updateObservers() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (this.depthCounter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.depthCounter +\u003d 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            for (var obs : observers) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                obs.accept((T) this);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.depthCounter -\u003d 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 55
    }
  },
  {
    "path": "src/main/java/ikura/util/Pair.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Pair.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.util;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.function.BiFunction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * A container class with two values, of types L and R. No restrictions are"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " * imposed on the types or their values."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class Pair\u003cT, U\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final T one;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final U two;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a new Pair with the specified values."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param a the first value."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param b the second value."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Pair(T a, U b) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.one \u003d a;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.two \u003d b;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Obtains the first value from the pair."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the first value."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public T fst() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.one;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Obtains the second value from the pair."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return the second value."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public U snd() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.two;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Performs a map on both values of the pair, returning the new pair;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * the original pair is left unmodified. The BiFunction should return"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * the new pair."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param fn the function to map the values on."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return   the new Pair."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public \u003cT1, U1\u003e Pair\u003cT1, U1\u003e map(BiFunction\u003c? super T, ? super U, Pair\u003cT1, U1\u003e\u003e fn) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return fn.apply(this.one, this.two);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Performs a map on only the first value of the pair, returning the"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * new pair; the original pair is left unmodified. The second value of"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * the pair is returned as-is."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param fn the function to map the first value on."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return   the new Pair."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public \u003cT1\u003e Pair\u003cT1, U\u003e mapFst(Function\u003c? super T, ? extends T1\u003e fn) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new Pair\u003cT1, U\u003e(fn.apply(this.one), this.two);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Performs a map on only the second value of the pair, returning the"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * new pair; the original pair is left unmodified. The first value of"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * the pair is returned as-is."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param fn the function to map the second value on."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return   the new Pair."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public \u003cU1\u003e Pair\u003cT, U1\u003e mapSnd(Function\u003c? super U, ? extends U1\u003e fn) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new Pair\u003cT, U1\u003e(this.one, fn.apply(this.two));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 82
    }
  },
  {
    "path": "src/main/java/ikura/util/StreamUtils.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// StreamUtils.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura.util;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class StreamUtils {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Creates a stream by zipping two streams together. The length of the resulting"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * stream is the minimum of either of the inputs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param s1 the first stream to zip"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param s2 the second stream to zip"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return a Stream of Pairs, comprising the elements from each stream."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static \u003cT, U\u003e Stream\u003cPair\u003cT, U\u003e\u003e zip(Stream\u003cT\u003e s1, Stream\u003cU\u003e s2) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var i2 \u003d s2.iterator();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return s1.map(x1 -\u003e i2.hasNext() ? new Pair\u003c\u003e(x1, i2.next()) : null)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .takeWhile(x -\u003e x !\u003d null);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Creates a stream by zipping the input stream together with a stream of indices,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * beginning at 0. This is implemented in terms of zip(). The index is the first"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * item in the pair."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param s the stream to use"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @return a Stream of Pairs, with the first item being the 0-based index"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static \u003cT\u003e Stream\u003cPair\u003cInteger, T\u003e\u003e indexed(Stream\u003cT\u003e s) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return StreamUtils.zip(Stream.iterate(0, i -\u003e i + 1), s);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 36
    }
  },
  {
    "path": "src/test/java/MainTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// MainTest.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.Database;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.TaskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.Pair;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.TextFrontend;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.Either;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class MainTest {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static final String DB_PATH   \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private Either\u003cString, Pair\u003cString, String\u003e\u003e getTestCase() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            var inPath \u003d Path.of(\"tests/input.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            var outPath \u003d Path.of(\"tests/expected.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return Either.right(new Pair\u003c\u003e("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                Files.readString(inPath, Charset.forName(\"UTF-8\")),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                Files.readString(outPath, Charset.forName(\"UTF-8\")))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return Either.left(e.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void main_test() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var tasks \u003d new TaskList(new Database(DB_PATH));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var res \u003d getTestCase();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (res.isLeft()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            fail(res.fromLeft());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var test \u003d res.fromRight();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var buffer \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var frontend \u003d new TextFrontend(tasks,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            new Scanner(test.fst()),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            new PrintStream(buffer, /* autoFlush: */ true)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        frontend.run();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var output \u003d buffer.toString().lines()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .map(x -\u003e x.stripTrailing())"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .reduce((a, b) -\u003e a + \u0027\\n\u0027 + b)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .get()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (!output.equals(test.snd())) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                Files.write(Path.of(\"tests/actual.txt\"), output.getBytes());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                System.err.printf(\"failed to write actual output: %s\\n\", e);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            fail(\"output mismatch; actual output written to tests/actual.txt\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 78
    }
  },
  {
    "path": "src/test/java/ikura/DatabaseStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// DatabaseStub.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.util.InvalidDatabaseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class DatabaseStub extends Database {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * Constructs a fake database using the given list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     * @param tasks the list of tasks to use."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public DatabaseStub(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        super(\"asdf\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public List\u003cTask\u003e loadTasks() throws IOException, InvalidDatabaseException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void save(List\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.tasks \u003d list;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 37
    }
  },
  {
    "path": "src/test/java/ikura/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// TaskListTest.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "package ikura;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import ikura.task.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static TaskList getDummyList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new TaskList(new DatabaseStub(new ArrayList\u003c\u003e(Arrays.asList("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            new Todo(\"one\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            new Todo(\"two\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        ))));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void taskList_appendTask_taskAppended() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var list \u003d getDummyList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        list.addTask(new Todo(\"three\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assertEquals(list.count(), 3);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assertEquals(list.getTaskByNumber(3).get().getTitle(), \"three\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void taskList_findTask_taskFound() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var list \u003d getDummyList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var task \u003d list.getTaskByNumber(1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assertNotEquals(task, Optional.empty());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assertEquals(task.get().getTitle(), \"one\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void taskList_deleteTask_taskDeleted() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var list \u003d getDummyList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        list.removeTask(list.getTaskByNumber(1).get());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assertEquals(list.count(), 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        list.removeTask(new Todo(\"two\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assertEquals(list.count(), 0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 55
    }
  },
  {
    "path": "test.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "set -e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "# first compile the actual source"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "javac -sourcepath src/main/java -target 11 -source 11 -Xlint:unchecked -Xdiags:verbose $(find src/main/java -iname \"*.java\") -d bin/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "# then the tests"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "javac -cp bin:lib/junit-jupiter-api-5.6.2.jar:lib/apiguardian-api-1.1.0.jar:lib/junit-jupiter-engine-5.6.2.jar -sourcepath src/test/java -target 11 -source 11 $(find src/test/java -iname \"*.java\") -d test-bin/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "java -jar lib/junit-platform-console-standalone-1.7.0-RC1.jar --scan-classpath --class-path bin --class-path test-bin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "if [ $? -ne 0 ]; then"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\techo \"tests failed\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\texit -1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "else"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\techo \"tests passed\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\texit 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 20
    }
  },
  {
    "path": "tests/expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "Hello, I\u0027m ikurabowl"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "cleared all tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "added: [T] [✘] task one"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "added: [T] [✘] task two"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "added: [T] [✘] task three"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "added: [E] [✘] event one (at: 31 December 2020)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "added: [E] [✘] event two (at: 20 November 2020)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "added: [D] [✘] super important submission (by: 18 March 2025)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "added: [D] [✘] not so important thing (by: 31 December 9999)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "currently tracking 7 tasks (7 pending, 0 done, 0.0% complete)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  1. [T] [✘] task one"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  2. [T] [✘] task two"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  3. [T] [✘] task three"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  4. [E] [✘] event one (at: 31 December 2020)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  5. [E] [✘] event two (at: 20 November 2020)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  6. [D] [✘] super important submission (by: 18 March 2025)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  7. [D] [✘] not so important thing (by: 31 December 9999)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "marked as done:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  [T] [✓] task one"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "currently tracking 7 tasks (6 pending, 1 done, 14.3% complete)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "marked as done:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  [T] [✓] task two"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "currently tracking 7 tasks (5 pending, 2 done, 28.6% complete)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "currently tracking 7 tasks (5 pending, 2 done, 28.6% complete)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  1. [T] [✓] task one"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  2. [T] [✓] task two"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  3. [T] [✘] task three"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  4. [E] [✘] event one (at: 31 December 2020)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  5. [E] [✘] event two (at: 20 November 2020)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  6. [D] [✘] super important submission (by: 18 March 2025)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  7. [D] [✘] not so important thing (by: 31 December 9999)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "marked as done:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  [E] [✓] event two (at: 20 November 2020)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "currently tracking 7 tasks (4 pending, 3 done, 42.9% complete)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "marked as done:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  [E] [✓] event one (at: 31 December 2020)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "currently tracking 7 tasks (3 pending, 4 done, 57.1% complete)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "currently tracking 7 tasks (3 pending, 4 done, 57.1% complete)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  1. [T] [✓] task one"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  2. [T] [✓] task two"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  3. [T] [✘] task three"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  4. [E] [✓] event one (at: 31 December 2020)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  5. [E] [✓] event two (at: 20 November 2020)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  6. [D] [✘] super important submission (by: 18 March 2025)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  7. [D] [✘] not so important thing (by: 31 December 9999)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "error: task \u002710\u0027 does not exist"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "error: task \u0027-19\u0027 does not exist"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "error: expected an integer task number (\u0027asdf\u0027 invalid)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "deleted task:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  [T] [✓] task one"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "currently tracking 6 tasks (3 pending, 3 done, 50.0% complete)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "task is already marked as done:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "  [T] [✓] task two"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "error: task description cannot be empty"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "usage: deadline \u003cdescription\u003e /by \u003cdate\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "error: Unexpected argument \u0027at 1999-12-31\u0027"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "usage: deadline \u003cdescription\u003e /by \u003cdate\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "error: Unexpected argument \u0027at 1999-12-31\u0027"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "usage: deadline \u003cdescription\u003e /by \u003cdate\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "error: deadline requires a date"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "usage: deadline \u003cdescription\u003e /by \u003cdate\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "error: task description cannot be empty"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "usage: event \u003cdescription\u003e /at \u003cdate\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "error: Unexpected argument \u0027by 1999-12-31\u0027"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "usage: event \u003cdescription\u003e /at \u003cdate\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "error: Unexpected argument \u0027by 1999-12-31\u0027"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "usage: event \u003cdescription\u003e /at \u003cdate\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "error: event requires a date"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "usage: event \u003cdescription\u003e /at \u003cdate\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "--------------------------------------"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\u003e goodbye"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 132
    }
  },
  {
    "path": "tests/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "reset"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "todo task one"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "todo task two"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "todo task three"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "event event one /at 2020-12-31"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "event event two /at 2020-11-20"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "deadline super important submission /by 2025-03-18"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "deadline not so important thing /by 9999-12-31"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done -19"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done asdf"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "deadline /at 1999-12-31"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "deadline ijkl /at 1999-12-31"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "deadline ijkl"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "event"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "event /by 1999-12-31"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "event asdf /by 1999-12-31"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "event asdf"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "quit"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 29
    }
  }
]
