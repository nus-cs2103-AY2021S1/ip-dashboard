[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"yanbingtao"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"yanbingtao"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"yanbingtao"},"content":"    systemProperty \"file.encoding\", \"utf-8\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"yanbingtao"},"content":"    enableAssertions \u003d true"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"},{"lineNumber":64,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":65,"author":{"gitId":"yanbingtao"},"content":"compileJava.options.encoding \u003d \u0027UTF-8\u0027"},{"lineNumber":66,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":67,"author":{"gitId":"yanbingtao"},"content":"tasks.withType(JavaCompile) {"},{"lineNumber":68,"author":{"gitId":"yanbingtao"},"content":"    options.encoding \u003d \u0027UTF-8\u0027"},{"lineNumber":69,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":25,"-":44}},{"path":"data/archivedTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"E | 0 | asd | 2020-08-22T18:00"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":"T | 0 | task1"}],"authorContributionMap":{"yanbingtao":2}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"T | 0 | Math Assignment 1"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":"D | 1 | Software Project 2 | 2020-08-22T21:00"},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"E | 0 | Friend Meeting | 2020-09-01T20:00"}],"authorContributionMap":{"yanbingtao":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"# DukeBT: User Guide"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":"## Introduction"},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"DukeBT is a chat-bot-style task manager which can interact with users via different commands. "},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":"It could help users to keep track of different kinds of tasks."},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"  "},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":"Below are the 3 types of tasks supported in DuekBT:"},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":"1. [T] To-dos: tasks without a specific date-time to complete"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"2. [D] Deadlines: tasks with a specific date-time as deadline"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"3. [E] Events: tasks with a specific date-time to indicate when the event will occur"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"## Getting started"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"1. Make sure Java 11 or above is installed into your PC"},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"2. Download the latest version of DukeBT file [here](https://github.com/yanbingtao/ip/releases)."},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"3. Double click the jar file to run the application."},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"4. Welcome page will be automatically loaded (Shown below)."},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"5. Enter a command to start chatting with DukeBT."},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"6. User\u0027s data will be saved under the same directory of the downloaded jar file, in the folder named \"data\""},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"![Welcome Screen Image](Pics/welcome.png)"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"1. [**Add new tasks:**](#add-tasks)"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"   1. [**`todo`** - Add ToDo task](#add-todo-tasks)"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"   2. [**`deadline`** - Add Deadline task](#add-deadline-tasks)"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"   3. [**`event`** - Add Event task](#add-event-tasks)"},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"2. [**`delete`** - Delete a task](#delete-tasks)"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"3. [**`done`** - Mark a task as done](#done-task)"},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"4. [**`list`** - List all existing tasks](#list-tasks)"},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"5. [**`find`** - Find tasks with a keyword](#find-tasks)"},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":"6. [**Archive:**](#archive) "},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":"   1. [**`archive`** - Archive a task](#archive-task)"},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":"   2. [**`archive all`** - Archive all tasks](#archive-all-tasks)"},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":"   3. [**`list archive`** - List all archived tasks](#list-archived-tasks)"},{"lineNumber":34,"author":{"gitId":"yanbingtao"},"content":"7. [**`help`** - List all commands](#help)"},{"lineNumber":35,"author":{"gitId":"yanbingtao"},"content":"8. [**`bye`** - Exit DukeBT](#exitProgram)"},{"lineNumber":36,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":37,"author":{"gitId":"yanbingtao"},"content":"### \u003ca name\u003d\"add-tasks\"\u003e\u003c/a\u003e Feature 1: Add tasks"},{"lineNumber":38,"author":{"gitId":"yanbingtao"},"content":"  User can create a new task based on the task type."},{"lineNumber":39,"author":{"gitId":"yanbingtao"},"content":"#### \u003ca name\u003d\"add-todo-tasks\"\u003e\u003c/a\u003e Feature 1.1: Add ToDo task "},{"lineNumber":40,"author":{"gitId":"yanbingtao"},"content":"This command adds a ToDo task (without a specific date-time to complete) into the list."},{"lineNumber":41,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":42,"author":{"gitId":"yanbingtao"},"content":"##### Usage:"},{"lineNumber":43,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":44,"author":{"gitId":"yanbingtao"},"content":"##### `todo \u003ctask description\u003e`"},{"lineNumber":45,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":46,"author":{"gitId":"yanbingtao"},"content":"Example of usage: "},{"lineNumber":47,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":48,"author":{"gitId":"yanbingtao"},"content":"`todo math homework`"},{"lineNumber":49,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":50,"author":{"gitId":"yanbingtao"},"content":"Expected outcome:"},{"lineNumber":51,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":52,"author":{"gitId":"yanbingtao"},"content":"![Todo Image](Pics/todo.png)"},{"lineNumber":53,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":54,"author":{"gitId":"yanbingtao"},"content":"#### \u003ca name\u003d\"add-deadline-tasks\"\u003e\u003c/a\u003e Feature 1.2: Add Deadline tasks"},{"lineNumber":55,"author":{"gitId":"yanbingtao"},"content":"This command adds a deadline task (with a specific date-time as deadline) into the list."},{"lineNumber":56,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":57,"author":{"gitId":"yanbingtao"},"content":"Date-Time formatting: yyy-MM-dd HH:mm"},{"lineNumber":58,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":59,"author":{"gitId":"yanbingtao"},"content":"##### Usage:"},{"lineNumber":60,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":61,"author":{"gitId":"yanbingtao"},"content":"##### `deadline \u003ctask description\u003e /by \u003ctask deadline - \u0027yyyy-MM-dd HH:mm\u0027\u003e`"},{"lineNumber":62,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":63,"author":{"gitId":"yanbingtao"},"content":"Example of usage: "},{"lineNumber":64,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":65,"author":{"gitId":"yanbingtao"},"content":"`deadline programming quiz 1 /by 2020-08-10 21:00`"},{"lineNumber":66,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":67,"author":{"gitId":"yanbingtao"},"content":"Expected outcome:"},{"lineNumber":68,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":69,"author":{"gitId":"yanbingtao"},"content":"![Deadline Image](Pics/deadline.png)"},{"lineNumber":70,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":71,"author":{"gitId":"yanbingtao"},"content":"#### \u003ca name\u003d\"add-event-tasks\"\u003e\u003c/a\u003e Feature 1.3: Add Event tasks"},{"lineNumber":72,"author":{"gitId":"yanbingtao"},"content":"This command adds a deadline task (with a specific date-time to indicate when the event will occur) into the list."},{"lineNumber":73,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":74,"author":{"gitId":"yanbingtao"},"content":"Date-Time formatting: yyy-MM-dd HH:mm"},{"lineNumber":75,"author":{"gitId":"yanbingtao"},"content":"##### Usage:"},{"lineNumber":76,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":77,"author":{"gitId":"yanbingtao"},"content":"##### `event \u003cevent description\u003e /at \u003cevent timing - \u0027yyyy-MM-dd HH:mm\u0027\u003e`"},{"lineNumber":78,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":79,"author":{"gitId":"yanbingtao"},"content":"Example of usage: "},{"lineNumber":80,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":81,"author":{"gitId":"yanbingtao"},"content":"`event family dinner /at 2020-04-10 08:00`"},{"lineNumber":82,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":83,"author":{"gitId":"yanbingtao"},"content":"Expected outcome:"},{"lineNumber":84,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":85,"author":{"gitId":"yanbingtao"},"content":"![Event Image](Pics/event.png)"},{"lineNumber":86,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":87,"author":{"gitId":"yanbingtao"},"content":"### \u003ca name\u003d\"delete-tasks\"\u003e\u003c/a\u003e Feature 2: Delete a task"},{"lineNumber":88,"author":{"gitId":"yanbingtao"},"content":"This command deletes a specific task from the list."},{"lineNumber":89,"author":{"gitId":"yanbingtao"},"content":"##### Usage:"},{"lineNumber":90,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":91,"author":{"gitId":"yanbingtao"},"content":"##### `delete \u003ctask index\u003e`"},{"lineNumber":92,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":93,"author":{"gitId":"yanbingtao"},"content":"Example of usage: "},{"lineNumber":94,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":95,"author":{"gitId":"yanbingtao"},"content":"`delete 1`"},{"lineNumber":96,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":97,"author":{"gitId":"yanbingtao"},"content":"Expected outcome:"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"yanbingtao"},"content":"![Delete Image](Pics/delete.png)"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"yanbingtao"},"content":"### \u003ca name\u003d\"done-task\"\u003e\u003c/a\u003e Feature 3: Mark a task as done"},{"lineNumber":102,"author":{"gitId":"yanbingtao"},"content":"This command marks a specific task as completed."},{"lineNumber":103,"author":{"gitId":"yanbingtao"},"content":"##### Usage:"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"yanbingtao"},"content":"##### `done \u003ctask index\u003e`"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"yanbingtao"},"content":"Example of usage: "},{"lineNumber":108,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":109,"author":{"gitId":"yanbingtao"},"content":"`done 1`"},{"lineNumber":110,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":111,"author":{"gitId":"yanbingtao"},"content":"Expected outcome:"},{"lineNumber":112,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":113,"author":{"gitId":"yanbingtao"},"content":"![Done Image](Pics/done.png)"},{"lineNumber":114,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":115,"author":{"gitId":"yanbingtao"},"content":"### \u003ca name\u003d\"list-tasks\"\u003e\u003c/a\u003e Feature 4: List all existing tasks"},{"lineNumber":116,"author":{"gitId":"yanbingtao"},"content":"This command lists out all existing tasks in the active task list."},{"lineNumber":117,"author":{"gitId":"yanbingtao"},"content":"##### Usage:"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"yanbingtao"},"content":"##### `list`"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"yanbingtao"},"content":"`list`"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"yanbingtao"},"content":"![List Image](Pics/list.png)"},{"lineNumber":128,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":129,"author":{"gitId":"yanbingtao"},"content":"### \u003ca name\u003d\"find-tasks\"\u003e\u003c/a\u003e Feature 5: Find tasks with a keyword"},{"lineNumber":130,"author":{"gitId":"yanbingtao"},"content":"This command lists out all existing tasks which contains the keyword(s)."},{"lineNumber":131,"author":{"gitId":"yanbingtao"},"content":"##### Usage:"},{"lineNumber":132,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":133,"author":{"gitId":"yanbingtao"},"content":"##### `find \u003ckeyword(s)\u003e`"},{"lineNumber":134,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":135,"author":{"gitId":"yanbingtao"},"content":"Example of usage: "},{"lineNumber":136,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":137,"author":{"gitId":"yanbingtao"},"content":"`find homework`"},{"lineNumber":138,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":139,"author":{"gitId":"yanbingtao"},"content":"Expected outcome:"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"yanbingtao"},"content":"![Find Image](Pics/find.png)"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"yanbingtao"},"content":"### \u003ca name\u003d\"archive\"\u003e\u003c/a\u003e Feature 6: Archive"},{"lineNumber":144,"author":{"gitId":"yanbingtao"},"content":"Archive function provides a way to archive tasks from the active task list, "},{"lineNumber":145,"author":{"gitId":"yanbingtao"},"content":"so that the user can remove tasks from the list but still keep a record of them in the archive task list."},{"lineNumber":146,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":147,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":148,"author":{"gitId":"yanbingtao"},"content":"#### \u003ca name\u003d\"archive-task\"\u003e\u003c/a\u003e Feature 6.1: Archive a task"},{"lineNumber":149,"author":{"gitId":"yanbingtao"},"content":"This command removes a specific task from the active task list, and adds it to the archived task list."},{"lineNumber":150,"author":{"gitId":"yanbingtao"},"content":"##### Usage:"},{"lineNumber":151,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":152,"author":{"gitId":"yanbingtao"},"content":"##### `archive \u003ctask index\u003e`"},{"lineNumber":153,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":154,"author":{"gitId":"yanbingtao"},"content":"Example of usage: "},{"lineNumber":155,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":156,"author":{"gitId":"yanbingtao"},"content":"`archive 1`"},{"lineNumber":157,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":158,"author":{"gitId":"yanbingtao"},"content":"Expected outcome:"},{"lineNumber":159,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":160,"author":{"gitId":"yanbingtao"},"content":"![Archive a task Image](Pics/archiveTask.png)"},{"lineNumber":161,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":162,"author":{"gitId":"yanbingtao"},"content":"#### \u003ca name\u003d\"archive-all-tasks\"\u003e\u003c/a\u003e Feature 6.2: Archive all tasks"},{"lineNumber":163,"author":{"gitId":"yanbingtao"},"content":"This command removes all tasks from the active task list, and adds them to the archived task list."},{"lineNumber":164,"author":{"gitId":"yanbingtao"},"content":"##### Usage:"},{"lineNumber":165,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":166,"author":{"gitId":"yanbingtao"},"content":"##### `archive all`"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"yanbingtao"},"content":"`archive all`"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"yanbingtao"},"content":"![Archive all tasks Image](Pics/archiveAll.png)"},{"lineNumber":175,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":176,"author":{"gitId":"yanbingtao"},"content":"#### \u003ca name\u003d\"list-archived-tasks\"\u003e\u003c/a\u003e Feature 6.3: List all archived tasks"},{"lineNumber":177,"author":{"gitId":"yanbingtao"},"content":"This command lists out all archived tasks in the archived task list."},{"lineNumber":178,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":179,"author":{"gitId":"yanbingtao"},"content":"##### Usage:"},{"lineNumber":180,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":181,"author":{"gitId":"yanbingtao"},"content":"##### `list archive`"},{"lineNumber":182,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":183,"author":{"gitId":"yanbingtao"},"content":"Example of usage: "},{"lineNumber":184,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":185,"author":{"gitId":"yanbingtao"},"content":"`list archive`"},{"lineNumber":186,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":187,"author":{"gitId":"yanbingtao"},"content":"Expected outcome:"},{"lineNumber":188,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":189,"author":{"gitId":"yanbingtao"},"content":"![List archive Image](Pics/listArchive.png)"},{"lineNumber":190,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":191,"author":{"gitId":"yanbingtao"},"content":"### \u003ca name\u003d\"help\"\u003e\u003c/a\u003e Feature 7: List all commands"},{"lineNumber":192,"author":{"gitId":"yanbingtao"},"content":"This command lists out all commands which are supported by DukeBT."},{"lineNumber":193,"author":{"gitId":"yanbingtao"},"content":"##### Usage:"},{"lineNumber":194,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":195,"author":{"gitId":"yanbingtao"},"content":"##### `help`"},{"lineNumber":196,"author":{"gitId":"yanbingtao"},"content":"Example of usage: "},{"lineNumber":197,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":198,"author":{"gitId":"yanbingtao"},"content":"`help`"},{"lineNumber":199,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":200,"author":{"gitId":"yanbingtao"},"content":"Expected outcome:"},{"lineNumber":201,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":202,"author":{"gitId":"yanbingtao"},"content":"![Help Image](Pics/help.png)"},{"lineNumber":203,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":204,"author":{"gitId":"yanbingtao"},"content":"### \u003ca name\u003d\"exitProgram\"\u003e\u003c/a\u003e Feature 8: Exit DukeBT"},{"lineNumber":205,"author":{"gitId":"yanbingtao"},"content":"This command closes the application."},{"lineNumber":206,"author":{"gitId":"yanbingtao"},"content":"\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":207,"author":{"gitId":"yanbingtao"},"content":"The UI window will be closed after 2 seconds (starts from the moment user key in the bye command)."},{"lineNumber":208,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":209,"author":{"gitId":"yanbingtao"},"content":"##### Usage:"},{"lineNumber":210,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":211,"author":{"gitId":"yanbingtao"},"content":"##### `bye`"},{"lineNumber":212,"author":{"gitId":"yanbingtao"},"content":"Example of usage: "},{"lineNumber":213,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":214,"author":{"gitId":"yanbingtao"},"content":"`bye`"},{"lineNumber":215,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":216,"author":{"gitId":"yanbingtao"},"content":"Expected outcome:"},{"lineNumber":217,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":218,"author":{"gitId":"yanbingtao"},"content":"![Bye Image](Pics/bye.png)"},{"lineNumber":219,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":220,"author":{"gitId":"yanbingtao"},"content":"### Command Summary"},{"lineNumber":221,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":222,"author":{"gitId":"yanbingtao"},"content":"Task | Command format"},{"lineNumber":223,"author":{"gitId":"yanbingtao"},"content":"------------ | -------------"},{"lineNumber":224,"author":{"gitId":"yanbingtao"},"content":"add | 1. `todo \u003ctask description\u003e` \u003cbr\u003e 2. `deadline \u003ctask description\u003e` \u003cbr\u003e 3. `event \u003cevent description\u003e /at \u003cevent timing - \u0027yyyy-MM-dd HH:mm\u0027\u003e`"},{"lineNumber":225,"author":{"gitId":"yanbingtao"},"content":"delete | `delete \u003ctask index\u003e`"},{"lineNumber":226,"author":{"gitId":"yanbingtao"},"content":"done | `done \u003ctask index\u003e`"},{"lineNumber":227,"author":{"gitId":"yanbingtao"},"content":"list | `list`"},{"lineNumber":228,"author":{"gitId":"yanbingtao"},"content":"find | `find \u003ckeyword(s)\u003e`"},{"lineNumber":229,"author":{"gitId":"yanbingtao"},"content":"archive | 1. `archive \u003ctask index\u003e` \u003cbr\u003e 2. `archive all` \u003cbr\u003e 3. `list archive`"},{"lineNumber":230,"author":{"gitId":"yanbingtao"},"content":"help | `help`"},{"lineNumber":231,"author":{"gitId":"yanbingtao"},"content":"bye | `bye`"}],"authorContributionMap":{"yanbingtao":210,"-":21}},{"path":"src/main/java/duke/ArchivedTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":" * Contains the oll archived tasks, and it provide operations to modify"},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":" * archived task in the archived task list."},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":" */"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"public class ArchivedTaskList {"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"    private ArrayList\u003cTask\u003e archivedTasks;"},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"     * ArchivedTaskList Constructor."},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"     * @param archivedTasks ArrayList to store all archived tasks."},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"    public ArchivedTaskList(ArrayList\u003cTask\u003e archivedTasks) {"},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"        this.archivedTasks \u003d archivedTasks;"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"     * Archive all tasks in the TaskList. Save them into ArchivedTaskList."},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"     * @param taskList         All active tasks."},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"     * @param archivedTaskList All archived tasks."},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"    public static void archiveAllTasks(ArrayList\u003cTask\u003e taskList, ArrayList\u003cTask\u003e archivedTaskList) {"},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"        for (Task task : taskList) {"},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"            ArchivedTaskList.addArchivedTask(task, archivedTaskList);"},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":"        taskList.clear();"},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":34,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yanbingtao"},"content":"     * Gets all archived tasks in the archived task list."},{"lineNumber":36,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"yanbingtao"},"content":"     * @return An ArrayList of all achived tasks."},{"lineNumber":38,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"yanbingtao"},"content":"    public ArrayList\u003cTask\u003e getArchivedTaskList() {"},{"lineNumber":40,"author":{"gitId":"yanbingtao"},"content":"        return this.archivedTasks;"},{"lineNumber":41,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":43,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"yanbingtao"},"content":"     * Gets how many tasks in the archived task list."},{"lineNumber":45,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"yanbingtao"},"content":"     * @return Number of archived takes in the archived task list."},{"lineNumber":47,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"yanbingtao"},"content":"    public int getTaskListSize() {"},{"lineNumber":49,"author":{"gitId":"yanbingtao"},"content":"        return this.archivedTasks.size();"},{"lineNumber":50,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":52,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"yanbingtao"},"content":"     * Add a new archived task."},{"lineNumber":54,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"yanbingtao"},"content":"     * @param taskToArchive The task which will be archived."},{"lineNumber":56,"author":{"gitId":"yanbingtao"},"content":"     * @param archivedTasks The list contains all archived tasks."},{"lineNumber":57,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"yanbingtao"},"content":"    public static void addArchivedTask(Task taskToArchive, ArrayList\u003cTask\u003e archivedTasks) {"},{"lineNumber":59,"author":{"gitId":"yanbingtao"},"content":"        archivedTasks.add(taskToArchive);"},{"lineNumber":60,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":61}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":" * Handles deadline tasks"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":" */"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"public class Deadlines extends Task {"},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"    private LocalDateTime deadlineTime;"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"     * Deadlines class constructor"},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"     * @param taskTitle    A string of deadline task name"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"     * @param deadlineTime A string of deadline time"},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"     * @param isDone       Status of the deadline task"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"    public Deadlines(String taskTitle, String deadlineTime, Boolean isDone) {"},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"        super(taskTitle, isDone, TaskTypes.TASK_TYPE_DEADLINE);"},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"        this.deadlineTime \u003d LocalDateTime.parse(deadlineTime,"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"     * Loads deadline tasks from the file at beginning"},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"     * @param taskTitle    A string of deadline task name"},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":"     * @param deadlineTime A string of deadline time"},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":"     * @param isDone       Status of the deadline task"},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks        The overall user\u0027s task list"},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"yanbingtao"},"content":"    public static void loadDeadlineTask(String taskTitle, String deadlineTime,"},{"lineNumber":35,"author":{"gitId":"yanbingtao"},"content":"                                        Boolean isDone, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":36,"author":{"gitId":"yanbingtao"},"content":"        deadlineTime \u003d deadlineTime.replace(\u0027T\u0027, \u0027 \u0027);"},{"lineNumber":37,"author":{"gitId":"yanbingtao"},"content":"        Deadlines deadline \u003d new Deadlines(taskTitle, deadlineTime, isDone);"},{"lineNumber":38,"author":{"gitId":"yanbingtao"},"content":"        tasks.add(deadline);"},{"lineNumber":39,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":41,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"yanbingtao"},"content":"     * Prints the deadline task time in the format of \"d MMM yyyy hh:mm am/pm\""},{"lineNumber":43,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"yanbingtao"},"content":"     * @return A string of the deadline task time in the format of \"d MMM yyyy hh:mm am/pm\""},{"lineNumber":45,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"yanbingtao"},"content":"    public String printTime() {"},{"lineNumber":47,"author":{"gitId":"yanbingtao"},"content":"        return deadlineTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mm a\"));"},{"lineNumber":48,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":50,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"yanbingtao"},"content":"     * Returns a string of deadline task"},{"lineNumber":52,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"yanbingtao"},"content":"     * @return A string of deadline task"},{"lineNumber":54,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"yanbingtao"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"yanbingtao"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"yanbingtao"},"content":"        return super.toString() + \" (by: \" + printTime() + \")\";"},{"lineNumber":58,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":60,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"yanbingtao"},"content":"     * Returns a string follows the format of the file"},{"lineNumber":62,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"yanbingtao"},"content":"     * @return A string follows the format of the file"},{"lineNumber":64,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"yanbingtao"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"yanbingtao"},"content":"    public String writeToFile() {"},{"lineNumber":67,"author":{"gitId":"yanbingtao"},"content":"        return super.writeToFile() + \" | \" + deadlineTime;"},{"lineNumber":68,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":70,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":70}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"public class DialogBox extends HBox {"},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"    private Label dialog;"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"    private ImageView displayPicture;"},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader("},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"                    MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"            fxmlLoader.load();"},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":34,"author":{"gitId":"yanbingtao"},"content":"        dialog.setText(text);"},{"lineNumber":35,"author":{"gitId":"yanbingtao"},"content":"        displayPicture.setImage(img);"},{"lineNumber":36,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":38,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"yanbingtao"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":40,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"yanbingtao"},"content":"    private void flip() {"},{"lineNumber":42,"author":{"gitId":"yanbingtao"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":43,"author":{"gitId":"yanbingtao"},"content":"        Collections.reverse(tmp);"},{"lineNumber":44,"author":{"gitId":"yanbingtao"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":45,"author":{"gitId":"yanbingtao"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":46,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":48,"author":{"gitId":"yanbingtao"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":49,"author":{"gitId":"yanbingtao"},"content":"        return new DialogBox(text, img);"},{"lineNumber":50,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":52,"author":{"gitId":"yanbingtao"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"yanbingtao"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"yanbingtao"},"content":"        db.flip();"},{"lineNumber":55,"author":{"gitId":"yanbingtao"},"content":"        return db;"},{"lineNumber":56,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":57}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":" * Main class for duke to run."},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"    protected static TaskList tasks;"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"    protected static ArchivedTaskList archivedTasks;"},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"    private Ui ui;"},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"     * Initialises Duke."},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"     * @param filePath A string of file path to store the task list."},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"    public Duke(String filePath) {"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"        assert !filePath.isEmpty() : \"Data filePath is missing.\";"},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"        String archivedFilePath \u003d filePath + \"/../archivedTasks.txt\";"},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"        ui \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"        storage \u003d new Storage(filePath, archivedFilePath);"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"        tasks \u003d new TaskList(storage.load());"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"        archivedTasks \u003d new ArchivedTaskList(storage.loadArchivedTasks());"},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"     * Initialises required objects."},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":"    public Duke() {"},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":"        String filePath \u003d \"data/tasks.txt\";"},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":"        String archivedFilePath \u003d \"data/archivedTasks.txt\";"},{"lineNumber":34,"author":{"gitId":"yanbingtao"},"content":"        ui \u003d new Ui();"},{"lineNumber":35,"author":{"gitId":"yanbingtao"},"content":"        storage \u003d new Storage(filePath, archivedFilePath);"},{"lineNumber":36,"author":{"gitId":"yanbingtao"},"content":"        tasks \u003d new TaskList(storage.load());"},{"lineNumber":37,"author":{"gitId":"yanbingtao"},"content":"        archivedTasks \u003d new ArchivedTaskList(storage.loadArchivedTasks());"},{"lineNumber":38,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":40,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"yanbingtao"},"content":"     * Runs Duke."},{"lineNumber":42,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"yanbingtao"},"content":"    public void run() {"},{"lineNumber":44,"author":{"gitId":"yanbingtao"},"content":"        ui.getLogoMsg();"},{"lineNumber":45,"author":{"gitId":"yanbingtao"},"content":"        ui.getGreetingMsg();"},{"lineNumber":46,"author":{"gitId":"yanbingtao"},"content":"        handleInput();"},{"lineNumber":47,"author":{"gitId":"yanbingtao"},"content":"        save();"},{"lineNumber":48,"author":{"gitId":"yanbingtao"},"content":"        ui.getByeMsg();"},{"lineNumber":49,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":51,"author":{"gitId":"yanbingtao"},"content":"    private void handleInput() {"},{"lineNumber":52,"author":{"gitId":"yanbingtao"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":53,"author":{"gitId":"yanbingtao"},"content":"        String inputMsg \u003d sc.nextLine();"},{"lineNumber":54,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":55,"author":{"gitId":"yanbingtao"},"content":"        while (!inputMsg.equals(\"bye\")) {"},{"lineNumber":56,"author":{"gitId":"yanbingtao"},"content":"            assert !inputMsg.isEmpty() : \"Input command should not be empty.\";"},{"lineNumber":57,"author":{"gitId":"yanbingtao"},"content":"            Parser.parseUserInput(inputMsg);"},{"lineNumber":58,"author":{"gitId":"yanbingtao"},"content":"            // waiting for user to key in the next request"},{"lineNumber":59,"author":{"gitId":"yanbingtao"},"content":"            inputMsg \u003d sc.nextLine();"},{"lineNumber":60,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":63,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"yanbingtao"},"content":"     * Starts the program."},{"lineNumber":65,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"yanbingtao"},"content":"     * @param args Args."},{"lineNumber":67,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"yanbingtao"},"content":"    public static void main(String[] args) {"},{"lineNumber":69,"author":{"gitId":"yanbingtao"},"content":"        new Duke(\"data/tasks.txt\").run();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":72,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"yanbingtao"},"content":"     * Gets the reply message."},{"lineNumber":74,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"yanbingtao"},"content":"     * @param input User\u0027s input."},{"lineNumber":76,"author":{"gitId":"yanbingtao"},"content":"     * @return Reply message."},{"lineNumber":77,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"yanbingtao"},"content":"    public String getResponse(String input) {"},{"lineNumber":79,"author":{"gitId":"yanbingtao"},"content":"        assert !input.isEmpty() : \"Input command should not be empty.\";"},{"lineNumber":80,"author":{"gitId":"yanbingtao"},"content":"        return Parser.parseUserInput(input);"},{"lineNumber":81,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":83,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"yanbingtao"},"content":"     * Saves the taskList into the data file."},{"lineNumber":85,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"yanbingtao"},"content":"    public void save() {"},{"lineNumber":87,"author":{"gitId":"yanbingtao"},"content":"        storage.writeTasks(tasks);"},{"lineNumber":88,"author":{"gitId":"yanbingtao"},"content":"        storage.writeArchivedTasks(archivedTasks);"},{"lineNumber":89,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yanbingtao":87,"-":3}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":" * Handles Event tasks."},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":" */"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"public class Events extends Task {"},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"    protected LocalDateTime eventTime;"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"     * Events class constructor."},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"     * @param taskTitle A string of Event task name."},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"     * @param eventTime A string of Event time."},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"     * @param isDone    Status of the Event task."},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"    public Events(String taskTitle, String eventTime, Boolean isDone) {"},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"        super(taskTitle, isDone, TaskTypes.TASK_TYPE_EVENT);"},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"        this.eventTime \u003d LocalDateTime.parse(eventTime,"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"     * Loads Event tasks from the file at beginning."},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"     * @param taskTitle A string of Event task name."},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":"     * @param eventTime A string of Event time."},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":"     * @param isDone    Status of the Event task."},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks     The overall user\u0027s task list."},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"yanbingtao"},"content":"    public static void loadEventTask("},{"lineNumber":35,"author":{"gitId":"yanbingtao"},"content":"            String taskTitle, String eventTime, Boolean isDone, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":36,"author":{"gitId":"yanbingtao"},"content":"        eventTime \u003d eventTime.replace(\u0027T\u0027, \u0027 \u0027);"},{"lineNumber":37,"author":{"gitId":"yanbingtao"},"content":"        Events event \u003d new Events(taskTitle, eventTime, isDone);"},{"lineNumber":38,"author":{"gitId":"yanbingtao"},"content":"        tasks.add(event);"},{"lineNumber":39,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":41,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"yanbingtao"},"content":"     * Prints the Event task time in the format of \"d MMM yyyy hh:mm am/pm\"."},{"lineNumber":43,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"yanbingtao"},"content":"     * @return A string of the Event task time in the format of \"d MMM yyyy hh:mm am/pm\"."},{"lineNumber":45,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"yanbingtao"},"content":"    public String printTime() {"},{"lineNumber":47,"author":{"gitId":"yanbingtao"},"content":"        return eventTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mm a\"));"},{"lineNumber":48,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":50,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"yanbingtao"},"content":"     * Returns a string of Event task."},{"lineNumber":52,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"yanbingtao"},"content":"     * @return A string of Event task."},{"lineNumber":54,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"yanbingtao"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"yanbingtao"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"yanbingtao"},"content":"        return super.toString() + \" (at: \" + printTime() + \")\";"},{"lineNumber":58,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":60,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"yanbingtao"},"content":"     * Returns a string follows the format of the file."},{"lineNumber":62,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"yanbingtao"},"content":"     * @return A string follows the format of the file."},{"lineNumber":64,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"yanbingtao"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"yanbingtao"},"content":"    public String writeToFile() {"},{"lineNumber":67,"author":{"gitId":"yanbingtao"},"content":"        return super.writeToFile() + \" | \" + eventTime;"},{"lineNumber":68,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":69}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":" */"},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader("},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"                    Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"            stage.setTitle(\"DukeBT\");"},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import javafx.application.Platform;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":" */"},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"    private ImageView imageView;"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"    private Duke duke;"},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":"    private Image userImage \u003d new Image("},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":"            this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":"    private Image dukeImage \u003d new Image("},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":"            this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":34,"author":{"gitId":"yanbingtao"},"content":"    private Image logoImage \u003d new Image("},{"lineNumber":35,"author":{"gitId":"yanbingtao"},"content":"            this.getClass().getResourceAsStream(\"/images/logo.png\"));"},{"lineNumber":36,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":37,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"yanbingtao"},"content":"     * Initialise the main window"},{"lineNumber":39,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"yanbingtao"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"yanbingtao"},"content":"    public void initialize() {"},{"lineNumber":42,"author":{"gitId":"yanbingtao"},"content":"        imageView.setImage(logoImage);"},{"lineNumber":43,"author":{"gitId":"yanbingtao"},"content":"        DialogBox logo \u003d DialogBox.getDukeDialog(Ui.getLogoMsg(), dukeImage);"},{"lineNumber":44,"author":{"gitId":"yanbingtao"},"content":"        DialogBox greeting \u003d DialogBox.getDukeDialog(Ui.getGreetingMsg(), dukeImage);"},{"lineNumber":45,"author":{"gitId":"yanbingtao"},"content":"        dialogContainer.getChildren().addAll(logo, greeting);"},{"lineNumber":46,"author":{"gitId":"yanbingtao"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":47,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":49,"author":{"gitId":"yanbingtao"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":50,"author":{"gitId":"yanbingtao"},"content":"        duke \u003d d;"},{"lineNumber":51,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":53,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"yanbingtao"},"content":"     * Creates two dialog boxes, one echoing user input and"},{"lineNumber":55,"author":{"gitId":"yanbingtao"},"content":"     * the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":56,"author":{"gitId":"yanbingtao"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":57,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"yanbingtao"},"content":"    @FXML"},{"lineNumber":59,"author":{"gitId":"yanbingtao"},"content":"    private void handleUserInput() {"},{"lineNumber":60,"author":{"gitId":"yanbingtao"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":61,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":62,"author":{"gitId":"yanbingtao"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":63,"author":{"gitId":"yanbingtao"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":64,"author":{"gitId":"yanbingtao"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":65,"author":{"gitId":"yanbingtao"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":66,"author":{"gitId":"yanbingtao"},"content":"        );"},{"lineNumber":67,"author":{"gitId":"yanbingtao"},"content":"        userInput.clear();"},{"lineNumber":68,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":69,"author":{"gitId":"yanbingtao"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":70,"author":{"gitId":"yanbingtao"},"content":"            Platform.runLater(() -\u003e {"},{"lineNumber":71,"author":{"gitId":"yanbingtao"},"content":"                try {"},{"lineNumber":72,"author":{"gitId":"yanbingtao"},"content":"                    exitPlatform();"},{"lineNumber":73,"author":{"gitId":"yanbingtao"},"content":"                } catch (InterruptedException e) {"},{"lineNumber":74,"author":{"gitId":"yanbingtao"},"content":"                    dialogContainer.getChildren().addAll("},{"lineNumber":75,"author":{"gitId":"yanbingtao"},"content":"                            DialogBox.getUserDialog(e.getMessage(), dukeImage));"},{"lineNumber":76,"author":{"gitId":"yanbingtao"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"yanbingtao"},"content":"            });"},{"lineNumber":78,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":81,"author":{"gitId":"yanbingtao"},"content":"    private void exitPlatform() throws InterruptedException {"},{"lineNumber":82,"author":{"gitId":"yanbingtao"},"content":"        Thread.sleep(2000);"},{"lineNumber":83,"author":{"gitId":"yanbingtao"},"content":"        duke.save();"},{"lineNumber":84,"author":{"gitId":"yanbingtao"},"content":"        Platform.exit();"},{"lineNumber":85,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":86}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":" * Takes in user inputs and make sense of them."},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":" */"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"     * Parses the inputs and calls the corresponding execution."},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"     * @param inputMsg"},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"    public static String parseUserInput(String inputMsg) {"},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"        assert !inputMsg.isEmpty() : \"Input command should not be empty.\";"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"        TaskList tasks \u003d Duke.tasks;"},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"        ArchivedTaskList archivedTasks \u003d Duke.archivedTasks;"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"        if (inputMsg.equals(\"list\")) {"},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"            return Ui.getAllTasksMsg(tasks.getTaskList());"},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"        } else if (inputMsg.equals(\"help\")) {"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"            return Ui.getHelpMsg();"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"        } else if (inputMsg.startsWith(\"done\")) {"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"            return parseDone(inputMsg, tasks);"},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"        } else if (inputMsg.startsWith(\"todo\")) {"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"            return parseToDo(inputMsg, tasks);"},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"        } else if (inputMsg.startsWith(\"deadline\")) {"},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"            return parseDeadline(inputMsg, tasks);"},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":"        } else if (inputMsg.startsWith(\"event\")) {"},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":"            return parseEvent(inputMsg, tasks);"},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":"        } else if (inputMsg.startsWith(\"delete\")) {"},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":"            return parseDelete(inputMsg, tasks);"},{"lineNumber":34,"author":{"gitId":"yanbingtao"},"content":"        } else if (inputMsg.startsWith(\"find\")) {"},{"lineNumber":35,"author":{"gitId":"yanbingtao"},"content":"            return parseFind(inputMsg, tasks);"},{"lineNumber":36,"author":{"gitId":"yanbingtao"},"content":"        } else if (inputMsg.startsWith(\"archive\")) {"},{"lineNumber":37,"author":{"gitId":"yanbingtao"},"content":"            return parseArchive(inputMsg, tasks, archivedTasks);"},{"lineNumber":38,"author":{"gitId":"yanbingtao"},"content":"        } else if (inputMsg.equals(\"list archive\")) {"},{"lineNumber":39,"author":{"gitId":"yanbingtao"},"content":"            return Ui.getAllArchivedTasksMsg(archivedTasks);"},{"lineNumber":40,"author":{"gitId":"yanbingtao"},"content":"        } else if (inputMsg.equals(\"bye\")) {"},{"lineNumber":41,"author":{"gitId":"yanbingtao"},"content":"            return Ui.getByeMsg();"},{"lineNumber":42,"author":{"gitId":"yanbingtao"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"yanbingtao"},"content":"            // if the user randomly enter any other commands which are not inside the command list"},{"lineNumber":44,"author":{"gitId":"yanbingtao"},"content":"            return Warnings.getInvalidInputMsg();"},{"lineNumber":45,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":48,"author":{"gitId":"yanbingtao"},"content":"    private static String parseArchive(String inputMsg, TaskList tasks, ArchivedTaskList archivedTasks) {"},{"lineNumber":49,"author":{"gitId":"yanbingtao"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"yanbingtao"},"content":"            String indexStr \u003d inputMsg.split(\"archive \")[1];"},{"lineNumber":51,"author":{"gitId":"yanbingtao"},"content":"            assert !indexStr.isEmpty() : \"Index should not be empty.\";"},{"lineNumber":52,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":53,"author":{"gitId":"yanbingtao"},"content":"            if (indexStr.equals(\"all\")) {"},{"lineNumber":54,"author":{"gitId":"yanbingtao"},"content":"                ArchivedTaskList.archiveAllTasks(tasks.getTaskList(), archivedTasks.getArchivedTaskList());"},{"lineNumber":55,"author":{"gitId":"yanbingtao"},"content":"                return Ui.getArchiveAllTaskMsg(archivedTasks);"},{"lineNumber":56,"author":{"gitId":"yanbingtao"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":58,"author":{"gitId":"yanbingtao"},"content":"            int index \u003d Integer.parseInt(inputMsg.split(\"archive \")[1]);"},{"lineNumber":59,"author":{"gitId":"yanbingtao"},"content":"            Task taskToArchive \u003d TaskList.deleteTask(index, tasks.getTaskList());"},{"lineNumber":60,"author":{"gitId":"yanbingtao"},"content":"            ArchivedTaskList.addArchivedTask(taskToArchive, archivedTasks.getArchivedTaskList());"},{"lineNumber":61,"author":{"gitId":"yanbingtao"},"content":"            return Ui.getAddingArchiveTaskMsg(taskToArchive, archivedTasks);"},{"lineNumber":62,"author":{"gitId":"yanbingtao"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":63,"author":{"gitId":"yanbingtao"},"content":"            return Warnings.getInvalidArchiveMsg(tasks.getTaskListSize());"},{"lineNumber":64,"author":{"gitId":"yanbingtao"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":65,"author":{"gitId":"yanbingtao"},"content":"            // if the user doesn\u0027t key in a valid index after keyword \"archive\""},{"lineNumber":66,"author":{"gitId":"yanbingtao"},"content":"            return Warnings.getInvalidArchiveMsg(tasks.getTaskListSize());"},{"lineNumber":67,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":70,"author":{"gitId":"yanbingtao"},"content":"    private static String parseFind(String inputMsg, TaskList tasks) {"},{"lineNumber":71,"author":{"gitId":"yanbingtao"},"content":"        try {"},{"lineNumber":72,"author":{"gitId":"yanbingtao"},"content":"            String keyword \u003d inputMsg.split(\"find \")[1];"},{"lineNumber":73,"author":{"gitId":"yanbingtao"},"content":"            ArrayList\u003cTask\u003e matchedTasks \u003d TaskList.findTask(keyword, tasks.getTaskList());"},{"lineNumber":74,"author":{"gitId":"yanbingtao"},"content":"            return Ui.getMatchingTasksMsg(keyword, matchedTasks);"},{"lineNumber":75,"author":{"gitId":"yanbingtao"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":76,"author":{"gitId":"yanbingtao"},"content":"            // if the user doesn\u0027t key in a valid index after keyword \"find\""},{"lineNumber":77,"author":{"gitId":"yanbingtao"},"content":"            return Warnings.getInvalidFindMsg();"},{"lineNumber":78,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":81,"author":{"gitId":"yanbingtao"},"content":"    private static String parseDelete(String inputMsg, TaskList tasks) {"},{"lineNumber":82,"author":{"gitId":"yanbingtao"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"yanbingtao"},"content":"            int index \u003d Integer.parseInt(inputMsg.split(\"delete \")[1]);"},{"lineNumber":84,"author":{"gitId":"yanbingtao"},"content":"            Task taskDeleted \u003d TaskList.deleteTask(index, tasks.getTaskList());"},{"lineNumber":85,"author":{"gitId":"yanbingtao"},"content":"            return Ui.getDeleteTaskMsg(index, taskDeleted, tasks);"},{"lineNumber":86,"author":{"gitId":"yanbingtao"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":87,"author":{"gitId":"yanbingtao"},"content":"            // if the user doesn\u0027t type the index after the keyword \"delete\""},{"lineNumber":88,"author":{"gitId":"yanbingtao"},"content":"            return Warnings.getInvalidDeleteMsg(tasks.getTaskListSize());"},{"lineNumber":89,"author":{"gitId":"yanbingtao"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":90,"author":{"gitId":"yanbingtao"},"content":"            // if the user doesn\u0027t key in a valid index after keyword \"delete\""},{"lineNumber":91,"author":{"gitId":"yanbingtao"},"content":"            return Warnings.getInvalidDeleteMsg(tasks.getTaskListSize());"},{"lineNumber":92,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":95,"author":{"gitId":"yanbingtao"},"content":"    private static String parseEvent(String inputMsg, TaskList tasks) {"},{"lineNumber":96,"author":{"gitId":"yanbingtao"},"content":"        try {"},{"lineNumber":97,"author":{"gitId":"yanbingtao"},"content":"            String taskTitle \u003d inputMsg.split(\"event \")[1].split(\" /at \")[0];"},{"lineNumber":98,"author":{"gitId":"yanbingtao"},"content":"            String eventTime \u003d inputMsg.split(\"event \")[1].split(\" /at \")[1];"},{"lineNumber":99,"author":{"gitId":"yanbingtao"},"content":"            TaskList.addNewEventTask(taskTitle, eventTime, tasks.getTaskList());"},{"lineNumber":100,"author":{"gitId":"yanbingtao"},"content":"            return Ui.getAddingEventTaskMsg(tasks.getTaskList());"},{"lineNumber":101,"author":{"gitId":"yanbingtao"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":102,"author":{"gitId":"yanbingtao"},"content":"            // if the user doesn\u0027t follow the correct format after the keyword \"event\""},{"lineNumber":103,"author":{"gitId":"yanbingtao"},"content":"            return Warnings.getInvalidEventMsg();"},{"lineNumber":104,"author":{"gitId":"yanbingtao"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":105,"author":{"gitId":"yanbingtao"},"content":"            return Warnings.getInvalidDateMsg();"},{"lineNumber":106,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":109,"author":{"gitId":"yanbingtao"},"content":"    private static String parseDeadline(String inputMsg, TaskList tasks) {"},{"lineNumber":110,"author":{"gitId":"yanbingtao"},"content":"        String taskTitle;"},{"lineNumber":111,"author":{"gitId":"yanbingtao"},"content":"        String deadlineTime;"},{"lineNumber":112,"author":{"gitId":"yanbingtao"},"content":"        try {"},{"lineNumber":113,"author":{"gitId":"yanbingtao"},"content":"            taskTitle \u003d inputMsg.split(\"deadline \")[1].split(\" /by \")[0];"},{"lineNumber":114,"author":{"gitId":"yanbingtao"},"content":"            deadlineTime \u003d inputMsg.split(\"deadline \")[1].split(\" /by \")[1];"},{"lineNumber":115,"author":{"gitId":"yanbingtao"},"content":"            TaskList.addNewDeadlineTask(taskTitle, deadlineTime, tasks.getTaskList());"},{"lineNumber":116,"author":{"gitId":"yanbingtao"},"content":"            return Ui.getAddingDeadlineTaskMsg(tasks.getTaskList());"},{"lineNumber":117,"author":{"gitId":"yanbingtao"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":118,"author":{"gitId":"yanbingtao"},"content":"            // if the user doesn\u0027t follow the correct format after the keyword \"deadline\""},{"lineNumber":119,"author":{"gitId":"yanbingtao"},"content":"            return Warnings.getInvalidDeadlineMsg();"},{"lineNumber":120,"author":{"gitId":"yanbingtao"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":121,"author":{"gitId":"yanbingtao"},"content":"            return Warnings.getInvalidDateMsg();"},{"lineNumber":122,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":125,"author":{"gitId":"yanbingtao"},"content":"    private static String parseToDo(String inputMsg, TaskList tasks) {"},{"lineNumber":126,"author":{"gitId":"yanbingtao"},"content":"        String taskTitle;"},{"lineNumber":127,"author":{"gitId":"yanbingtao"},"content":"        try {"},{"lineNumber":128,"author":{"gitId":"yanbingtao"},"content":"            taskTitle \u003d inputMsg.split(\"todo \")[1];"},{"lineNumber":129,"author":{"gitId":"yanbingtao"},"content":"            TaskList.addNewTodoTask(taskTitle, tasks.getTaskList());"},{"lineNumber":130,"author":{"gitId":"yanbingtao"},"content":"            return Ui.getAddingTodoTaskMsg(tasks.getTaskList());"},{"lineNumber":131,"author":{"gitId":"yanbingtao"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":132,"author":{"gitId":"yanbingtao"},"content":"            // if the user doesn\u0027t type the the task description after the keyword \"to-do\""},{"lineNumber":133,"author":{"gitId":"yanbingtao"},"content":"            return Warnings.getInvalidToDoMsg();"},{"lineNumber":134,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":137,"author":{"gitId":"yanbingtao"},"content":"    private static String parseDone(String inputMsg, TaskList tasks) {"},{"lineNumber":138,"author":{"gitId":"yanbingtao"},"content":"        try {"},{"lineNumber":139,"author":{"gitId":"yanbingtao"},"content":"            int index \u003d Integer.parseInt(inputMsg.split(\"done \")[1]);"},{"lineNumber":140,"author":{"gitId":"yanbingtao"},"content":"            TaskList.doneTask(index, tasks.getTaskList());"},{"lineNumber":141,"author":{"gitId":"yanbingtao"},"content":"            return Ui.getDoneTaskMsg(index, tasks.getTaskList());"},{"lineNumber":142,"author":{"gitId":"yanbingtao"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":143,"author":{"gitId":"yanbingtao"},"content":"            // if the user doesn\u0027t type the index after the keyword \"done\""},{"lineNumber":144,"author":{"gitId":"yanbingtao"},"content":"            return Warnings.getInvalidDoneTaskIndexMsg(tasks.getTaskListSize());"},{"lineNumber":145,"author":{"gitId":"yanbingtao"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":146,"author":{"gitId":"yanbingtao"},"content":"            // if the user doesn\u0027t key in a valid index after keyword \"done\""},{"lineNumber":147,"author":{"gitId":"yanbingtao"},"content":"            return Warnings.getInvalidDoneTaskIndexMsg(tasks.getTaskListSize());"},{"lineNumber":148,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":150}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"import java.io.FileReader;"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":" * Deals with reading and saving user\u0027s task list from/into the file."},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":" */"},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"    private final String filePath;"},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"    private final String archivedFilePath;"},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"     * Storage class construction."},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"     * @param filePath A string of file path to store the task list."},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"    public Storage(String filePath, String archivedFilePath) {"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"        this.archivedFilePath \u003d archivedFilePath;"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"     * Loads the user\u0027s task list from the file."},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":"     * @return An ArrayList of the task list."},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":"    public ArrayList\u003cTask\u003e load() {"},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":"        assert !filePath.isEmpty() : \"Data filePath is missing.\";"},{"lineNumber":34,"author":{"gitId":"yanbingtao"},"content":"        return getSavedTasks(filePath);"},{"lineNumber":35,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":37,"author":{"gitId":"yanbingtao"},"content":"    private void addDifferentTypeOfTask(ArrayList\u003cTask\u003e tasks, String[] lineSegment, boolean isDone) {"},{"lineNumber":38,"author":{"gitId":"yanbingtao"},"content":"        switch (lineSegment[0]) {"},{"lineNumber":39,"author":{"gitId":"yanbingtao"},"content":"        case \"T\":"},{"lineNumber":40,"author":{"gitId":"yanbingtao"},"content":"            ToDos.loadTodoTask(lineSegment[2], isDone, tasks);"},{"lineNumber":41,"author":{"gitId":"yanbingtao"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"yanbingtao"},"content":"        case \"D\":"},{"lineNumber":43,"author":{"gitId":"yanbingtao"},"content":"            Deadlines.loadDeadlineTask(lineSegment[2], lineSegment[3], isDone, tasks);"},{"lineNumber":44,"author":{"gitId":"yanbingtao"},"content":"            break;"},{"lineNumber":45,"author":{"gitId":"yanbingtao"},"content":"        case \"E\":"},{"lineNumber":46,"author":{"gitId":"yanbingtao"},"content":"            Events.loadEventTask(lineSegment[2], lineSegment[3], isDone, tasks);"},{"lineNumber":47,"author":{"gitId":"yanbingtao"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"yanbingtao"},"content":"        default:"},{"lineNumber":49,"author":{"gitId":"yanbingtao"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":53,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"yanbingtao"},"content":"     * Saves the user\u0027s task list into the file."},{"lineNumber":55,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"yanbingtao"},"content":"     * @param taskList The overall user\u0027s task list."},{"lineNumber":57,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"yanbingtao"},"content":"    public void writeTasks(TaskList taskList) {"},{"lineNumber":59,"author":{"gitId":"yanbingtao"},"content":"        assert !filePath.isEmpty() : \"Data filePath is missing.\";"},{"lineNumber":60,"author":{"gitId":"yanbingtao"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"yanbingtao"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();"},{"lineNumber":62,"author":{"gitId":"yanbingtao"},"content":"            saveUpdatedTasks(tasks, filePath);"},{"lineNumber":63,"author":{"gitId":"yanbingtao"},"content":"        } catch (IOException e) {"},{"lineNumber":64,"author":{"gitId":"yanbingtao"},"content":"            Warnings.getInvalidFileOutputMsg(e);"},{"lineNumber":65,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":68,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"yanbingtao"},"content":"     * Loads saved archived tasks."},{"lineNumber":70,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"yanbingtao"},"content":"     * @return An ArrayList contains all previous saved archived tasks."},{"lineNumber":72,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"yanbingtao"},"content":"    public ArrayList\u003cTask\u003e loadArchivedTasks() {"},{"lineNumber":74,"author":{"gitId":"yanbingtao"},"content":"        assert !archivedFilePath.isEmpty() : \"Archived data filePath is missing.\";"},{"lineNumber":75,"author":{"gitId":"yanbingtao"},"content":"        return getSavedTasks(archivedFilePath);"},{"lineNumber":76,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":78,"author":{"gitId":"yanbingtao"},"content":"    private ArrayList\u003cTask\u003e getSavedTasks(String filePath) {"},{"lineNumber":79,"author":{"gitId":"yanbingtao"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":80,"author":{"gitId":"yanbingtao"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"yanbingtao"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":82,"author":{"gitId":"yanbingtao"},"content":"            if (file.exists()) {"},{"lineNumber":83,"author":{"gitId":"yanbingtao"},"content":"                FileReader fileReader \u003d new FileReader(file);"},{"lineNumber":84,"author":{"gitId":"yanbingtao"},"content":"                BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"},{"lineNumber":85,"author":{"gitId":"yanbingtao"},"content":"                String lineData \u003d bufferedReader.readLine();"},{"lineNumber":86,"author":{"gitId":"yanbingtao"},"content":"                while (lineData !\u003d null) {"},{"lineNumber":87,"author":{"gitId":"yanbingtao"},"content":"                    String[] lineSegment \u003d lineData.split(\" \\\\| \");"},{"lineNumber":88,"author":{"gitId":"yanbingtao"},"content":"                    boolean isDone \u003d lineSegment[1].equals(\"1\")"},{"lineNumber":89,"author":{"gitId":"yanbingtao"},"content":"                            ? true"},{"lineNumber":90,"author":{"gitId":"yanbingtao"},"content":"                            : false;"},{"lineNumber":91,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":92,"author":{"gitId":"yanbingtao"},"content":"                    addDifferentTypeOfTask(taskArrayList, lineSegment, isDone);"},{"lineNumber":93,"author":{"gitId":"yanbingtao"},"content":"                    lineData \u003d bufferedReader.readLine();"},{"lineNumber":94,"author":{"gitId":"yanbingtao"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"yanbingtao"},"content":"                bufferedReader.close();"},{"lineNumber":96,"author":{"gitId":"yanbingtao"},"content":"                fileReader.close();"},{"lineNumber":97,"author":{"gitId":"yanbingtao"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"yanbingtao"},"content":"        } catch (IOException e) {"},{"lineNumber":99,"author":{"gitId":"yanbingtao"},"content":"            Warnings.getInvalidFileInputMsg(e);"},{"lineNumber":100,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"yanbingtao"},"content":"        return taskArrayList;"},{"lineNumber":102,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":104,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"yanbingtao"},"content":"     * Saves the updated archived task list into the file."},{"lineNumber":106,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"yanbingtao"},"content":"     * @param archivedTaskList The updated archived task list."},{"lineNumber":108,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"yanbingtao"},"content":"    public void writeArchivedTasks(ArchivedTaskList archivedTaskList) {"},{"lineNumber":110,"author":{"gitId":"yanbingtao"},"content":"        assert !archivedFilePath.isEmpty() : \"Archived data filePath is missing.\";"},{"lineNumber":111,"author":{"gitId":"yanbingtao"},"content":"        try {"},{"lineNumber":112,"author":{"gitId":"yanbingtao"},"content":"            ArrayList\u003cTask\u003e archivedTasks \u003d archivedTaskList.getArchivedTaskList();"},{"lineNumber":113,"author":{"gitId":"yanbingtao"},"content":"            saveUpdatedTasks(archivedTasks, archivedFilePath);"},{"lineNumber":114,"author":{"gitId":"yanbingtao"},"content":"        } catch (IOException e) {"},{"lineNumber":115,"author":{"gitId":"yanbingtao"},"content":"            Warnings.getInvalidFileOutputMsg(e);"},{"lineNumber":116,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":119,"author":{"gitId":"yanbingtao"},"content":"    private void saveUpdatedTasks(ArrayList\u003cTask\u003e taskArrayList, String filePath) throws IOException {"},{"lineNumber":120,"author":{"gitId":"yanbingtao"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":121,"author":{"gitId":"yanbingtao"},"content":"        file.getParentFile().mkdirs();"},{"lineNumber":122,"author":{"gitId":"yanbingtao"},"content":"        FileWriter fileWriter;"},{"lineNumber":123,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":124,"author":{"gitId":"yanbingtao"},"content":"        fileWriter \u003d new FileWriter(file, false);"},{"lineNumber":125,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":126,"author":{"gitId":"yanbingtao"},"content":"        for (Task task : taskArrayList) {"},{"lineNumber":127,"author":{"gitId":"yanbingtao"},"content":"            fileWriter.write(task.writeToFile() + \"\\n\");"},{"lineNumber":128,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"yanbingtao"},"content":"        fileWriter.close();"},{"lineNumber":130,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":131}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":" * Handles all kinds of tasks."},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":"    protected String taskTitle;"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"    protected TaskTypes taskType;"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"     * Constructor of Task class."},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"     * @param taskTitle A string of task name."},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"     * @param isDone    Status of the task."},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"     * @param taskType  Type of the task."},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"    public Task(String taskTitle, Boolean isDone, TaskTypes taskType) {"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"        assert !taskTitle.isEmpty() : \"Task title should not be empty.\";"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"        this.taskTitle \u003d taskTitle;"},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"     * Marks the task as done."},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"    public void markAsDone() {"},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"        this.isDone \u003d true;"},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":"     * Gets the status of the task (\"✓\" or \"✗\")."},{"lineNumber":34,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"yanbingtao"},"content":"     * @return The icon representing the status of the task."},{"lineNumber":36,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"yanbingtao"},"content":"    public String getStatus() {"},{"lineNumber":38,"author":{"gitId":"yanbingtao"},"content":"        return (isDone"},{"lineNumber":39,"author":{"gitId":"yanbingtao"},"content":"                ? \"✓\""},{"lineNumber":40,"author":{"gitId":"yanbingtao"},"content":"                : \"✗\");"},{"lineNumber":41,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":43,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"yanbingtao"},"content":"     * Gets the status of the task (\"1\" means done / \"0\" means not done)."},{"lineNumber":45,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"yanbingtao"},"content":"     * @return The int representing the status of the task"},{"lineNumber":47,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"yanbingtao"},"content":"    public String getStatusNum() {"},{"lineNumber":49,"author":{"gitId":"yanbingtao"},"content":"        return (isDone"},{"lineNumber":50,"author":{"gitId":"yanbingtao"},"content":"                ? \"1\""},{"lineNumber":51,"author":{"gitId":"yanbingtao"},"content":"                : \"0\");"},{"lineNumber":52,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":54,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":55,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"yanbingtao"},"content":"     * Returns a string of the task title."},{"lineNumber":57,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"yanbingtao"},"content":"     * @return A string of the task title."},{"lineNumber":59,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"yanbingtao"},"content":"    public String getTaskTitle() {"},{"lineNumber":61,"author":{"gitId":"yanbingtao"},"content":"        return this.taskTitle;"},{"lineNumber":62,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":64,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"yanbingtao"},"content":"     * Returns a string of the task."},{"lineNumber":66,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"yanbingtao"},"content":"     * @return A string of the task."},{"lineNumber":68,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"yanbingtao"},"content":"    @Override"},{"lineNumber":70,"author":{"gitId":"yanbingtao"},"content":"    public String toString() {"},{"lineNumber":71,"author":{"gitId":"yanbingtao"},"content":"        return \"[\" + this.taskType + \"]\" + \"[\" + getStatus() + \"] \" + taskTitle;"},{"lineNumber":72,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":74,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"yanbingtao"},"content":"     * Returns a string follows the format of the file."},{"lineNumber":76,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"yanbingtao"},"content":"     * @return A string follows the format of the file."},{"lineNumber":78,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"yanbingtao"},"content":"    public String writeToFile() {"},{"lineNumber":80,"author":{"gitId":"yanbingtao"},"content":"        return this.taskType + \" | \" + getStatusNum() + \" | \" + taskTitle;"},{"lineNumber":81,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":82}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":" * Contains the overall user\u0027s task list, and it provide operations to modify task in the task list."},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":" */"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"     * TaskList Constructor."},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks The overall user\u0027s task list."},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"     * Returns the ArrayList contains all user\u0027s tasks in the task list."},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"     * @return The ArrayList contains all user\u0027s tasks in the task list."},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"        return this.tasks;"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"    public int getTaskListSize() {"},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":"        return this.tasks.size();"},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"yanbingtao"},"content":"     * Adds new to-do type task to the task list and calls the Ui class to display a message."},{"lineNumber":35,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"yanbingtao"},"content":"     * @param taskTitle A string of Event task name."},{"lineNumber":37,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks     The overall user\u0027s task list."},{"lineNumber":38,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"yanbingtao"},"content":"    public static void addNewTodoTask(String taskTitle, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":40,"author":{"gitId":"yanbingtao"},"content":"        ToDos newTodoTask \u003d new ToDos(taskTitle, false);"},{"lineNumber":41,"author":{"gitId":"yanbingtao"},"content":"        tasks.add(newTodoTask);"},{"lineNumber":42,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":44,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"yanbingtao"},"content":"     * Adds new deadline type task to the task list and calls the Ui class to display a message."},{"lineNumber":46,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"yanbingtao"},"content":"     * @param taskTitle    A string of Event task name."},{"lineNumber":48,"author":{"gitId":"yanbingtao"},"content":"     * @param deadlineTime A string of deadline time"},{"lineNumber":49,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks        The overall user\u0027s task list."},{"lineNumber":50,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"yanbingtao"},"content":"    public static void addNewDeadlineTask(String taskTitle, String deadlineTime, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":52,"author":{"gitId":"yanbingtao"},"content":"        Deadlines newDeadline \u003d new Deadlines(taskTitle, deadlineTime, false);"},{"lineNumber":53,"author":{"gitId":"yanbingtao"},"content":"        tasks.add(newDeadline);"},{"lineNumber":54,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":56,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"yanbingtao"},"content":"     * Adds new event type task to the task list and calls the Ui class to display a message."},{"lineNumber":58,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"yanbingtao"},"content":"     * @param taskTitle A string of Event task name."},{"lineNumber":60,"author":{"gitId":"yanbingtao"},"content":"     * @param eventTime A string of Event time."},{"lineNumber":61,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks     The overall user\u0027s task list."},{"lineNumber":62,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"yanbingtao"},"content":"    public static void addNewEventTask(String taskTitle, String eventTime, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":64,"author":{"gitId":"yanbingtao"},"content":"        Events newEvent \u003d new Events(taskTitle, eventTime, false);"},{"lineNumber":65,"author":{"gitId":"yanbingtao"},"content":"        tasks.add(newEvent);"},{"lineNumber":66,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":68,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"yanbingtao"},"content":"     * Deletes a task from the task list and calls the Ui class to display a message."},{"lineNumber":70,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"yanbingtao"},"content":"     * @param index The int of the task series number in the task list."},{"lineNumber":72,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks The overall user\u0027s task list."},{"lineNumber":73,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"yanbingtao"},"content":"    public static Task deleteTask(int index, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":75,"author":{"gitId":"yanbingtao"},"content":"        Task taskToDelete \u003d tasks.get(index - 1);"},{"lineNumber":76,"author":{"gitId":"yanbingtao"},"content":"        tasks.remove(index - 1);"},{"lineNumber":77,"author":{"gitId":"yanbingtao"},"content":"        return taskToDelete;"},{"lineNumber":78,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":80,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"yanbingtao"},"content":"     * Marks a task as done in the task list and calls the Ui class to display a message."},{"lineNumber":82,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"yanbingtao"},"content":"     * @param index The int of the task series number in the task list."},{"lineNumber":84,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks The overall user\u0027s task list."},{"lineNumber":85,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"yanbingtao"},"content":"    public static void doneTask(int index, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":87,"author":{"gitId":"yanbingtao"},"content":"        tasks.get(index - 1).markAsDone();"},{"lineNumber":88,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":90,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"yanbingtao"},"content":"     * Finds all tasks that match with the keyword in the task list."},{"lineNumber":92,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"yanbingtao"},"content":"     * @param keyword A string of keyword to find the matching tasks."},{"lineNumber":94,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks   An ArrayList of all the tasks that match with the keyword."},{"lineNumber":95,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"yanbingtao"},"content":"    public static ArrayList\u003cTask\u003e findTask(String keyword, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":97,"author":{"gitId":"yanbingtao"},"content":"        assert !keyword.isEmpty() : \"Keyword for findTask function should not be empty.\";"},{"lineNumber":98,"author":{"gitId":"yanbingtao"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":99,"author":{"gitId":"yanbingtao"},"content":"        for (Task task : tasks) {"},{"lineNumber":100,"author":{"gitId":"yanbingtao"},"content":"            if (task.getTaskTitle().contains(keyword)) {"},{"lineNumber":101,"author":{"gitId":"yanbingtao"},"content":"                matchedTasks.add(task);"},{"lineNumber":102,"author":{"gitId":"yanbingtao"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"yanbingtao"},"content":"        return matchedTasks;"},{"lineNumber":105,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":106}},{"path":"src/main/java/duke/TaskTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":" * Enum of all types of tasks."},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":"public enum TaskTypes {"},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":"    TASK_TYPE_TODO {"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"        @Override"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"        public String toString() {"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"            return \"T\";"},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"    },"},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"    TASK_TYPE_DEADLINE {"},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"        @Override"},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"        public String toString() {"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"            return \"D\";"},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"    },"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"    TASK_TYPE_EVENT {"},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"        @Override"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"        public String toString() {"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"            return \"E\";"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":28}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":" * Handles To-Do tasks."},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":" */"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"public class ToDos extends Task {"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"     * ToDos class constructor."},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"     * @param taskTitle A string of To-Do task name."},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"     * @param isDone    Status of the To-Do task."},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"    public ToDos(String taskTitle, Boolean isDone) {"},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"        super(taskTitle, isDone, TaskTypes.TASK_TYPE_TODO);"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"     * Loads To-Do tasks from the file at beginning."},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"     * @param taskTitle A string of To-Do task name."},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"     * @param isDone    Status of the To-Do task."},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks     The overall user\u0027s task list."},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"    public static void loadTodoTask(String taskTitle, Boolean isDone, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"        ToDos todoTask \u003d new ToDos(taskTitle, isDone);"},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"        tasks.add(todoTask);"},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":"     * Returns a string follows the format of the file."},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"yanbingtao"},"content":"     * @return A string follows the format of the file."},{"lineNumber":35,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"yanbingtao"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"yanbingtao"},"content":"    public String writeToFile() {"},{"lineNumber":38,"author":{"gitId":"yanbingtao"},"content":"        return super.writeToFile();"},{"lineNumber":39,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":40}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":" * Prints the relevant messages."},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":" */"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"     * Prints and returns logo \"Welcome\" greeting."},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"     * @return System reply message."},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"    public static String getLogoMsg() {"},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"        String logo \u003d \"|^_^|┛\\nWELCOME to DukeBT!\";"},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(logo);"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"        return logo;"},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"     * Prints and returns greeting."},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"     * @return System reply message."},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"    public static String getGreetingMsg() {"},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"        String greetingMsg \u003d \" Hello! I\u0027m DukeBT.\""},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n What can I do for you?\""},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\";"},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(greetingMsg);"},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":"        return greetingMsg;"},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"yanbingtao"},"content":"     * Prints and returns help message to show all possible commands available."},{"lineNumber":35,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"yanbingtao"},"content":"     * @return System reply message."},{"lineNumber":37,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"yanbingtao"},"content":"    public static String getHelpMsg() {"},{"lineNumber":39,"author":{"gitId":"yanbingtao"},"content":"        String commandList \u003d \" ┗( ⊙.⊙ )┛ \""},{"lineNumber":40,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n These are all the commands you may use:\""},{"lineNumber":41,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n     1.list -- show all tasks\""},{"lineNumber":42,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n     2.todo \u003ctask description\u003e -- add a task\""},{"lineNumber":43,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n     3.deadline \u003ctask description\u003e /by \u003ctask deadline - \u0027yyyy-MM-dd HH:mm\u0027\u003e \""},{"lineNumber":44,"author":{"gitId":"yanbingtao"},"content":"                + \"-- add a task with its deadline\""},{"lineNumber":45,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n     4.event \u003cevent description\u003e /at \u003cevent timing - \u0027yyyy-MM-dd HH:mm\u0027\u003e \""},{"lineNumber":46,"author":{"gitId":"yanbingtao"},"content":"                + \"-- add an event with its timing\""},{"lineNumber":47,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n     5.done \u003ctask index\u003e -- mark this task as done\""},{"lineNumber":48,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n     6.delete \u003ctask index\u003e -- mark this task from task list\""},{"lineNumber":49,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n     7.find \u003ckeyword(s)\u003e -- find all tasks in the task list which contains the keyword(s)\""},{"lineNumber":50,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n     8.archive \u003ctask index\u003e -- archive this task\""},{"lineNumber":51,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n     9.archive all -- archive all tasks\""},{"lineNumber":52,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n     10.list archive -- show all archived tasks\""},{"lineNumber":53,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n     11.help -- show all commands\""},{"lineNumber":54,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n     12.bye -- exit the chatbot\";"},{"lineNumber":55,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(commandList);"},{"lineNumber":56,"author":{"gitId":"yanbingtao"},"content":"        return commandList;"},{"lineNumber":57,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":59,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"yanbingtao"},"content":"     * Prints and returns bye message to see goodbye to the user."},{"lineNumber":61,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"yanbingtao"},"content":"     * @return System reply message."},{"lineNumber":63,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"yanbingtao"},"content":"    public static String getByeMsg() {"},{"lineNumber":65,"author":{"gitId":"yanbingtao"},"content":"        String byeMsg \u003d \" |^_^|┛\""},{"lineNumber":66,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Bye. Hope to see you again soon!\""},{"lineNumber":67,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Your task list has been saved.\""},{"lineNumber":68,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n It will be automatically reloaded when you come back!\";"},{"lineNumber":69,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(byeMsg);"},{"lineNumber":70,"author":{"gitId":"yanbingtao"},"content":"        return byeMsg;"},{"lineNumber":71,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":73,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"yanbingtao"},"content":"     * Prints and returns confirmation message to show user"},{"lineNumber":75,"author":{"gitId":"yanbingtao"},"content":"     * the deadline task has been added into the task list."},{"lineNumber":76,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks The overall user\u0027s task list."},{"lineNumber":78,"author":{"gitId":"yanbingtao"},"content":"     * @return System reply message."},{"lineNumber":79,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"yanbingtao"},"content":"    public static String getAddingDeadlineTaskMsg(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":81,"author":{"gitId":"yanbingtao"},"content":"        String outputMsg \u003d \" (^.^)\""},{"lineNumber":82,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Got it. I\u0027ve added this Deadline task:\""},{"lineNumber":83,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n     \" + tasks.size() + \".\" + tasks.get(tasks.size() - 1)"},{"lineNumber":84,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":85,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(outputMsg);"},{"lineNumber":86,"author":{"gitId":"yanbingtao"},"content":"        return outputMsg;"},{"lineNumber":87,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":89,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"yanbingtao"},"content":"     * Prints and returns confirmation message to show user"},{"lineNumber":91,"author":{"gitId":"yanbingtao"},"content":"     * the event task has been added into the task list."},{"lineNumber":92,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks The overall user\u0027s task list."},{"lineNumber":94,"author":{"gitId":"yanbingtao"},"content":"     * @return System reply message."},{"lineNumber":95,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"yanbingtao"},"content":"    public static String getAddingEventTaskMsg(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":97,"author":{"gitId":"yanbingtao"},"content":"        String outputMsg \u003d \" (^.^)\""},{"lineNumber":98,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Got it. I\u0027ve added this Event task:\""},{"lineNumber":99,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n     \" + tasks.size() + \".\" + tasks.get(tasks.size() - 1)"},{"lineNumber":100,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":101,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(outputMsg);"},{"lineNumber":102,"author":{"gitId":"yanbingtao"},"content":"        return outputMsg;"},{"lineNumber":103,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":105,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"yanbingtao"},"content":"     * Prints and returns confirmation message to show user"},{"lineNumber":107,"author":{"gitId":"yanbingtao"},"content":"     * the to-do task has been added into the task list."},{"lineNumber":108,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks The overall user\u0027s task list."},{"lineNumber":110,"author":{"gitId":"yanbingtao"},"content":"     * @return System reply message."},{"lineNumber":111,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"yanbingtao"},"content":"    public static String getAddingTodoTaskMsg(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":113,"author":{"gitId":"yanbingtao"},"content":"        String outputMsg \u003d \" (^.^)\""},{"lineNumber":114,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Got it. I\u0027ve added this ToDo task:\""},{"lineNumber":115,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n     \" + tasks.size() + \".\" + tasks.get(tasks.size() - 1)"},{"lineNumber":116,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":117,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(outputMsg);"},{"lineNumber":118,"author":{"gitId":"yanbingtao"},"content":"        return outputMsg;"},{"lineNumber":119,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":121,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"yanbingtao"},"content":"     * Prints and returns confirmation message to show user"},{"lineNumber":123,"author":{"gitId":"yanbingtao"},"content":"     * the task task has been marked as done."},{"lineNumber":124,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"yanbingtao"},"content":"     * @param index A series number of the task in the task list."},{"lineNumber":126,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks The overall user\u0027s task list."},{"lineNumber":127,"author":{"gitId":"yanbingtao"},"content":"     * @return System reply message."},{"lineNumber":128,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"yanbingtao"},"content":"    public static String getDoneTaskMsg(int index, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":130,"author":{"gitId":"yanbingtao"},"content":"        String outputMsg \u003d \" (ﾉﾟ0ﾟ)ﾉ~\""},{"lineNumber":131,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Congratulations from DukeBT! You have done 1 task!\""},{"lineNumber":132,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n The task below has been marked as done:\""},{"lineNumber":133,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n      Task #\" + index + \". \" + tasks.get(index - 1);"},{"lineNumber":134,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(outputMsg);"},{"lineNumber":135,"author":{"gitId":"yanbingtao"},"content":"        return outputMsg;"},{"lineNumber":136,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":138,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"yanbingtao"},"content":"     * Prints and returns confirmation message to show user"},{"lineNumber":140,"author":{"gitId":"yanbingtao"},"content":"     * the corresponding task has been deleted from the task list."},{"lineNumber":141,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":142,"author":{"gitId":"yanbingtao"},"content":"     * @param index        A series number of the task in the task list."},{"lineNumber":143,"author":{"gitId":"yanbingtao"},"content":"     * @param taskToDelete Task to be deleted."},{"lineNumber":144,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks        The overall user\u0027s task list."},{"lineNumber":145,"author":{"gitId":"yanbingtao"},"content":"     * @return System reply message."},{"lineNumber":146,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"yanbingtao"},"content":"    public static String getDeleteTaskMsg(int index, Task taskToDelete, TaskList tasks) {"},{"lineNumber":148,"author":{"gitId":"yanbingtao"},"content":"        String outputMsg \u003d \" (ಠ‿↼)\""},{"lineNumber":149,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Noted. This task has been removed from your task list:\""},{"lineNumber":150,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n      Task #\" + index + \". \" + taskToDelete"},{"lineNumber":151,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Now you have \" + tasks.getTaskListSize() + \" tasks in the list.\";"},{"lineNumber":152,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(outputMsg);"},{"lineNumber":153,"author":{"gitId":"yanbingtao"},"content":"        return outputMsg;"},{"lineNumber":154,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":156,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"yanbingtao"},"content":"     * Prints and returns all tasks stored in the task list."},{"lineNumber":158,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":159,"author":{"gitId":"yanbingtao"},"content":"     * @param tasks The overall user\u0027s task list."},{"lineNumber":160,"author":{"gitId":"yanbingtao"},"content":"     * @return System reply message."},{"lineNumber":161,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"yanbingtao"},"content":"    public static String getAllTasksMsg(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":163,"author":{"gitId":"yanbingtao"},"content":"        String outputMsg \u003d \"\";"},{"lineNumber":164,"author":{"gitId":"yanbingtao"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":165,"author":{"gitId":"yanbingtao"},"content":"            outputMsg \u003d \" (⊙ ‿ ⊙)\""},{"lineNumber":166,"author":{"gitId":"yanbingtao"},"content":"                    + \"\\n Task list is empty, please try to add some tasks first.\";"},{"lineNumber":167,"author":{"gitId":"yanbingtao"},"content":"            System.out.println(outputMsg);"},{"lineNumber":168,"author":{"gitId":"yanbingtao"},"content":"            return outputMsg;"},{"lineNumber":169,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":171,"author":{"gitId":"yanbingtao"},"content":"        outputMsg \u003d \" (⊙ ‿ ⊙)\""},{"lineNumber":172,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n You have \" + tasks.size() + \" tasks in total.\""},{"lineNumber":173,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Here they are:\";"},{"lineNumber":174,"author":{"gitId":"yanbingtao"},"content":"        return getAllTasks(tasks, outputMsg);"},{"lineNumber":175,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":177,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":178,"author":{"gitId":"yanbingtao"},"content":"     * Prints and returns all archived tasks in archive task list."},{"lineNumber":179,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":180,"author":{"gitId":"yanbingtao"},"content":"     * @param archivedTasks The archived task list."},{"lineNumber":181,"author":{"gitId":"yanbingtao"},"content":"     * @return System reply message."},{"lineNumber":182,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"yanbingtao"},"content":"    public static String getAllArchivedTasksMsg(ArchivedTaskList archivedTasks) {"},{"lineNumber":184,"author":{"gitId":"yanbingtao"},"content":"        String outputMsg \u003d \"\";"},{"lineNumber":185,"author":{"gitId":"yanbingtao"},"content":"        if (archivedTasks.getArchivedTaskList().isEmpty()) {"},{"lineNumber":186,"author":{"gitId":"yanbingtao"},"content":"            outputMsg \u003d \" (⊙ ‿ ⊙)\""},{"lineNumber":187,"author":{"gitId":"yanbingtao"},"content":"                    + \"\\n Archived task list is empty, there\u0027s no archived task yet.\""},{"lineNumber":188,"author":{"gitId":"yanbingtao"},"content":"                    + \"\\n\";"},{"lineNumber":189,"author":{"gitId":"yanbingtao"},"content":"            System.out.println(outputMsg);"},{"lineNumber":190,"author":{"gitId":"yanbingtao"},"content":"            return outputMsg;"},{"lineNumber":191,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":192,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":193,"author":{"gitId":"yanbingtao"},"content":"        outputMsg \u003d \" (⊙ ‿ ⊙)\""},{"lineNumber":194,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n You have \" + archivedTasks.getArchivedTaskList().size()"},{"lineNumber":195,"author":{"gitId":"yanbingtao"},"content":"                + \" archived tasks in total.\""},{"lineNumber":196,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Here they are:\";"},{"lineNumber":197,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(outputMsg);"},{"lineNumber":198,"author":{"gitId":"yanbingtao"},"content":"        return getAllTasks(archivedTasks.getArchivedTaskList(), outputMsg);"},{"lineNumber":199,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":201,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":202,"author":{"gitId":"yanbingtao"},"content":"     * Prints and returns confirmation message if the task has been archived."},{"lineNumber":203,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":204,"author":{"gitId":"yanbingtao"},"content":"     * @param taskToArchive The task which is going to be archived."},{"lineNumber":205,"author":{"gitId":"yanbingtao"},"content":"     * @param archivedTasks The ArchivedTaskList of archived task list."},{"lineNumber":206,"author":{"gitId":"yanbingtao"},"content":"     * @return System reply message."},{"lineNumber":207,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":208,"author":{"gitId":"yanbingtao"},"content":"    public static String getAddingArchiveTaskMsg(Task taskToArchive, ArchivedTaskList archivedTasks) {"},{"lineNumber":209,"author":{"gitId":"yanbingtao"},"content":"        String outputMsg \u003d \" (ಠ‿↼)\""},{"lineNumber":210,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Noted. This task has been archived from your task list:\""},{"lineNumber":211,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n      Task \" + taskToArchive"},{"lineNumber":212,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Now you have \" + archivedTasks.getTaskListSize() + \" tasks in the archived task list.\";"},{"lineNumber":213,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(outputMsg);"},{"lineNumber":214,"author":{"gitId":"yanbingtao"},"content":"        return outputMsg;"},{"lineNumber":215,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":217,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":218,"author":{"gitId":"yanbingtao"},"content":"     * Prints and returns confirmation message if all task has been archived."},{"lineNumber":219,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":220,"author":{"gitId":"yanbingtao"},"content":"     * @param archivedTasks The ArchivedTaskList of archived task list."},{"lineNumber":221,"author":{"gitId":"yanbingtao"},"content":"     * @return System reply message."},{"lineNumber":222,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":223,"author":{"gitId":"yanbingtao"},"content":"    public static String getArchiveAllTaskMsg(ArchivedTaskList archivedTasks) {"},{"lineNumber":224,"author":{"gitId":"yanbingtao"},"content":"        String outputMsg \u003d \" (ಠ‿↼)\""},{"lineNumber":225,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Noted. All tasks have been archived.\""},{"lineNumber":226,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Now you have \" + archivedTasks.getTaskListSize() + \" tasks in the archived task list.\";"},{"lineNumber":227,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(outputMsg);"},{"lineNumber":228,"author":{"gitId":"yanbingtao"},"content":"        return outputMsg;"},{"lineNumber":229,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":231,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":232,"author":{"gitId":"yanbingtao"},"content":"     * Prints and returns all tasks that match the keyword stored in the task list."},{"lineNumber":233,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":234,"author":{"gitId":"yanbingtao"},"content":"     * @param keyword      A string of keyword to find the matching tasks."},{"lineNumber":235,"author":{"gitId":"yanbingtao"},"content":"     * @param matchedTasks An ArrayList of all the tasks that match with the keyword."},{"lineNumber":236,"author":{"gitId":"yanbingtao"},"content":"     * @return System reply message."},{"lineNumber":237,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":238,"author":{"gitId":"yanbingtao"},"content":"    public static String getMatchingTasksMsg(String keyword, ArrayList\u003cTask\u003e matchedTasks) {"},{"lineNumber":239,"author":{"gitId":"yanbingtao"},"content":"        String outputMsg \u003d \"\";"},{"lineNumber":240,"author":{"gitId":"yanbingtao"},"content":"        if (matchedTasks.isEmpty()) {"},{"lineNumber":241,"author":{"gitId":"yanbingtao"},"content":"            outputMsg \u003d \" (⊙ ‿ ⊙)\""},{"lineNumber":242,"author":{"gitId":"yanbingtao"},"content":"                    + \"\\n There is no matching task with the keyword - \u0027\" + keyword + \"\u0027.\";"},{"lineNumber":243,"author":{"gitId":"yanbingtao"},"content":"            System.out.println(outputMsg);"},{"lineNumber":244,"author":{"gitId":"yanbingtao"},"content":"            return outputMsg;"},{"lineNumber":245,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":247,"author":{"gitId":"yanbingtao"},"content":"        outputMsg \u003d \" (⊙ ‿ ⊙)\""},{"lineNumber":248,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n You have \" + matchedTasks.size() + \" tasks matched with keyword - \u0027\""},{"lineNumber":249,"author":{"gitId":"yanbingtao"},"content":"                + keyword + \"\u0027.\""},{"lineNumber":250,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Here they are:\";"},{"lineNumber":251,"author":{"gitId":"yanbingtao"},"content":"        return getAllTasks(matchedTasks, outputMsg);"},{"lineNumber":252,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":254,"author":{"gitId":"yanbingtao"},"content":"    private static String getAllTasks(ArrayList\u003cTask\u003e taskList, String outputMsg) {"},{"lineNumber":255,"author":{"gitId":"yanbingtao"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":256,"author":{"gitId":"yanbingtao"},"content":"            outputMsg +\u003d \"\\n      \" + (i + 1) + \". \" + taskList.get(i);"},{"lineNumber":257,"author":{"gitId":"yanbingtao"},"content":"        }"},{"lineNumber":258,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":259,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(outputMsg);"},{"lineNumber":260,"author":{"gitId":"yanbingtao"},"content":"        return outputMsg;"},{"lineNumber":261,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":262,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":262}},{"path":"src/main/java/duke/Warnings.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":" * Display different kinds of warning messages when error occurs."},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":" */"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"public class Warnings extends Ui {"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"     * Displays and returns warning message when invalid done task index is given."},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"     * @param tasksSize Size of the user\u0027s task list."},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"     * @return System warning message."},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"    public static String getInvalidDoneTaskIndexMsg(int tasksSize) {"},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"        assert tasksSize \u003e\u003d 0 : \"Task size should not be less than 0.\";"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"        String warningMsg \u003d \" [• ▂ •]What? \""},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n I couldn\u0027t find this task, please re-enter a valid task index!\""},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n And make sure you follow this format - \u0027done \u003cTask_Index (Start from 1)\u003e\u0027.\""},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n\\n You have \" + tasksSize + \" tasks in total.\""},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\";"},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(warningMsg);"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"        return warningMsg;"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"     * Displays and returns warning message when invalid ToDoTask input entered."},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"     * @return System warning message."},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":"    public static String getInvalidToDoMsg() {"},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":"        String warningMsg \u003d \" [• ▂ •]What? \""},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n OOPS!!! The description of a todo cannot be empty.\""},{"lineNumber":34,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n And make sure you follow this format - \u0027todo \u003ctask name\u003e\u0027.\""},{"lineNumber":35,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\";"},{"lineNumber":36,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(warningMsg);"},{"lineNumber":37,"author":{"gitId":"yanbingtao"},"content":"        return warningMsg;"},{"lineNumber":38,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":40,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"yanbingtao"},"content":"     * Displays and returns warning message when invalid DeadlineTask input entered."},{"lineNumber":42,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"yanbingtao"},"content":"     * @return System warning message."},{"lineNumber":44,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"yanbingtao"},"content":"    public static String getInvalidDeadlineMsg() {"},{"lineNumber":46,"author":{"gitId":"yanbingtao"},"content":"        String warningMsg \u003d \" [• ▂ •]What? \""},{"lineNumber":47,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n OOPS!!! The description or/and deadline of a deadline task cannot be empty.\""},{"lineNumber":48,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n And make sure you follow this format - \u0027deadline \u003ctask name\u003e /by \""},{"lineNumber":49,"author":{"gitId":"yanbingtao"},"content":"                + \"\u003ctask deadline - \u0027yyyy-MM-dd HH:mm\u0027\u003e\u0027.\""},{"lineNumber":50,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\";"},{"lineNumber":51,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(warningMsg);"},{"lineNumber":52,"author":{"gitId":"yanbingtao"},"content":"        return warningMsg;"},{"lineNumber":53,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":55,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"yanbingtao"},"content":"     * Displays and returns warning message when invalid EventTask input entered."},{"lineNumber":57,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"yanbingtao"},"content":"     * @return System warning message."},{"lineNumber":59,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"yanbingtao"},"content":"    public static String getInvalidEventMsg() {"},{"lineNumber":61,"author":{"gitId":"yanbingtao"},"content":"        String warningMsg \u003d \" [• ▂ •]What? \""},{"lineNumber":62,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n OOPS!!! The description or/and event timing of a event task cannot be empty.\""},{"lineNumber":63,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n And make sure you follow this format - \u0027event \u003cevent name\u003e \""},{"lineNumber":64,"author":{"gitId":"yanbingtao"},"content":"                + \"/at \u003cevent timing - \u0027yyyy-MM-dd HH:mm\u0027\u003e\u0027.\""},{"lineNumber":65,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\";"},{"lineNumber":66,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(warningMsg);"},{"lineNumber":67,"author":{"gitId":"yanbingtao"},"content":"        return warningMsg;"},{"lineNumber":68,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":70,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"yanbingtao"},"content":"     * Displays and returns warning message when Parser cannot recognize the input."},{"lineNumber":72,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"yanbingtao"},"content":"     * @return System warning message."},{"lineNumber":74,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"yanbingtao"},"content":"    public static String getInvalidInputMsg() {"},{"lineNumber":76,"author":{"gitId":"yanbingtao"},"content":"        String warningMsg \u003d \" [• ▂ •]What? \""},{"lineNumber":77,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\""},{"lineNumber":78,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\";"},{"lineNumber":79,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(warningMsg);"},{"lineNumber":80,"author":{"gitId":"yanbingtao"},"content":"        return warningMsg;"},{"lineNumber":81,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":83,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"yanbingtao"},"content":"     * Displays and returns warning message when invalid delete input entered."},{"lineNumber":85,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"yanbingtao"},"content":"     * @param tasksSize Size of the user\u0027s task list."},{"lineNumber":87,"author":{"gitId":"yanbingtao"},"content":"     * @return System warning message."},{"lineNumber":88,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"yanbingtao"},"content":"    public static String getInvalidDeleteMsg(int tasksSize) {"},{"lineNumber":90,"author":{"gitId":"yanbingtao"},"content":"        assert tasksSize \u003e\u003d 0 : \"Task size should not be less than 0.\";"},{"lineNumber":91,"author":{"gitId":"yanbingtao"},"content":"        String warningMsg \u003d \" [• ▂ •]What? \""},{"lineNumber":92,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n I couldn\u0027t find this task, please re-enter a valid task index!\""},{"lineNumber":93,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n And make sure you follow this format - \u0027delete \u003cTask_Index (Start from 1)\u003e\u0027.\""},{"lineNumber":94,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n\\n You have \" + tasksSize + \" tasks in total.\""},{"lineNumber":95,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\";"},{"lineNumber":96,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(warningMsg);"},{"lineNumber":97,"author":{"gitId":"yanbingtao"},"content":"        return warningMsg;"},{"lineNumber":98,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":100,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"yanbingtao"},"content":"     * Displays and returns warning message when error occurs while loading data file."},{"lineNumber":102,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"yanbingtao"},"content":"     * @param e Exception message."},{"lineNumber":104,"author":{"gitId":"yanbingtao"},"content":"     * @return System warning message."},{"lineNumber":105,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"yanbingtao"},"content":"    public static String getInvalidFileInputMsg(IOException e) {"},{"lineNumber":107,"author":{"gitId":"yanbingtao"},"content":"        String warningMsg1 \u003d \" [• ▂ •]What? \""},{"lineNumber":108,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Invalid data inside data/taskList.txt file...\""},{"lineNumber":109,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n\\n Details:\";"},{"lineNumber":110,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(warningMsg1);"},{"lineNumber":111,"author":{"gitId":"yanbingtao"},"content":"        System.err.println(e);"},{"lineNumber":112,"author":{"gitId":"yanbingtao"},"content":"        String warningMsg \u003d warningMsg1 + \"\\n\" + e;"},{"lineNumber":113,"author":{"gitId":"yanbingtao"},"content":"        return warningMsg;"},{"lineNumber":114,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":116,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"yanbingtao"},"content":"     * Displays and returns warning message when error occurs while saving into data file."},{"lineNumber":118,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"yanbingtao"},"content":"     * @param e Exception message."},{"lineNumber":120,"author":{"gitId":"yanbingtao"},"content":"     * @return System warning message."},{"lineNumber":121,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"yanbingtao"},"content":"    public static String getInvalidFileOutputMsg(IOException e) {"},{"lineNumber":123,"author":{"gitId":"yanbingtao"},"content":"        String warningMsg1 \u003d \" [• ▂ •]What? \""},{"lineNumber":124,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Errors occurred when try to write data into data/taskList.txt file...\""},{"lineNumber":125,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n\\n Details:\";"},{"lineNumber":126,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(warningMsg1);"},{"lineNumber":127,"author":{"gitId":"yanbingtao"},"content":"        System.err.println(e);"},{"lineNumber":128,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":129,"author":{"gitId":"yanbingtao"},"content":"        String warningMsg \u003d warningMsg1 + \"\\n\" + e;"},{"lineNumber":130,"author":{"gitId":"yanbingtao"},"content":"        return warningMsg;"},{"lineNumber":131,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":133,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":134,"author":{"gitId":"yanbingtao"},"content":"     * Displays and returns warning message when error occurs while try to archive a task."},{"lineNumber":135,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":136,"author":{"gitId":"yanbingtao"},"content":"     * @param tasksSize Number of tasks in active TaskList."},{"lineNumber":137,"author":{"gitId":"yanbingtao"},"content":"     * @return System warning message."},{"lineNumber":138,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"yanbingtao"},"content":"    public static String getInvalidArchiveMsg(int tasksSize) {"},{"lineNumber":140,"author":{"gitId":"yanbingtao"},"content":"        String warningMsg \u003d \" [• ▂ •]What? \""},{"lineNumber":141,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n I couldn\u0027t archive this task, please re-enter a valid task index!\""},{"lineNumber":142,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n And make sure you follow this format - \u0027archive \u003cTask_Index (Start from 1)\u003e\u0027.\""},{"lineNumber":143,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n\\n You have \" + tasksSize + \" tasks in total.\""},{"lineNumber":144,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\";"},{"lineNumber":145,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(warningMsg);"},{"lineNumber":146,"author":{"gitId":"yanbingtao"},"content":"        return warningMsg;"},{"lineNumber":147,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":149,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"yanbingtao"},"content":"     * Displays and returns warning message when error occurs while try to find tasks."},{"lineNumber":151,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":152,"author":{"gitId":"yanbingtao"},"content":"     * @return System warning message."},{"lineNumber":153,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"yanbingtao"},"content":"    public static String getInvalidFindMsg() {"},{"lineNumber":155,"author":{"gitId":"yanbingtao"},"content":"        String warningMsg \u003d \" [• ▂ •]What? \""},{"lineNumber":156,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Please make sure you follow this format - \u0027find \u003cKeyword\u003e\u0027.\""},{"lineNumber":157,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\";"},{"lineNumber":158,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(warningMsg);"},{"lineNumber":159,"author":{"gitId":"yanbingtao"},"content":"        return warningMsg;"},{"lineNumber":160,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":162,"author":{"gitId":"yanbingtao"},"content":"    /**"},{"lineNumber":163,"author":{"gitId":"yanbingtao"},"content":"     * Displays and returns warning message when error occurs while use enters a wrong date-time format."},{"lineNumber":164,"author":{"gitId":"yanbingtao"},"content":"     *"},{"lineNumber":165,"author":{"gitId":"yanbingtao"},"content":"     * @return System warning message."},{"lineNumber":166,"author":{"gitId":"yanbingtao"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"yanbingtao"},"content":"    public static String getInvalidDateMsg() {"},{"lineNumber":168,"author":{"gitId":"yanbingtao"},"content":"        String warningMsg \u003d \" [• ▂ •]What? \""},{"lineNumber":169,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n Please make sure you follow this format when enter date - \u0027yyyy-MM-dd HH:mm\u0027.\""},{"lineNumber":170,"author":{"gitId":"yanbingtao"},"content":"                + \"\\n\\n **Type \u0027help\u0027 to see what I can do. |^_^|\";"},{"lineNumber":171,"author":{"gitId":"yanbingtao"},"content":"        System.out.println(warningMsg);"},{"lineNumber":172,"author":{"gitId":"yanbingtao"},"content":"        return warningMsg;"},{"lineNumber":173,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":174}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"      \u003cHBox alignment\u003d\"CENTER\" maxWidth\u003d\"250.0\" style\u003d\"-fx-background-color: #583560;\" styleClass\u003d\"chat-bubble\""},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"            stylesheets\u003d\"@DialogBox.css\"\u003e"},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"         \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"              \u003cLabel fx:id\u003d\"dialog\" maxWidth\u003d\"250.0\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"#00fff2\""},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"                     wrapText\u003d\"true\"\u003e"},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"               \u003cfont\u003e"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"                  \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"12.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"               \u003c/font\u003e"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"            \u003c/Label\u003e"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"         \u003c/children\u003e"},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"      \u003c/HBox\u003e"},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"    \u003c/children\u003e"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"    \u003cpadding\u003e"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"    \u003c/padding\u003e"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"yanbingtao":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":"\u003c?import javafx.scene.effect.Glow?\u003e"},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"\u003cAnchorPane fx:id\u003d\"DukeBT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"    \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"                   promptText\u003d\"Please entry commands here\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\""},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"                   AnchorPane.rightAnchor\u003d\"78.0\"/\u003e"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\""},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" AnchorPane.bottomAnchor\u003d\"0.0\""},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"                    AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.topAnchor\u003d\"0.0\""},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"                    AnchorPane.bottomAnchor\u003d\"40.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"         \u003ccontent\u003e"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"${scrollPane.height}\""},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"                      prefWidth\u003d\"${scrollPane.width}\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\""},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"                      style\u003d\"-fx-background-color: #283565;\"\u003e"},{"lineNumber":27,"author":{"gitId":"yanbingtao"},"content":"               \u003ceffect\u003e"},{"lineNumber":28,"author":{"gitId":"yanbingtao"},"content":"                  \u003cGlow level\u003d\"0.0\" /\u003e"},{"lineNumber":29,"author":{"gitId":"yanbingtao"},"content":"               \u003c/effect\u003e"},{"lineNumber":30,"author":{"gitId":"yanbingtao"},"content":"               \u003cchildren\u003e"},{"lineNumber":31,"author":{"gitId":"yanbingtao"},"content":"                    \u003cImageView fx:id\u003d\"imageView\" fitHeight\u003d\"89.0\" fitWidth\u003d\"${scrollPane.width}\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":32,"author":{"gitId":"yanbingtao"},"content":"               \u003c/children\u003e"},{"lineNumber":33,"author":{"gitId":"yanbingtao"},"content":"            \u003c/VBox\u003e"},{"lineNumber":34,"author":{"gitId":"yanbingtao"},"content":"         \u003c/content\u003e"},{"lineNumber":35,"author":{"gitId":"yanbingtao"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":36,"author":{"gitId":"yanbingtao"},"content":"    \u003c/children\u003e"},{"lineNumber":37,"author":{"gitId":"yanbingtao"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"yanbingtao":37}},{"path":"src/test/duke/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"class DeadlinesTest {"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"    void DeadlinePrintTimeTest() {"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"        Deadlines deadline \u003d new Deadlines(\"deadline1\", \"2020-08-22 17:00\", false);"},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"        assertEquals(\"22 Aug 2020 05:00 PM\", deadline.printTime());"},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"    void DeadlineWriteToFileTest() {"},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"        Deadlines deadline \u003d new Deadlines(\"deadline2\", \"2020-08-22 17:00\", false);"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"        assertEquals(\"D | 0 | deadline2 | 2020-08-22T17:00\", deadline.writeToFile());"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":21}},{"path":"src/test/duke/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"class EventsTest {"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"    void EventsPrintTimeTest() {"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"        Events event \u003d new Events(\"event1\", \"2020-08-22 17:00\", false);"},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"        assertEquals(\"22 Aug 2020 05:00 PM\", event.printTime());"},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"    void EventToStringTest() {"},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"        Events event \u003d new Events(\"event2\", \"2020-08-22 17:00\", false);"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"        assertEquals(\"[E][✗] event2 (at: 22 Aug 2020 05:00 PM)\", event.toString());"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":21}},{"path":"src/test/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":"class TaskTest {"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"    void TaskGetStatusNumTest_notDone() {"},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"        Task task \u003d new Task(\"test1\", false, TaskTypes.TASK_TYPE_TODO);"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"        assertEquals(\"0\", task.getStatusNum());"},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":15,"author":{"gitId":"yanbingtao"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"yanbingtao"},"content":"    void TaskGetStatusNumTest_done() {"},{"lineNumber":17,"author":{"gitId":"yanbingtao"},"content":"        Task task \u003d new Task(\"test2\", true, TaskTypes.TASK_TYPE_TODO);"},{"lineNumber":18,"author":{"gitId":"yanbingtao"},"content":"        assertEquals(\"1\", task.getStatusNum());"},{"lineNumber":19,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":21,"author":{"gitId":"yanbingtao"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"yanbingtao"},"content":"    void TaskWriteToFileTest() {"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":"        Task task \u003d new Task(\"test3\", true, TaskTypes.TASK_TYPE_DEADLINE);"},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"        assertEquals(\"D | 1 | test3\", task.writeToFile());"},{"lineNumber":25,"author":{"gitId":"yanbingtao"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"yanbingtao"},"content":"}"}],"authorContributionMap":{"yanbingtao":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yanbingtao"},"content":"list"},{"lineNumber":2,"author":{"gitId":"yanbingtao"},"content":"todo task1"},{"lineNumber":3,"author":{"gitId":"yanbingtao"},"content":"deadline task2 /by 22Aug2020"},{"lineNumber":4,"author":{"gitId":"yanbingtao"},"content":"event task3 /at Fri 1~6pm"},{"lineNumber":5,"author":{"gitId":"yanbingtao"},"content":"list"},{"lineNumber":6,"author":{"gitId":"yanbingtao"},"content":"hahaha"},{"lineNumber":7,"author":{"gitId":"yanbingtao"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"yanbingtao"},"content":"delete 2"},{"lineNumber":9,"author":{"gitId":"yanbingtao"},"content":"done 45"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"delete 45"},{"lineNumber":11,"author":{"gitId":"yanbingtao"},"content":"list"},{"lineNumber":12,"author":{"gitId":"yanbingtao"},"content":"bye"}],"authorContributionMap":{"yanbingtao":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"yanbingtao"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"yanbingtao"},"content":"    PAUSE"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"-"},"content":")"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":23,"author":{"gitId":"yanbingtao"},"content":""},{"lineNumber":24,"author":{"gitId":"yanbingtao"},"content":"PAUSE"}],"authorContributionMap":{"yanbingtao":4,"-":20}}]
