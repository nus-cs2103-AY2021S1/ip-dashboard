[
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "Todo | true | sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "Event | false | dinner | 6:15pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "Deadline | false | this | 2020-08-24"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String next \u003d ui.readUserInput();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        while (!next.equalsIgnoreCase(\"Bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            parser.sortInput(next, taskList, storage, ui);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            next \u003d ui.readUserInput();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        ui.showByeMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String path \u003d \"data/data.txt\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            File f \u003d new File(path);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            f.getParentFile().mkdir();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        new Duke(path).run(); "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 53
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 5
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Parser() {}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private boolean isDate(String time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            SimpleDateFormat date \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            date.setLenient(false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            date.parse(time.trim());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Returns the date (MMM dd yyyy) of the specified time  "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Time must be formatted as yyyy-MM-dd to be converted to date"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * If time does not match the format, the original time will be returned"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param time Time specified in the task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return Time in date format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String convertDate(String time) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            if (isDate(time)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                Date d \u003d new SimpleDateFormat(\"yyyy-MM-dd\").parse(time);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                s \u003d new SimpleDateFormat(\"MMM dd yyyy\").format(d);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                s \u003d time;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.println(\"Please specify date in the form yyyy-MM-dd\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Sends different instructions depending on user input"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param next Next line of input from the user"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param list List of tasks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param storage Storage of tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param ui User interface to receive input and generate output to users"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void sortInput (String next, TaskList list, Storage storage, Ui ui ) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            next \u003d next.trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            if (next.equalsIgnoreCase(\"list\")) {      //Listing out all the tasks             "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                ui.showList(list);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            } else if (next.startsWith(\"done\")) {    //When a task is done"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                Task completedTask \u003d done(next, list);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                ui.showDoneMessage(completedTask);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                storage.writeToDataFile(list);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            } else if (next.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                Task deletedTask \u003d delete(next, list);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                ui.showRemoveTaskMessage(deletedTask, list.size());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                storage.writeToDataFile(list);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            } else if (next.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                Task addedTodo \u003d addTodo(next, list);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                ui.showAddTaskMessage(addedTodo, list.size());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                storage.writeToDataFile(list);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            } else if (next.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                Task addedDeadline \u003d addDeadline(next, list);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                ui.showAddTaskMessage(addedDeadline, list.size());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                storage.writeToDataFile(list);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            } else if (next.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                Task addedEvent \u003d addEvent(next, list);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                ui.showAddTaskMessage(addedEvent, list.size());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                storage.writeToDataFile(list);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            } else if (next.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                TaskList filter \u003d find(next, list);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                ui.showList(filter);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                throw new UnsupportedOperationException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            ui.showNoTaskInputException();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            ui.showNoTimeInputException();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            ui.showNoTaskExistException();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (UnsupportedOperationException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            ui.showDoNotUnderstandMesssage();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private Task done(String s, TaskList list) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        int index \u003d Integer.parseInt(s.replaceAll(\"[^0-9]\", \"\")) - 1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        list.setDone(index);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private Task delete (String s, TaskList list) throws IndexOutOfBoundsException { "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        int index \u003d Integer.parseInt(s.replaceAll(\"[^0-9]\", \"\")) - 1;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Task t \u003d list.get(index);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        list.removeTask(index);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private Task addTodo (String s, TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String description \u003d s.substring(4).trim();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Task t \u003d new Todo(description);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        list.addTask(t);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private Task addDeadline (String s, TaskList list) throws DukeException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String description \u003d s.split(\"/by\")[0].substring(9).trim();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String deadline \u003d s.split(\"/by\")[1].trim();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Task t \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        list.addTask(t);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private Task addEvent (String s, TaskList list) throws DukeException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String description \u003d s.split(\"/at\")[0].substring(5).trim();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String time \u003d s.split(\"/at\")[1].trim();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Task t \u003d new Event(description, time);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        list.addTask(t);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private TaskList find (String s, TaskList list) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String search \u003d s.substring(4).trim();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return list.filter(search);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 161
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Loads the tasks that have been stored in the data file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return List of tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @throws DukeException If file is not found"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            File f \u003d new File(\"data/data.txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            Scanner diskScanner \u003d new Scanner(f);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            while (diskScanner.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                String next \u003d diskScanner.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                tasks.add(decodeTask(next));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Stores tasks in the data file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param list List of tasks to be stored"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void writeToDataFile(TaskList list) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                String write \u003d encodeTask (list.get(i));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                fw.write (write);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.println (\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private String encodeTask(Task task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String encodedTask \u003d \"\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        encodedTask +\u003d (task.getType() + \" | \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        encodedTask +\u003d (task.getDone() + \" | \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        encodedTask +\u003d (task.getDescription());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if ((task.getType().equals(\"Event\")) || (task.getType().equals(\"Deadline\"))) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            encodedTask +\u003d (\" | \" + task.getTime());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        encodedTask +\u003d \"\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return encodedTask;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private Task decodeTask (String encodedline) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String[] parts \u003d encodedline.split(\"\\\\|\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String type \u003d parts[0].trim();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        boolean isDone \u003d Boolean.parseBoolean(parts[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String description \u003d parts[2].trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        case \"Todo\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return new Todo(description, isDone);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        case \"Deadline\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            time \u003d parts[3].trim();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return new Deadline (description, time, isDone);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        case \"Event\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            time \u003d parts[3].trim();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return new Event(description, time, isDone);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 106
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /** List of tasks **/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Initializes tasklist to a new list of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Initializes tasklist to the specified list of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param taskList list of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public TaskList (ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Adds the specified task to the list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param t task to be added"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Removes a task from the list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param index position of task in the list to be removed "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @throws IndexOutOfBoundsException If index \u003e\u003d size of list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void removeTask (int index) throws IndexOutOfBoundsException{"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        taskList.remove (taskList.get(index));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Sets a task, specified by the index, as done"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param index position of task in the list to be marked done"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void setDone (int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        taskList.get(index).markDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Returns the number of tasks in the list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return number of tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Returns the task at the specified index of the list"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param index position in the list to retrieve the task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return Task in the list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @throws IndexOutOfBoundsException If index \u003e\u003d size of list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Task get(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public TaskList filter(String s) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        TaskList filter \u003d new TaskList();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        for (int i \u003d 0; i \u003c this.size(); i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            if (this.get(i).getDescription().contains(s)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                filter.addTask(this.get(i));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return filter;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 87
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Ui() {}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Shows message upon starting Duke"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"Hello! I\u0027m Duke  ^_^\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"What can I do for you??\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Shows message when user enters \"bye\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void showByeMessage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"Bye!! See you again :)\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Shows message when a task is added to the task list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param t task added to the list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param number number of tasks in the list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void showAddTaskMessage(Task t, int number) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"Got it! I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (t.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.printf (\"Now you have %d tasks in the list \\n\", number);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Shows message when a task is removed from the task list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param t task removed from list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param number number of tasks in the list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void showRemoveTaskMessage (Task t, int number) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"Noted. I\u0027ve removed this task\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (t.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.printf (\"Now you have %d tasks in the list \\n\", number);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Shows message when a task is marked as done"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @param t task that is marked done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void showDoneMessage (Task t) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Reads the user input line by line"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return user input"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String readUserInput() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Scanner sc \u003d new Scanner (System.in);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void showList(TaskList list) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            System.out.printf (\"%d. %s \\n\", i + 1, list.get(i));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"Sorry, I could not retrieve your previous tasks \\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Shows message if user did not specify description of a task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void showNoTaskInputException() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"Please specify a task description\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Shows message if user did not specify time of a deadline or event"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void showNoTimeInputException() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"Please specify a time\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Shows message if user tries to retrieve a task that does not exist"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void showNoTaskExistException() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"Task does not exist\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void showDoNotUnderstandMesssage() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        System.out.println (\"Sorry \u003e_\u003c I don\u0027t know what you mean...\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 112
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Deadline(String description, String time) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        super(description, \"Deadline\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Deadline (String description, String time, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        super (description, \"Deadline\", isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[D][DONE] %s (by: %s)\", this.description, p.convertDate(time));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[D][NOT DONE] %s (by: %s)\", this.description, p.convertDate(time));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 33
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        super(description, \"Event\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Event (String description, String time, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        super (description, \"Event\", isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[E][DONE] %s (at: %s)\", this.description, p.convertDate(time));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[E][NOT DONE] %s (at: %s)\", this.description, p.convertDate(time));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 33
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Task(String description, String type) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Task (String description, String type, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Returns true if task is done"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return Whether task is done "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Boolean getDone(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Returns the description of task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return Description of Task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * Returns the type of task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     * @return Type of task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[DONE] %s\", this.description);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[NOT DONE] %s\", this.description);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 64
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        super(description, \"Todo\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public Todo (String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        super (description,\"Todo\", isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[T][DONE] %s\", this.description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "            return String.format (\"[T][NOT DONE] %s\", this.description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 22
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void testConvertDate() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assertEquals(\"Jul 15 2000\", new Parser().convertDate(\"2000-07-15\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assertEquals(\"Dec 25 2020\", new Parser().convertDate(\"2020-12-25\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assertEquals(\"Wednesday\", new Parser().convertDate(\"Wednesday\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 13
    }
  },
  {
    "path": "src/test/java/duke/tasks/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void testGetDescription() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assertEquals (\"Sleep\", new Task(\"Sleep\", \"Todo\").getDescription());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    public void testGetDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assertEquals(true, new Task (\"Ice skate\", \"Todo\", true).getDone());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "        assertEquals(false, new Task (\"Ice skate\", \"Todo\").getDone());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "deadline project /by today"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "event dog"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "event eat ramen /at Thursday 7pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "event ice skating /at 2020-08-26"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "event no /at 2020/09/13"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "blah"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IlyaRin"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "IlyaRin": 3,
      "-": 20
    }
  }
]
