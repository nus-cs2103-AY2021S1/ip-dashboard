[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 14
    }
  },
  {
    "path": "src/main/java/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception for wrong deadline format"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class DeadlineException extends DukeException{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public DeadlineException (){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"Please key in the deadline in the following format:\\n\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"\\\u0027deadline task name /by date\\\u0027\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 12
    }
  },
  {
    "path": "src/main/java/DeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception for wrong delete command format"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class DeleteException extends DukeException{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public DeleteException(int currentTask, int totalTask){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"You do not have \" + (currentTask + 1) + \" tasks!\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                + \"Choose a number less than equals to \" + totalTask + \"!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 13
    }
  },
  {
    "path": "src/main/java/DoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception for wrong done command format"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class DoneException extends DukeException{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public DoneException(int currentTask, int totalTask){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"You do not have \" + (currentTask + 1) + \" tasks!\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                + \"Choose a number less than equals to \" + totalTask + \"!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String longLine \u003d \"________________________________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String bye_key \u003d \"bye\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String list_key \u003d \"list\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String done_key \u003d \"done\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String todo_key \u003d \"todo\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String deadline_key \u003d \"deadline\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String event_key \u003d \"event\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static String delete_key \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        lineFormatter(\"Hello!!!! I\u0027m Duke\\nWhat can I do for you?!?!?!\" );"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        add_input();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void echo_input(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        while(scanner.hasNext()){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            if(input.toLowerCase().equals(bye_key)){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                byeGreetings();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                lineFormatter(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void add_input() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        while(scanner.hasNext()){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                //splitting into list for easier comparison"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                String[] inputList \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                // case where input is bye, and a case where the inputList is of length 1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                if(inputList[0].trim().toLowerCase().equals(bye_key)){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    byeGreetings();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                // Case where input is list, to show the list of tasks, and case where the inputList is of length 1"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                if(inputList[0].trim().toLowerCase().equals(list_key) \u0026\u0026 inputList.length \u003e 1){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    throw new IncompleteCommandException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                if(inputList[0].trim().toLowerCase().equals(list_key)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    StringBuffer result \u003d new StringBuffer();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    //to add in the starting line of the section"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    result.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        // getting the current task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        Task currentTask \u003d taskList.get(i);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        // adding the current task into the tasklist"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        result.append((i + 1) + \". \" + currentTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    lineFormatter(result.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                //case where the command is incomplete, in the cases of done, todo, event, deadline and delete"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                else if(inputList.length \u003c 2) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    throw new IncompleteCommandException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                // case where the input is done"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                else if(inputList[0].trim().toLowerCase().equals(done_key) \u0026\u0026 isNum(inputList[1])){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    int currentIndex \u003d Integer.parseInt(inputList[1]) - 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    if(currentIndex + 1\u003e taskList.size() || currentIndex + 1 \u003c\u003d 0){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        throw new DoneException(currentIndex, taskList.size());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        Task task \u003d taskList.get(currentIndex);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        // to check if the task is already done"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        if(task.getStatus()){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            throw new TaskAlreadyDoneException(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "//                            lineFormatter(\"This task is already done!\\n\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "//                                    task.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            // if task is not done"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            taskList.get(currentIndex).markAsDone();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            taskDone(taskList.get(currentIndex));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                } else if(inputList[0].trim().toLowerCase().equals(delete_key) \u0026\u0026 isNum(inputList[1])) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    int currentIndex \u003d Integer.parseInt(inputList[1]) - 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    if (currentIndex + 1 \u003e taskList.size() || currentIndex + 1 \u003c\u003d 0) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        throw new DeleteException(currentIndex, taskList.size());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        Task deletedTask \u003d taskList.remove(currentIndex);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        taskDeleted(deletedTask);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    added_to_List(input);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            } catch (DukeException e){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                lineFormatter(e.getMessage());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // method that adds tasks into the list of tasks"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void added_to_List(String printable) throws DukeException{"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String[] nameList \u003d printable.split(\" \", 2);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if(nameList[0].trim().toLowerCase().equals(deadline_key)){"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            String[] task_deadline \u003d nameList[1].trim().split(\"/by\", 2);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            if(task_deadline.length !\u003d 2){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                throw new DeadlineException();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            Task newTask \u003d new Deadline(task_deadline[0].trim(), task_deadline[1].trim());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            newTaskItem(newTask, deadline_key);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } else if(nameList[0].trim().toLowerCase().equals(event_key)){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            String[] task_event \u003d nameList[1].trim().split(\"/at\", 2);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            if(task_event.length !\u003d 2){"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                throw new EventException();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            Task newTask \u003d new Event(task_event[0].trim(), task_event[1].trim());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            newTaskItem(newTask, event_key);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } else if(nameList[0].toLowerCase().equals(todo_key)){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            Task newTask \u003d new ToDo(nameList[1].trim());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            newTaskItem(newTask, todo_key);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            lineFormatter(\"Please enter an appropriate command!!\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //method to segment every String that is being fed into this method"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void lineFormatter (String printable){"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        System.out.println(longLine);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        System.out.println(printable);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        System.out.println(longLine);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // standardised goodbye greeting"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void byeGreetings () {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        lineFormatter(\"Bye! Hope to see you soon again?!\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //method to mark tasks as done"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void taskDone(Task task) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        lineFormatter(\"Nice! This task is getting done!!\\n\" + \"[\" + task.getStatusIcon() + \"] \" + task.getTask());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //method to mark tasks as deleted"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void taskDeleted(Task task) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        lineFormatter(\"The following Task is removed from the TaskList!!\\n\" + \"[\" + task.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        + task.getTask() + \"\\n\" +"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        \"You have \" + taskList.size() + \" tasks left!\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                );"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // method to check for int in String"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isNum(String num){"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            int check \u003d Integer.parseInt(num);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //method for formatting inputs into the taskList"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void newTaskItem (Task task, String type){"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        lineFormatter(\"Now you have a new \" + type + \"! :\\n\" + task.toString() +"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"\\nYou currently have \" + taskList.size() + \" events in your list\\n\" +"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"Type \\\u0027list\\\u0027 to check your Tasklist\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "LimZeWeiDennis": 185
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Base Exception to extend from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Please use the appropriate commands\" ;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 14
    }
  },
  {
    "path": "src/main/java/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception for wrong event command format"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class EventException extends DukeException{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public EventException(){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"Please key in the event in the following format:\\n\" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"\\\u0027event task name /at date\\\u0027\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 10
    }
  },
  {
    "path": "src/main/java/IncompleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception for incomplete/ inappropriate command given"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class IncompleteCommandException extends DukeException{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public IncompleteCommandException(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"Please enter an appropriate command!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 11
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "//Adapted from CS2103T website\u0027s Task class"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Task (String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public boolean getStatus(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getTask();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 30
    }
  },
  {
    "path": "src/main/java/TaskAlreadyDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception to check if task is already done"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class TaskAlreadyDoneException extends DukeException{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public TaskAlreadyDoneException(Task task){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"This task is already done!\\n\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                task.toString());"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 13
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"[T]\" + super.toString() ;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "todo Read a book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "deadline Finish ES2660 Essay /by Tuesday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "event Dinner at Grandma\u0027s /at Monday 6PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "deadline CS2103T iP"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "event CS2103T Tutorial"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "list 2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "LimZeWeiDennis": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    echo \"** BUILD FAILURE **\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 35,
      "LimZeWeiDennis": 7
    }
  }
]
