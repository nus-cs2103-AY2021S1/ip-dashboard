{
  "authorDailyContributionsMap": {
    "shawn-nyk": [
      {
        "date": "2020-08-16",
        "commitResults": [
          {
            "hash": "e0fc3c5bae6ccf3ee1a06740062fa4fbc6b0741a",
            "messageTitle": "Add greet, echo and exit functionality",
            "messageBody": "Duke now greets the user, will echo the user\u0027s input, and the program\nwill exit when the user inputs \"bye\". Duke\u0027s name has also been\nchanged to \"Star Bot\", as in that is the name that it goes by during\nuser interaction, but the class and file name is left as \"Duke\" for the\npurposes of this assignment.\n",
            "tags": [
              "Level-1"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 41,
                "deletions": 6
              }
            }
          },
          {
            "hash": "12bc7a7c921d8355704db0ccbe50e7a9aec7458f",
            "messageTitle": "Add task list functionality",
            "messageBody": "Duke can now keep a record of the user\u0027s inputs as a list of tasks and\ncan show the list to the user upon request.\n",
            "tags": [
              "Level-2"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 30,
                "deletions": 3
              }
            }
          },
          {
            "hash": "474e9319f04b5f546b3ba16ffa6ef3e01b85185f",
            "messageTitle": "Create Task.java and add mark-as-done feature",
            "messageBody": "Task.java encapsulates a task in the Duke program. Tasks now include an\n\"isDone\" property that marks whether the task has been completed or\nnot, and users can now mark tasks as completed.\n",
            "tags": [
              "Level-3"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 47,
                "deletions": 11
              }
            }
          },
          {
            "hash": "0fc2b01c7849e548c43e100f9514d770618dd368",
            "messageTitle": "Add ToDo, Event and Deadline Tasks",
            "messageBody": "Duke now supports 3 types of tasks - ToDo, Event and Deadline tasks.\n",
            "tags": [
              "Level-4"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 71,
                "deletions": 13
              }
            }
          },
          {
            "hash": "872923a31ea58f8a02565328f74e47f12a32f814",
            "messageTitle": "Do automated text UI testing",
            "messageBody": "Run an automated text UI test using the I/O redirection technique to\nsemi-automate the testing of all of Duke\u0027s features up til now.\n",
            "tags": [
              "A-TextUiTesting"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 13,
                "deletions": 0
              },
              "java": {
                "insertions": 1,
                "deletions": 1
              },
              "bat": {
                "insertions": 4,
                "deletions": 1
              }
            }
          },
          {
            "hash": "3dd9ba0c10a0f36ded0d71699fa1a0fb666958eb",
            "messageTitle": "Handle errors",
            "messageBody": "Create a number of exception classes specific to the Duke program to\nhandle different forms of invalid user input.\n",
            "tags": [
              "Level-5"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 185,
                "deletions": 49
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-17",
        "commitResults": [
          {
            "hash": "c6a210ce99b0a8fc225bc528e33bb1f54fcb63b2",
            "messageTitle": "Add deletion functionality",
            "messageBody": "Users can now delete tasks from the task list. Also add error handling\nto handle invalid user input regarding this delete command.\n",
            "tags": [
              "Level-6"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 21,
                "deletions": 0
              },
              "java": {
                "insertions": 49,
                "deletions": 12
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-23",
        "commitResults": [
          {
            "hash": "3b4410ae5be83618458900e6f4fb5c10bac9d922",
            "messageTitle": "Add save functionality",
            "messageBody": "Duke is not able to save task lists upon exiting the program.\n\nUsers thus cannot keep a saved task list unless they do not\nterminate the program.\n\nAdd save functionality in which Duke writes the task list to a file on\nthe hard disk whenever the task list changes. Also handle cases when\nthe path to the save file does not exist - save file or directories in\npath to save file does not exist.\n\nSaving to the hard disk this way follows the Level 7 requirements.\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 0,
                "deletions": 0
              },
              "java": {
                "insertions": 153,
                "deletions": 9
              }
            }
          },
          {
            "hash": "54df2cea7fabaca2d90335041bc16a023793dbbc",
            "messageTitle": "Add dates and times functionality for deadlines",
            "messageBody": "Deadline tasks do not specify that the user must enter a date and time.\n\nThis allows users to potentially give deadlines that are not meaningful\n(that are not dates and times, e.g. \"do task /by Mark\" instead of \"do\ntask /by tomorrow morning).\n\nDeadline tasks should enforce that users have to specify a date and\ntime for the deadline. Let\u0027s use the java.time.LocalDate and\njava.time.LocalDateTime classes to store the date and time specified by\nthe user. The resulting deadline command format is thus: \"deadline task\n/by YYYY-MM-DD hhmm\" where hh is hours and mm is minutes.\n\nThe LocalDate and LocalDateTime classes are used for ease of storing\nand manipulating the date and time data. In turn, the format for the\ndeadline command is used for ease of creating the LocalDate and\nLocalDateTime objects.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 18,
                "deletions": 5
              }
            }
          },
          {
            "hash": "8c98361197aa967a5a87f819d644275c2029b5c3",
            "messageTitle": "Update automated text testing",
            "messageBody": "Automated text testing can now be run repeatedly and takes into account\nand tests the new changes made up til Level-8.\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 11,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-24",
        "commitResults": [
          {
            "hash": "11a3cddc16c80fabb4df23e662ba40634c8bfa88",
            "messageTitle": "Refactor code in Duke.java",
            "messageBody": "Duke.java is handling many different responsibilities - including user\ninteraction, loading and saving files, and parsing and executing\ncommands.\n\nThis is not in line with the single responsibility principle that\nstates that a class should only manage a single part of a program\u0027s\nfunctionality.\n\nLet\u0027s refactor the code in Duke.java to:\n* Ui.java to deal with interactions with the user\n* Storage.java to deal with loading tasks from and saving tasks to the\nsave file\n* Parser.java to deal with making sense of user commands\n* TaskList.java to deal with manipulating the task list\n* Command.java and its subclasses to define and execute user commands\n\nThis follows the single responsibility principle by creating classes\nas necessary that each manage a single part of the program\u0027s\nfunctionality.\n",
            "tags": [
              "A-MoreOOP"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 3,
                "deletions": 0
              },
              "java": {
                "insertions": 496,
                "deletions": 290
              }
            }
          },
          {
            "hash": "bcac100bc06e2820d04ea2552392d682bc49f4c1",
            "messageTitle": "Organize classes into packages",
            "messageBody": "All the java files are in one single directory.\n\nThis makes navigating the directory to access certain classes difficult\nas there are many files to sieve through. It also does not provide\nencapsulation that packages provide and does not make it clear upon\nlooking through the directory what types of classes there are - classes\nthat deal with user commands, classes that deal with tasks, and classes\nthat deal with excpetions.\n\nLet\u0027s organize the classes into suitable java pacakages:\n* duke - as the highest level package containing all other packages /\n  java files\n* duke.command - containing all classes that deal with user commands\n* duke.exception - containing all duke excpetion classes\n* duke.task - containing all classes that deal with tasks\n\nThis makes the code base neater and hence easier to navigate and\nunderstand, and also allows for encapsulation via packages.\n",
            "tags": [
              "A-Packages"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 163,
                "deletions": 22
              },
              "bat": {
                "insertions": 2,
                "deletions": 2
              },
              "md": {
                "insertions": 2,
                "deletions": 2
              }
            }
          },
          {
            "hash": "e91acbf37cdbb967af795c26ab59f394ba7425a3",
            "messageTitle": "Add JUnit tests",
            "messageBody": "Add JUnit tests for the following classes:\n* Parser\n* Task\n* ToDo\n* Event\n* Deadline\n",
            "tags": [
              "A-JUnit"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 471,
                "deletions": 1
              }
            }
          }
        ]
      }
    ]
  },
  "authorFileTypeContributionMap": {
    "shawn-nyk": {
      "java": 1319,
      "md": 2,
      "fxml": 0,
      "sh": 0,
      "bat": 5,
      "gradle": 0,
      "txt": 51
    }
  },
  "authorContributionVariance": {
    "shawn-nyk": 176601.0
  },
  "authorDisplayNameMap": {
    "shawn-nyk": "SHAW..WANG"
  }
}
