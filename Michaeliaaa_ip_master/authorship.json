[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void greeting() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        String greet \u003d \"\\n____________________________________________________________\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\n Hello! I\u0027m Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\n What can I do for you?\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(logo + greet);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void commands() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        String commands \u003d \"   ____________________________________________________________\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n    Here are all your commands:\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n     list - show all tasks\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n     todo \u003cyour task\u003e - add task\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n     deadline \u003cyour task\u003e /by \u003cyour deadline\u003e - add task with deadline\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n     event \u003cyour event\u003e /at \u003cevent\u0027s timing\u003e - add event\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n     done \u003cindex of task\u003e - mark task as done\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n   ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(commands);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        String bye \u003d \"   ____________________________________________________________\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n    Bye! Hope to see you again soon.\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\n   ____________________________________________________________\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(bye);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static void addTask(Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        String str \u003d \"   ____________________________________________________________\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\n    Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\n      \" + task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                + \"\\n    Now you have \" + tasks.size() + \" task(s) in the list.\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n   ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        greeting();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        while (!input.isEmpty()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                bye();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                commands();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                Task.getListOfTasks(tasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                String task;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                    task \u003d input.split(\"todo\")[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    Task newTask \u003d new ToDos(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    addTask(newTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        throw new DukeException(\"\", DukeExceptionType.MISSING_DESCRIPTION, DukeCommandType.TODO);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        System.err.println(e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    if (input.split(\"deadline \").length \u003c 2) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, DukeCommandType.DEADLINE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    } else if (!input.contains(\"/by \")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        if (input.equals(\"deadline /by\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, DukeCommandType.DEADLINE);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.MISSING_TIMING, DukeCommandType.DEADLINE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    } else if (input.split(\"/by \").length \u003c 2) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, DukeCommandType.DEADLINE);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            String task \u003d input.split(\"deadline \")[1].split(\"/by\")[0];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            String due \u003d input.split(\"deadline \")[1].split(\"/by\")[1];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            if (task.equals(\"\") \u0026\u0026 due.equals(\"\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                                throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, DukeCommandType.DEADLINE);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            } else if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                                throw new DukeException(\"\", DukeExceptionType.MISSING_DESCRIPTION, DukeCommandType.DEADLINE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            } else if (due.equals(\"\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                                throw new DukeException(\"\", DukeExceptionType.MISSING_TIMING, DukeCommandType.DEADLINE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                                Task newTask \u003d new Deadlines(task, due);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                                addTask(newTask);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        } catch (DukeException e){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            System.err.println(e);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    System.err.println(e);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    if (input.split(\"event \").length \u003c 2) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, DukeCommandType.EVENT);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    } else if (!input.contains(\"/at \")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        if (input.equals(\"event /at\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, DukeCommandType.EVENT);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.MISSING_TIMING, DukeCommandType.EVENT);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    } else if (input.split(\"/at \").length \u003c 2) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, DukeCommandType.EVENT);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            String task \u003d input.split(\"event \")[1].split(\"/at\")[0];"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            String due \u003d input.split(\"event \")[1].split(\"/at\")[1];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            if (task.equals(\"\") \u0026\u0026 due.equals(\"\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                                throw new DukeException(\"\", DukeExceptionType.WRONG_FORMAT, DukeCommandType.EVENT);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            } else if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                                throw new DukeException(\"\", DukeExceptionType.MISSING_DESCRIPTION, DukeCommandType.DEADLINE);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            } else if (due.equals(\"\")) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                                throw new DukeException(\"\", DukeExceptionType.MISSING_TIMING, DukeCommandType.DEADLINE);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                                Task newTask \u003d new Events(task, due);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                                addTask(newTask);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        } catch (DukeException e){"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                            System.err.println(e);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    System.err.println(e);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                    int index \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                    Task.done(tasks, index);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        throw new DukeException(\"\", DukeExceptionType.INVALID_INDEX, DukeCommandType.DONE);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        System.err.println(e);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                    int index \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                    Task.delete(tasks, index);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        throw new DukeException(\"\", DukeExceptionType.INVALID_INDEX, DukeCommandType.DELETE);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        System.err.println(e);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    throw new DukeException(\"\", DukeExceptionType.UNKNOWN);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    System.err.println(e);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 102,
      "-": 78
    }
  },
  {
    "path": "src/main/java/DukeCommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public enum DukeCommandType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    DELETE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 7
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    protected DukeExceptionType exceptionType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    protected DukeCommandType commandType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public DukeException(String e, DukeExceptionType exceptionType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        super(e);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public DukeException(String e, DukeExceptionType exceptionType, DukeCommandType commandType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        super(e);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        String error \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        switch (exceptionType){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            case EMPTY_LIST:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                error +\u003d \"    YOUR LIST IS EMPTY :-(\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            case UNKNOWN:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                error +\u003d \"    I DON\u0027T KNOW WHAT YOU MEAN :-(\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            case WRONG_FORMAT:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                switch (commandType) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        error +\u003d \"    ERROR IN ADDING DEADLINE: WRONG FORMAT\\n    Format: deadline \u003cdescription\u003e /by \u003cdatetime\u003e\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        error +\u003d \"    ERROR IN ADDING EVENT: WRONG FORMAT\\n    Format: event \u003cdescription\u003e /at \u003cdatetime\u003e\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            case MISSING_DESCRIPTION:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                switch (commandType) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        error +\u003d \"    ERROR IN ADDING TODO: MISSING DESCRIPTION\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        error +\u003d \"    ERROR IN ADDING DEADLINE: MISSING DESCRIPTION\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        error +\u003d \"    ERROR IN ADDING EVENT: MISSING DESCRIPTION\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            case MISSING_TIMING:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                switch (commandType){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        error +\u003d \"    ERROR IN ADDING DEADLINE: MISSING DUE DATE\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        error +\u003d \"    ERROR IN ADDING EVENT: MISSING SCHEDULED DATE\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            case INVALID_INDEX:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                switch (commandType){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        error +\u003d \"    ERROR IN MARKING TASK DONE: INVALID INDEX\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        error +\u003d \"    ERROR IN DELETING TASK: INVALID INDEX\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "        return error;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 73
    }
  },
  {
    "path": "src/main/java/DukeExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "public enum DukeExceptionType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    EMPTY_LIST,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    MISSING_DESCRIPTION,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    MISSING_TIMING,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    INVALID_INDEX,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    WRONG_FORMAT,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    UNKNOWN"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 8
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    public static void getListOfTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                throw new DukeException(\"\", DukeExceptionType.EMPTY_LIST);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                System.err.println(e);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            String lst \u003d \"   ____________________________________________________________\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "                    + \"\\n    Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                int index \u003d i + 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                lst +\u003d \"\\n    \" + index + \". \" + tasks.get(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            lst +\u003d \"\\n   ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(lst);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void done(ArrayList\u003cTask\u003e tasks, Integer index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        tasks.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        String str \u003d \"   ____________________________________________________________\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n    Nice! I\u0027ve marked this task as done:\\n      \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                + tasks.get(index - 1)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n   ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void delete(ArrayList\u003cTask\u003e tasks, Integer index) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        String str \u003d \"   ____________________________________________________________\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n    Noted. I\u0027ve removed this task:\\n      \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                + tasks.remove(index - 1)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n    Now you have \" + tasks.size() + \" task(s) in the list.\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\n   ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 7,
      "-": 54
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "hey"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "todo eat"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 4
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Michaeliaaa"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Michaeliaaa": 5,
      "-": 37
    }
  }
]
