[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "// a task that need to specify a date to be done before the date"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanwayne890": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public enum Verb {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public static void greeting() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public static void printAllTask() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        int numTask \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        while (numTask \u003c tasks.size()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            System.out.println(Integer.valueOf(numTask + 1) + \".\" + tasks.get(numTask));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            numTask++;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public static void printAddedTask(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                \"\\nNow you have \" + String.valueOf(tasks.size())  + \" tasks in the list.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public static String[] removeFirst(String[] arr) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        String[] tempArr \u003d new String[arr.length];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.length - 1; i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            tempArr[i] \u003d arr[i + 1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        return tempArr;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public static String[] removeAfterWord(String[] arr, String word) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        String[] temp \u003d new String[arr.length];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        for(int i \u003d 0; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            if (arr[i].equals(word)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                temp[i] \u003d arr[i];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public static String[] keepAfterWord(String[] arr, String word) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        String[] temp \u003d new String[arr.length];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        // find position of the word"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        for(int i \u003d 0; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            if (arr[i].equals(word)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                counter \u003d i;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        counter++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        for(int i \u003d 0; (counter + i) \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            temp[i] \u003d arr[counter + i];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public static String joinString(String[] arr) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        String text \u003d arr[0];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            return text;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            for (int i \u003d 1; i \u003c arr.length \u0026\u0026 arr[i] !\u003d null; i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                text \u003d text + \" \" + arr[i];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public static void addNewTask(String[] task, int pos)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            throws InvalidTodoDescripDukeException, InvalidDeadlineDescripDukeException, InvalidEventDescripDukeException,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            InvalidFirstDukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        if (task[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            if (task.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                throw new InvalidTodoDescripDukeException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            String[] modifiedTask \u003d removeFirst(task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            tasks.add(new Todo(joinString(modifiedTask))) ;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            printAddedTask(tasks.get(pos));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        } else if (task[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            if (task.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                throw new InvalidDeadlineDescripDukeException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            String[] modifiedTask \u003d removeFirst(task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            String[] upper \u003d removeAfterWord(modifiedTask, \"/by\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            String[] lower \u003d keepAfterWord(modifiedTask, \"/by\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            tasks.add(new Deadline(joinString(upper), joinString(lower)));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            printAddedTask(tasks.get(pos));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        } else if (task[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            if (task.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                throw new InvalidEventDescripDukeException();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            String[] modifiedTask \u003d removeFirst(task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            String[] upper \u003d removeAfterWord(modifiedTask, \"/at\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            String[] lower \u003d keepAfterWord(modifiedTask, \"/at\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            tasks.add(new Event(joinString(upper), joinString(lower)));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            printAddedTask(tasks.get(pos));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            throw new InvalidFirstDukeException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public static void deleteTask(int pos) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + tasks.get(pos) +"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "               \"\\n\" + \"Now you have \" + Integer.valueOf(tasks.size() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        tasks.remove(pos);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            int numTask \u003d 0;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            greeting();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            String input;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            String[] inputArr;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "            while(true) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                input \u003d sc.nextLine(); // original input line"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                inputArr \u003d input.split(\" \"); // split input into string array"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                    if (inputArr[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                        sc.close();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                    } else if (inputArr[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                        printAllTask();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                    } else if (inputArr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                        int counter \u003d  Integer.parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                        tasks.get(counter - 1).markAsDone();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                    } else if (inputArr[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                        int counter \u003d  Integer.parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                        deleteTask(counter - 1);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                        addNewTask(input.split(\" \"), numTask);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                        numTask++;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "                }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanwayne890": 146,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanwayne890": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "// a task that need to specify exact date and time"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanwayne890": 15
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineDescripDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "public class InvalidDeadlineDescripDukeException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    InvalidDeadlineDescripDukeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        super(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tanwayne890": 6
    }
  },
  {
    "path": "src/main/java/InvalidEventDescripDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "public class InvalidEventDescripDukeException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    InvalidEventDescripDukeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        super(\" ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tanwayne890": 6
    }
  },
  {
    "path": "src/main/java/InvalidFirstDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "public class InvalidFirstDukeException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    InvalidFirstDukeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tanwayne890": 6
    }
  },
  {
    "path": "src/main/java/InvalidTodoDescripDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "public class InvalidTodoDescripDukeException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    InvalidTodoDescripDukeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        super(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tanwayne890": 6
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n [✓] \" + description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanwayne890": 23
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "// Any task which does not need to specify any date and time"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanwayne890": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tanwayne890": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "tanwayne890": 2,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "E:\\repos\\ip\\src\\main\\java\\Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "E:\\repos\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "E:\\repos\\ip\\src\\main\\java\\DukeException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "E:\\repos\\ip\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "E:\\repos\\ip\\src\\main\\java\\InvalidDeadlineDescripDukeException.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "E:\\repos\\ip\\src\\main\\java\\InvalidEventDescripDukeException.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "E:\\repos\\ip\\src\\main\\java\\InvalidFirstDukeException.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "E:\\repos\\ip\\src\\main\\java\\InvalidTodoDescripDukeException.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "E:\\repos\\ip\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanwayne890"
        },
        "content": "E:\\repos\\ip\\src\\main\\java\\Todo.java"
      }
    ],
    "authorContributionMap": {
      "tanwayne890": 10
    }
  }
]
