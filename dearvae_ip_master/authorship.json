[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "# Your life Asistant Chat Bot - KK"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "This is a chatbot that can help you keep track of your to do list. It\u0027s named is KK. Given below are instructions on how to use it. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "      _      _"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "| | / /| | / /"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "| |/ / | |/ /"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "|   \u003c  |   \u003c"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "|_|\\_\\ |_|\\_\\"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "## Sample commands include: "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "**list** This shows the list of things you have added"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "**event** \u003ccontent\u003e /at \u003ctime\u003e This adds an event at the stipulated time"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "**deadline** \u003ccontent\u003e /by \u003ctime\u003e This adds a deadline by the stipulated time"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "**todo** \u003ccontent\u003e This adds a todo to the bot"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "**done** \u003cindex\u003e This marks the thing at index index as completed"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "**delete** \u003cindex\u003e This deletes the thing at index index"
      }
    ],
    "authorContributionMap": {
      "dearvae": 23
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dearvae"
        },
        "content": "version \u003d \u00270.2\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "dearvae": 19
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "# Your life Asistant Chat Bot - KK"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "This is a chatbot that can help you keep track of your to do list. It\u0027s named is KK. Given below are instructions on how to use it. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "## Sample commands include: "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "**list** This shows the list of things you have added"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "**event** \u003ccontent\u003e /at \u003ctime\u003e This adds an event at the stipulated time"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "**deadline** \u003ccontent\u003e /by \u003cdate and time\u003e This adds a deadline by the stipulated date time. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "date should be in the format of d/MM/yyyy time is in the format of HH:mm eg: 27/12/2020 16:40"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "**todo** \u003ccontent\u003e This adds a todo to the bot"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "**done** \u003cindex\u003e This marks the thing at index index as completed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "**delete** \u003cindex\u003e This deletes the thing at index index"
      }
    ],
    "authorContributionMap": {
      "dearvae": 10,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/KK.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.utils.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * Represents a chat bot call duke.KK."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class KK {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Constructor for KK class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public KK(String path, String fileName) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        tasks \u003d new TaskList(path, fileName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * The chat bot starts running and interact with user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        relp();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        ui.sayGoodBye();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private void relp() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                c.execute(tasks, ui);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String getResponse(String command) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        Command c \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return c.execute(tasks, ui);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 54,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.ui.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 13
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * Represents command that add a task to the duke.KK\u0027s task list upon execution"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private String info;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Constructor for AddCommand class"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public AddCommand(String taskType, String info) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        this.info \u003d info;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Adds new task to the tasks provided and shows add message through ui."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param tasks  a TaskList object which contains a list of task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param ui a UI object which can prints message to console"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            task \u003d new ToDo(info);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            String[] deadlineParts \u003d info.split(\" /by \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            task \u003d new Deadline(deadlineParts[0], deadlineParts[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } else { // event"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            String[] eventParts \u003d info.split(\" /at \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            task \u003d new Event(eventParts[0], eventParts[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return ui.showAddMessage(task, tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 58
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui) throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 10
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * Represents command that delete a task from the duke.KK\u0027s task list upon execution"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Deletes a task from the tasks provided and show removal message through ui."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param tasks  a TaskList object which contains a list of task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param ui a UI object which can prints message to console"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return ui.showRemovalMessage(task, tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 36
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * Represents command that change a task status to done in the duke.KK\u0027s task list upon execution"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Changes a task status from the tasks provided to done and show done message through ui."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param tasks  a TaskList object which contains a list of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param ui a UI object which can prints message to console"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        tasks.markAsDone(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return ui.showDoneMessage(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 33
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * Represents command that stops the duke.KK from running upon execution."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 19
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private String searchText;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public FindCommand(String searchText) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        this.searchText \u003d searchText;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return ui.showListMessage(tasks.find(searchText));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 22
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * Represents command that displays current task list in duke.KK upon execution."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Uses ui to display the tasks info."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param tasks  a TaskList object which contains a list of task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param ui a UI object which can prints message to console"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return ui.helpMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 26
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * Represents command that displays current task list in duke.KK upon execution."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Uses ui to display the tasks info."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param tasks  a TaskList object which contains a list of task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param ui a UI object which can prints message to console"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return ui.showListMessage(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 26
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * Represents a Deadline Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Constructor for a Deadline Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public Deadline(String description, String time) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            this.time \u003d time;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            String[] parts \u003d time.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            String[] timeParts \u003d parts[1].split(\":\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            int hour \u003d Integer.parseInt(timeParts[0]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            int minute \u003d Integer.parseInt(timeParts[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            date \u003d LocalDate.parse(parts[0], DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            dateTime \u003d date.atTime(hour, minute);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "             throw new DukeException(\"create deadline object failed\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Constructor for a Deadline Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public Deadline(boolean isDone, String description, String time) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String[] parts \u003d time.split(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String[] timeParts \u003d parts[1].split(\":\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        int hour \u003d Integer.parseInt(timeParts[0]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        int minute \u003d Integer.parseInt(timeParts[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        date \u003d LocalDate.parse(parts[0], DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        dateTime \u003d date.atTime(hour, minute);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String toStoreFormat() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String type \u003d \"D\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String status \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String connect \u003d \" | \";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return type + connect + status + connect + description + connect + time;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * Represents a Event Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Constructor for an Event Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Constructor for an Event Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public Event(boolean isDone, String description, String time) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + time + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String toStoreFormat() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String type \u003d \"E\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String status \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String connect \u003d \" | \";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return type + connect + status + connect + description + connect + time;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 38
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * Represents a Task which have 3 child class: ToDo, Event and Deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Constructor for Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Constructor for Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public Task(boolean isDone, String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String toStoreFormat() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 45
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.utils.FileHelper;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Constructor for TaskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public TaskList(String path, String fileName) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        loadDataFromFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Constructor for TaskList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private void loadDataFromFile() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        List\u003cString\u003e data \u003d FileHelper.readFromFile(path, fileName);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        for (int i \u003d 0; i \u003c data.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            addTask(data.get(i));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Save task to file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public void save() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        FileHelper.save(path, fileName, getStringifiedList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * add a task to task list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public void addTask(String data) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String[] parts \u003d data.split(\"( \\\\| )\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        assert(parts.length \u003e\u003d 3);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        switch (parts[0]) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        case(\"T\"):"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            task \u003d new ToDo(Integer.parseInt(parts[1]) \u003d\u003d 1, parts[2]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        case(\"D\"):"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            task \u003d new Deadline(Integer.parseInt(parts[1]) \u003d\u003d 1, parts[2], parts[3]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        case(\"E\"):"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            assert(parts.length \u003d\u003d 4);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            task \u003d new Event(Integer.parseInt(parts[1]) \u003d\u003d 1, parts[2], parts[3]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            task \u003d new Task(\"default task\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * add a task to tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public int getNumberOfTask() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * remove a task from task list"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        assert(index \u003c tasks.size());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * mark a task as done by index"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private List\u003cString\u003e getStringifiedList() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        List \u003cString\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            data.add(tasks.get(i).toStoreFormat());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * prints task list info"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String printList() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String message \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            message +\u003d (i + 1) + \".\" + tasks.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * find tasks by keyword"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public List\u003cTask\u003e find(String searchText) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        List\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            if (tasks.get(i).getDescription().contains(searchText)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                results.add(tasks.get(i));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 133
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    TODO, EVENT, DEADLINE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * return string of the enum"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            return \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        case EVENT :"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            return \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            return \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * return true if a string taskType is task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public static boolean isTask(String taskType) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return taskType.equals(TODO.toString())"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                || taskType.equals(EVENT.toString()) || taskType.equals(DEADLINE.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dearvae": 32
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * Represents a ToDo Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public ToDo(boolean isDone, String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String toStoreFormat() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String type \u003d \"T\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String status \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String connect \u003d \" | \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return type + connect + status + connect + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 28
    }
  },
  {
    "path": "src/main/java/duke/ui/DukeDialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class DukeDialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private DukeDialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DukeDialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public static DukeDialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        var db \u003d new DukeDialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 57
    }
  },
  {
    "path": "src/main/java/duke/ui/ErrorMessageBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class ErrorMessageBox extends HBox {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private ErrorMessageBox(String text) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/ErrorMessageBox.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public static ErrorMessageBox getErrorMessageBox(String text) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return new ErrorMessageBox(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 38
    }
  },
  {
    "path": "src/main/java/duke/ui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.KK;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * A GUI for KK using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private KK kk \u003d new KK(\"data/\", \"kk.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(kk);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 32
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.KK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.utils.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private KK duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Pikachu.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * initialize KK and print help message."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                DukeDialogBox.getDukeDialog(new Ui().welcomeMessge(), dukeImage)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public void setDuke(KK d) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing KK\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * the dialog container."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String response \u003d null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                    UserDialogBox.getUserDialog(input),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                    DukeDialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                    UserDialogBox.getUserDialog(input),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                    ErrorMessageBox.getErrorMessageBox(e.getMessage())"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            );"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 70
    }
  },
  {
    "path": "src/main/java/duke/ui/UserDialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class UserDialogBox extends HBox {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private UserDialogBox(String text) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/UserDialogBox.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public static UserDialogBox getUserDialog(String text) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return new UserDialogBox(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 38
    }
  },
  {
    "path": "src/main/java/duke/utils/FileHelper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * A helper class that contains method dealing with file operation."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * such as reading from a file, and write to a file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class FileHelper {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Reads task list from a txt file in certain format."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * and return the data as a list of String."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param path the path to the folder that the file you wants to read resides in."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param fileName the name of the file that you wants to read."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @return a list of String which every string represents a task in a format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public static List\u003cString\u003e readFromFile(String path, String fileName) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        List\u003cString\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        File file \u003d new File(path + \"/\" + fileName);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            if (file.exists()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                    String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                    data.add(line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Saves the data in list of string to the path and file provided."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * if there is no such directory exist, it will make the directory."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param path the path to the folder that the file you wants to save resides in."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param fileName the name of the file that you wants to save the data to."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param data the data you wish to save in the format of list of string."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public static void save(String path, String fileName, List\u003cString\u003e data) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        createDirectoryIfNotExist(path);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        writeToFile(path, fileName, data);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private static void writeToFile(String path, String fileName, List\u003cString\u003e data) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            FileWriter writer \u003d new FileWriter(path + \"/\" + fileName);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            for (int i \u003d 0; i \u003c data.size(); i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                writer.write(data.get(i) + System.lineSeparator());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    private static void createDirectoryIfNotExist(String path) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        File directory \u003d new File(path);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 76
    }
  },
  {
    "path": "src/main/java/duke/utils/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * A helper class that contains method dealing with command parsing."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * such as parsing a string to a command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Parse the command in string to the correct Command Object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param command the string that wants to be parsed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @return a Command which can be either ExitCommd, ListCommand, DoneCommand,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * DeleteCommand or a AddCommand."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @throws DukeException  If the input string is not in the correct format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } else if (command.equals(\"help\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } else if (command.length() \u003e\u003d 6 \u0026\u0026 command.substring(0, 5).equals(\"done \")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            int num \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            return new DoneCommand(num - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } else if (command.length() \u003e\u003d 8 \u0026\u0026 command.substring(0, 7).equals(\"delete \")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            int num \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            return new DeleteCommand(num - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } else if (command.length() \u003e\u003d 6 \u0026\u0026 command.substring(0, 5).equals(\"find \")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            return new FindCommand(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            String[] parts \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            String taskType \u003d parts[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            if (TaskType.isTask(taskType)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                if (parts.length \u003c 2 || parts[1].isEmpty()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                    throw new DukeException(String.format(\"OOPS!!! The description of %s cannot be empty.\", parts[0]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                    return new AddCommand(parts[0], parts[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 57
    }
  },
  {
    "path": "src/main/java/duke/utils/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": " * A class that deals with interactions with the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Display the welcome message in the console."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String logo \u003d \"      _      _\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"| | / /| | / /\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"| |/ / | |/ /\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"|   \u003c  |   \u003c\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"|_|\\\\_\\\\ |_|\\\\_\\\\\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        System.out.println(\"Hello! I\u0027m KK\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \" What can I do for you?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * return a welcome message"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String welcomeMessge() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String logo \u003d \"      _      _\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"| | / /| | / /\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"| |/ / | |/ /\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"|   \u003c  |   \u003c\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"|_|\\\\_\\\\ |_|\\\\_\\\\\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return (\"Hello from\\n\" + logo"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            + \"Hello! I\u0027m KK\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \" What can I do for you?\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Listens for user input and return the user input as string."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @return a string that user has input"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Display the error message in the console."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param message the error message"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        System.out.println(\"Error: \" + message);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Display the removal message in the console."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param removedTask the task that has been removed"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param tasks the latest task list (after remove the task above)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String showRemovalMessage(Task removedTask, TaskList tasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String message \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        message \u003d message + removedTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        message \u003d message + \"Now you have \" + tasks.getNumberOfTask() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Display the done message in the console."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param doneTask the task that has been done."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String showDoneMessage(Task doneTask) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String message \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + doneTask.toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Display the add message in the console."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param newTask the task that has been added"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param tasks the latest task list (after added the task above)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String showAddMessage(Task newTask, TaskList tasks) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String message \u003d newTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        message \u003d message + \"Now you have \" + tasks.getNumberOfTask() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Displays the list info in the console."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param tasks the latest task list"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String showListMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return tasks.printList();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Displays the list info in the console."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * @param tasks a list of task list"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String showListMessage(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        for (int i \u003d 0; i \u003c size; ++i) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            message +\u003d (i + 1) + \".\" + tasks.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        System.out.println(\"-----------------------\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * return helpMessage"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public String helpMessage() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String message \u003d \"list\\n\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"event \u003ccontent\u003e /at \u003ctime\u003e \\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"deadline \u003ccontent\u003e /by \u003ctime\u003e \\n\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"todo \u003ccontent\u003e\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"done \u003cindex\u003e\\n\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"delete \u003cindex\u003e\\n\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                + \"bye\\n\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     * Displays goodbye message"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dearvae"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    public void sayGoodBye() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 158
    }
  },
  {
    "path": "src/main/resources/view/DukeDialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"1.0\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #7bc6cc; -fx-border-radius: 10 10 10 10; -fx-background-radius: 10 10 10 10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                \u003cFont name\u003d\"AppleGothic Regular\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"58.0\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "dearvae": 24
    }
  },
  {
    "path": "src/main/resources/view/ErrorMessageBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003cfx:root alignment\u003d\"CENTER\" background\u003d\"\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"1.0\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #ffe7e7;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "dearvae": 14
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "dearvae": 19
    }
  },
  {
    "path": "src/main/resources/view/UserDialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" background\u003d\"\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "dearvae": 14
    }
  },
  {
    "path": "src/test/duke/utils/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "public class ParserTest{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    void parseAddCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String commandLine \u003d \"todo borrow book\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            assertEquals(Parser.parse(commandLine).getClass(), AddCommand.class);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    void parseExitCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String commandLine \u003d \"bye\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            assertEquals(Parser.parse(commandLine).getClass(), ExitCommand.class);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    void parseDeleteCommand() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String commandLine \u003d \"delete 1\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            assertEquals(Parser.parse(commandLine).getClass(), DeleteCommand.class);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    void parseDoneCommand() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String commandLine \u003d \"done 1\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            assertEquals(Parser.parse(commandLine).getClass(), DoneCommand.class);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    void parseListCommand() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        String commandLine \u003d \"list\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            assertEquals(Parser.parse(commandLine).getClass(), ListCommand.class);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dearvae"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dearvae"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dearvae"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dearvae": 66
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dearvae"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dearvae"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dearvae"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dearvae"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dearvae"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dearvae"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dearvae"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dearvae"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dearvae"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dearvae"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dearvae"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dearvae"
        },
        "content": "blah"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dearvae"
        },
        "content": "todo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "dearvae": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dearvae"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "dearvae": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dearvae"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dearvae"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dearvae"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dearvae"
        },
        "content": "    echo \"********** BUILD rFAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dearvae"
        },
        "content": "java -classpath ../bin duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 35,
      "dearvae": 5
    }
  }
]
