[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "[E][✘] project meeting (at: Monday)"
      }
    ],
    "authorContributionMap": {
      "gloon99": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * represents a deadline task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public Deadline(String deadline) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(deadline.substring(9, deadline.indexOf(\"/\")-1));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (description.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            throw new EmptyDescriptionException(\"oops! the description of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.deadline \u003d deadline.substring(deadline.indexOf(\"/\")+4);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(this.deadline);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            deadline \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            deadline \u003d this.deadline;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"[D]\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(super.toString())"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\" (\").append(\"by: \")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(deadline)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\")\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 38
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * duke is a chat bot cum task manager"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            this.tasks \u003d new TaskList(this.storage.load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.ui \u003d new Ui(this.tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.parser \u003d new Parser(this.ui, this.tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.parser.responder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 28,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 5
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * represents an event task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    protected String eventTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public Event(String event) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(event.substring(6, event.indexOf(\"/\")-1));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (description.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            throw new EmptyDescriptionException(\"oops! the description of an event cannot be empty\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.eventTime \u003d event.substring(event.indexOf(\"/\")+4);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String eventTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(this.eventTime);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            eventTime \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            eventTime \u003d this.eventTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"[E]\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(super.toString())"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\" (\").append(\"at: \").append(eventTime).append(\")\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String getEventTime() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String eventTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(this.eventTime);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            eventTime \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            eventTime \u003d this.eventTime;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return eventTime;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 47
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * deals with making sense of the user command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    Parser(Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String readIn() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        input \u003d scan.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void responder() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String input \u003d this.readIn();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String firstWord \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(\"--------------------------------------------------------------\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                if (firstWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(this.ui.exit());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(\"\\n--------------------------------------------------------------\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    System.out.println(sb.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else if (firstWord.equals(\"list\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(this.tasks.returnList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else if (firstWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int i \u003d Integer.valueOf(input.substring(5));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(this.tasks.done(i));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else if (firstWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int i \u003d Integer.valueOf(input.substring(7));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(this.tasks.delete(i));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    Task task \u003d new ToDo(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(this.tasks.add(task));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    Task task \u003d new Deadline(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(this.tasks.add(task));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else if (firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    Task task \u003d new Event(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(this.tasks.add(task));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else if (firstWord.equals(\"find\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    sb.append(this.tasks.find(input.substring(5)));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    throw new DukeException(\"oops! im sorry, but i do not know what that means :-(\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                sb.append(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                sb.append(e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(\"\\n--------------------------------------------------------------\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            System.out.println(sb.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            input \u003d this.readIn();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            firstWord \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 73
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public Storage load() throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        File duke \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (!duke.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                duke.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            String string;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                string \u003d s.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                if (string.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int deadline \u003d string.indexOf(\"(\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int space \u003d string.indexOf(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int colon \u003d string.indexOf(\":\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    String description \u003d \"deadline \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                            + string.substring(space + 1, deadline) + \"/\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                            + string.substring(deadline + 1, colon)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                            + string.substring(colon + 1, string.length() - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    task \u003d new Deadline(description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else if (string.contains(\"[E]\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int time \u003d string.indexOf(\"(\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int space \u003d string.indexOf(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int colon \u003d string.indexOf(\":\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    String description \u003d \"event \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                            + string.substring(space + 1, time) + \"/\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                            + string.substring(time + 1, colon)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                            + string.substring(colon + 1, string.length() - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    task \u003d new Event(description);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    int space \u003d string.indexOf(\" \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    String description \u003d \"todo \" + string.substring(7);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                if (string.contains(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                this.tasks.add(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void updateFile() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Iterator i \u003d this.tasks.iterator();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            while (i.hasNext()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                fw.write(i.next().toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 104
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * represents a task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"[\").append(this.getStatus()).append(\"] \").append(this.description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 31
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * contains the task list and has operations to alter the task list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.tasks \u003d this.storage.getTaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String numberOfTasks() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"you have [\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(this.tasks.size()).append(\"] task(s) in your list\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String returnList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (this.tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            return \"there are no tasks in the list\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(\"here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Iterator i \u003d this.tasks.iterator();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(counter + \". \").append(i.next());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            while (i.hasNext()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                sb.append(\"\\n\").append(counter + \". \").append(i.next());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String done(int taskNumber) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Task task \u003d this.tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"yay! i have marked this task as done: \\n    \")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(task)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"\\n\" + this.numberOfTasks());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.storage.updateFile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String delete(int taskNumber) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Task task \u003d this.tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"sure thing. i have removed this task: \\n    \")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(task).append(\"\\n\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(this.numberOfTasks());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.storage.updateFile();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String add(Task task) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"got it! i have added the following task to your list:\\n    \")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(task)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"\\n\" + this.numberOfTasks());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.storage.updateFile();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String find(String item) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        ArrayList\u003cTask\u003e matching \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            if (task.toString().contains(item)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                matching.add(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (matching.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(\"there are no tasks matching the given search\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(\"here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Iterator i \u003d matching.iterator();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(counter + \". \").append(i.next());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            while (i.hasNext()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                sb.append(\"\\n\").append(counter + \". \").append(i.next());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 108
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * represents a todo task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public ToDo(String todo) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(todo.substring(5));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (description.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            throw new EmptyDescriptionException(\"oops! the description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * deals with interactions with the user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    Ui(TaskList tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"\\n\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"hello! i\u0027m duke :-)\\n\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"how may i help you?\\n\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"--------------------------------------------------------------\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        System.out.println(sb.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        System.out.println(\"There was an error loading the file\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String exit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return \"byebye! hope to see you again soon :-)\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 28
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void event() throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Event event \u003d new Event(\"event project meeting /at 2020-08-30\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String eventTime \u003d event.getEventTime();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        assertEquals(\"Aug 30 2020\", eventTime);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 11
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void todo() throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        ToDo todo \u003d new ToDo(\"todo read book\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        todo.markAsDone();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        assertEquals(true, todo.isDone());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 11
    }
  },
  {
    "path": "text-ui-test/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "[T][✘] read book"
      }
    ],
    "authorContributionMap": {
      "gloon99": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "gloon99": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "gloon99": 6,
      "-": 32
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/TaskList.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/EmptyDescriptionException.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Storage.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Parser.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/ReadIn.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Ui.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/ToDo.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "gloon99": 12
    }
  }
]
