[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    Deadline(String title, String deadline) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    static Deadline of(String command) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Deadline cannot be empty.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String[] split \u003d command.substring(9).split(\"\\\\s+/by\\\\s+\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return new Deadline(split[0], split[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.deadline + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String input \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                String[] inputArray \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                switch (inputArray[0]) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    System.out.println(\"Have a nice day.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                case \"\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    taskList.add(ToDo.of(input));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    taskList.add(Deadline.of(input));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    taskList.add(Event.of(input));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    if (inputArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                        throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                        taskList.markAsDone(Integer.parseInt(inputArray[1]));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                        throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    if (inputArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                        throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                        taskList.delete(Integer.parseInt(inputArray[1]));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                        throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    taskList.list();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    throw new DukeException(\"I\u0027m not sure what you\u0027re talking about.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            input \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 57,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    Event(String title, String duration) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    static Event of(String command) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Event cannot be empty.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String[] split \u003d command.substring(6).split(\"\\\\s+/at\\\\s+\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return new Event(split[0], split[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.duration + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 25
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    Task(String title) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            System.out.println(\"Already done.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            System.out.println(\"Marked as done: \" + this);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String status \u003d this.isDone ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"[\" + status + \"] \" + this.title;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 25
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    void add(Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(\"New task added: \" + task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    void markAsDone(int position) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (position \u003c\u003d 0 || position \u003e this.tasks.size()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Invalid task.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.tasks.get(position - 1).markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    void delete(int position) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (position \u003c\u003d 0 || position \u003e this.tasks.size()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Invalid task.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            Task removed \u003d this.tasks.remove(position - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            System.out.println(\"Deleted: \" + removed);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    void list() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (this.tasks.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            System.out.println(\"No tasks added.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            int position \u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                System.out.println(position + \". \" + task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                position++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 45
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    ToDo(String title) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    static ToDo of(String command) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"ToDo cannot be empty.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String content \u003d command.substring(5);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return new ToDo(content);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": "todo buy textbook"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "deadline CS2103T project /by thu"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "event CS2100 lecture /at tue 4-6pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "hello :)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ysr25": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ysr25": 1,
      "-": 20
    }
  }
]
