[
  {
    "path": "src/main/java/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    HELP,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INVALID_IS_EMPTY,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INVALID_COMMAND,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INVALID_EMPTY_DESCRIPTION,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INVALID_DEADLINE_NO_BY,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INVALID_EVENT_NO_START_END"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Inherits from the Task class. Represents a task with a deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Deadline object stores task description, done status and deadline of task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * A Deadline object is marked as not done by default."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * A Deadline object is able to be set as done by calling setDone() method from the parent class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected LocalDate byDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected LocalTime byTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Deadline object constructor overrides Task constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Takes in a deadline in addition to the task description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * and parses into LocalDate and LocalTime format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param by deadline of task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.byDate \u003d LocalDate.parse(by.split(\" \")[0]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.byTime \u003d LocalTime.parse(by.split(\" \")[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns Deadline object as a string."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the Deadline object as a string"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * in the form \"[D][\u003cDone Status\u003e] \u003cDeadline Description\u003e (by: \u003cDate\u003e \u003cTime\u003e)\"."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the deadline object as a string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mma\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + dateFormatter.format(byDate) + \" \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + timeFormatter.format(byTime) + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns Deadline object as a string."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the Deadline object as a string"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * as a string format suitable for being parsed into a Deadline object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * String is in the form \"[D][\u003cDone Status\u003e] \u003cDeadline Description\u003e (by: \u003cDate\u003e \u003cTime\u003e)\"."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the deadline object as a string"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[D]\" + super.toStringFileFormat() + \" (by: \" + byDate + \" \" + byTime + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 56
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private InputParser inputParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.inputParser \u003d new InputParser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static boolean isEmptyInput(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.isEmpty();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static boolean isValidCommand(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.toLowerCase().startsWith(\"todo\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                || input.toLowerCase().startsWith(\"deadline\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                || input.toLowerCase().startsWith(\"event\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static boolean isEmptyDescription(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.split(\" \").length \u003d\u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static boolean hasDeadlineBy(String input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.contains(\"/by\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /by \").length \u003d\u003d 2;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static boolean hasEventStartEndTime(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.contains(\"/at\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /at \").length \u003d\u003d 2"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /at \")[1].split(\" \").length \u003d\u003d 2"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /at \")[1].split(\" \")[1]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .split(\"-\").length \u003d\u003d 2;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void run() throws DukeException{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Print Duke welcome message"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ui.welcomeMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Initialise TaskList object to store tasks from user"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        TaskList userTasks \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        CommandType command \u003d CommandType.HELP;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Start chat"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        while (command !\u003d CommandType.BYE) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            String[] inputSplit;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            String description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            // Get input from user"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            System.out.println(ui.getUserPrompt());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            input \u003d inputParser.getInput();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            command \u003d inputParser.parseInput(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case HELP:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                ui.printAvailableCommands();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                description \u003d input.substring(4);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                t \u003d new ToDo(description);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                userTasks.addTask(t);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                ui.printTaskAddedMessage(t, userTasks.getTaskListSize());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                inputSplit \u003d input.split(\" /by \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                String by \u003d inputSplit[1];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                description \u003d inputSplit[0].substring(8);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                t \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                userTasks.addTask(t);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                ui.printTaskAddedMessage(t, userTasks.getTaskListSize());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                inputSplit \u003d input.split(\" /at \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                String at \u003d inputSplit[1].split(\" \")[0];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                String timeRange \u003d inputSplit[1].split(\" \")[1];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                description \u003d inputSplit[0].substring(5);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                t \u003d new Event(description, at, timeRange);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                userTasks.addTask(t);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                ui.printTaskAddedMessage(t, userTasks.getTaskListSize());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                ui.printListOfTasks(userTasks.getTaskList());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                // Get the index stated after \"done\" by parsing the string"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                int index \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                // Mark item as done"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    if (index \u003e\u003d userTasks.getTaskListSize()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        throw new DukeException(\"\", ExceptionType.INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        userTasks.markTaskAsDone(index);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        ui.printMarkAsDoneMessage(userTasks.getTask(index));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    // Update Tasklist.txt after marking task as done"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    storage.saveToFile(userTasks.getTaskList());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.print(ui.getServantSpeak());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    ui.printError(ex);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                // Get the index stated after \"delete\" by parsing the string"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                index \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                // Delete item"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    if (index \u003e\u003d userTasks.getTaskListSize()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        throw new DukeException(\"\", ExceptionType.INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        ui.printTaskDeletedMessage(userTasks.getTask(index));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        userTasks.deleteTask(index);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    // Update Tasklist.txt after removing task"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    storage.saveToFile(userTasks.getTaskList());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.print(ui.getServantSpeak());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    ui.printError(ex);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                ui.printByeMessage();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case INVALID_IS_EMPTY:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    throw new DukeException(\"\", ExceptionType.EMPTY_INPUT);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.print(ui.getServantSpeak());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    ui.printError(ex);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case INVALID_COMMAND:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    throw new DukeException(\"\", ExceptionType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.print(ui.getServantSpeak());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    ui.printError(ex);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case INVALID_EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    throw new DukeException(\"\", ExceptionType.EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.print(ui.getServantSpeak());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    ui.printError(ex);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case INVALID_DEADLINE_NO_BY:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    throw new DukeException(\"\", ExceptionType.DEADLINE_NO_BY);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.print(ui.getServantSpeak());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    ui.printError(ex);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case INVALID_EVENT_NO_START_END:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    throw new DukeException(\"\", ExceptionType.EVENT_NO_START_END);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    System.out.print(ui.getServantSpeak());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    ui.printError(ex);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            // Update Tasklist.txt after adding task"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            storage.saveToFile(userTasks.getTaskList());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 186,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_ALL_TASKS_EMPTY_INPUT \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"You have to give a command.\\n\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_ALL_TASKS_INVALID_COMMAND \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"I do not recognise that command.\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_ALL_TASKS_EMPTY_DESCRIPTION \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"Your description cannot be empty.\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_DEADLINE_NO_BY \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"A deadline must have a specific end date/time.\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_EVENT_NO_START_END \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"An event must have a start and end time.\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected final String MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"    I am sorry my Lord. \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            + \"That task cannot be found!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected ExceptionType exceptionType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public DukeException(String err, ExceptionType exceptionType) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        switch (exceptionType) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case EMPTY_INPUT:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                errorMessage \u003d MESSAGE_ALL_TASKS_EMPTY_INPUT;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case INVALID_COMMAND:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                errorMessage \u003d MESSAGE_ALL_TASKS_INVALID_COMMAND;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                errorMessage \u003d MESSAGE_ALL_TASKS_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case DEADLINE_NO_BY:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                errorMessage \u003d MESSAGE_DEADLINE_NO_BY;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case EVENT_NO_START_END:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                errorMessage \u003d MESSAGE_EVENT_NO_START_END;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            case INDEX_OUT_OF_BOUNDS:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                errorMessage \u003d MESSAGE_INDEX_OUT_OF_BOUNDS;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 47
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Inherits from the Task class. Represents a event happening at a certain time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Event object stores task description, done status, date of event, start and end time of event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * A Event object is marked as not done by default."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * A Event object is able to be set as done by calling setDone() method from the parent class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected LocalTime start;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected LocalTime end;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Event object constructor overrides Task constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Takes in date of event, start and end time of event in addition to the task description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * and parses into LocalDate and LocalTime format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param at date of event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param timeRange start and end time of event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Event (String description, String at, String timeRange) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.start \u003d LocalTime.parse(timeRange.split(\"-\")[0]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.end \u003d LocalTime.parse(timeRange.split(\"-\")[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns Event object as a string."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the Event object as a string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * in the form \"[E][\u003cDone Status\u003e] \u003cEvent Description\u003e (at: \u003cDate\u003e \u003cStart\u003e-\u003cEnd\u003e)\"."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the event object as a string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mma\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + dateFormatter.format(at) + \" \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + timeFormatter.format(start) + \"-\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + timeFormatter.format(end) + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns Event object as a string."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the Event object as a string"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * as a string format suitable for being parsed into a Deadline object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * String is in the form \"[E][\u003cDone Status\u003e] \u003cEvent Description\u003e (at: \u003cDate\u003e \u003cStart\u003e-\u003cEnd\u003e)\"."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the Event object as a string"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[E]\" + super.toStringFileFormat() + \" (at: \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + at + \" \" + start + \"-\" + end + \")\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 61
    }
  },
  {
    "path": "src/main/java/ExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public enum ExceptionType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    EMPTY_INPUT,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INVALID_COMMAND,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    EMPTY_DESCRIPTION,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    DEADLINE_NO_BY,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    EVENT_NO_START_END,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    INDEX_OUT_OF_BOUNDS"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 8
    }
  },
  {
    "path": "src/main/java/InputParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class InputParser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private Scanner myObj;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public InputParser() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Initialise the Scanner object to get input from user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.myObj \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return myObj.nextLine().trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public CommandType parseInput(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.isEmpty()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.INVALID_IS_EMPTY;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.HELP;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (isEmptyDescription(input)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                return CommandType.INVALID_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.TODO;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (isEmptyDescription(input)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                return CommandType.INVALID_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (!hasDeadlineBy(input)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                return CommandType.INVALID_DEADLINE_NO_BY;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.DEADLINE;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (isEmptyDescription(input)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                return CommandType.INVALID_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            if (!hasEventStartEndTime(input)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                return CommandType.INVALID_EVENT_NO_START_END;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.EVENT;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.LIST;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.DONE;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.DELETE;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return CommandType.BYE;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return CommandType.INVALID_COMMAND;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public boolean isValidCommand(String input) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.equals(\"help\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                || input.startsWith(\"todo\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                || input.startsWith(\"deadline\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                || input.startsWith(\"event\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                || input.equals(\"list\")"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                || input.startsWith(\"done\")"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                || input.startsWith(\"delete\")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                || input.equals(\"bye\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public boolean isEmptyDescription(String input) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.split(\" \").length \u003d\u003d 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public boolean hasDeadlineBy(String input) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.contains(\"/by\")"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /by \").length \u003d\u003d 2;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public boolean hasEventStartEndTime(String input) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return input.contains(\"/at\")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /at \").length \u003d\u003d 2"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /at \")[1].split(\" \").length \u003d\u003d 2"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                \u0026\u0026 input.split(\" /at \")[1].split(\" \")[1]"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .split(\"-\").length \u003d\u003d 2;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 100
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Storage class handles saving and leading tasks to and from"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * files saved in the hard disk. A storage object is able to read"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * file paths independent of OS."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * If directory or file is not found, a Storage object will handle"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * it by creating a new directory or file when required."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns tasks stored as a String."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e list of tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    // Loop through every task and transform it into a string file format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String listToString(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String taskListStr \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            taskListStr +\u003d t.toStringFileFormat() + \"\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return taskListStr;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Saves list of tasks as a text file on the hard drive."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userTasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void saveToFile(ArrayList\u003cTask\u003e userTasks) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Check if data folder exists, if not create"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        Path folderPath \u003d Paths.get(\"..\", \"..\", \"..\", \"data\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (!Files.exists(folderPath)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            File folderDir \u003d new File(folderPath.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            folderDir.mkdir();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Get OS-independent file path to text file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String filePath \u003d Paths.get(\"..\", \"..\", \"..\", \"data\", \"Tasklist.txt\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                .toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            FileWriter myFile \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            myFile.write(listToString(userTasks)); // Output is already all tasks in a string"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            myFile.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Reads tasks from text file in hard drive"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * and returns them as a list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e list of tasks read from file"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e readFromFile() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Check if data folder exists, if not create"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        Path folderPath \u003d Paths.get(\"..\", \"..\", \"..\", \"data\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (!Files.exists(folderPath)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            File folderDir \u003d new File(folderPath.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            folderDir.mkdir();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Initialise ArrayList to return"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Check if file exists, if return empty list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        Path filePath \u003d Paths.get(\"..\", \"..\", \"..\", \"data\", \"Tasklist.txt\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            return savedTasks;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            File myFile \u003d new File(filePath.toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            Scanner taskReader \u003d new Scanner(myFile);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            // Keep reading new line until file end"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            while (taskReader.hasNextLine()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                String taskString \u003d taskReader.nextLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                // Only work with non empty lines"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                if (taskString !\u003d \"\") {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    switch (taskString.charAt(1)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    case \u0027T\u0027:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        boolean isDone \u003d taskString.split(\"  \")[0]"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .substring(3)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .equals(\"[Done]\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        String description \u003d \" \" + taskString.split(\"  \")[1];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        Task t \u003d new ToDo(description);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        if (isDone) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            t.setDone();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        savedTasks.add(t);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    case \u0027D\u0027:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        isDone \u003d taskString.split(\"  \")[0]"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .substring(3)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .equals(\"[Done]\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        description \u003d \" \" + taskString.split(\"  \")[1]"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .split(\"\\\\s[(]by:\\\\s\")[0];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        String by \u003d taskString.split(\"  \")[1]"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .split(\"\\\\s[(]by:\\\\s\")[1];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        by \u003d by.substring(0, by.length() - 1); // remove parentheses at the end"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        Deadline d \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        if (isDone) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            d.setDone();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        savedTasks.add(d);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    case \u0027E\u0027:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        isDone \u003d taskString.split(\"  \")[0]"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .substring(3)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .equals(\"[Done]\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        String[] stringSplit \u003d taskString.split(\"  \")[1]"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                                .split(\"\\\\s[(]at:\\\\s\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        description \u003d \" \" + stringSplit[0];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        String at \u003d stringSplit[1].split(\" \")[0];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        String timeRange \u003d stringSplit[1].split(\" \")[1];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        timeRange \u003d timeRange.substring(0, timeRange.length() - 1); // remove parentheses at the end"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        Event e \u003d new Event(description, at, timeRange);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        if (isDone) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                            e.setDone();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        savedTasks.add(e);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return savedTasks;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 146
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Represents a task that is to be done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Task object stores task description and done status. A task object is marked as not done by default."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * A task object is able to be set as done by calling setDone() method."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.description \u003d task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns Task object as a string."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the Task object as a string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * in the form \"[\u003cDone Status\u003e] \u003cTask Description\u003e\"."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the Task object as a string"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns Task object as a string."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the Task object as a string"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * in the form \"[\u003cDone Status\u003e] \u003cTask Description\u003e\"."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the Task object as a string"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + this.description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Sets done status of Task object as done"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns icon associated with Task object\u0027s done status."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String status icon representing done status of Task object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return (isDone ? \"Done\" : \"Not Done\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 56
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * A TaskList object contains the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return ArrayList\u003cTask\u003e task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns task at the specified index."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param index This is the index of the task in the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return Task task retrieved from the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns size of task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return int size of task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param t task to be added"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Deletes specified task from the task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param index index of task to be deleted from the task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Marks the specified task as done."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param index index of task to be marked as done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        taskList.get(index).setDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns a String containing all the tasks in the task list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * String is in a format suitable to be printed by Duke Ui object."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String task list converted to a string"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        String listAsString \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        for (Task i : this.taskList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            listAsString \u003d listAsString.concat(\"    \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    + count + \". \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                    + i.toString()) + \"\\n\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return listAsString;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 89
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Inherits from the Task class. Represents a to do task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * ToDo object stores task description and done status. A ToDo object is marked as not done by default."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * A ToDo object is able to be set as done by calling setDone() method from the parent class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * A ToDo object uses its parent class constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param description description of to do task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public ToDo (String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns ToDo object as a string."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the ToDo object as a string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * in the form \"[T][\u003cDone Status\u003e] \u003cToDo Description\u003e\"."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the ToDo object as a string"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns ToDo object as a string."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method takes no parameters and returns the ToDo object as a string format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * suitable for being parsed into a ToDo object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * String is in the form \"[T][\u003cDone Status\u003e] \u003cToDo Description\u003e\"."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This method overrides the method from parent class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String this returns the ToDo object as a string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return \"[T]\" + super.toStringFileFormat();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 39
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * Ui class handles all the interactions with user of the Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " * chatbot. Ui object will print directly to the output."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private final String SERVANT_SPEAK;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    private final String USER_PROMPT;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public Ui () {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Initialise strings to separate messages from Duke"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // and commands from CLI"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.SERVANT_SPEAK \u003d \"Duke:\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        this.USER_PROMPT \u003d \"Your Command Sire:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns an indicator that the following messages"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * are from Duke"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String getServantSpeak() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return this.SERVANT_SPEAK;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Returns a message to prompt the user for his/her input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public String getUserPrompt() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        return this.USER_PROMPT;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints a welcome message every time the chat bot is activated."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        // Introduction at the beginning of the chat"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        System.out.println(SERVANT_SPEAK"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Greetings my Liege.\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Why have you summoned me?\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the available commands that the user can input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * This includes the format of the command so as to be accepted as a command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void printAvailableCommands() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        System.out.println(SERVANT_SPEAK"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    These are your available commands my Lord:\\n\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    help - Show list of available commands\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    todo \u003cDescription of task\u003e\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" - To add a normal to do task\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    deadline \u003cDescription of task\u003e\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" /by \u003cDate in YYYY-MM-DD\u003e \u003cTime in hh:mm\u003e\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" - To add a task with a deadline\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    event \u003cDescription of event\u003e\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" /at \u003cDate in YYYY-MM-DD\u003e \u003cTime in hh:mm\u003e\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" - To add an event\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    list - Show list of tasks\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    done \u003ctask number\u003e - Mark task as done\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    delete \u003ctask number\u003e - Delete task from list\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints a message to indicate that a task has been added to the task list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints back to the console the task that was added to the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param task task that was added to the task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param size size of task list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void printTaskAddedMessage(Task task, int size) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        System.out.println(SERVANT_SPEAK"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    As you wish Sire. I have added the task:\\n       \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Now you have \" + size"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints all the task in the task list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param userTasks This is the task list to be printed."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void printListOfTasks(ArrayList\u003cTask\u003e userTasks) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        System.out.println(SERVANT_SPEAK"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Here are your tasks your Majesty:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        System.out.println(new TaskList(userTasks).toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints a message to indicate that the task has been marked as done."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints back to the console the task that was marked as done."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param task task that was marked as done."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void printMarkAsDoneMessage(Task task) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        System.out.println(SERVANT_SPEAK"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    As you wish Sire. I have marked this task as done:\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"       \" + task.toString());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints a message to indicate that the task has been deleted."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints back to the console the task that was removed from the task list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param task task that was removed from the task list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void printTaskDeletedMessage(Task task) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        System.out.println(SERVANT_SPEAK"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    As you wish Sire. I removed this task:\\n\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"       \" + task.toString());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints a message to the console when the user ends the chat with Duke."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void printByeMessage() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        System.out.println(SERVANT_SPEAK"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    It was a pleasure to serve you my Liege.\\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "                + \"    Till next time.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * Prints out the error message generated by the DukeException object."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @param ex This is the DukeException object created by the error."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void printError(DukeException ex) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        System.out.println(ex);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 146
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    Task task \u003d new Task(\"Test Task\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"[Not Done] Test Task\", task.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testToStringFileFormat() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"[Not Done] Test Task\", task.toStringFileFormat());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"Not Done\", task.getStatusIcon());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"Done\", task.getStatusIcon());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 24
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    ToDo toDo \u003d new ToDo(\"Test ToDo\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"[T][Not Done] Test ToDo\", toDo.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testToStringFileFormat() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"[T][Not Done] Test ToDo\", toDo.toStringFileFormat());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"Not Done\", toDo.getStatusIcon());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        toDo.setDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"Done\", toDo.getStatusIcon());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 24
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testGetServantSpeak() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"Duke:\\n\", ui.getServantSpeak());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    public void testGetUserPrompt() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "        assertEquals(\"Your Command Sire:\", ui.getUserPrompt());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "if exist del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abdurrahmanfaqihiskandar"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "abdurrahmanfaqihiskandar": 2,
      "-": 19
    }
  }
]
