[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import static java.lang.Integer.parseInt;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public int order;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public boolean hasDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Command(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Command(String command, int order) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.order \u003d order;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Command(String type, String command) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Command(String type, String command, String time, LocalDate date, boolean hasDate) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.hasDate \u003d hasDate;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * Execute the command and store the task into the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * @param tasks   The tasklist object that contains the list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * @param ui      The ui object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * @param storage The storage object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        List\u003cTask\u003e lists \u003d tasks.getTasks();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            for (int i \u003d 0; i \u003c lists.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                Task task \u003d lists.get(i);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                System.out.println((i + 1) + \".\" + task.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        } else if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            Task task \u003d lists.get(order - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    \"  Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            System.out.println(\"    [\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        } else if (command.contains(\"delete\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            Task task \u003d lists.get(order - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            lists.remove(order - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            System.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            System.out.println(\"Now you have \" + lists.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            isExit \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            String message1 \u003d \"  Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            System.out.println(message1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                if (hasDate) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    lists.add(new Deadline(command, time, date));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    lists.add(new Deadline(command, time));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                if (hasDate) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    lists.add(new Event(command, time, date));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    lists.add(new Event(command, time));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            } else if (type.equals(\"find\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                int j \u003d 1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                for (int i \u003d 0; i \u003c lists.size(); i++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    Task task \u003d lists.get(i);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    if (task.toString().contains(command)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        System.out.println(j + \".\" + task.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        j++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                lists.add(new ToDo(command));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            String message1 \u003d \"Got it. I\u0027ve added this task:\\n  \""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    + lists.get(lists.size() - 1).toString() + \"\\n\" +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    \"Now you have \" + lists.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            System.out.println(message1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            storage.writeToFile(lists);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 117
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.date \u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Deadline(String description, String by, LocalDate date) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    .ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 35
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import static java.lang.Integer.parseInt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                ui.showLine(); "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 48,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.date \u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Event(String description, String time, LocalDate date) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Event(String description, String time, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    .ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 35
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import static java.lang.Integer.parseInt;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * Encapsulates parser into a class. The class supports parsing the command messages"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * from the user into different commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public static Command parse(String commandMessage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        if (commandMessage.equals(\"list\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            command \u003d new Command(\"list\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        } else if (commandMessage.contains(\"done\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            int order \u003d parseInt(commandMessage.substring(commandMessage.length() - 1));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            command \u003d new Command(\"done\", order);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        } else if (commandMessage.contains(\"delete\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            int order \u003d parseInt(commandMessage.substring(commandMessage.length() - 1));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            command \u003d new Command(\"delete\", order);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        } else if (commandMessage.contains(\"find\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            command \u003d new Command(\"find\", commandMessage.substring(commandMessage.indexOf(\u0027 \u0027) + 1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        } else if (commandMessage.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            command \u003d new Command(\"bye\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            String type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            if (commandMessage.contains(\" \")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                type \u003d commandMessage.substring(0, commandMessage.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                String str \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                switch (commandMessage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        str \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        str \u003d \"☹ OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        str \u003d \"☹ OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        str \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                throw new DukeException(str);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                String description \u003d commandMessage.substring(commandMessage.indexOf(\u0027 \u0027) + 1,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        commandMessage.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                String by \u003d commandMessage.substring(commandMessage.indexOf(\"/by\") + 4);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                String s \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                if (by.charAt(0) \u003e\u003d \u00270\u0027 \u0026\u0026 by.charAt(0) \u003c\u003d \u00279\u0027) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    if (by.charAt(1) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + by.substring(5, 9);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + \u0027-\u0027;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + by.substring(2, 4);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + \u0027-\u0027;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + \u00270\u0027 + by.substring(0,1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + by.substring(6, 10);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + \u0027-\u0027;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + by.substring(3, 5);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + \u0027-\u0027;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + \u00270\u0027 + by.substring(0, 2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(s);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    command \u003d new Command(\"deadline\", description, by, date, true);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    command \u003d new Command(\"deadline\", description, by, null, false);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                String time \u003d commandMessage.substring(commandMessage.indexOf(\"/at\") + 4);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                String description \u003d commandMessage.substring(commandMessage.indexOf(\u0027 \u0027) + 1,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        commandMessage.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                String s \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                if (time.charAt(0) \u003e\u003d \u00270\u0027 \u0026\u0026 time.charAt(0) \u003c\u003d \u00279\u0027) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    if (time.charAt(1) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + time.substring(5, 9);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + \u0027-\u0027;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + time.substring(2, 4);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + \u0027-\u0027;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + \u00270\u0027 + time.substring(0,1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + time.substring(6, 10);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + \u0027-\u0027;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + time.substring(3, 5);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + \u0027-\u0027;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        s \u003d s + \u00270\u0027 + time.substring(0, 2);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(s);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    command \u003d new Command(\"event\", description, time, date, true);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    command \u003d new Command(\"event\", description, time, null, false);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            } else if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                String description \u003d commandMessage.substring(commandMessage.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                command \u003d new Command(\"todo\", description, \"\", null, false);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 108
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * Encapsulates the storage into a class. The class supports loading tasks from the file,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * reading task from the file and writing to the file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * Load the tasks to the list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * @return The list of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * @throws DukeException if the file does not exist."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        if (f.exists()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                readTask(f, tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                new File(\"data\").mkdir();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                throw new DukeException(\"File not found. Created a file.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            new File(\"data\").mkdir();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            throw new DukeException(\"File not found. Created a file.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * Read the tasks from the file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * @param f The file that contains the list of tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * @param lists The list that the tasks are read into."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public static void readTask(File f, List\u003cTask\u003e lists) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                String string \u003d s.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                if (string.charAt(1) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    String description \u003d string.substring(string.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    if (string.charAt(4) \u003d\u003d \u0027✓\u0027) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        lists.add(new ToDo(description, true));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        lists.add(new ToDo(description));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                } else if (string.charAt(1) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    String description \u003d string.substring(string.indexOf(\u0027 \u0027) + 1, string.indexOf(\u0027(\u0027));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    String by \u003d string.substring(string.indexOf(\"(by\") + 5);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    if (string.charAt(4) \u003d\u003d \u0027✓\u0027) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        lists.add(new Deadline(description, by, true));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        lists.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    String time \u003d string.substring(string.indexOf(\"(at\") + 5);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    String description \u003d string.substring(string.indexOf(\u0027 \u0027) + 1, string.indexOf(\u0027(\u0027));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    if (string.charAt(4) \u003d\u003d \u0027✓\u0027) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        lists.add(new Event(description, time, true));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                        lists.add(new Event(description, time));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * Write teh tasks into the file."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * @param lists The list of tasks."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * @throws IOException If the file does not exist."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public static void writeToFile(List\u003cTask\u003e lists) throws IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        for (int i \u003d 0; i \u003c lists.size(); i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            Task task \u003d lists.get(i);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "            textToAdd \u003d textToAdd + task.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 102
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * Encapsulates the task into a class. The \u0027Task\u0027 class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * supports getting status icon, getting description,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * marking the task as done and converting the task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * to a string."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 36
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * Encapsulates the list of tasks as a class. The \u0027TaskList\u0027 class"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * supports initializing a new list of tasks and getting the list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * of the tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 23
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * Encapsulates the todo task into a class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * The class supports initializing the todo task and"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * converting the todo task to a string."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 19
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * Encapsulates the ui into a class. The class supports showing the welcome message,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " * reading commands from the user, printing a line and showing error messages."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * Show the loading error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        System.out.println(\"File not found. Created a file.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * Show the welcome message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        String message \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                + \"  Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                + \"  What can I do for you?\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * Read a command from the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * @return The command string."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        String string1 \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        return string1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * Print the divider line."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * Show the error message."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 57
    }
  },
  {
    "path": "test/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        assertEquals(\"✘\", new ToDo(\"todo borrow book\").getStatusIcon());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        assertEquals(\"✘\", new Event(\"event project meeting\", \"2-4pm\").getStatusIcon());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        assertEquals(\"todo borrow book\", new ToDo(\"todo borrow book\").getDescription());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        assertEquals(\"event project meeting\", new Event(\"event project meeting\", \"2-4pm\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                .getDescription());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        assertEquals(\"[T][✘] todo borrow book\", new ToDo(\"todo borrow book\").toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "        assertEquals(\"[E][✘] event project meeting (at: 2-4pm)\", new Event(\"event project meeting\", \"2-4pm\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "                .toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Royxuzeng"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "Royxuzeng": 5,
      "-": 20
    }
  }
]
