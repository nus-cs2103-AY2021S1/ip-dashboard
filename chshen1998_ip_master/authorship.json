[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public static Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public static TaskList taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public static Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public static boolean exit;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Duke(String filePath){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            this.taskList \u003d new TaskList(this.storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Runs until the user commands for program to stop."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.exit \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        while(!exit) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                String userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                Command command \u003d Parser.parse(userInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                command.execute(this.taskList, this.ui, this.storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                this.exit \u003d command.isExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        ui.goodbye();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        new Duke(\"src/main/java/data/duke.txt\").run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 50,
      "-": 4
    }
  },
  {
    "path": "src/main/java/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public ByeCommand(){}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 20
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Command(){}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 18
    }
  },
  {
    "path": "src/main/java/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String deadlineDetails;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public DeadlineCommand(String deadlineDetails) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.deadlineDetails \u003d deadlineDetails;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Creates new task with deadline, adds task to TaskList then updates the Storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList the list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String[] details \u003d this.deadlineDetails.split(\" /by \", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(details[0], details[1], false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            taskList.add(newDeadline);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String output \u003d ui.LINE + \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + taskList.get(taskList.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + \"Now you have \" + taskList.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + \"\\n\" + ui.LINE;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            storage.save(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(ui.LINE + \"Invalid input! Please specify your deadline description and details! \\n\" + ui.LINE);        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 46
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String taskIdString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public DeleteCommand(String taskIdString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.taskIdString \u003d taskIdString;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Deletes specified task from tasklist and updates Storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            int taskId \u003d Integer.parseInt(taskIdString);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            if (taskId \u003c\u003d 0 || taskId \u003e taskList.size()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(ui.LINE + \"Invalid input! That task does not exist! \\n\" + ui.LINE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                int new_size \u003d taskList.size() - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                System.out.println(ui.LINE + \"Noted! I\u0027ve deleted this task: \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                        + taskList.get(taskId - 1) + \"\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                        + \"Now you have \" + new_size + \" tasks in the list.\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                        + \"\\n\" + ui.LINE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                taskList.delete(taskId - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            storage.save(taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(ui.LINE + \"Invalid input! Please specify which task you want to delete! \\n\" + ui.LINE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 50
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String taskIdString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public DoneCommand(String taskIdString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.taskIdString \u003d taskIdString;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Sets specified task in tasklist as completed and updates Storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            int taskId \u003d Integer.parseInt(this.taskIdString);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            if (taskId \u003c\u003d 0 || taskId \u003e taskList.size()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(ui.LINE + \"Invalid input! That task does not exist! \\n\" + ui.LINE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                taskList.get(taskId - 1).setCompleted();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                System.out.println(ui.LINE + \"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                        + taskList.get(taskId - 1) + \"\\n\" + ui.LINE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            storage.save(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(ui.LINE + \"Invalid input! Please specify which task you have completed! \\n\" + ui.LINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 47
    }
  },
  {
    "path": "src/main/java/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String eventDetails;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public EventCommand(String eventDetails) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.eventDetails \u003d eventDetails;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Creates new event with date and time, adds event to TaskList then updates the Storage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList the list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String[] details \u003d this.eventDetails.split(\" /at \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            Event newEvent \u003d new Event(details[0], details[1], false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            taskList.add(newEvent);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String output \u003d ui.LINE + \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + taskList.get(taskList.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + \"Now you have \" + taskList.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + \"\\n\" + ui.LINE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            storage.save(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(ui.LINE + \"Invalid input! Please specify your event description and details! \\n\" + ui.LINE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 49
    }
  },
  {
    "path": "src/main/java/command/FilterCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class FilterCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public FilterCommand(String date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Prints all tasks due on a specified date."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String output \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String[] dateSplit \u003d date.split(\"/\", 3);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String reformatedDate \u003d dateSplit[2] + \"-\" + dateSplit[1] + \"-\" + dateSplit[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            LocalDate filterDate \u003d LocalDate.parse(reformatedDate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                if (taskList.get(i - 1).isDate(filterDate)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    output \u003d output + i + \". \" + taskList.get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            System.out.println(ui.LINE + \"Here are your task due on \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + filterDate.format(DateTimeFormatter.ofPattern(\"MMM d yyy\")) + \": \\n\" + output + ui.LINE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(ui.LINE + \"Invalid input! Please enter a valid date! \\n\" + ui.LINE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(ui.LINE + \"Invalid input! Please enter a valid date! \\n\" + ui.LINE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 55
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Prints tasks that match the search keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            if (taskList.get(i - 1).toString().contains(keyword)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                output \u003d output + i + \". \" + taskList.get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        System.out.println(ui.LINE + \"Here are your task that matches your search: \\n\" + output + ui.LINE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 40
    }
  },
  {
    "path": "src/main/java/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class InvalidCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public InvalidCommand() {}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        throw new DukeException(ui.LINE + \"Invalid command! \\n\" + ui.LINE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 23
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public ListCommand() {}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Prints out the entire list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            output \u003d output + i + \". \" + taskList.get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        System.out.println(ui.LINE + \"Here are the tasks in your list: \\n\" + output + ui.LINE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 35
    }
  },
  {
    "path": "src/main/java/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String todoDetails;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public TodoCommand(String todoDetails) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.todoDetails \u003d todoDetails;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Creates new task, adds task to TaskList then updates the Storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList the list of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            ToDo newToDo \u003d new ToDo(this.todoDetails, false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            taskList.add(newToDo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            String output \u003d ui.LINE + \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + taskList.get(taskList.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + \"Now you have \" + taskList.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + \"\\n\" + ui.LINE;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            storage.save(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(ui.LINE + \"Invalid input! Please specify your todo description! \\n\" + ui.LINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 47
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "T\u003e0\u003et1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "D\u003e0\u003ed1\u003e20/02/2020 1200"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 2
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 8
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Deals with understanding the input from user and determining Command to execute."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public static final String LINE \u003d \"_______________________________________\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Determines which Command should be called based on user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param userInput the input given by user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return The Command to be executed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException if a Command is called without required details."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String[] inputSplit \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String userCommand \u003d inputSplit[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        if (userCommand.equals(\"bye\")) {  // For exiting the program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"list\")) {  // For viewing items in to do list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"done\")) {  // For marking items in the to do list as done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new DoneCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(LINE + \"Invalid input! Please specify which task you have completed! \\n\" + LINE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"todo\")) { // Add new to do task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new TodoCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(LINE + \"Invalid input! Please specify your todo description! \\n\" + LINE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"deadline\")) { // Add new deadline"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new DeadlineCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(LINE + \"Invalid input! Please specify your deadline description and details! \\n\" + LINE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"event\")) { // Add new event"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new EventCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(LINE + \"Invalid input! Please specify your event description and details! \\n\" + LINE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"delete\")) { // Delete task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new DeleteCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(LINE + \"Invalid input! Please specify which task you want to delete! \\n\" + LINE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"filter\")) { // Filter taskList"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new FilterCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(LINE + \"Invalid input! Please specify which date you want to filter! \\n\" + LINE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else if (userCommand.equals(\"find\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                return new FindCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                throw new DukeException(LINE + \"Invalid input! Please specify the keyword to find!! \\n\" + LINE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 74
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Deals with the loading and saving of tasks in text file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public static File file;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Reads the tasks saved in text file and collate them into a list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return ArrayList of tasks from loaded file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException when error is encountered while reading text file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                Scanner fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    String task \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    String[] taskSplit \u003d task.split(\"\u003e\", 4);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    String taskType \u003d taskSplit[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    boolean taskIsDone \u003d taskSplit[1].equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    String taskDescription \u003d taskSplit[2];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                        taskList.add(new ToDo(taskDescription, taskIsDone));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                        String taskBy \u003d taskSplit[3];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                        taskList.add(new Deadline(taskDescription, taskBy, taskIsDone));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                        String taskAt \u003d taskSplit[3];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                        taskList.add(new Event(taskDescription, taskAt, taskIsDone));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                fileScanner.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Error loading file!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Saves the tasks in the TaskList into a text file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @param taskList the TaskList containing all the tasks to be saved."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @throws DukeException when error is encountered while saving text file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void save(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                writer.write(task.toEncoding() + System.lineSeparator());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            throw new DukeException(\"Error saving file!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 84
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    protected LocalDateTime byDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            this.byDateTime \u003d LocalDateTime.parse(reformatedDateTime());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            System.out.println(\"Invalid input! Enter appropriate date and time format\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String icon \u003d this.completed ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        if (this.byDateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return \"[D]\" + icon + \" \" + this.description + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return \"[D]\" + icon + \" \" + this.description + \" (by: \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + this.byDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyy HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Encode task into a String to be saved in text file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return String of encoded task details."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String toEncoding() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        int completedBinary \u003d this.completed ? 1 : 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return \"D\u003e\" + completedBinary + \"\u003e\" + this.description + \"\u003e\" + this.by;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Converts the deadline details into a format readable by Java LocalDateTime API."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return String of converted deadline details."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String reformatedDateTime() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String[] bySplit \u003d this.by.split(\" \", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String date \u003d bySplit[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String[] dateSplit \u003d date.split(\"/\", 3);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String time \u003d bySplit[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String hour \u003d time.substring(0, 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String minute \u003d time.substring(2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return dateSplit[2] + \"-\" + dateSplit[1] + \"-\" + dateSplit[0] + \"T\" + hour + \":\" + minute + \":00\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isDate(LocalDate dateFilter) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return this.byDateTime.toLocalDate().equals(dateFilter);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 59
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    protected LocalDateTime atDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            this.atDateTime \u003d LocalDateTime.parse(reformatedDateTime());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            System.out.println(\"Invalid input! Enter appropriate date and time format\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String icon \u003d this.completed ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        if (atDateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return \"[E]\" + icon + \" \" + this.description + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "            return \"[E]\" + icon + \" \" + this.description + \" (at: \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                    + this.atDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Encode task into a String to be saved in text file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return String of encoded task details."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String toEncoding() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        int completedBinary \u003d this.completed ? 1 : 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return \"E\u003e\" + completedBinary + \"\u003e\" + this.description + \"\u003e\" + this.at;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Converts the event details into a format readable by Java LocalDateTime API."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return String of converted event details."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private String reformatedDateTime() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String[] bySplit \u003d this.at.split(\" \", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String date \u003d bySplit[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String[] dateSplit \u003d date.split(\"/\", 3);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String time \u003d bySplit[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String hour \u003d time.substring(0, 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String minute \u003d time.substring(2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return dateSplit[2] + \"-\" + dateSplit[1] + \"-\" + dateSplit[0] + \"T\" + hour + \":\" + minute + \":00\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isDate(LocalDate dateFilter) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return this.atDateTime.toLocalDate().equals(dateFilter);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 59
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    protected boolean completed;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.completed \u003d isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void setCompleted() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.completed \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public abstract String toEncoding();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public abstract boolean isDate(LocalDate dateFilter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 20
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String icon \u003d this.completed ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return \"[T]\" + icon + \" \" + this.description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Encode task into a String to be saved in text file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return String of encoded task details."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String toEncoding() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        int completedBinary \u003d this.completed ? 1 : 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return \"T\u003e\" + completedBinary + \"\u003e\" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public boolean isDate(LocalDate dateFilter) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 29
    }
  },
  {
    "path": "src/main/java/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Contains the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void add(Task newTask) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void delete(int taskId) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.taskList.remove(taskId);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Task get(int taskId) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return this.taskList.get(taskId);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 36
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " * Deals the interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public static final String LINE \u003d \"_______________________________________\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Reads in input from user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * @return the input from user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        return this.scanner.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Greets the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Runs when program is opened."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String open \u003d \"_______________________________________ \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"Hello! I\u0027m Duke \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"What can I do for you? \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"_______________________________________ \\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        System.out.println(open);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Says goodbye to user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     * Runs when program is closed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void goodbye() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        String close \u003d \"_______________________________________ \\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"Goodbye! See you soon! \\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "                + \"_______________________________________ \\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        System.out.println(close);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        this.scanner.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 48
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void testCommands() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"Wrong Command\") instanceof InvalidCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"list\") instanceof ListCommand);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"done 1\") instanceof DoneCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"delete 1\") instanceof DeleteCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"filter 20/03/2020\") instanceof FilterCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"todo t1\") instanceof TodoCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"deadline d1 /by 20/02/2020 1200\") instanceof DeadlineCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertTrue(Parser.parse(\"event e1 /at 20/02/2020 1200\") instanceof EventCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Test(expected \u003d DukeException.class)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void testIncorrectDone() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        Parser.parse(\"done\").execute(new TaskList(), new Ui(), new Storage(\"demo\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Test(expected \u003d DukeException.class)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void testIncorrectDelete() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        Parser.parse(\"delete\").execute(new TaskList(), new Ui(), new Storage(\"demo\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Test(expected \u003d DukeException.class)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void testIncorrectTodo() throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        Parser.parse(\"todo\").execute(new TaskList(), new Ui(), new Storage(\"demo\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Test(expected \u003d DukeException.class)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void testIncorrectDeadline() throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        Parser.parse(\"deadline d1 \").execute(new TaskList(), new Ui(), new Storage(\"demo\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Test(expected \u003d DukeException.class)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void testIncorrectEvent() throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        Parser.parse(\"event e1\").execute(new TaskList(), new Ui(), new Storage(\"demo\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chshen1998"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    public void testExits() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new ByeCommand().isExit(), true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new ListCommand().isExit(), false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new InvalidCommand().isExit(), false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new DeadlineCommand(\"test\").isExit(), false);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new EventCommand(\"test\").isExit(), false);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new TodoCommand(\"test\").isExit(), false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new DoneCommand(\"test\").isExit(), false);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new FilterCommand(\"test\").isExit(), false);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "        assertEquals(new DeleteCommand(\"test\").isExit(), false);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 69
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "todo wake up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "deadline eat lunch /by 12pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "event work /at 2pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Task\\*.java ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chshen1998"
        },
        "content": "java -classpath ..\\bin Duke Task \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "chshen1998": 2,
      "-": 19
    }
  }
]
