[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 46,
      "pockii": 15
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.tool.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.tool.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.tool.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents a Duke chat bot that helps the user to keep track of their tasks, such as todos,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": " * events and deadlines."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "            ui.showLoadError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String getResponse(String userInput) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String[] parsedInput \u003d Parser.parse(userInput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pockii"
        },
        "content": "            switch (parsedInput[0]) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"hello\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pockii"
        },
        "content": "                return ui.greet();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pockii"
        },
        "content": "                return ui.list(tasks.formattedList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pockii"
        },
        "content": "                storage.saveFile(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pockii"
        },
        "content": "                return ui.exit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pockii"
        },
        "content": "                return ui.completeTask(tasks.completeTask(Integer.valueOf(parsedInput[1])));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pockii"
        },
        "content": "                return ui.deleteTask(tasks.deleteTask(Integer.valueOf(parsedInput[1])), tasks.getLength());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pockii"
        },
        "content": "                return ui.find(tasks.findTasks(parsedInput[1]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pockii"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pockii"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pockii"
        },
        "content": "                if (parsedInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pockii"
        },
        "content": "                    throw new MissingDescriptionException(parsedInput[0]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pockii"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pockii"
        },
        "content": "                    return ui.addTask(tasks.addTask(parsedInput[0], parsedInput[1]), tasks.getLength());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pockii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pockii"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pockii"
        },
        "content": "                throw new UnknownCommandException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pockii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pockii"
        },
        "content": "            return ui.showDukeError(e);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pockii"
        },
        "content": "            return ui.showSaveError();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Runs the chat bot by accepting user inputs and handling it through"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * other classes like TaskList and Ui."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pockii"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pockii"
        },
        "content": "            getResponse(sc.nextLine());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pockii"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pockii"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "pockii": 84
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 32
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents an exception that can be thrown by the Duke chatbot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "        this.message \u003d \"Something went wrong... \\n \" + message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "pockii": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents the exception when the user forgets to write or format"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": " * the deadline for Deadline and Event tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class MissingDeadlineException extends DukeException{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public MissingDeadlineException(String taskType) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"The deadline of the \" + taskType + \" is missing (¬ ¬ )\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents the exception when the user forgets to write the description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": " * for the tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class MissingDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public MissingDescriptionException(String taskType) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"The description of the \" + taskType + \" is missing (¬ ¬ )\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents the exception when the user is trying to complete or delete a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": " * task that does not exist."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class MissingTaskException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public MissingTaskException(int taskIndex) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"There\u0027s no task with the tag \" + taskIndex + \" (・・;)ゞ\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents the exception when the user enters a command that the Duke chat bot"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": " * is unable to recognise."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"I don\u0027t know what that means ┐(\u0027～`;)┌\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 11
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.exception.MissingDeadlineException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents a task with a deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public Deadline(String desc) throws MissingDeadlineException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"D\", desc.split(\" /by \", 2)[0]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String[] temp \u003d desc.split(\" /by \", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (temp.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "            throw new MissingDeadlineException(\"deadline\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "            String date \u003d desc.split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "            this.deadline \u003d containsTime(date)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "                                ? formatDateTime(date)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "                                : formatDate(date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public Deadline(String desc, String date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"D\", desc);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "        deadline \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String formatTaskForFile() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return taskType + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": "                description + \" | \" + deadline;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return \"[D]\" + getStatusIcon() + description + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 40
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.exception.MissingDeadlineException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents a task that is occurring at a specific time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String eventTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public Event(String desc) throws MissingDeadlineException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"E\", desc.split(\" /at \", 2)[0]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String[] temp \u003d desc.split(\" /at \", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (temp.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "            throw new MissingDeadlineException(\"event\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "            String date \u003d desc.split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "            eventTime \u003d containsTime(date)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "                            ? formatDateTime(date)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "                            : formatDate(date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public Event(String desc, String eventTime) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"E\", desc);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String formatTaskForFile() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return taskType + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": "                description + \" | \" + eventTime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return \"[E]\" + getStatusIcon() + description + \" (at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents a task with a description that can be marked as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "    Task(String taskType, String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected boolean containsTime(String str) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Pattern p \u003d Pattern.compile(\".* ([01]?[0-9]|2[0-3])[0-5][0-9]\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Matcher m \u003d p.matcher(str);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return m.matches();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String formatDate(String str) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": "        LocalDate ld \u003d LocalDate.parse(str);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return ld.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String formatDateTime(String str) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pockii"
        },
        "content": "        LocalDateTime ldt \u003d LocalDateTime.parse(str, formatter);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return ldt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pockii"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return isDone ? \"[✓] \" : \"[✗] \";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Formats the task to be stored in the text file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return A string representing the task in a format to be stored in the text file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pockii"
        },
        "content": "    abstract public String formatTaskForFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public boolean match(String keyword) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents a task to be done without a deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public Todo(String desc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"T\", desc);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String formatTaskForFile() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return taskType + \" | \" + (isDone ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "                    + \" | \" + description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return \"[T]\" + getStatusIcon() + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 22
    }
  },
  {
    "path": "src/main/java/duke/tool/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke.tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents an interpreter for user input and formats the input such that"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": " * the chat bot is able to understand and handle it."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Formats the user input given such that the Duke chat bot is able to"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * handle it."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param str The user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The user input formatted for Duke chat bot handling."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public static String[] parse(String str) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return str.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 20
    }
  },
  {
    "path": "src/main/java/duke/tool/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke.tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents the area where the data file for the Duke chat bot is stored."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "    void createFile() throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": "        File directory \u003d file.getParentFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (!(directory.exists())) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Loads the saved tasks from the data file and returns them."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The list of tasks saved in the data file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public List\u003cTask\u003e loadFile() throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pockii"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pockii"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pockii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pockii"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pockii"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pockii"
        },
        "content": "                tasks.add(readData(s.nextLine()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pockii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pockii"
        },
        "content": "            s.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pockii"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pockii"
        },
        "content": "            createFile();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pockii"
        },
        "content": "    Task readData(String s) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String[] arr \u003d s.split(\" \\\\| \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (arr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pockii"
        },
        "content": "            task \u003d new Todo(arr[2]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else if (arr[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pockii"
        },
        "content": "            task \u003d new Deadline(arr[2], arr[3]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pockii"
        },
        "content": "            task \u003d new Event(arr[2], arr[3]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pockii"
        },
        "content": "            task.completeTask();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Saves the current task list to the data file for future retrieval."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param tasks The current task list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void saveFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pockii"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pockii"
        },
        "content": "        for (Task task: tasks.getList()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pockii"
        },
        "content": "            textToAdd +\u003d task.formatTaskForFile() + \"\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pockii"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pockii"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 95
    }
  },
  {
    "path": "src/main/java/duke/tool/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke.tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.exception.MissingDeadlineException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.exception.MissingTaskException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Returns the list of tasks stored in the object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The current list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Returns the number of tasks in the list stored in the object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The size of the current list of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public int getLength() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pockii"
        },
        "content": "    Task createTask(String taskType, String desc) throws MissingDeadlineException{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pockii"
        },
        "content": "            return new Todo(desc);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pockii"
        },
        "content": "            return new Deadline(desc);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pockii"
        },
        "content": "            return new Event(desc);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Adds a task with a description and if applicable, a deadline to the task list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * and returns it."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param taskType The type of task to be added."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param desc The description of task to be added."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The task added to the task list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @throws MissingDeadlineException"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public Task addTask(String taskType, String desc) throws MissingDeadlineException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Task task \u003d createTask(taskType, desc);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pockii"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pockii"
        },
        "content": "    String formatTask(int num, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String lineBreak \u003d num !\u003d tasks.size() - 1 ? \"\\n  \" : \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return (num + 1) + \".\" + tasks.get(num) + lineBreak;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Returns the tasks in a numbered order as a String that can be printed out."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The String containing the tasks in a numbered order."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String formattedList() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pockii"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pockii"
        },
        "content": "            list +\u003d formatTask(i, tasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Marks the task at the given index as completed and returns it."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param num The index of the task in the list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The completed task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @throws MissingTaskException"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public Task completeTask(int num) throws MissingTaskException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (num \u003e 0 \u0026\u0026 num \u003c\u003d tasks.size()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pockii"
        },
        "content": "            Task task \u003d tasks.get(num - 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pockii"
        },
        "content": "            task.completeTask();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pockii"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pockii"
        },
        "content": "            throw new MissingTaskException(num);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Deletes the task at the given index and returns it."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param num The index of the task in the list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The deleted task."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @throws MissingTaskException"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public Task deleteTask(int num) throws MissingTaskException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (num \u003e 0 \u0026\u0026 num \u003c\u003d tasks.size()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "pockii"
        },
        "content": "            Task task \u003d tasks.remove(num - 1);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "pockii"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "pockii"
        },
        "content": "            throw new MissingTaskException(num);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String findTasks(String keyword) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "pockii"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "pockii"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "pockii"
        },
        "content": "            if (task.match(keyword)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "pockii"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "pockii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "pockii"
        },
        "content": "        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "pockii"
        },
        "content": "            list +\u003d formatTask(i, matchingTasks);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 133
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pockii"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pockii"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pockii"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pockii"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pockii"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pockii"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pockii"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 61
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pockii"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pockii"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pockii"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pockii"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pockii"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 52
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents the user interface of the Duke chat bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private String wrapMessage(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String line \u003d \"----------------------------------------------\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return line + \"\\n \" + message + \"\\n\" + line;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Greets the user when they start up the Duke chat bot."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you? (◠  ◠✿)\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return greeting;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Bids farewell to the user when they exit the Duke chat bot."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return A farewell message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String exit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String byeMessage \u003d \"Bye! ( ´ ▽ ` )/\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return byeMessage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Informs the user that the task has been added to the list and the number of tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * currently in the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param size The number of tasks in the current list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String addTask(Task task, int size) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String message \u003d \"Got it. I\u0027ve added this task: \\n  \" + task +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pockii"
        },
        "content": "                \"\\n Now you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Informs the user that the task has been marked as done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param task The task to be completed."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return A message to inform the user that the task has been marked as done."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String completeTask(Task task) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String message \u003d \"Nice! I\u0027ve marked this task as done: \\n  \" + task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Informs the user that the task has been deleted and the number of tasks currently"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * in the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param task The task to be deleted."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param size The number of tasks in the current list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String deleteTask(Task task, int size) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String message \u003d \"Noted. I\u0027ve removed this task: \\n \" + task +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pockii"
        },
        "content": "                \"\\n Now you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Lists out all the tasks in the current task list in"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * numbered order."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param formattedList The formatted task list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The list of tasks."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String list(String formattedList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String list \u003d \"Here are the tasks in your list: \\n  \";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pockii"
        },
        "content": "        list +\u003d formattedList;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Informs the user of the error that has occurred while using the Duke"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * chat bot."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param e The error caught."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String showDukeError(DukeException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return e.toString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Informs the user that an error occurred while trying to save their tasks."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String showSaveError() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return \"Something went wrong while saving your tasks...\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Informs the user that an error occurred while trying to load their tasks."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String showLoadError() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return wrapMessage(\"Something went wrong while loading your tasks...\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String find(String matchingTasks) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String list \u003d \"Here are the matching tasks in your list: \\n  \";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "pockii"
        },
        "content": "        list +\u003d matchingTasks;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 116
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "pockii": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "pockii": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void testParse() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String[] arr \u003d new String[]{\"todo\", \"return book\"};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "        assertArrayEquals(arr, p.parse(\"todo return book\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 13
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void addTask_presentDeadline_success() throws MissingDeadlineException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "        TaskList tasks \u003d new TaskList(list);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Task task \u003d tasks.addTask(\"event\", \"project meeting /at 2020-08-27\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "        assertEquals(\"[E][✗] project meeting (at: Aug 27 2020)\", task.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void completeTask_negativeIndex_exceptionThrown() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "        TaskList tasks \u003d new TaskList(list);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "            assertEquals(0, tasks.completeTask(-1));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } catch (MissingTaskException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "            String message \u003d \"Something went wrong... \\n \" + \"There\u0027s no task with the tag -1 (・・;)ゞ\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "            assertEquals(message, e.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 29
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void testContainsTime() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Task task \u003d new Todo(\"desc\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "        assertEquals(true, task.containsTime(\"desc 2359\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "        assertEquals(true, task.containsTime(\"desc 0000\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "        assertEquals(false, task.containsTime(\"desc 0761\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "        assertEquals(false, task.containsTime(\"desc 2401\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "pockii": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 32,
      "pockii": 2
    }
  }
]
