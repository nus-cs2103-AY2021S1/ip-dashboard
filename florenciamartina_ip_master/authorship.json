[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"### Notes about the command format :"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"- Words in `UPPER CASE` are the parameters to be supplied by the user."},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"  e.g. in `find KEYWORD\u003e`, `KEYWORD` is a parameter which can be used as `find homework`."},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"  "},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"- Items in square brackets are optional."},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"  e.g. `deadline TASK_NAME /by TASK_DATE [TASK_TIME]` can be used as `deadline maths homework /by 2020-09-09` or `deadline maths homework /by 2020-09-09 23:59`"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"- Items with `...` after them can received more than one parameter(s) separated by commas."},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"  e.g. `done LIST_NUMBER1, LIST_NUMBER2, ...` can be used as `done 1, 2, 3`."},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"#### Adding Task : `todo` / `deadline` / `event`"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"Adds input a todo/deadline/event task and its details to the list."},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"Format : "},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"- `todo TASK_NAME` "},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"- `deadline TASK_NAME /by TASK_DATE [TASK_TIME]` "},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"- `event TASK_NAME /at TASK_DATE [TASK_START_TIME]-[TASK_END_TIME]`"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"###### :bulb: **Tip** : parameter TASK_DATE should be in the form of `YYYY-MM-DD` and (TASK/TASK_START/TASK_END)_TIME is written as `HH:MM`"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"Examples :"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"- todo read book"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"- deadline CS2103 Quiz 6 /by 2020-09-14 23:59"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"- event family video call /at 2020-09-13 11:00-13:00"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"#### Deleting Task : `delete`"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"Deletes the task in the specified task number from the list."},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"Format : `delete TASK_NUMBER`"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"Examples :"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"- delete 1 (*will delete task number 1*)"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"- delete 3 (*will delete task number 3*)"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"#### Marking Task(s) As Done : `done`"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"Marks the task(s) in the specified task number(s) from the list."},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"Format : `done TASK_NUMBER1, [TASK_NUMBER2], [TASK_NUMBER3], ...`"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"Examples :"},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"- done 1 (*will mark task number 1 as done*)"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"- done 1, 2, 3 (*will mark task number 1, 2, 3 as done*)"},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"#### Finding Task(s) by Keyword(s) : `find`"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"Shows all the task containing the keyword(s)."},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"Format : `find KEYWORD1, [KEYWORD2], ...`"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"Examples :"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"- find read (*will show all task(s) containing `read` keyword if they exist.*) "},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"- find CS2103, CS2103 (*will show all task(s) containing `CS2102` and `CS2103` keywords if they exist.*)"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"#### Finding Task(s) by Date : `show`"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"Shows all the task on the specified input date."},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"Format : `show DATE`"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"###### :bulb: **Tip** : DATE format should be in the form of `YYYY-MM-DD`."},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"Examples :"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"- show 2020-09-01 (*will show all task(s) on 1st September 2020*)"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"- show 2020-10-21 (*will show all task(s) on 21st October 2020*)"},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"#### Sorting Task(s) : `sort`"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"Shows the sorted task list (Sorted by _date_, _time_, and _lexicographic order_)."},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":"Format : `sort`"},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"#### Listing Task(s) : `list`"},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":"Lists all the task(s) in the task list."},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"Format : `list`"},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":"#### Detecting Duplicate(s)"},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":"Detects duplicate when adding task. Will not add the task if it already exists in the list."},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":79,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":80,"author":{"gitId":"florenciamartina"},"content":"#### Saving Data "},{"lineNumber":81,"author":{"gitId":"florenciamartina"},"content":"Saves data to hard disk automatically after any command that changes the data. There is no need to save manually."},{"lineNumber":82,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":83,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":84,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":85,"author":{"gitId":"florenciamartina"},"content":"## Command Summary"},{"lineNumber":86,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":87,"author":{"gitId":"florenciamartina"},"content":"Action | Format"},{"lineNumber":88,"author":{"gitId":"florenciamartina"},"content":"------ | ------"},{"lineNumber":89,"author":{"gitId":"florenciamartina"},"content":"add a **todo** | `todo TASK_NAME`"},{"lineNumber":90,"author":{"gitId":"florenciamartina"},"content":"add a **deadline** | `deadline TASK_NAME /by TASK_DATE [TASK_TIME]` "},{"lineNumber":91,"author":{"gitId":"florenciamartina"},"content":"add an **event** | `event TASK_NAME /at TASK_DATE [TASK_START_TIME]-[TASK_END_TIME]`"},{"lineNumber":92,"author":{"gitId":"florenciamartina"},"content":"delete task | `delete TASK_NUMBER`"},{"lineNumber":93,"author":{"gitId":"florenciamartina"},"content":"mark task(s) as done | `done TASK_NUMBER1, [TASK_NUMBER2], [TASK_NUMBER3], ...`"},{"lineNumber":94,"author":{"gitId":"florenciamartina"},"content":"find by keyword(s) | `find KEYWORD1, [KEYWORD2], ...`"},{"lineNumber":95,"author":{"gitId":"florenciamartina"},"content":"find by date | `show DATE`"},{"lineNumber":96,"author":{"gitId":"florenciamartina"},"content":"sort list | `sort`"},{"lineNumber":97,"author":{"gitId":"florenciamartina"},"content":"list | `list`"},{"lineNumber":98,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":99,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":100,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":101,"author":{"gitId":"florenciamartina"},"content":"## Task Lists"},{"lineNumber":102,"author":{"gitId":"florenciamartina"},"content":"- [x] Auto-exit after command `bye`. Entering command `bye` will show goodbye message but does not exit the bot automatically."}],"authorContributionMap":{"florenciamartina":102}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"    String javaFxVersion \u003d \u002711.0.1\u0027"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"    mainClassName \u003d \"duke.gui.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"    archiveVersion \u003d \"0.2.0\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":"tasks.withType(JavaCompile) {"},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":"    options.encoding \u003d \u0027UTF-8\u0027"},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"}"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":"repositories {"},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":"    mavenCentral()"},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":26,"-":44}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"E | 0 | Angklung CCA | 2020-09-14 | 19:00-21:00"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":"D | 1 | submit CS2100 Lab4 Report | 2020-09-14 | 23:59"},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"E | 0 | CS2102 Lecture | 2020-09-15 | 12:00-14:00"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"D | 0 | CS2103 iP week 6 | 2020-09-15 | 23:59"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"T | 1 | CS2100 Assignment #1 "},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"T | 1 | CS2102 Assignment #1"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"T | 0 | ST2334 Tutorial 4"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"T | 0 | check CS2102 Project"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"T | 1 | eat dinner"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"T | 1 | watch Mulan"}],"authorContributionMap":{"florenciamartina":10}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"### Notes about the command format :"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"- Words in `UPPER CASE` are the parameters to be supplied by the user."},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"  e.g. in `find KEYWORD\u003e`, `KEYWORD` is a parameter which can be used as `find homework`."},{"lineNumber":8,"author":{"gitId":"-"},"content":"  "},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"- Items in square brackets are optional."},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"  e.g. `deadline TASK_NAME /by TASK_DATE [TASK_TIME]` can be used as `deadline maths homework /by 2020-09-09` or `deadline maths homework /by 2020-09-09 23:59`"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"- Items with `...` after them can received more than one parameter(s) separated by commas."},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"  e.g. `done LIST_NUMBER1, LIST_NUMBER2, ...` can be used as `done 1, 2, 3`."},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"#### Adding Task : `todo` / `deadline` / `event`"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"Adds input a todo/deadline/event task and its details to the list."},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"Format : "},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"- `todo TASK_NAME` "},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"- `deadline TASK_NAME /by TASK_DATE [TASK_TIME]` "},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"- `event TASK_NAME /at TASK_DATE [TASK_START_TIME]-[TASK_END_TIME]`"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"###### :bulb: **Tip** : parameter TASK_DATE should be in the form of `YYYY-MM-DD` and (TASK/TASK_START/TASK_END)_TIME is written as `HH:MM`"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"Examples :"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"- todo read book"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"- deadline CS2103 Quiz 6 /by 2020-09-14 23:59"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"- event family video call /at 2020-09-13 11:00-13:00"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"#### Deleting Task : `delete`"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"Deletes the task in the specified task number from the list."},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"Format : `delete TASK_NUMBER`"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"Examples :"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"- delete 1 (*will delete task number 1*)"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"- delete 3 (*will delete task number 3*)"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"#### Marking Task(s) As Done : `done`"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"Marks the task(s) in the specified task number(s) from the list."},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"Format : `done TASK_NUMBER1, [TASK_NUMBER2], [TASK_NUMBER3], ...`"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"Examples :"},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"- done 1 (*will mark task number 1 as done*)"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"- done 1, 2, 3 (*will mark task number 1, 2, 3 as done*)"},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"#### Finding Task(s) by Keyword(s) : `find`"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"Shows all the task containing the keyword(s)."},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"Format : `find KEYWORD1, [KEYWORD2], ...`"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"Examples :"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"- find read (*will show all task(s) containing `read` keyword if they exist.*) "},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"- find CS2103, CS2103 (*will show all task(s) containing `CS2102` and `CS2103` keywords if they exist.*)"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"#### Finding Task(s) by Date : `show`"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"Shows all the task on the specified input date."},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"Format : `show DATE`"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"###### :bulb: **Tip** : DATE format should be in the form of `YYYY-MM-DD`."},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"Examples :"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"- show 2020-09-01 (*will show all task(s) on 1st September 2020*)"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"- show 2020-10-21 (*will show all task(s) on 21st October 2020*)"},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"#### Sorting Task(s) : `sort`"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"Shows the sorted task list (Sorted by _date_, _time_, and _lexicographic order_)."},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":"Format : `sort`"},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"#### Listing Task(s) : `list`"},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":"Lists all the task(s) in the task list."},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"Format : `list`"},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":"#### Detecting Duplicate(s)"},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":"Detects duplicate when adding task. Will not add the task if it already exists in the list."},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":79,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":80,"author":{"gitId":"florenciamartina"},"content":"#### Saving Data "},{"lineNumber":81,"author":{"gitId":"florenciamartina"},"content":"Saves data to hard disk automatically after any command that changes the data. There is no need to save manually."},{"lineNumber":82,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":83,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":84,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":85,"author":{"gitId":"florenciamartina"},"content":"## Command Summary"},{"lineNumber":86,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":87,"author":{"gitId":"florenciamartina"},"content":"Action | Format"},{"lineNumber":88,"author":{"gitId":"florenciamartina"},"content":"------ | ------"},{"lineNumber":89,"author":{"gitId":"florenciamartina"},"content":"add a **todo** | `todo TASK_NAME`"},{"lineNumber":90,"author":{"gitId":"florenciamartina"},"content":"add a **deadline** | `deadline TASK_NAME /by TASK_DATE [TASK_TIME]` "},{"lineNumber":91,"author":{"gitId":"florenciamartina"},"content":"add an **event** | `event TASK_NAME /at TASK_DATE [TASK_START_TIME]-[TASK_END_TIME]`"},{"lineNumber":92,"author":{"gitId":"florenciamartina"},"content":"delete task | `delete TASK_NUMBER`"},{"lineNumber":93,"author":{"gitId":"florenciamartina"},"content":"mark task(s) as done | `done TASK_NUMBER1, [TASK_NUMBER2], [TASK_NUMBER3], ...`"},{"lineNumber":94,"author":{"gitId":"florenciamartina"},"content":"find by keyword(s) | `find KEYWORD1, [KEYWORD2], ...`"},{"lineNumber":95,"author":{"gitId":"florenciamartina"},"content":"find by date | `show DATE`"},{"lineNumber":96,"author":{"gitId":"florenciamartina"},"content":"sort list | `sort`"},{"lineNumber":97,"author":{"gitId":"florenciamartina"},"content":"list | `list`"},{"lineNumber":98,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":99,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":100,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":101,"author":{"gitId":"florenciamartina"},"content":"## Task Lists"},{"lineNumber":102,"author":{"gitId":"florenciamartina"},"content":"- [x] Auto-exit after command `bye`. Entering command `bye` will show goodbye message but does not exit the bot automatically."}],"authorContributionMap":{"florenciamartina":90,"-":12}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"public class Duke { //extends Application {"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"    private Storage storage;"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"    private TaskList tasks;"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"    private Ui ui;"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"     * Constructs Duke bot."},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"    public Duke() {"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"        this.storage \u003d new Storage(\"tasks.txt\");"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"            tasks \u003d new TaskList(Storage.readFile());"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"        } catch (IOException | DukeException e) {"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"     * Constructs Duke bot."},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"     * @param filePath File path containing data."},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"    public Duke(String filePath) {"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"        this.storage \u003d new Storage(filePath);"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"            tasks \u003d new TaskList(Storage.readFile());"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"        } catch (DukeException e) {"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"            this.ui.showLoadingError();"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"        } catch (IOException io) {"},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"            io.printStackTrace();"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"     * Runs the program."},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"    public static void main(String[] args) {"},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"        new Duke(\"tasks.txt\").run();"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"     * Runs the Duke bot."},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"    public void run() {"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"        ui.greet();"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"        //storage.showData();"},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"        boolean isExit \u003d false;"},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"        while (!isExit) {"},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"            try {"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"                ui.showLine(); // show the divider line (\"_______\")"},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":"                //c.executeGUI(tasks, ui, storage);"},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"            } catch (DukeException e) {"},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":"            } finally {"},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"                ui.showLine();"},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":"     * Replace this stub with your completed method."},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"florenciamartina"},"content":"    public String getResponse(String input) {"},{"lineNumber":80,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"florenciamartina"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":82,"author":{"gitId":"florenciamartina"},"content":"            return c.execute(tasks, ui, storage);"},{"lineNumber":83,"author":{"gitId":"florenciamartina"},"content":"        } catch (DukeException e) {"},{"lineNumber":84,"author":{"gitId":"florenciamartina"},"content":"            return e.getMessage();"},{"lineNumber":85,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":87}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"import duke.command.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"import duke.command.EventCommand;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"import duke.command.ExitCommand;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"import duke.command.FindCommand;"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"import duke.command.ListCommand;"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"import duke.command.ShowCommand;"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"import duke.command.SortCommand;"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"import duke.command.TodoCommand;"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.DukeException;"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.WrongInputException;"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"public class Parser {"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"     * Returns the command based on user\u0027s input."},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"     * @param command User\u0027s input."},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"     * @return Corresponding command."},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"     * @throws DukeException If user\u0027s input is not compatible to any command."},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"    public static Command parse(String command) throws DukeException {"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"            String[] cmd \u003d command.split(\" \", 2);"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"            String firstWord \u003d cmd[0];"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"            if (cmd.length \u003c 2) {"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"                if (firstWord.equals(\"list\")) {"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"                    return new ListCommand();"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"                } else if (firstWord.equals(\"bye\")) {"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"                    return new ExitCommand();"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"                } else if (firstWord.equals(\"sort\")) {"},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"                    return new SortCommand();"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"                } else {"},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"                    throw new WrongInputException();"},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"                }"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"            } else {"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"                String taskDetails \u003d removeFirstWord(command);"},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"                if (firstWord.equals(\"done\")) {"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"                    return new DoneCommand(taskDetails.split(\", \"));"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"                } else if (firstWord.equals(\"todo\")) {"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"                    return new TodoCommand(taskDetails);"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"                } else if (firstWord.equals(\"deadline\")) {"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"                    return new DeadlineCommand(taskDetails);"},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"                } else if (firstWord.equals(\"event\")) {"},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"                    return new EventCommand(taskDetails);"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"                } else if (firstWord.equals(\"delete\")) {"},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":"                    return new DeleteCommand(taskDetails);"},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"                } else if (firstWord.equals(\"show\")) {"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"                    return new ShowCommand(taskDetails);"},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":"                } else if (firstWord.equals(\"find\")) {"},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"                    return new FindCommand(taskDetails.split(\", \"));"},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":"                } else {"},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"                    throw new WrongInputException();"},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":"                }"},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":"        } catch (DukeException exc) {"},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":"            System.out.println(\"Error!\");"},{"lineNumber":79,"author":{"gitId":"florenciamartina"},"content":"            throw new DukeException(exc.getMessage());"},{"lineNumber":80,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":83,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"florenciamartina"},"content":"     * Returns the task details by removing the command."},{"lineNumber":85,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"florenciamartina"},"content":"     * @param command User\u0027s input."},{"lineNumber":87,"author":{"gitId":"florenciamartina"},"content":"     * @return task details containing the description, date, and time."},{"lineNumber":88,"author":{"gitId":"florenciamartina"},"content":"     * @throws DukeException if the command consists of only one word."},{"lineNumber":89,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"florenciamartina"},"content":"    private static String removeFirstWord(String command) throws DukeException {"},{"lineNumber":91,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":92,"author":{"gitId":"florenciamartina"},"content":"            String[] cmd \u003d command.split(\" \", 2);"},{"lineNumber":93,"author":{"gitId":"florenciamartina"},"content":"            return cmd[1];"},{"lineNumber":94,"author":{"gitId":"florenciamartina"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":95,"author":{"gitId":"florenciamartina"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":96,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":98}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import java.io.BufferedWriter;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"import java.nio.file.Path;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"import java.time.LocalTime;"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.CalendarException;"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.DukeException;"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.StorageException;"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Deadline;"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Event;"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Task;"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Todo;"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"public class Storage {"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"    private static String filePath;"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"    //private TaskList taskList;"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"    public Storage(String filePath) {"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"        Storage.filePath \u003d filePath;"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"     * Reads the file from hard disk."},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"     * @return List containing the parsed data from file."},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"     * @throws IOException   If file cannot be read or found."},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"     * @throws DukeException If there is incorrect format in the file."},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"    public static List\u003cTask\u003e readFile() throws IOException, DukeException {"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"        Path folder \u003d Path.of(\"data\");"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"        Path file \u003d folder.resolve(filePath);"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"        //Create a new directory by creating all parent directories first"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"        Files.createDirectories(folder);"},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"        //if user is new and file does not exist, create the file"},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"        if (!Files.exists(file)) {"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"            Files.createFile(file);"},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"        //read from file"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"        BufferedReader reader \u003d Files.newBufferedReader(file);"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(); //this does not update this.todos"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"        reader.lines().forEach(line -\u003e {"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"            try {"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"                Task task \u003d parseData(line);"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"                tasks.add(task);"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"            } catch (StorageException e) {"},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"            } catch (DukeException d) {"},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"                System.out.println(d.getMessage());"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"        });"},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":"        return tasks;"},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":"     * Formats the data to more readable format."},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"     * @param line String to be parsed."},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"     * @return parsed Task."},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":"     * @throws DukeException If there is incorrect data format."},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":"    private static Task parseData(String line) throws DukeException {"},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":"            String[] parsed \u003d line.split(\"\\\\s\\\\|\\\\s\");"},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":79,"author":{"gitId":"florenciamartina"},"content":"            if (parsed.length \u003c 2) {"},{"lineNumber":80,"author":{"gitId":"florenciamartina"},"content":"                throw new StorageException(line + \"is in invalid format.\");"},{"lineNumber":81,"author":{"gitId":"florenciamartina"},"content":"            } else {"},{"lineNumber":82,"author":{"gitId":"florenciamartina"},"content":"                String identifier \u003d parsed[0]; //get the type of duke.task"},{"lineNumber":83,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":84,"author":{"gitId":"florenciamartina"},"content":"                if (identifier.equals(\"T\")) {"},{"lineNumber":85,"author":{"gitId":"florenciamartina"},"content":"                    return parseTodoData(parsed);"},{"lineNumber":86,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":87,"author":{"gitId":"florenciamartina"},"content":"                } else if (identifier.equals(\"E\")) {"},{"lineNumber":88,"author":{"gitId":"florenciamartina"},"content":"                    return parseEventData(parsed);"},{"lineNumber":89,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":90,"author":{"gitId":"florenciamartina"},"content":"                } else if (identifier.equals(\"D\")) {"},{"lineNumber":91,"author":{"gitId":"florenciamartina"},"content":"                    return parseDeadlineData(parsed);"},{"lineNumber":92,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":93,"author":{"gitId":"florenciamartina"},"content":"                } else {"},{"lineNumber":94,"author":{"gitId":"florenciamartina"},"content":"                    throw new StorageException(\"Invalid format. Moving on to the next task.\");"},{"lineNumber":95,"author":{"gitId":"florenciamartina"},"content":"                }"},{"lineNumber":96,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":97,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":99,"author":{"gitId":"florenciamartina"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":100,"author":{"gitId":"florenciamartina"},"content":"            throw new CalendarException(\"Please input the correct date and time format. \""},{"lineNumber":101,"author":{"gitId":"florenciamartina"},"content":"                + \"YYYY-MM-DD for date and HH:MM for time.\");"},{"lineNumber":102,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":105,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"florenciamartina"},"content":"     * Format the event data to more readable format."},{"lineNumber":107,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"florenciamartina"},"content":"     * @param parsed split Input."},{"lineNumber":109,"author":{"gitId":"florenciamartina"},"content":"     * @return parsed Event data."},{"lineNumber":110,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"florenciamartina"},"content":"    public static Event parseEventData(String[] parsed) {"},{"lineNumber":112,"author":{"gitId":"florenciamartina"},"content":"        String doneIndicator \u003d parsed[1];"},{"lineNumber":113,"author":{"gitId":"florenciamartina"},"content":"        String taskName \u003d parsed[2];"},{"lineNumber":114,"author":{"gitId":"florenciamartina"},"content":"        String date \u003d parsed[3];"},{"lineNumber":115,"author":{"gitId":"florenciamartina"},"content":"        LocalDate localDate \u003d LocalDate.parse(date);"},{"lineNumber":116,"author":{"gitId":"florenciamartina"},"content":"        Event event;"},{"lineNumber":117,"author":{"gitId":"florenciamartina"},"content":"        if (parsed.length \u003d\u003d 4) {"},{"lineNumber":118,"author":{"gitId":"florenciamartina"},"content":"            if (doneIndicator.equals(\"1\")) {"},{"lineNumber":119,"author":{"gitId":"florenciamartina"},"content":"                event \u003d new Event(taskName, true, localDate);"},{"lineNumber":120,"author":{"gitId":"florenciamartina"},"content":"            } else {"},{"lineNumber":121,"author":{"gitId":"florenciamartina"},"content":"                event \u003d new Event(taskName, localDate);"},{"lineNumber":122,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":124,"author":{"gitId":"florenciamartina"},"content":"            String time \u003d parsed[4];"},{"lineNumber":125,"author":{"gitId":"florenciamartina"},"content":"            String[] startEndTime \u003d time.split(\"-\");"},{"lineNumber":126,"author":{"gitId":"florenciamartina"},"content":"            String startTime \u003d startEndTime[0];"},{"lineNumber":127,"author":{"gitId":"florenciamartina"},"content":"            LocalTime localStartTime \u003d LocalTime.parse(startTime);"},{"lineNumber":128,"author":{"gitId":"florenciamartina"},"content":"            if (startEndTime.length \u003c 2) {"},{"lineNumber":129,"author":{"gitId":"florenciamartina"},"content":"                if (doneIndicator.equals(\"1\")) {"},{"lineNumber":130,"author":{"gitId":"florenciamartina"},"content":"                    event \u003d new Event(taskName, true, localDate, localStartTime);"},{"lineNumber":131,"author":{"gitId":"florenciamartina"},"content":"                } else {"},{"lineNumber":132,"author":{"gitId":"florenciamartina"},"content":"                    event \u003d new Event(taskName, false, localDate, localStartTime);"},{"lineNumber":133,"author":{"gitId":"florenciamartina"},"content":"                }"},{"lineNumber":134,"author":{"gitId":"florenciamartina"},"content":"            } else {"},{"lineNumber":135,"author":{"gitId":"florenciamartina"},"content":"                String endTime \u003d startEndTime[1];"},{"lineNumber":136,"author":{"gitId":"florenciamartina"},"content":"                LocalTime localEndTime \u003d LocalTime.parse(endTime);"},{"lineNumber":137,"author":{"gitId":"florenciamartina"},"content":"                if (doneIndicator.equals(\"1\")) {"},{"lineNumber":138,"author":{"gitId":"florenciamartina"},"content":"                    event \u003d new Event(taskName,"},{"lineNumber":139,"author":{"gitId":"florenciamartina"},"content":"                        true, localDate, localStartTime, localEndTime);"},{"lineNumber":140,"author":{"gitId":"florenciamartina"},"content":"                } else {"},{"lineNumber":141,"author":{"gitId":"florenciamartina"},"content":"                    event \u003d new Event(taskName,"},{"lineNumber":142,"author":{"gitId":"florenciamartina"},"content":"                        false, localDate, localStartTime, localEndTime);"},{"lineNumber":143,"author":{"gitId":"florenciamartina"},"content":"                }"},{"lineNumber":144,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"florenciamartina"},"content":"        return event;"},{"lineNumber":147,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":149,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"florenciamartina"},"content":"     * Format the deadline data to more readable format."},{"lineNumber":151,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":152,"author":{"gitId":"florenciamartina"},"content":"     * @param parsed split Input."},{"lineNumber":153,"author":{"gitId":"florenciamartina"},"content":"     * @return parsed Deadline data."},{"lineNumber":154,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"florenciamartina"},"content":"    public static Deadline parseDeadlineData(String[] parsed) {"},{"lineNumber":156,"author":{"gitId":"florenciamartina"},"content":"        String doneIndicator \u003d parsed[1];"},{"lineNumber":157,"author":{"gitId":"florenciamartina"},"content":"        String taskName \u003d parsed[2];"},{"lineNumber":158,"author":{"gitId":"florenciamartina"},"content":"        String date \u003d parsed[3];"},{"lineNumber":159,"author":{"gitId":"florenciamartina"},"content":"        LocalDate localDate \u003d LocalDate.parse(date);"},{"lineNumber":160,"author":{"gitId":"florenciamartina"},"content":"        Deadline deadline;"},{"lineNumber":161,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":162,"author":{"gitId":"florenciamartina"},"content":"        if (parsed.length \u003c 5) {"},{"lineNumber":163,"author":{"gitId":"florenciamartina"},"content":"            if (doneIndicator.equals(\"1\")) {"},{"lineNumber":164,"author":{"gitId":"florenciamartina"},"content":"                deadline \u003d new Deadline(taskName, true, localDate);"},{"lineNumber":165,"author":{"gitId":"florenciamartina"},"content":"            } else {"},{"lineNumber":166,"author":{"gitId":"florenciamartina"},"content":"                deadline \u003d new Deadline(taskName, localDate);"},{"lineNumber":167,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":168,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":169,"author":{"gitId":"florenciamartina"},"content":"            String time \u003d parsed[4];"},{"lineNumber":170,"author":{"gitId":"florenciamartina"},"content":"            LocalTime localTime \u003d LocalTime.parse(time);"},{"lineNumber":171,"author":{"gitId":"florenciamartina"},"content":"            if (doneIndicator.equals(\"1\")) {"},{"lineNumber":172,"author":{"gitId":"florenciamartina"},"content":"                deadline \u003d new Deadline(taskName, true, localDate, localTime);"},{"lineNumber":173,"author":{"gitId":"florenciamartina"},"content":"            } else {"},{"lineNumber":174,"author":{"gitId":"florenciamartina"},"content":"                deadline \u003d new Deadline(taskName, false, localDate, localTime);"},{"lineNumber":175,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":176,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"florenciamartina"},"content":"        return deadline;"},{"lineNumber":178,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":180,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"florenciamartina"},"content":"     * Format the todo data to more readable format."},{"lineNumber":182,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":183,"author":{"gitId":"florenciamartina"},"content":"     * @param parsed split Input."},{"lineNumber":184,"author":{"gitId":"florenciamartina"},"content":"     * @return parsed Todo data."},{"lineNumber":185,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":186,"author":{"gitId":"florenciamartina"},"content":"    public static Todo parseTodoData(String[] parsed) {"},{"lineNumber":187,"author":{"gitId":"florenciamartina"},"content":"        String doneIndicator \u003d parsed[1];"},{"lineNumber":188,"author":{"gitId":"florenciamartina"},"content":"        String taskName \u003d parsed[2];"},{"lineNumber":189,"author":{"gitId":"florenciamartina"},"content":"        Todo todo;"},{"lineNumber":190,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":191,"author":{"gitId":"florenciamartina"},"content":"        if (doneIndicator.equals(\"1\")) {"},{"lineNumber":192,"author":{"gitId":"florenciamartina"},"content":"            todo \u003d new Todo(taskName, true);"},{"lineNumber":193,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":194,"author":{"gitId":"florenciamartina"},"content":"            todo \u003d new Todo(taskName);"},{"lineNumber":195,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":197,"author":{"gitId":"florenciamartina"},"content":"        return todo;"},{"lineNumber":198,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":200,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":201,"author":{"gitId":"florenciamartina"},"content":"     * Updates the data in the file."},{"lineNumber":202,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":203,"author":{"gitId":"florenciamartina"},"content":"     * @param tasks List containing all the updated tasks."},{"lineNumber":204,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":205,"author":{"gitId":"florenciamartina"},"content":"    public static void updateData(List\u003cTask\u003e tasks) {"},{"lineNumber":206,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":207,"author":{"gitId":"florenciamartina"},"content":"            BufferedWriter writer \u003d Files.newBufferedWriter(Path.of(\"data/tasks.txt\"));"},{"lineNumber":208,"author":{"gitId":"florenciamartina"},"content":"            for (Task task : tasks) {"},{"lineNumber":209,"author":{"gitId":"florenciamartina"},"content":"                String type \u003d task.getType();"},{"lineNumber":210,"author":{"gitId":"florenciamartina"},"content":"                Boolean status \u003d task.getStatus();"},{"lineNumber":211,"author":{"gitId":"florenciamartina"},"content":"                String taskName \u003d task.getDescription();"},{"lineNumber":212,"author":{"gitId":"florenciamartina"},"content":"                String stored \u003d \"\";"},{"lineNumber":213,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":214,"author":{"gitId":"florenciamartina"},"content":"                if (type.equals(\"T\")) {"},{"lineNumber":215,"author":{"gitId":"florenciamartina"},"content":"                    stored \u003d String.format(\"%s | %d | %s\", type, status ? 1 : 0, taskName);"},{"lineNumber":216,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":217,"author":{"gitId":"florenciamartina"},"content":"                } else if (type.equals(\"E\")) {"},{"lineNumber":218,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":219,"author":{"gitId":"florenciamartina"},"content":"                    stored \u003d updateEventData(task);"},{"lineNumber":220,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":221,"author":{"gitId":"florenciamartina"},"content":"                } else if (type.equals(\"D\")) {"},{"lineNumber":222,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":223,"author":{"gitId":"florenciamartina"},"content":"                    stored \u003d updateDeadlineData(task);"},{"lineNumber":224,"author":{"gitId":"florenciamartina"},"content":"                }"},{"lineNumber":225,"author":{"gitId":"florenciamartina"},"content":"                writer.write(stored);"},{"lineNumber":226,"author":{"gitId":"florenciamartina"},"content":"                writer.newLine();"},{"lineNumber":227,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":228,"author":{"gitId":"florenciamartina"},"content":"            writer.flush();"},{"lineNumber":229,"author":{"gitId":"florenciamartina"},"content":"            writer.close();"},{"lineNumber":230,"author":{"gitId":"florenciamartina"},"content":"        } catch (IOException e) {"},{"lineNumber":231,"author":{"gitId":"florenciamartina"},"content":"            e.printStackTrace();"},{"lineNumber":232,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":233,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":234,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":235,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":236,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":237,"author":{"gitId":"florenciamartina"},"content":"     * Updates the Event data in the file."},{"lineNumber":238,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":239,"author":{"gitId":"florenciamartina"},"content":"     * @param task Event task."},{"lineNumber":240,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":241,"author":{"gitId":"florenciamartina"},"content":"    public static String updateEventData(Task task) {"},{"lineNumber":242,"author":{"gitId":"florenciamartina"},"content":"        String type \u003d task.getType();"},{"lineNumber":243,"author":{"gitId":"florenciamartina"},"content":"        Boolean status \u003d task.getStatus();"},{"lineNumber":244,"author":{"gitId":"florenciamartina"},"content":"        String taskName \u003d task.getDescription();"},{"lineNumber":245,"author":{"gitId":"florenciamartina"},"content":"        String stored \u003d \"\";"},{"lineNumber":246,"author":{"gitId":"florenciamartina"},"content":"        Event event \u003d (Event) task;"},{"lineNumber":247,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":248,"author":{"gitId":"florenciamartina"},"content":"        LocalDate date \u003d event.getEventDate();"},{"lineNumber":249,"author":{"gitId":"florenciamartina"},"content":"        LocalTime startTime \u003d event.getStartTime();"},{"lineNumber":250,"author":{"gitId":"florenciamartina"},"content":"        LocalTime endTime \u003d event.getEndTime();"},{"lineNumber":251,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":252,"author":{"gitId":"florenciamartina"},"content":"        if (startTime \u003d\u003d null \u0026\u0026 endTime \u003d\u003d null) {"},{"lineNumber":253,"author":{"gitId":"florenciamartina"},"content":"            stored \u003d String.format("},{"lineNumber":254,"author":{"gitId":"florenciamartina"},"content":"                \"%s | %d | %s | %s\", type, status ? 1 : 0, taskName, date);"},{"lineNumber":255,"author":{"gitId":"florenciamartina"},"content":"        } else if (endTime \u003d\u003d null) {"},{"lineNumber":256,"author":{"gitId":"florenciamartina"},"content":"            stored \u003d String.format(\"%s | %d | %s | %s | %s\","},{"lineNumber":257,"author":{"gitId":"florenciamartina"},"content":"                type, status ? 1 : 0, taskName, date, startTime);"},{"lineNumber":258,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":259,"author":{"gitId":"florenciamartina"},"content":"            stored \u003d String.format(\"%s | %d | %s | %s | %s-%s\","},{"lineNumber":260,"author":{"gitId":"florenciamartina"},"content":"                type, status ? 1 : 0, taskName, date, startTime, endTime);"},{"lineNumber":261,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":262,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":263,"author":{"gitId":"florenciamartina"},"content":"        return stored;"},{"lineNumber":264,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":265,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":266,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":267,"author":{"gitId":"florenciamartina"},"content":"     * Updates the Deadline data in the file."},{"lineNumber":268,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":269,"author":{"gitId":"florenciamartina"},"content":"     * @param task Deadline task."},{"lineNumber":270,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":271,"author":{"gitId":"florenciamartina"},"content":"    public static String updateDeadlineData(Task task) {"},{"lineNumber":272,"author":{"gitId":"florenciamartina"},"content":"        String type \u003d task.getType();"},{"lineNumber":273,"author":{"gitId":"florenciamartina"},"content":"        Boolean status \u003d task.getStatus();"},{"lineNumber":274,"author":{"gitId":"florenciamartina"},"content":"        String taskName \u003d task.getDescription();"},{"lineNumber":275,"author":{"gitId":"florenciamartina"},"content":"        String stored \u003d \"\";"},{"lineNumber":276,"author":{"gitId":"florenciamartina"},"content":"        Deadline deadline \u003d (Deadline) task;"},{"lineNumber":277,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":278,"author":{"gitId":"florenciamartina"},"content":"        LocalDate date \u003d deadline.getDeadline();"},{"lineNumber":279,"author":{"gitId":"florenciamartina"},"content":"        LocalTime time \u003d deadline.getDeadlineTime();"},{"lineNumber":280,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":281,"author":{"gitId":"florenciamartina"},"content":"        if (time \u003d\u003d null) {"},{"lineNumber":282,"author":{"gitId":"florenciamartina"},"content":"            stored \u003d String.format(\"%s | %d | %s | %s\","},{"lineNumber":283,"author":{"gitId":"florenciamartina"},"content":"                type, status ? 1 : 0, taskName, date);"},{"lineNumber":284,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":285,"author":{"gitId":"florenciamartina"},"content":"            stored \u003d String.format(\"%s | %d | %s | %s | %s\","},{"lineNumber":286,"author":{"gitId":"florenciamartina"},"content":"                type, status ? 1 : 0, taskName, date, time);"},{"lineNumber":287,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":288,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":289,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":290,"author":{"gitId":"florenciamartina"},"content":"        return stored;"},{"lineNumber":291,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":292,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":292}},{"path":"src/main/java/duke/TaskComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import java.util.Comparator;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"public class TaskComparator implements Comparator\u003cTask\u003e {"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"    public int compare(Task task1, Task task2) {"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"        int dateComparison \u003d task1.getTaskDate().compareTo(task2.getTaskDate());"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"        int timeComparison \u003d task1.getTaskTime().compareTo(task2.getTaskTime());"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"        int descComparison \u003d task1.getDescription().compareTo(task2.getDescription());"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"        if (dateComparison \u003d\u003d 0) {"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"            if (timeComparison \u003d\u003d 0) {"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"                if (descComparison \u003d\u003d 0) {"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"                    return 0;"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"                } else {"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"                    return descComparison;"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"                }"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"            } else {"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"                return timeComparison;"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"            return dateComparison;"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":29}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"import java.util.stream.IntStream;"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.CalendarException;"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.DeleteException;"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.DoneException;"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.StorageException;"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Deadline;"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Event;"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Task;"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"public class TaskList {"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"    private Storage storage;"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"    public TaskList() {"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"     * Lists all the tasks in the list."},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"     * @return All the tasks in the list."},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"    public String listItems() {"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"        if (this.tasks.size() \u003d\u003d 0) {"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"            return \"You don\u0027t have any task in your list.\";"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"            StringBuilder todoList \u003d new StringBuilder(\"Here are the task(s) in your list: \\n\");"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"            IntStream.range(0, this.tasks.size())"},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"                .forEach(i -\u003e todoList.append(String.format("},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"                    \"%d. %s\\n\", i + 1, this.tasks.get(i))));"},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"            return todoList.toString();"},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"     * Deletes a task based on the corresponding number."},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"     * @param index Index of the list containing the task"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"     * @return Delete message."},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"     * @throws DeleteException If the index \u003c 0 or more than the size."},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"    public String deleteTask(int index) throws DeleteException {"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"        if (index \u003c 0 || index \u003e tasks.size()) {"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"            throw new DeleteException(\"Please enter a valid task number.\");"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"            Task task \u003d this.tasks.get(index);"},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"            String msg;"},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"            this.tasks.remove(task);"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"            Storage.updateData(this.tasks);"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"            msg \u003d \"Noted. I\u0027ve removed this task for you: \\n\""},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":"                + task.toString() + \"\\n\""},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":"                + \"Now you have \" + this.tasks.size() + \" task(s) in the list.\";"},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"            return msg;"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"     * Saves the task to the list."},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"     * @param task Task to save to the list."},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":"     * @return Save message."},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":"    public String saveToList(Task task) throws StorageException {"},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":"        if (this.tasks.contains(task)) {"},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":"            throw new StorageException(\"This task already exist!\");"},{"lineNumber":79,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":80,"author":{"gitId":"florenciamartina"},"content":"            this.tasks.add(task);"},{"lineNumber":81,"author":{"gitId":"florenciamartina"},"content":"            Storage.updateData(this.tasks);"},{"lineNumber":82,"author":{"gitId":"florenciamartina"},"content":"            String msg;"},{"lineNumber":83,"author":{"gitId":"florenciamartina"},"content":"            msg \u003d \"Okay~ I\u0027ve added this task: \\n\" + task.toString()"},{"lineNumber":84,"author":{"gitId":"florenciamartina"},"content":"                + \"\\nNow you have \" + this.tasks.size() + \" task(s) in the list.\";"},{"lineNumber":85,"author":{"gitId":"florenciamartina"},"content":"            return msg;"},{"lineNumber":86,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":89,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"florenciamartina"},"content":"     * Returns the task corresponding to the task number."},{"lineNumber":91,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"florenciamartina"},"content":"     * @param taskNum Task number of the task."},{"lineNumber":93,"author":{"gitId":"florenciamartina"},"content":"     * @return The task corresponding to the task number."},{"lineNumber":94,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"florenciamartina"},"content":"    public Task getTask(int taskNum) {"},{"lineNumber":96,"author":{"gitId":"florenciamartina"},"content":"        return this.tasks.get(taskNum - 1);"},{"lineNumber":97,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":99,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"florenciamartina"},"content":"     * Marks the task corresponding to the task number as done."},{"lineNumber":101,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"florenciamartina"},"content":"     * @param taskNum Task number of the task."},{"lineNumber":103,"author":{"gitId":"florenciamartina"},"content":"     * @return Marked as done message."},{"lineNumber":104,"author":{"gitId":"florenciamartina"},"content":"     * @throws DoneException If the index \u003c 0 or more than the size."},{"lineNumber":105,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"florenciamartina"},"content":"    public String markTaskAsDone(int taskNum) throws DoneException {"},{"lineNumber":107,"author":{"gitId":"florenciamartina"},"content":"        if (taskNum \u003c\u003d 0 || taskNum \u003e tasks.size()) {"},{"lineNumber":108,"author":{"gitId":"florenciamartina"},"content":"            throw new DoneException(\"Please enter a valid task number.\");"},{"lineNumber":109,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":110,"author":{"gitId":"florenciamartina"},"content":"            int index \u003d taskNum - 1;"},{"lineNumber":111,"author":{"gitId":"florenciamartina"},"content":"            String msg;"},{"lineNumber":112,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":113,"author":{"gitId":"florenciamartina"},"content":"            Task oldTask \u003d this.tasks.get(index);"},{"lineNumber":114,"author":{"gitId":"florenciamartina"},"content":"            Task newTask \u003d oldTask.markAsDone();"},{"lineNumber":115,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":116,"author":{"gitId":"florenciamartina"},"content":"            this.tasks.remove(oldTask);"},{"lineNumber":117,"author":{"gitId":"florenciamartina"},"content":"            this.tasks.add(index, newTask);"},{"lineNumber":118,"author":{"gitId":"florenciamartina"},"content":"            Storage.updateData(this.tasks);"},{"lineNumber":119,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":120,"author":{"gitId":"florenciamartina"},"content":"            msg \u003d newTask.toString();"},{"lineNumber":121,"author":{"gitId":"florenciamartina"},"content":"            return msg;"},{"lineNumber":122,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":125,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"florenciamartina"},"content":"     * Shows the all task(s) on the input day."},{"lineNumber":127,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":128,"author":{"gitId":"florenciamartina"},"content":"     * @param date Date to show."},{"lineNumber":129,"author":{"gitId":"florenciamartina"},"content":"     * @return All tasks on the input date."},{"lineNumber":130,"author":{"gitId":"florenciamartina"},"content":"     * @throws CalendarException If the date input is in invalid format."},{"lineNumber":131,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"florenciamartina"},"content":"    public String showDate(String date) throws CalendarException {"},{"lineNumber":133,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":134,"author":{"gitId":"florenciamartina"},"content":"            LocalDate localDate \u003d LocalDate.parse(date);"},{"lineNumber":135,"author":{"gitId":"florenciamartina"},"content":"            Boolean hasSomething \u003d false;"},{"lineNumber":136,"author":{"gitId":"florenciamartina"},"content":"            StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":137,"author":{"gitId":"florenciamartina"},"content":"            builder.append(\"Task(s) on : \" + localDate.getDayOfWeek() + \", \""},{"lineNumber":138,"author":{"gitId":"florenciamartina"},"content":"                + localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":139,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":140,"author":{"gitId":"florenciamartina"},"content":"            for (Task task : this.tasks) {"},{"lineNumber":141,"author":{"gitId":"florenciamartina"},"content":"                String type \u003d task.getType();"},{"lineNumber":142,"author":{"gitId":"florenciamartina"},"content":"                if (type.equals(\"E\")) {"},{"lineNumber":143,"author":{"gitId":"florenciamartina"},"content":"                    Event event \u003d (Event) task;"},{"lineNumber":144,"author":{"gitId":"florenciamartina"},"content":"                    LocalDate eventDate \u003d event.getEventDate();"},{"lineNumber":145,"author":{"gitId":"florenciamartina"},"content":"                    if (eventDate.equals(localDate)) {"},{"lineNumber":146,"author":{"gitId":"florenciamartina"},"content":"                        hasSomething \u003d true;"},{"lineNumber":147,"author":{"gitId":"florenciamartina"},"content":"                        builder.append(\"\\n\" + task.toString());"},{"lineNumber":148,"author":{"gitId":"florenciamartina"},"content":"                    }"},{"lineNumber":149,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":150,"author":{"gitId":"florenciamartina"},"content":"                } else if (type.equals(\"D\")) {"},{"lineNumber":151,"author":{"gitId":"florenciamartina"},"content":"                    Deadline deadline \u003d (Deadline) task;"},{"lineNumber":152,"author":{"gitId":"florenciamartina"},"content":"                    LocalDate deadlineDate \u003d deadline.getDeadline();"},{"lineNumber":153,"author":{"gitId":"florenciamartina"},"content":"                    if (deadlineDate.equals(localDate)) {"},{"lineNumber":154,"author":{"gitId":"florenciamartina"},"content":"                        hasSomething \u003d true;"},{"lineNumber":155,"author":{"gitId":"florenciamartina"},"content":"                        builder.append(\"\\n\" + task.toString());"},{"lineNumber":156,"author":{"gitId":"florenciamartina"},"content":"                    }"},{"lineNumber":157,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":158,"author":{"gitId":"florenciamartina"},"content":"                } else {"},{"lineNumber":159,"author":{"gitId":"florenciamartina"},"content":"                    continue;"},{"lineNumber":160,"author":{"gitId":"florenciamartina"},"content":"                }"},{"lineNumber":161,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":162,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":163,"author":{"gitId":"florenciamartina"},"content":"            if (!hasSomething) {"},{"lineNumber":164,"author":{"gitId":"florenciamartina"},"content":"                return \"You have nothing to do on this day!\";"},{"lineNumber":165,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":166,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":167,"author":{"gitId":"florenciamartina"},"content":"            return builder.toString();"},{"lineNumber":168,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":169,"author":{"gitId":"florenciamartina"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":170,"author":{"gitId":"florenciamartina"},"content":"            throw new CalendarException(\"Invalid input date format. Please try again.\");"},{"lineNumber":171,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":174,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"florenciamartina"},"content":"     * Returns all the tasks in the list."},{"lineNumber":176,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":177,"author":{"gitId":"florenciamartina"},"content":"     * @return List containing all of the tasks."},{"lineNumber":178,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"florenciamartina"},"content":"    public List\u003cTask\u003e getTasks() {"},{"lineNumber":180,"author":{"gitId":"florenciamartina"},"content":"        return this.tasks;"},{"lineNumber":181,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":183,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"florenciamartina"},"content":"     * Sorts tasks in the list."},{"lineNumber":185,"author":{"gitId":"florenciamartina"},"content":"     * @return Sorted list."},{"lineNumber":186,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"florenciamartina"},"content":"    public List\u003cTask\u003e sort() {"},{"lineNumber":188,"author":{"gitId":"florenciamartina"},"content":"        Collections.sort(this.tasks, new TaskComparator());"},{"lineNumber":189,"author":{"gitId":"florenciamartina"},"content":"        Storage.updateData(this.tasks);"},{"lineNumber":190,"author":{"gitId":"florenciamartina"},"content":"        return this.tasks;"},{"lineNumber":191,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":193,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":193}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"    private Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"     * Shows greetings when user starts the bot."},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"    public void greet() {"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"        String donLogo \u003d \"   ___     ___    _  _     ___     ___ \\n\""},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"            + \"  |   \\\\   / _ \\\\  | \\\\| |   / __|   / _ \\\\  \\n\""},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"            + \"  | |) | | (_) | | .` |  | (_ |  | (_) | \\n\""},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"            + \"  |___/   \\\\___/  |_|\\\\_|   \\\\___|   \\\\___/  \\n\""},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"            + \"_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"| \\n\""},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"            + \"\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027 \\n\";"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"        String msg \u003d \"Hola! I\u0027m Dongo :) \\n\""},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"            + \"How can I help you?\";"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"        System.out.println(donLogo + \"\\n\" + msg);"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"     * Shows the loading error if"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"     * there is a problem in loading the bot."},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"    public void showLoadingError() {"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"        System.out.println(\"Unable to load.... Try again later.\");"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"     * Reads user\u0027s command from Scanner."},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"     * @return user\u0027s command."},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"    public String readCommand() {"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"        String command \u003d sc.nextLine();"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"        return command;"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"     * Exits the bot and shows bye message."},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"    public String bye() {"},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"        sc.close();"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"        return \"Time to say goodbye :( \\n\""},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"            + \"Have a great day!\";"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"//        System.exit(0);"},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"//        return;"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"     * Shows pretty line before and after every output."},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"    public void showLine() {"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"        System.out.println("},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"            \"\\n__̴ı̴̴̡̡̡ ̡͌l̡̡̡ ̡͌l̡*̡̡ ̴̡ı̴̴̡ ̡̡͡|̲̲̲͡͡͡ ̲▫̲͡ \""},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"                + \"̲̲̲͡͡π̲̲͡͡ ̲̲͡▫̲̲͡͡ ̲|̡̡̡ ̡ ̴̡ı̴̡̡ ̡͌l̡̡̡̡.___\""},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"                + \"__̴ı̴̴̡̡̡ ̡͌l̡̡̡ ̡͌l̡*̡̡ ̴̡ı̴̴̡ ̡̡͡|̲̲̲͡͡͡ ̲▫̲͡ \""},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"                + \"̲̲̲͡͡π̲̲͡͡ ̲̲͡▫̲̲͡͡ ̲|̡̡̡ ̡ ̴̡ı̴̡̡ ̡͌l̡̡̡̡.__\\n\");"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":"     * Shows error message."},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"     * @param msg Error message."},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":"    public void showError(String msg) {"},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"        System.out.println(msg);"},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":73}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"public abstract class Command {"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"    protected String task;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"    protected Boolean isExit;"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"     * Constructs command"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"     * @param task Task description."},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"    public Command(String task) {"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"        this.task \u003d task;"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"        this.isExit \u003d false;"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"     * Constructs command."},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"     * @param task   Task description."},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"     * @param isExit Exit indicator."},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"    public Command(String task, Boolean isExit) {"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"        this.task \u003d task;"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"     * Constructs command."},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"     * @param isExit Exit indicator."},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"    public Command(Boolean isExit) {"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"        this.task \u003d null;"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"     * Constructs command."},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"    public Command() {"},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"        this.task \u003d null;"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"        this.isExit \u003d false;"},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"     * Determines whether the bot should exit or not."},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"     * @return true if the command is \"exit\" and false otherwise."},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"    public boolean isExit() {"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"        return this.isExit;"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"     * Executes the user\u0027s command."},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList List of tasks."},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"     * @param ui       UI of the bot."},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":"     * @param storage  Storage managing the file in hard disk."},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage);"},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"     * Returns this command object."},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":"     * @return this command."},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":"    public String getTask() {"},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":"        return this.task;"},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":78}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"import duke.Storage;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"import duke.TaskList;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"import duke.Ui;"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.CalendarException;"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.DeadlineException;"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.DukeException;"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Deadline;"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"    public DeadlineCommand(String task) {"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"        super(task);"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"     * Executes any command corresponding to Deadline keyword."},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList List of tasks."},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"     * @param ui       UI of the bot."},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"     * @param storage  Storage managing the file in hard disk."},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"            return processDeadline(this.task, taskList, ui, storage);"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"        } catch (DukeException duke) {"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"            return duke.getMessage();"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"     * Processes all the deadline command to determine the correct output."},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"     * @param theRest  Parsed string containing task details."},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList List containing all the task(s)."},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"     * @param ui       UI of the bot"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"     * @param storage  Storage managing the file in hard disk."},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"     * @throws DeadlineException If user\u0027s input is incomplete or in the wrong format."},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"    public String processDeadline("},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"        String theRest, TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"        Deadline deadline;"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"            String task \u003d getDeadlineTask(theRest);"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"            String[] details \u003d parseDeadlineDetails(theRest);"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"            LocalDate localDate \u003d getDeadlineDate(details);"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"            LocalTime localTime \u003d getDeadlineTime(details);"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"            if (localTime !\u003d null) {"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"                deadline \u003d new Deadline(task, false, localDate, localTime);"},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"            } else {"},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"                deadline \u003d new Deadline(task, localDate);"},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"            Storage.updateData(taskList.getTasks());"},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":"            return taskList.saveToList(deadline);"},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"        } catch (DeadlineException deadlineExc) {"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"            throw deadlineExc;"},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":"        } catch (CalendarException calendarExc) {"},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":"            throw calendarExc;"},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":"     * Parses the deadline details."},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":"     * @param theRest deadline details."},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":"     * @return Date and time of the deadline task."},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":"     * @throws DeadlineException"},{"lineNumber":79,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":81,"author":{"gitId":"florenciamartina"},"content":"    public String[] parseDeadlineDetails(String theRest) throws DeadlineException {"},{"lineNumber":82,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"florenciamartina"},"content":"            String[] taskAndDeadlineAndTime \u003d theRest.split(\" /by \", 2);"},{"lineNumber":84,"author":{"gitId":"florenciamartina"},"content":"            String[] dateAndTime \u003d taskAndDeadlineAndTime[1].split(\" \");"},{"lineNumber":85,"author":{"gitId":"florenciamartina"},"content":"            return dateAndTime;"},{"lineNumber":86,"author":{"gitId":"florenciamartina"},"content":"        } catch (IndexOutOfBoundsException i) {"},{"lineNumber":87,"author":{"gitId":"florenciamartina"},"content":"            throw new DeadlineException(\"Please specify the task and deadline.\");"},{"lineNumber":88,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":91,"author":{"gitId":"florenciamartina"},"content":"    public String getDeadlineTask(String theRest) {"},{"lineNumber":92,"author":{"gitId":"florenciamartina"},"content":"        String[] taskAndDeadlineAndTime \u003d theRest.split(\" /by \", 2);"},{"lineNumber":93,"author":{"gitId":"florenciamartina"},"content":"        return taskAndDeadlineAndTime[0];"},{"lineNumber":94,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":96,"author":{"gitId":"florenciamartina"},"content":"    public LocalDate getDeadlineDate(String[] dateDetails) throws DukeException {"},{"lineNumber":97,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":98,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":99,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":100,"author":{"gitId":"florenciamartina"},"content":"            String date \u003d dateDetails[0];"},{"lineNumber":101,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":102,"author":{"gitId":"florenciamartina"},"content":"            try {"},{"lineNumber":103,"author":{"gitId":"florenciamartina"},"content":"                LocalDate localDate \u003d LocalDate.parse(date);"},{"lineNumber":104,"author":{"gitId":"florenciamartina"},"content":"                return localDate;"},{"lineNumber":105,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":106,"author":{"gitId":"florenciamartina"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":107,"author":{"gitId":"florenciamartina"},"content":"                throw new CalendarException(\"Please enter the date in YYYY/MM/DD format and time in HH:MM format.\");"},{"lineNumber":108,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":109,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":110,"author":{"gitId":"florenciamartina"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":111,"author":{"gitId":"florenciamartina"},"content":"            throw new DeadlineException(\"Please specify the task and deadline.\");"},{"lineNumber":112,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":115,"author":{"gitId":"florenciamartina"},"content":"    public LocalTime getDeadlineTime(String[] dateDetails) throws DukeException {"},{"lineNumber":116,"author":{"gitId":"florenciamartina"},"content":"        if (dateDetails.length \u003e 1) {"},{"lineNumber":117,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":118,"author":{"gitId":"florenciamartina"},"content":"            String time \u003d dateDetails[1];"},{"lineNumber":119,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":120,"author":{"gitId":"florenciamartina"},"content":"            try {"},{"lineNumber":121,"author":{"gitId":"florenciamartina"},"content":"                LocalTime localTime \u003d LocalTime.parse(time);"},{"lineNumber":122,"author":{"gitId":"florenciamartina"},"content":"                return localTime;"},{"lineNumber":123,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":124,"author":{"gitId":"florenciamartina"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":125,"author":{"gitId":"florenciamartina"},"content":"                throw new CalendarException(\"Please enter the date in YYYY/MM/DD format and time in HH:MM format.\");"},{"lineNumber":126,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":128,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":129,"author":{"gitId":"florenciamartina"},"content":"            return null;"},{"lineNumber":130,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":133,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":134,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"florenciamartina"},"content":"     * Evaluates whether this and other object if this and"},{"lineNumber":136,"author":{"gitId":"florenciamartina"},"content":"     * other object is the same or of the same type and task details."},{"lineNumber":137,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":138,"author":{"gitId":"florenciamartina"},"content":"     * @param other Other object to compare."},{"lineNumber":139,"author":{"gitId":"florenciamartina"},"content":"     * @return True if this object"},{"lineNumber":140,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":142,"author":{"gitId":"florenciamartina"},"content":"    public boolean equals(Object other) {"},{"lineNumber":143,"author":{"gitId":"florenciamartina"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":144,"author":{"gitId":"florenciamartina"},"content":"            return true;"},{"lineNumber":145,"author":{"gitId":"florenciamartina"},"content":"        } else if (other instanceof DeadlineCommand) {"},{"lineNumber":146,"author":{"gitId":"florenciamartina"},"content":"            DeadlineCommand deadlineCommand \u003d (DeadlineCommand) other;"},{"lineNumber":147,"author":{"gitId":"florenciamartina"},"content":"            return this.task.equals(deadlineCommand.getTask());"},{"lineNumber":148,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"florenciamartina"},"content":"        return false;"},{"lineNumber":150,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":151}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.DeleteException;"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"    public DeleteCommand(String task) {"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"        super(task);"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"     * Processes all the delete command to determine the correct output."},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList List of tasks."},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"     * @param ui       UI of the bot."},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"     * @param storage  Storage managing the file in hard disk."},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"            return processDelete(this.task, taskList, ui, storage);"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"        } catch (DeleteException d) {"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"            return d.getMessage();"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"     * Processes all the deadline command to determine the correct output."},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"     * @param number   Parsed string containing task number."},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList List containing all the task(s)."},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"     * @param ui       UI of the bot"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"     * @param storage  Storage managing the file in hard disk."},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"     * @throws DeleteException If user\u0027s input is incomplete or in the wrong format."},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"    public String processDelete("},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"        String number, TaskList taskList, Ui ui, Storage storage) throws DeleteException {"},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"            Integer taskNum \u003d Integer.parseInt(number);"},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"            int index \u003d taskNum - 1;"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"            Storage.updateData(taskList.getTasks());"},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"            return taskList.deleteTask(index);"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"        } catch (DukeException d) {"},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"            throw new DeleteException(\"Please enter a number. I cannot delete nothing :(\");"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"        } catch (IndexOutOfBoundsException i) {"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"            throw new DeleteException(\"You have nothing on your list!\");"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"     * Evaluates whether this and other object if this and"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"     * other object is the same or of the same type and task details."},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"     * @param other Other object to compare."},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"     * @return True if this object"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":"    public boolean equals(Object other) {"},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"            return true;"},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":"        } else if (other instanceof DeleteCommand) {"},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":"            DeleteCommand deleteCommand \u003d (DeleteCommand) other;"},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"            return this.task.equals(deleteCommand.getTask());"},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":"        return false;"},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":74}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import java.util.stream.Stream;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"import duke.Ui;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.DoneException;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.DukeException;"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"public class DoneCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"    private String[] tasks;"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"    public DoneCommand(String... tasks) {"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"     * Processes all the done command to determine the correct output."},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList List of tasks."},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"     * @param ui       UI of the bot."},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"     * @param storage  Storage managing the file in hard disk."},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"            return processDone(this.tasks, taskList, ui, storage);"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"        } catch (DoneException done) {"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"            return done.getMessage();"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"     * Processes all the done command to determine the correct output."},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"     * @param taskNumbers Parsed string containing task numbers."},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList    List containing all the task(s)."},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"     * @param ui          UI of the bot"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"     * @param storage     Storage managing the file in hard disk."},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"     * @throws DoneException If user\u0027s input is incomplete or in the wrong format."},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"    public String processDone("},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"        String[] taskNumbers, TaskList taskList, Ui ui, Storage storage) throws DoneException {"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"            int num \u003d 1;"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"            Integer[] parsedNumbers \u003d Stream.of(taskNumbers).map(Integer::valueOf).toArray(Integer[]::new);"},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"            StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"            builder.append(\"YAYY! I\u0027ve marked these task(s) as done\\n\");"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"            for (int taskNum : parsedNumbers) {"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"                Storage.updateData(taskList.getTasks());"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"                builder.append(num + \". \" + taskList.markTaskAsDone(taskNum) + \"\\n\");"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"                num++;"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"            return builder.toString();"},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"        } catch (DukeException d) {"},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"            throw new DoneException(\"Please enter a valid task number\");"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"     * Evaluates whether this and other object if this and"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"     * other object is the same or of the same type and task details."},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":"     * @param other Other object to compare."},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"     * @return True if this object"},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"    public boolean equals(Object other) {"},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":"            return true;"},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":"        } else if (other instanceof DoneCommand) {"},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":"            DoneCommand doneCommand \u003d (DoneCommand) other;"},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":"            return this.task.equals(doneCommand.getTask());"},{"lineNumber":79,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"florenciamartina"},"content":"        return false;"},{"lineNumber":81,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":82}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"import duke.Storage;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"import duke.TaskList;"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"import duke.Ui;"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.CalendarException;"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.DukeException;"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.EventException;"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Event;"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"public class EventCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"    public EventCommand(String task) {"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"        super(task);"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"     * Processes all the done command to determine the correct output."},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList List of tasks."},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"     * @param ui       UI of the bot."},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"     * @param storage  Storage managing the file in hard disk."},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"            return processEvent(this.task, taskList, ui, storage);"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"        } catch (DukeException e) {"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"            return e.getMessage();"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"     * Processes all the event command to determine the correct output."},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"     * @param theRest  Parsed string containing task details."},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList List containing all the task(s)."},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"     * @param ui       UI of the bot"},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"     * @param storage  Storage managing the file in hard disk."},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"     * @throws EventException If user\u0027s input is incomplete or in the wrong format."},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"    public String processEvent("},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"        String theRest, TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"        Event event;"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"            String task \u003d getEventTask(theRest);"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"            String[] details \u003d parseEventDetails(theRest);"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"            LocalDate localDate \u003d getEventDate(details);"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"            ArrayList\u003cLocalTime\u003e localTime \u003d getEventTime(details);"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"            LocalTime startTime;"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"            LocalTime endTime;"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"            if (localTime.size() \u003d\u003d 2) {"},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"                startTime \u003d localTime.get(0);"},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"                endTime \u003d localTime.get(1);"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"                event \u003d new Event(task, false, localDate, startTime, endTime);"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"            } else if (localTime.size() \u003d\u003d 1) {"},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":"                startTime \u003d localTime.get(0);"},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":"                event \u003d new Event(task, localDate, startTime);"},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"            } else {"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"                event \u003d new Event(task, localDate);"},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"            Storage.updateData(taskList.getTasks());"},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"            return taskList.saveToList(event);"},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"        } catch (EventException | CalendarException exc) {"},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":"            throw exc;"},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"florenciamartina"},"content":"     * Parses the event details."},{"lineNumber":80,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"florenciamartina"},"content":"     * @param theRest event details."},{"lineNumber":82,"author":{"gitId":"florenciamartina"},"content":"     * @return Parsed Event data."},{"lineNumber":83,"author":{"gitId":"florenciamartina"},"content":"     * @throws EventException"},{"lineNumber":84,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"florenciamartina"},"content":"    public String[] parseEventDetails(String theRest) throws EventException {"},{"lineNumber":86,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"florenciamartina"},"content":"            String[] taskAndEventAndTime \u003d theRest.split(\" /at \", 2);"},{"lineNumber":88,"author":{"gitId":"florenciamartina"},"content":"            String[] dateAndTime \u003d taskAndEventAndTime[1].split(\" \");"},{"lineNumber":89,"author":{"gitId":"florenciamartina"},"content":"            return dateAndTime;"},{"lineNumber":90,"author":{"gitId":"florenciamartina"},"content":"        } catch (IndexOutOfBoundsException i) {"},{"lineNumber":91,"author":{"gitId":"florenciamartina"},"content":"            throw new EventException(\"Please specify the task and event date.\");"},{"lineNumber":92,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":95,"author":{"gitId":"florenciamartina"},"content":"    public String getEventTask(String theRest) {"},{"lineNumber":96,"author":{"gitId":"florenciamartina"},"content":"        String[] taskAndEventAndTime \u003d theRest.split(\" /at \", 2);"},{"lineNumber":97,"author":{"gitId":"florenciamartina"},"content":"        return taskAndEventAndTime[0];"},{"lineNumber":98,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":100,"author":{"gitId":"florenciamartina"},"content":"    public LocalDate getEventDate(String[] dateDetails) throws DukeException {"},{"lineNumber":101,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":102,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":103,"author":{"gitId":"florenciamartina"},"content":"            String date \u003d dateDetails[0];"},{"lineNumber":104,"author":{"gitId":"florenciamartina"},"content":"            try {"},{"lineNumber":105,"author":{"gitId":"florenciamartina"},"content":"                LocalDate localDate \u003d LocalDate.parse(date);"},{"lineNumber":106,"author":{"gitId":"florenciamartina"},"content":"                return localDate;"},{"lineNumber":107,"author":{"gitId":"florenciamartina"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":108,"author":{"gitId":"florenciamartina"},"content":"                throw new CalendarException(\"Please enter the date in YYYY/MM/DD format and time in HH:MM format.\");"},{"lineNumber":109,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"florenciamartina"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":111,"author":{"gitId":"florenciamartina"},"content":"            throw new EventException(\"Please specify the task and event date.\");"},{"lineNumber":112,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":115,"author":{"gitId":"florenciamartina"},"content":"    public ArrayList\u003cLocalTime\u003e getEventTime(String[] dateDetails) throws DukeException {"},{"lineNumber":116,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":117,"author":{"gitId":"florenciamartina"},"content":"        ArrayList\u003cLocalTime\u003e localTime \u003d new ArrayList\u003c\u003e();"},{"lineNumber":118,"author":{"gitId":"florenciamartina"},"content":"        if (dateDetails.length \u003e 1) {"},{"lineNumber":119,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":120,"author":{"gitId":"florenciamartina"},"content":"            String[] startEndTime \u003d dateDetails[1].split(\"-\", 2);"},{"lineNumber":121,"author":{"gitId":"florenciamartina"},"content":"            String startTime \u003d startEndTime[0];"},{"lineNumber":122,"author":{"gitId":"florenciamartina"},"content":"            LocalTime localStartTime;"},{"lineNumber":123,"author":{"gitId":"florenciamartina"},"content":"            LocalTime localEndTime;"},{"lineNumber":124,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":125,"author":{"gitId":"florenciamartina"},"content":"            if (startEndTime.length \u003d\u003d 2) {"},{"lineNumber":126,"author":{"gitId":"florenciamartina"},"content":"                String endTime \u003d startEndTime[1];"},{"lineNumber":127,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":128,"author":{"gitId":"florenciamartina"},"content":"                try {"},{"lineNumber":129,"author":{"gitId":"florenciamartina"},"content":"                    localStartTime \u003d LocalTime.parse(startTime);"},{"lineNumber":130,"author":{"gitId":"florenciamartina"},"content":"                    localEndTime \u003d LocalTime.parse(endTime);"},{"lineNumber":131,"author":{"gitId":"florenciamartina"},"content":"                    localTime.add(localStartTime);"},{"lineNumber":132,"author":{"gitId":"florenciamartina"},"content":"                    localTime.add(localEndTime);"},{"lineNumber":133,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":134,"author":{"gitId":"florenciamartina"},"content":"                } catch (DateTimeParseException e) {"},{"lineNumber":135,"author":{"gitId":"florenciamartina"},"content":"                    throw new CalendarException(\"Please enter the date in YYYY/MM/DD format and time in HH:MM format.\");"},{"lineNumber":136,"author":{"gitId":"florenciamartina"},"content":"                }"},{"lineNumber":137,"author":{"gitId":"florenciamartina"},"content":"            } else {"},{"lineNumber":138,"author":{"gitId":"florenciamartina"},"content":"                localStartTime \u003d LocalTime.parse(startTime);"},{"lineNumber":139,"author":{"gitId":"florenciamartina"},"content":"                localTime.add(localStartTime);"},{"lineNumber":140,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"florenciamartina"},"content":"        return localTime;"},{"lineNumber":143,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":145,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":146,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"florenciamartina"},"content":"     * Evaluates whether this and other object if this and"},{"lineNumber":148,"author":{"gitId":"florenciamartina"},"content":"     * other object is the same or of the same type and task details."},{"lineNumber":149,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":150,"author":{"gitId":"florenciamartina"},"content":"     * @param other Other object to compare."},{"lineNumber":151,"author":{"gitId":"florenciamartina"},"content":"     * @return True if this object"},{"lineNumber":152,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":154,"author":{"gitId":"florenciamartina"},"content":"    public boolean equals(Object other) {"},{"lineNumber":155,"author":{"gitId":"florenciamartina"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":156,"author":{"gitId":"florenciamartina"},"content":"            return true;"},{"lineNumber":157,"author":{"gitId":"florenciamartina"},"content":"        } else if (other instanceof EventCommand) {"},{"lineNumber":158,"author":{"gitId":"florenciamartina"},"content":"            EventCommand eventCommand \u003d (EventCommand) other;"},{"lineNumber":159,"author":{"gitId":"florenciamartina"},"content":"            return this.task.equals(eventCommand.getTask());"},{"lineNumber":160,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"florenciamartina"},"content":"        return false;"},{"lineNumber":162,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":163}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"public class ExitCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"    public ExitCommand() {"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"        super(true);"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"     * Processes the exit command to exit the bot."},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList List of tasks."},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"     * @param ui       UI of the bot."},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"     * @param storage  Storage managing the file in hard disk."},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"        return processBye(ui);"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"     * Exits the bot."},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"     * @param ui UI to show the goodbye message."},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"    public String processBye(Ui ui) {"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"        return ui.bye();"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":34}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"import duke.Storage;"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"import duke.TaskList;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"import duke.Ui;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.FindException;"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Task;"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"public class FindCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"    private String[] keywords;"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"    public FindCommand(String... keywords) {"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"        this.keywords \u003d keywords;"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"            return processFind(this.keywords, taskList, ui, storage);"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"        } catch (FindException find) {"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"            return find.getMessage();"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"    public String processFind(String[] toFind, TaskList taskList, Ui ui, Storage storage) throws FindException {"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"        return findTask(toFind, taskList);"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"    public boolean equals(Object other) {"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"            return true;"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"        } else if (other instanceof FindCommand) {"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"            FindCommand findCommand \u003d (FindCommand) other;"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"            return this.task.equals(findCommand.getTask());"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"        return false;"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"    private String findTask(String[] toFind, TaskList taskList) {"},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"        //try {"},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"        List\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();"},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"        int num \u003d 1;"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"        boolean containsKeyword;"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"        builder.append(\"Here are the matching task(s) in your list : \\n\");"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"        for (Task task : tasks) {"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"            containsKeyword \u003d false;"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"            for (int i \u003d 0; i \u003c toFind.length; i++) {"},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"                if (task.getDescription().contains(toFind[i])) {"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"                    containsKeyword \u003d true;"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"                    break;"},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"            if (containsKeyword) {"},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":"                tasksFound.add(task);"},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":"                builder.append(num + \". \" + task.toString() + \"\\n\");"},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"                num++;"},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":"        if (tasksFound.size() \u003d\u003d 0) {"},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":"            return \"Nothing match this keyword. \\n\""},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":"                + \"Please try again with another keyword.\";"},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":"        return builder.toString();"},{"lineNumber":79,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":80}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"public class ListCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"    public ListCommand() {"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"        super();"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"     * Processes the list command to list all the task(s) in the list."},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList List of tasks."},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"     * @param ui       UI of the bot."},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"     * @param storage  Storage managing the file in hard disk."},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"        //try {"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"        return processList(taskList);"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"     * Calls the TaskList to list all the task(s)."},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList TaskList that stores the list of tasks."},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"    public String processList(TaskList taskList) { //throws DukeException {"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"        //try {"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"        return taskList.listItems();"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"        //} catch (IndexOutOfBoundsException e) {"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"        //    throw new DukeException(\"Please input a valid number.\");"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"        //}"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":38}},{"path":"src/main/java/duke/command/ShowCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.CalendarException;"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"public class ShowCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"    public ShowCommand(String task) {"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"        super(task);"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"     * Processes the show command to show all the task(s) on that day."},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList List of tasks."},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"     * @param ui       UI of the bot."},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"     * @param storage  Storage managing the file in hard disk."},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"            return processShow(this.task, taskList, ui, storage);"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"        } catch (CalendarException cal) {"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"            return cal.getMessage();"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"     * Calls the TaskList to show all the task(s) on that day."},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"     * @param date     Queried date."},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList TaskList containing the tasks list."},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"     * @param ui       UI of the bot."},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"     * @param storage  Storage managing the file in hard disk."},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"     * @throws CalendarException If the date is in incorrect format."},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"    public String processShow("},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"        String date, TaskList taskList, Ui ui, Storage storage) throws CalendarException {"},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"        return taskList.showDate(date);"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"     * Evaluates whether this and other object if this and"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"     * other object is the same or of the same type and task details."},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"     * @param other Other object to compare."},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"     * @return True if this object"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"    public boolean equals(Object other) {"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"            return true;"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"        } else if (other instanceof ShowCommand) {"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"            ShowCommand showCommand \u003d (ShowCommand) other;"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"            return this.task.equals(showCommand.getTask());"},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"        return false;"},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":62}},{"path":"src/main/java/duke/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"import duke.Ui;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"public class SortCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"    public SortCommand() {"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"        super();"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"        return sortList(taskList);"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"     * Sorts tasks in Task List."},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList Task List that is going to be sorted."},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"     * @return String of sorted list."},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"    public String sortList(TaskList taskList) {"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"        List\u003cTask\u003e list \u003d taskList.sort();"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"        builder.append(\"Here, I sorted the list for you : \\n\");"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"        int num \u003d 1;"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"        for (Task t : list) {"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"            String taskString \u003d num + \". \" + t.toString();"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"            builder.append(taskString + \"\\n\");"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"            num++;"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"        return builder.toString();"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"}"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":""}],"authorContributionMap":{"florenciamartina":39}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.StorageException;"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Todo;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"public class TodoCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"    public TodoCommand(String task) {"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"        super(task);"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"     * Executes any command corresponding to Todo keyword."},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList List of tasks."},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"     * @param ui       UI of the bot."},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"     * @param storage  Storage managing the file in hard disk."},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"            return processTodo(this.task, taskList, ui, storage);"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"        } catch (StorageException s) {"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"            return s.getMessage();"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"     * Processes all the todo command to determine the correct output."},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"     * @param theRest  Parsed string containing task details."},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"     * @param taskList List containing all the task(s)."},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"     * @param ui       UI of the bot"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"     * @param storage  Storage managing the file in hard disk."},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"    public String processTodo("},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"        String theRest, TaskList taskList, Ui ui, Storage storage) throws StorageException {"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"        Todo todo \u003d new Todo(theRest);"},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"        Storage.updateData(taskList.getTasks());"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"        return taskList.saveToList(todo);"},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"     * Evaluates whether this and other object if this and"},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"     * other object is the same or of the same type and task details."},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"     * @param other Other object to compare."},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"     * @return True if this object"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"    public boolean equals(Object other) {"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"            return true;"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"        } else if (other instanceof TodoCommand) {"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"            TodoCommand todoCommand \u003d (TodoCommand) other;"},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"            return this.task.equals(todoCommand.getTask());"},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"        return false;"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":63}},{"path":"src/main/java/duke/exception/CalendarException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"public class CalendarException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"     * Constructs the calendar exception"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"     * for invalid format of date and time."},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"     * @param msg Error message."},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"    public CalendarException(String msg) {"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"        super(msg);"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":15}},{"path":"src/main/java/duke/exception/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"public class DeadlineException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"     * Constructs the deadline exception for invalid details."},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"     * @param msg Error message."},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"    public DeadlineException(String msg) {"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"        super(msg);"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":13}},{"path":"src/main/java/duke/exception/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"public class DeleteException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"     * Constructs the delete exception for invalid details."},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"     * @param msg Error message."},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"    public DeleteException(String msg) {"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"        super(msg);"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":14}},{"path":"src/main/java/duke/exception/DoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"public class DoneException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"     * Constructs the done exception for invalid details."},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"     * @param msg Error message."},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"    public DoneException(String msg) {"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"        super(msg);"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":13}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"     * Constructs the Duke Exception."},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"     * @param msg Error message."},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"    public DukeException(String msg) {"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"        super(msg);"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":14}},{"path":"src/main/java/duke/exception/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"public class EventException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"     * Constructs the event exception for invalid details."},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"     * @param msg Error message."},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"    public EventException(String msg) {"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"        super(msg);"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":13}},{"path":"src/main/java/duke/exception/FindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"public class FindException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"    public FindException(String msg) {"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"        super(msg);"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":9}},{"path":"src/main/java/duke/exception/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"public class StorageException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"     * Constructs the storage exception for error found in accessing the file."},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"     * @param msg Error message."},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"    public StorageException(String msg) {"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"        super(msg);"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":14}},{"path":"src/main/java/duke/exception/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"public class TodoException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"     * Constructs the todo exception for invalid details."},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"    public TodoException() {"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"        super(\"Please specify what do you want to do~\");"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":12}},{"path":"src/main/java/duke/exception/WrongInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"public class WrongInputException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"     * Constructs the exception for invalid input or command."},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"    public WrongInputException() {"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"        super(\"Please enter a valid command.\");"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":11}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.control.Control;"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.text.Font;"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.text.FontPosture;"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.text.Text;"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.text.TextAlignment;"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.text.TextFlow;"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":" * An example of a custom control using FXML."},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":" * containing text from the speaker."},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":" */"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"public class DialogBox extends HBox {"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"    //private Label dialog;"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"    private TextFlow dialog;"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"    private ImageView displayPicture;"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"            fxmlLoader.load();"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"            e.printStackTrace();"},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"        //dialog.setText(text);"},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"        Text textFill \u003d new Text(text);"},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"        textFill.setFont(Font.font(\"Libre Baskerville\", FontPosture.REGULAR, 12));"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"        dialog.getChildren().add(textFill);"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"        dialog.setLineSpacing(1.15);"},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"        dialog.setTextAlignment(TextAlignment.LEFT);"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"        dialog.setOpacity(0.8);"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"        dialog.setMaxWidth(Control.USE_PREF_SIZE);"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"        dialog.setMaxHeight(Control.USE_PREF_SIZE);"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"        displayPicture.setImage(img);"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"        return new DialogBox(text, img);"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"        db.flip();"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"        //db.dialog.setStyle(\"-fx-background-color: #43a192; -fx-background-radius : 15\");"},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":"        db.dialog.setStyle(\"-fx-background-color: #287da8; -fx-background-radius : 15\");"},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":"        return db;"},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":"    private void flip() {"},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":"        Collections.reverse(tmp);"},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":79,"author":{"gitId":"florenciamartina"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":80,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":81}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":" */"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":" * A GUI for Duke using FXML."},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":" */"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"    private Image appLogo \u003d new Image(this.getClass().getResourceAsStream(\"/images/corgi.png\"));"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"    public void start(Stage stage) {"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"            MainWindow mainWindow \u003d new MainWindow();"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"            fxmlLoader.setRoot(mainWindow);"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"            stage.setScene(scene);"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"            stage.setTitle(\"Doggo\");"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"            stage.getIcons().add(appLogo);"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"            stage.show();"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":39}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.layout.BackgroundImage;"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.layout.BackgroundPosition;"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.layout.BackgroundRepeat;"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.layout.BackgroundSize;"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":" */"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"    private static final String GREETINGS \u003d \"Woof! I\u0027m your favourite Doggo!\\n\""},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"        + \"How can I help you?\";"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"    private VBox dialogContainer;"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"    private TextField userInput;"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"    private Button sendButton;"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"    private Duke duke;"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pug.png\"));"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/corgi.png\"));"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"    private Image backgroundImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bgimg.png\"));"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"    private Image sendIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/send.png\"));"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"    private ImageView sendLogo \u003d new ImageView(sendIcon);"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"     * Initialises the new GUI window."},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"    @FXML"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"    public void initialize() {"},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"        setDialogBackground();"},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"        //Button"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"        sendLogo.setFitHeight(20);"},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"        sendLogo.setFitWidth(20);"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"        sendButton.setGraphic(sendLogo);"},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"            DialogBox.getDukeDialog(GREETINGS, dukeImage)"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"        );"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"    public void setDialogBackground() {"},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"        BackgroundImage bg \u003d new BackgroundImage(backgroundImage, BackgroundRepeat.NO_REPEAT, BackgroundRepeat.REPEAT,"},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"            BackgroundPosition.DEFAULT,"},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"            new BackgroundSize(0, 0, false, false, true, false));"},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"        dialogContainer.setBackground(new Background(bg));"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"        duke \u003d d;"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"    @FXML"},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":"    private void handleUserInput() {"},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":"            DialogBox.getUserDialog(input, userImage),"},{"lineNumber":79,"author":{"gitId":"florenciamartina"},"content":"            DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":80,"author":{"gitId":"florenciamartina"},"content":"        );"},{"lineNumber":81,"author":{"gitId":"florenciamartina"},"content":"        userInput.clear();"},{"lineNumber":82,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":83}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"    private LocalDate deadline;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"    private LocalTime time;"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"     * Constructs deadline object with"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"     * description and date that is not done."},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"     * @param description Description of the task."},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"     * @param deadline    Deadline date of the task."},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"    public Deadline(String description, LocalDate deadline) {"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"        this.time \u003d null;"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"     * Constructs deadline object with"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"     * description, date, and time that is not done."},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"     * @param description Description of the task."},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"     * @param deadline    Deadline date of the task."},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"     * @param time        Deadline time of the task."},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"    public Deadline(String description, LocalDate deadline, LocalTime time) {"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"        super(description);"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"        this.time \u003d time;"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"     * Constructs deadline object with description and date."},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"     * Constructs a done object if isDone is true"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"     * and not done object otherwise."},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"     * @param description Description of the task."},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"     * @param isDone      Indicates whether a task is done or not."},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"     * @param deadline    Deadline date of the task."},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"    public Deadline(String description, Boolean isDone, LocalDate deadline) {"},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"        super(description, isDone);"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"        this.time \u003d null;"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"     * Constructs deadline object with description, date, and time."},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"     * Constructs a done object if isDone is true"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"     * and not done object otherwise."},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"     * @param description Description of the task."},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"     * @param isDone      Indicates whether a task is done or not."},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"     * @param deadline    Deadline date of the task."},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"     * @param time        Deadline time of the task."},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"    public Deadline(String description, Boolean isDone, LocalDate deadline, LocalTime time) {"},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":"        super(description, isDone);"},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"        this.time \u003d time;"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"     * Returns D to mark this as a deadline object."},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":"     * @return D in string."},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":"    public String getType() {"},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":"        return \"D\";"},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"florenciamartina"},"content":"     * Returns the date of this deadline."},{"lineNumber":80,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"florenciamartina"},"content":"     * @return Deadline date in LocalDate."},{"lineNumber":82,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"florenciamartina"},"content":"    public LocalDate getDeadline() {"},{"lineNumber":84,"author":{"gitId":"florenciamartina"},"content":"        return this.deadline;"},{"lineNumber":85,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":87,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"florenciamartina"},"content":"     * Returns the time of this deadline if it exists."},{"lineNumber":89,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"florenciamartina"},"content":"     * @return Deadline time in LocalTime."},{"lineNumber":91,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"florenciamartina"},"content":"    public LocalTime getDeadlineTime() {"},{"lineNumber":93,"author":{"gitId":"florenciamartina"},"content":"        return this.time;"},{"lineNumber":94,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":96,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"florenciamartina"},"content":"     * Returns the string representation of this deadline object."},{"lineNumber":98,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"florenciamartina"},"content":"     * @return String object of this deadline."},{"lineNumber":100,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":102,"author":{"gitId":"florenciamartina"},"content":"    public String toString() {"},{"lineNumber":103,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":104,"author":{"gitId":"florenciamartina"},"content":"        return this.time !\u003d null"},{"lineNumber":105,"author":{"gitId":"florenciamartina"},"content":"            ? \"[\" + this.getType() + \"]\" + this.getStatusIcon() + \" \""},{"lineNumber":106,"author":{"gitId":"florenciamartina"},"content":"            + this.description + \" (by:\" + this.deadline.format("},{"lineNumber":107,"author":{"gitId":"florenciamartina"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":108,"author":{"gitId":"florenciamartina"},"content":"            + \" \" + this.time.format(DateTimeFormatter.ISO_LOCAL_TIME) + \")\""},{"lineNumber":109,"author":{"gitId":"florenciamartina"},"content":"            : \"[\" + this.getType() + \"]\" + this.getStatusIcon() + \" \""},{"lineNumber":110,"author":{"gitId":"florenciamartina"},"content":"            + this.description + \" (by:\" + this.deadline.format("},{"lineNumber":111,"author":{"gitId":"florenciamartina"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":112,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":114,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"florenciamartina"},"content":"     * Mark this deadline as done."},{"lineNumber":116,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"florenciamartina"},"content":"     * @return Done version of this deadline task."},{"lineNumber":118,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":120,"author":{"gitId":"florenciamartina"},"content":"    public Deadline markAsDone() {"},{"lineNumber":121,"author":{"gitId":"florenciamartina"},"content":"        //int index \u003d taskNum - 1;"},{"lineNumber":122,"author":{"gitId":"florenciamartina"},"content":"        if (!this.isDone) {"},{"lineNumber":123,"author":{"gitId":"florenciamartina"},"content":"            Deadline newTask \u003d new Deadline(this.getDescription(), true, this.deadline, this.time);"},{"lineNumber":124,"author":{"gitId":"florenciamartina"},"content":"            return newTask;"},{"lineNumber":125,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"florenciamartina"},"content":"        return this;"},{"lineNumber":127,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":129,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":130,"author":{"gitId":"florenciamartina"},"content":"    public boolean equals(Object other) {"},{"lineNumber":131,"author":{"gitId":"florenciamartina"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":132,"author":{"gitId":"florenciamartina"},"content":"            return true;"},{"lineNumber":133,"author":{"gitId":"florenciamartina"},"content":"        } else if (other instanceof Deadline) {"},{"lineNumber":134,"author":{"gitId":"florenciamartina"},"content":"            Deadline deadline \u003d (Deadline) other;"},{"lineNumber":135,"author":{"gitId":"florenciamartina"},"content":"            boolean descIsEqual \u003d this.description.equals(deadline.getDescription());"},{"lineNumber":136,"author":{"gitId":"florenciamartina"},"content":"            boolean dateIsEqual \u003d this.deadline.equals(deadline.getDeadline());"},{"lineNumber":137,"author":{"gitId":"florenciamartina"},"content":"            boolean timeIsEqual \u003d false;"},{"lineNumber":138,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":139,"author":{"gitId":"florenciamartina"},"content":"            if (this.time !\u003d null \u0026\u0026 deadline.getDeadlineTime() !\u003d null) {"},{"lineNumber":140,"author":{"gitId":"florenciamartina"},"content":"                timeIsEqual \u003d this.time.equals(deadline.getDeadlineTime());"},{"lineNumber":141,"author":{"gitId":"florenciamartina"},"content":"            } else if (this.time \u003d\u003d null \u0026\u0026 deadline.getDeadlineTime() \u003d\u003d null) {"},{"lineNumber":142,"author":{"gitId":"florenciamartina"},"content":"                timeIsEqual \u003d true;"},{"lineNumber":143,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":144,"author":{"gitId":"florenciamartina"},"content":"            return descIsEqual \u0026\u0026 dateIsEqual \u0026\u0026 timeIsEqual;"},{"lineNumber":145,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":146,"author":{"gitId":"florenciamartina"},"content":"            return false;"},{"lineNumber":147,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":149}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"    private LocalDate date;"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"    private LocalTime startTime;"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"    private LocalTime endTime;"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"     * Constructs deadline object with"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"     * description and date that is not done."},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"     * @param description Description of the task."},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"     * @param date        Event date of the task."},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"    public Event(String description, LocalDate date) {"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"        this.date \u003d date;"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"        this.startTime \u003d null;"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"        this.endTime \u003d null;"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"     * Constructs event object with"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"     * description, date, and start time that is not done."},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"     * @param description Description of the task."},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"     * @param date        Event date of the task."},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"     * @param startTime   Start time of this event."},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"    public Event(String description, LocalDate date, LocalTime startTime) {"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"        super(description);"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"        this.date \u003d date;"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"        this.endTime \u003d null;"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"     * Constructs event object with description, date,"},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"     * start time, and end time that is not done."},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"     * @param description Description of the task."},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"     * @param date        Event date of the task."},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"     * @param startTime   Start time of this event."},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"     * @param endTime     End time of this event."},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"    public Event(String description, LocalDate date, LocalTime startTime, LocalTime endTime) {"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"        super(description);"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"        this.date \u003d date;"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"     * Constructs event object with description and date."},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"     * Constructs a done object if isDone is true"},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"     * and not done object otherwise."},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"     * @param description Description of the task."},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":"     * @param isDone      Indicates whether this task is done or not."},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":"     * @param date        Event date of the task."},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"    public Event(String description, Boolean isDone, LocalDate date) {"},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":"        super(description, isDone);"},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":"        this.date \u003d date;"},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"        this.startTime \u003d null;"},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"        this.endTime \u003d null;"},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":"     * Constructs event object with description and date."},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":"     * Constructs a done object if isDone is true"},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":"     * and not done object otherwise."},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"florenciamartina"},"content":"     * @param description Description of the task."},{"lineNumber":80,"author":{"gitId":"florenciamartina"},"content":"     * @param isDone      Indicates whether this task is done or not."},{"lineNumber":81,"author":{"gitId":"florenciamartina"},"content":"     * @param date        Event date of the task."},{"lineNumber":82,"author":{"gitId":"florenciamartina"},"content":"     * @param startTime   Start time of this event."},{"lineNumber":83,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"florenciamartina"},"content":"    public Event(String description, Boolean isDone, LocalDate date, LocalTime startTime) {"},{"lineNumber":85,"author":{"gitId":"florenciamartina"},"content":"        super(description, isDone);"},{"lineNumber":86,"author":{"gitId":"florenciamartina"},"content":"        this.date \u003d date;"},{"lineNumber":87,"author":{"gitId":"florenciamartina"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":88,"author":{"gitId":"florenciamartina"},"content":"        this.endTime \u003d null;"},{"lineNumber":89,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":91,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"florenciamartina"},"content":"     * Constructs event object with description and date."},{"lineNumber":93,"author":{"gitId":"florenciamartina"},"content":"     * Constructs a done object if isDone is true"},{"lineNumber":94,"author":{"gitId":"florenciamartina"},"content":"     * and not done object otherwise."},{"lineNumber":95,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"florenciamartina"},"content":"     * @param description Description of the task."},{"lineNumber":97,"author":{"gitId":"florenciamartina"},"content":"     * @param isDone      Indicates whether this task is done or not."},{"lineNumber":98,"author":{"gitId":"florenciamartina"},"content":"     * @param date        Event date of the task."},{"lineNumber":99,"author":{"gitId":"florenciamartina"},"content":"     * @param startTime   Start time of this event."},{"lineNumber":100,"author":{"gitId":"florenciamartina"},"content":"     * @param endTime     End time of this event."},{"lineNumber":101,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":103,"author":{"gitId":"florenciamartina"},"content":"    public Event(String description, Boolean isDone,"},{"lineNumber":104,"author":{"gitId":"florenciamartina"},"content":"                 LocalDate date, LocalTime startTime, LocalTime endTime) {"},{"lineNumber":105,"author":{"gitId":"florenciamartina"},"content":"        super(description, isDone);"},{"lineNumber":106,"author":{"gitId":"florenciamartina"},"content":"        this.date \u003d date;"},{"lineNumber":107,"author":{"gitId":"florenciamartina"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":108,"author":{"gitId":"florenciamartina"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":109,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":111,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"florenciamartina"},"content":"     * Returns E to mark this as an event object."},{"lineNumber":113,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"florenciamartina"},"content":"     * @return E in string."},{"lineNumber":115,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"florenciamartina"},"content":"    public String getType() {"},{"lineNumber":117,"author":{"gitId":"florenciamartina"},"content":"        return \"E\";"},{"lineNumber":118,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":120,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"florenciamartina"},"content":"     * Returns the date of this event."},{"lineNumber":122,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":123,"author":{"gitId":"florenciamartina"},"content":"     * @return Event date in LocalDate."},{"lineNumber":124,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"florenciamartina"},"content":"    public LocalDate getEventDate() {"},{"lineNumber":126,"author":{"gitId":"florenciamartina"},"content":"        return this.date;"},{"lineNumber":127,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":129,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"florenciamartina"},"content":"     * Returns the start time of this event if it exists."},{"lineNumber":131,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":132,"author":{"gitId":"florenciamartina"},"content":"     * @return Event start time in LocalTime."},{"lineNumber":133,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"florenciamartina"},"content":"    public LocalTime getStartTime() {"},{"lineNumber":135,"author":{"gitId":"florenciamartina"},"content":"        return this.startTime;"},{"lineNumber":136,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":138,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"florenciamartina"},"content":"     * Returns the end time of this event if it exists."},{"lineNumber":140,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":141,"author":{"gitId":"florenciamartina"},"content":"     * @return Deadline time in LocalTime."},{"lineNumber":142,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"florenciamartina"},"content":"    public LocalTime getEndTime() {"},{"lineNumber":144,"author":{"gitId":"florenciamartina"},"content":"        return this.endTime;"},{"lineNumber":145,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":147,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":148,"author":{"gitId":"florenciamartina"},"content":"     * Returns the string representation of this event object."},{"lineNumber":149,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":150,"author":{"gitId":"florenciamartina"},"content":"     * @return String object of this event."},{"lineNumber":151,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":153,"author":{"gitId":"florenciamartina"},"content":"    public String toString() {"},{"lineNumber":154,"author":{"gitId":"florenciamartina"},"content":"        if (this.startTime !\u003d null \u0026\u0026 this.endTime !\u003d null) {"},{"lineNumber":155,"author":{"gitId":"florenciamartina"},"content":"            return \"[\" + this.getType() + \"]\" + this.getStatusIcon() + \" \""},{"lineNumber":156,"author":{"gitId":"florenciamartina"},"content":"                + this.description + \" (at:\" + this.date.format("},{"lineNumber":157,"author":{"gitId":"florenciamartina"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":158,"author":{"gitId":"florenciamartina"},"content":"                + \" \" + this.startTime.format(DateTimeFormatter.ISO_LOCAL_TIME)"},{"lineNumber":159,"author":{"gitId":"florenciamartina"},"content":"                + \" - \" + this.endTime.format(DateTimeFormatter.ISO_LOCAL_TIME) + \")\";"},{"lineNumber":160,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":161,"author":{"gitId":"florenciamartina"},"content":"        } else if (this.startTime !\u003d null) {"},{"lineNumber":162,"author":{"gitId":"florenciamartina"},"content":"            return \"[\" + this.getType() + \"]\" + this.getStatusIcon() + \" \""},{"lineNumber":163,"author":{"gitId":"florenciamartina"},"content":"                + this.description + \" (at:\" + this.date.format("},{"lineNumber":164,"author":{"gitId":"florenciamartina"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":165,"author":{"gitId":"florenciamartina"},"content":"                + \" \" + this.startTime.format(DateTimeFormatter.ISO_LOCAL_TIME) + \")\";"},{"lineNumber":166,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":167,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":168,"author":{"gitId":"florenciamartina"},"content":"            return \"[\" + this.getType() + \"]\" + this.getStatusIcon() + \" \""},{"lineNumber":169,"author":{"gitId":"florenciamartina"},"content":"                + this.description + \" (at:\" + this.date.format("},{"lineNumber":170,"author":{"gitId":"florenciamartina"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":171,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":174,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"florenciamartina"},"content":"     * Mark this event as done."},{"lineNumber":176,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":177,"author":{"gitId":"florenciamartina"},"content":"     * @return Done version of this event task."},{"lineNumber":178,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":180,"author":{"gitId":"florenciamartina"},"content":"    public Event markAsDone() {"},{"lineNumber":181,"author":{"gitId":"florenciamartina"},"content":"        //int index \u003d taskNum - 1;"},{"lineNumber":182,"author":{"gitId":"florenciamartina"},"content":"        if (!this.isDone) {"},{"lineNumber":183,"author":{"gitId":"florenciamartina"},"content":"            Event newTask \u003d new Event(this.getDescription(),"},{"lineNumber":184,"author":{"gitId":"florenciamartina"},"content":"                true, this.date, this.startTime, this.endTime);"},{"lineNumber":185,"author":{"gitId":"florenciamartina"},"content":"            return newTask;"},{"lineNumber":186,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"florenciamartina"},"content":"        return this;"},{"lineNumber":188,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":190,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":191,"author":{"gitId":"florenciamartina"},"content":"    public boolean equals(Object other) {"},{"lineNumber":192,"author":{"gitId":"florenciamartina"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":193,"author":{"gitId":"florenciamartina"},"content":"            return true;"},{"lineNumber":194,"author":{"gitId":"florenciamartina"},"content":"        } else if (other instanceof Event) {"},{"lineNumber":195,"author":{"gitId":"florenciamartina"},"content":"            Event event \u003d (Event) other;"},{"lineNumber":196,"author":{"gitId":"florenciamartina"},"content":"            boolean descIsEqual \u003d this.description.equals(event.getDescription());"},{"lineNumber":197,"author":{"gitId":"florenciamartina"},"content":"            boolean dateIsEqual \u003d this.getEventDate().equals(event.getEventDate());"},{"lineNumber":198,"author":{"gitId":"florenciamartina"},"content":"            boolean startTimeIsEqual \u003d false;"},{"lineNumber":199,"author":{"gitId":"florenciamartina"},"content":"            boolean endTimeIsEqual \u003d false;"},{"lineNumber":200,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":201,"author":{"gitId":"florenciamartina"},"content":"            if (this.startTime !\u003d null \u0026\u0026 event.getStartTime() !\u003d null) {"},{"lineNumber":202,"author":{"gitId":"florenciamartina"},"content":"                startTimeIsEqual \u003d this.startTime.equals(event.getStartTime());"},{"lineNumber":203,"author":{"gitId":"florenciamartina"},"content":"            } else if (this.startTime \u003d\u003d null \u0026\u0026 event.getStartTime() \u003d\u003d null) {"},{"lineNumber":204,"author":{"gitId":"florenciamartina"},"content":"                startTimeIsEqual \u003d true;"},{"lineNumber":205,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":206,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":207,"author":{"gitId":"florenciamartina"},"content":"            if (this.endTime !\u003d null \u0026\u0026 event.getEndTime() !\u003d null) {"},{"lineNumber":208,"author":{"gitId":"florenciamartina"},"content":"                endTimeIsEqual \u003d this.endTime.equals(event.getEndTime());"},{"lineNumber":209,"author":{"gitId":"florenciamartina"},"content":"            } else if (this.endTime \u003d\u003d null \u0026\u0026 event.endTime \u003d\u003d null) {"},{"lineNumber":210,"author":{"gitId":"florenciamartina"},"content":"                endTimeIsEqual \u003d true;"},{"lineNumber":211,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":212,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":213,"author":{"gitId":"florenciamartina"},"content":"            return descIsEqual \u0026\u0026 dateIsEqual \u0026\u0026 startTimeIsEqual \u0026\u0026 endTimeIsEqual;"},{"lineNumber":214,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":215,"author":{"gitId":"florenciamartina"},"content":"            return false;"},{"lineNumber":216,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":219,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":219}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"     * Constructs task."},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"     * @param description Task description."},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"    public Task(String description) {"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"     * Constructs task."},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"     * @param description Task description."},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"     * @param isDone      Done indicator."},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"    public Task(String description, Boolean isDone) {"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"        this.description \u003d description;"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"     * Returns the status of the task."},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"     * @return A tick sign if the task is done and a cross otherwise."},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"    public String getStatusIcon() {"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"        return (isDone ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\");"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"     * Returns the type of the task."},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"     * @return E for event, T for todo, D for deadline."},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"    public abstract String getType();"},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"     * Returns the task decription."},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"     * @return Description of the task."},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"    public String getDescription() {"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"        return this.description;"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"     * Get status of the task."},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"     * @return True if the task is done and false otherwise."},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":62,"author":{"gitId":"florenciamartina"},"content":"    public Boolean getStatus() {"},{"lineNumber":63,"author":{"gitId":"florenciamartina"},"content":"        return isDone;"},{"lineNumber":64,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":66,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"florenciamartina"},"content":"     * Mark this task as done."},{"lineNumber":68,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"florenciamartina"},"content":"     * @return Done version of the old task."},{"lineNumber":70,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"florenciamartina"},"content":"    public abstract Task markAsDone();"},{"lineNumber":72,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":73,"author":{"gitId":"florenciamartina"},"content":"    public LocalDate getTaskDate() {"},{"lineNumber":74,"author":{"gitId":"florenciamartina"},"content":"        if (this instanceof Todo) {"},{"lineNumber":75,"author":{"gitId":"florenciamartina"},"content":"            return LocalDate.MAX;"},{"lineNumber":76,"author":{"gitId":"florenciamartina"},"content":"        } else if (this instanceof Event) {"},{"lineNumber":77,"author":{"gitId":"florenciamartina"},"content":"            return ((Event) this).getEventDate();"},{"lineNumber":78,"author":{"gitId":"florenciamartina"},"content":"        } else if (this instanceof Deadline) {"},{"lineNumber":79,"author":{"gitId":"florenciamartina"},"content":"            return ((Deadline) this).getDeadline();"},{"lineNumber":80,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":81,"author":{"gitId":"florenciamartina"},"content":"            return null;"},{"lineNumber":82,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":85,"author":{"gitId":"florenciamartina"},"content":"    public LocalTime getTaskTime() {"},{"lineNumber":86,"author":{"gitId":"florenciamartina"},"content":"        if (this instanceof Todo) {"},{"lineNumber":87,"author":{"gitId":"florenciamartina"},"content":"            return LocalTime.MAX;"},{"lineNumber":88,"author":{"gitId":"florenciamartina"},"content":"        } else if (this instanceof Event) {"},{"lineNumber":89,"author":{"gitId":"florenciamartina"},"content":"            LocalTime eventTime \u003d ((Event) this).getStartTime();"},{"lineNumber":90,"author":{"gitId":"florenciamartina"},"content":"            return eventTime \u003d\u003d null"},{"lineNumber":91,"author":{"gitId":"florenciamartina"},"content":"                ? LocalTime.MAX"},{"lineNumber":92,"author":{"gitId":"florenciamartina"},"content":"                : eventTime;"},{"lineNumber":93,"author":{"gitId":"florenciamartina"},"content":"        } else if (this instanceof Deadline) {"},{"lineNumber":94,"author":{"gitId":"florenciamartina"},"content":"            LocalTime deadlineTime \u003d ((Deadline) this).getDeadlineTime();"},{"lineNumber":95,"author":{"gitId":"florenciamartina"},"content":"            return deadlineTime \u003d\u003d null"},{"lineNumber":96,"author":{"gitId":"florenciamartina"},"content":"                ? LocalTime.MAX"},{"lineNumber":97,"author":{"gitId":"florenciamartina"},"content":"                : deadlineTime;"},{"lineNumber":98,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":99,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":100,"author":{"gitId":"florenciamartina"},"content":"            return null;"},{"lineNumber":101,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":104,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":105,"author":{"gitId":"florenciamartina"},"content":"    public int compareTo(Task other) {"},{"lineNumber":106,"author":{"gitId":"florenciamartina"},"content":"        if (this.getTaskDate().compareTo(other.getTaskDate()) \u003e 0) {"},{"lineNumber":107,"author":{"gitId":"florenciamartina"},"content":"            if (this.getTaskTime().compareTo(other.getTaskTime()) \u003e 0) {"},{"lineNumber":108,"author":{"gitId":"florenciamartina"},"content":"                if (this.getDescription().compareTo(other.getDescription()) \u003e 0) {"},{"lineNumber":109,"author":{"gitId":"florenciamartina"},"content":"                    return 1;"},{"lineNumber":110,"author":{"gitId":"florenciamartina"},"content":"                } else if (this.getDescription().compareTo(other.getDescription()) \u003d\u003d 0) {"},{"lineNumber":111,"author":{"gitId":"florenciamartina"},"content":"                    return 0;"},{"lineNumber":112,"author":{"gitId":"florenciamartina"},"content":"                } else {"},{"lineNumber":113,"author":{"gitId":"florenciamartina"},"content":"                    return -1;"},{"lineNumber":114,"author":{"gitId":"florenciamartina"},"content":"                }"},{"lineNumber":115,"author":{"gitId":"florenciamartina"},"content":"            } else if (this.getTaskTime().compareTo(other.getTaskTime()) \u003d\u003d 0) {"},{"lineNumber":116,"author":{"gitId":"florenciamartina"},"content":"                return 0;"},{"lineNumber":117,"author":{"gitId":"florenciamartina"},"content":"            } else {"},{"lineNumber":118,"author":{"gitId":"florenciamartina"},"content":"                return -1;"},{"lineNumber":119,"author":{"gitId":"florenciamartina"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"florenciamartina"},"content":"        } else if (this.getTaskDate().compareTo(other.getTaskDate()) \u003d\u003d 0) {"},{"lineNumber":121,"author":{"gitId":"florenciamartina"},"content":"            return 0;"},{"lineNumber":122,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":123,"author":{"gitId":"florenciamartina"},"content":"            return -1;"},{"lineNumber":124,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":127,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"florenciamartina"},"content":"     * Returns string representation of this task."},{"lineNumber":129,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"florenciamartina"},"content":"     * @return String object of this task."},{"lineNumber":131,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":133,"author":{"gitId":"florenciamartina"},"content":"    public abstract String toString();"},{"lineNumber":134,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":135,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":136,"author":{"gitId":"florenciamartina"},"content":"    public abstract boolean equals(Object other);"},{"lineNumber":137,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":137}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"    public Todo(String description, Boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"        super(description, isDone);"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"     * Returns T to mark this as a todo object."},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"     * @return T in string."},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"    public String getType() {"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"        return \"T\";"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"     * Returns the string representation of this deadline object."},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"     * @return String object of this deadline."},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"        return \"[\" + this.getType() + \"]\" + this.getStatusIcon() + \" \" + this.description;"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"     * Mark this task as done."},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"     * @return Done version of the old task."},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"    public Todo markAsDone() {"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"        //int index \u003d taskNum - 1;"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"        if (!this.isDone) {"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"            Todo newTask \u003d new Todo(this.getDescription(), true);"},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"            return newTask;"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"        return this;"},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"    public boolean equals(Object other) {"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"            return true;"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"        } else if (other instanceof Todo) {"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"            Todo todo \u003d (Todo) other;"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"            boolean descIsEqual \u003d this.description.equals(todo.getDescription());"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"            return descIsEqual;"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"            return false;"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":59}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"    \u003cpadding\u003e"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"        \u003cInsets bottom\u003d\"2.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"2.0\" /\u003e"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"    \u003c/padding\u003e"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"    \u003cTextFlow fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #96ceeb; -fx-background-radius: 15;\"\u003e"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"        \u003cHBox.margin\u003e"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"            \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"        \u003c/HBox.margin\u003e"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"        \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"        \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"    \u003c/TextFlow\u003e"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"89.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" scaleX\u003d\"0.7\" scaleY\u003d\"0.7\" translateY\u003d\"-14.0\"\u003e"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"        \u003cHBox.margin\u003e"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"            \u003cInsets bottom\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"        \u003c/HBox.margin\u003e"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"    \u003c/ImageView\u003e"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"florenciamartina":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #00111a;\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"    \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"357.0\" layoutY\u003d\"557.0\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"35.0\" style\u003d\"-fx-background-color: #033047; -fx-background-radius: 100;\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\"\u003e"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"            \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"                \u003cFont name\u003d\"Libre Baskerville\" size\u003d\"13.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"            \u003c/font\u003e"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"        \u003c/Button\u003e"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"8.0\" layoutY\u003d\"556.8\" minHeight\u003d\"-Infinity\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"342.0\" promptText\u003d\"Type something here\" style\u003d\"-fx-background-color: #01293d; -fx-text-fill: #98d3ed; -fx-background-radius: 20;\" AnchorPane.bottomAnchor\u003d\"8.0\"\u003e"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"            \u003cpadding\u003e"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"            \u003c/padding\u003e"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"            \u003cfont\u003e"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"                \u003cFont name\u003d\"Baskerville Old Face\" size\u003d\"14.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"            \u003c/font\u003e"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"         \u003copaqueInsets\u003e"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"            \u003cInsets /\u003e"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"         \u003c/opaqueInsets\u003e"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"        \u003c/TextField\u003e"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"550.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: black;\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"            \u003ccontent\u003e"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"558.0\" prefWidth\u003d\"386.0\" /\u003e"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"            \u003c/content\u003e"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"    \u003c/children\u003e"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"florenciamartina":35}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Deadline;"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Event;"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Task;"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"import duke.task.Todo;"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"public class DukeTest {"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"    private TaskList taskList \u003d new TaskList();"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"    private Task todo \u003d new Todo(\"test1\");"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"    private LocalDate today \u003d LocalDate.parse(\"2020-08-24\");"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"    private LocalDate tmr \u003d LocalDate.parse(\"2020-08-25\");"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"    private LocalTime startTime \u003d LocalTime.parse(\"12:00\");"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":"    private LocalTime endTime \u003d LocalTime.parse(\"14:00\");"},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"    private LocalTime time \u003d LocalTime.parse(\"09:00\");"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"    private Task event \u003d new Event(\"test2\", today, startTime, endTime);"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"    private Task deadline \u003d new Deadline(\"test3\", tmr, time);"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"    private TaskList createTaskList(Task task) {"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"        list.add(task);"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"        return new TaskList(list);"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"    public void todoTest() {"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"        taskList \u003d createTaskList(todo);"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"        assertEquals(todo.toString(), taskList.getTask(1).toString());"},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"    public void eventTest() {"},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"        taskList \u003d createTaskList(event);"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"        assertEquals(event.toString(), taskList.getTask(1).toString());"},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"    public void deadlineTest() {"},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"        taskList \u003d createTaskList(deadline);"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"        assertEquals(deadline.toString(), taskList.getTask(1).toString());"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"}"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":""}],"authorContributionMap":{"florenciamartina":57}},{"path":"src/test/java/duke/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"import duke.Parser;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.CalendarException;"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.DeadlineException;"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.DukeException;"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.EventException;"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"import duke.exception.TodoException;"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"public class CommandTest {"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"    public void commandTest1() {"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"            Command command \u003d new TodoCommand(\"test1\");"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"            assertEquals(command, Parser.parse(\"todo test1\"));"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"        } catch (DukeException t) {"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":"            TodoException todoExc \u003d new TodoException();"},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"            assertEquals(todoExc.getMessage(), t.getMessage());"},{"lineNumber":24,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":27,"author":{"gitId":"florenciamartina"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"florenciamartina"},"content":"    public void commandTest2() {"},{"lineNumber":29,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"florenciamartina"},"content":"            DeadlineCommand command \u003d new DeadlineCommand(\"test2 /by 2020-09-08 16:00\");"},{"lineNumber":31,"author":{"gitId":"florenciamartina"},"content":"            assertEquals(command, Parser.parse(\"deadline test2 /by 2020-09-08 16:00\"));"},{"lineNumber":32,"author":{"gitId":"florenciamartina"},"content":"        } catch (CalendarException c) {"},{"lineNumber":33,"author":{"gitId":"florenciamartina"},"content":"            CalendarException calendarExc \u003d new CalendarException("},{"lineNumber":34,"author":{"gitId":"florenciamartina"},"content":"                \"Please enter the date in YYYY/MM/DD format and time in HH:MM format.\");"},{"lineNumber":35,"author":{"gitId":"florenciamartina"},"content":"            assertEquals(calendarExc.getMessage(), c.getMessage());"},{"lineNumber":36,"author":{"gitId":"florenciamartina"},"content":"        } catch (DeadlineException t) {"},{"lineNumber":37,"author":{"gitId":"florenciamartina"},"content":"            DeadlineException deadlineExc \u003d new DeadlineException("},{"lineNumber":38,"author":{"gitId":"florenciamartina"},"content":"                \"Please specify the task and deadline.\");"},{"lineNumber":39,"author":{"gitId":"florenciamartina"},"content":"            assertEquals(deadlineExc.getMessage(), t.getMessage());"},{"lineNumber":40,"author":{"gitId":"florenciamartina"},"content":"        } catch (DukeException d) {"},{"lineNumber":41,"author":{"gitId":"florenciamartina"},"content":"            System.out.println(d.getMessage());"},{"lineNumber":42,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":45,"author":{"gitId":"florenciamartina"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"florenciamartina"},"content":"    public void commandTest3() {"},{"lineNumber":47,"author":{"gitId":"florenciamartina"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"florenciamartina"},"content":"            EventCommand command \u003d new EventCommand(\"test3 /at 2020-09-01 16:00-19:00\");"},{"lineNumber":49,"author":{"gitId":"florenciamartina"},"content":"            assertEquals(command, Parser.parse(\"event test3 /at 2020-09-01 16:00-19:00\"));"},{"lineNumber":50,"author":{"gitId":"florenciamartina"},"content":"        } catch (CalendarException c) {"},{"lineNumber":51,"author":{"gitId":"florenciamartina"},"content":"            CalendarException calendarExc \u003d new CalendarException("},{"lineNumber":52,"author":{"gitId":"florenciamartina"},"content":"                \"Please enter the date in YYYY/MM/DD format and time in HH:MM format.\");"},{"lineNumber":53,"author":{"gitId":"florenciamartina"},"content":"            assertEquals(calendarExc.getMessage(), c.getMessage());"},{"lineNumber":54,"author":{"gitId":"florenciamartina"},"content":"        } catch (EventException t) {"},{"lineNumber":55,"author":{"gitId":"florenciamartina"},"content":"            EventException eventExc \u003d new EventException(\"Please specify the event name and date.\");"},{"lineNumber":56,"author":{"gitId":"florenciamartina"},"content":"            assertEquals(eventExc.getMessage(), t.getMessage());"},{"lineNumber":57,"author":{"gitId":"florenciamartina"},"content":"        } catch (DukeException d) {"},{"lineNumber":58,"author":{"gitId":"florenciamartina"},"content":"            System.out.println(d.getMessage());"},{"lineNumber":59,"author":{"gitId":"florenciamartina"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":61}},{"path":"src/test/java/duke/exception/ExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"import duke.Parser;"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"public class ExceptionTest {"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"    public void exceptionTest1() {"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"        assertThrows(WrongInputException.class, () -\u003e"},{"lineNumber":14,"author":{"gitId":"florenciamartina"},"content":"            Parser.parse(\"hehe\"));"},{"lineNumber":15,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":17,"author":{"gitId":"florenciamartina"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"florenciamartina"},"content":"    public void exceptionTest2() {"},{"lineNumber":19,"author":{"gitId":"florenciamartina"},"content":"        assertThrows(DukeException.class, () -\u003e"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"            Parser.parse(\"todo \"));"},{"lineNumber":21,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":23,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":23}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"public class TodoTest {"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"    public void dummyTest() {"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"        assertEquals(2, 2);"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"}"}],"authorContributionMap":{"florenciamartina":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"florenciamartina"},"content":"todo read"},{"lineNumber":2,"author":{"gitId":"florenciamartina"},"content":"deadline math homework /by Monday"},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":"deadline cs homework /by Tuesday"},{"lineNumber":4,"author":{"gitId":"florenciamartina"},"content":"deadline sci homework /by Wednesday"},{"lineNumber":5,"author":{"gitId":"florenciamartina"},"content":"event pillow party /at 9th August 2020"},{"lineNumber":6,"author":{"gitId":"florenciamartina"},"content":"event funeral /at 8th August 2020"},{"lineNumber":7,"author":{"gitId":"florenciamartina"},"content":"event eat /at 10th August 2020"},{"lineNumber":8,"author":{"gitId":"florenciamartina"},"content":"list"},{"lineNumber":9,"author":{"gitId":"florenciamartina"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"florenciamartina"},"content":"done 2"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"list"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":"done 3"},{"lineNumber":13,"author":{"gitId":"florenciamartina"},"content":"bye"}],"authorContributionMap":{"florenciamartina":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":5,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":8,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":11,"author":{"gitId":"florenciamartina"},"content":"javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\Duke.java"},{"lineNumber":12,"author":{"gitId":"florenciamartina"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":16,"author":{"gitId":"-"},"content":")"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"florenciamartina"},"content":"java -classpath ..\\bin main.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"florenciamartina":4,"-":19}}]
