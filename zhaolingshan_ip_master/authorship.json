[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaolingshan": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public static void inputList(String display) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            System.out.println((i + 1) + \". \" + task + \"\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        readUserInput();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public static void inputDone(String display) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        int index \u003d Integer.parseInt(display.substring(5));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        Task task \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        readUserInput();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public static void inputTodo(String display) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            if (display.length() \u003d\u003d 4 || display.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            String description \u003d display.substring(5);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            taskList.add(todo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + todo + \"\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                    + \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            readUserInput();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public static void inputDeadline(String display) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            if (display.length() \u003d\u003d 8 || display.length() \u003d\u003d 9) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                throw new DukeException(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            if (display.contains(\"/\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                int index \u003d display.indexOf(\"/\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                if (display.substring(index + 1).equals(\"\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                        || display.substring(index + 3).equals(\"\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                        || display.substring(index + 4).equals(\"\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                    throw new DukeException(\"â˜¹ OOPS!!! Please key in a valid date and time.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                String description \u003d display.substring(9, index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                String deadlineDate \u003d display.substring(index + 4);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                Deadline deadline \u003d new Deadline(description, deadlineDate);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                taskList.add(deadline);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + deadline + \"\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                        + \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                throw new DukeException(\"â˜¹ OOPS!!! The format is wrong. A dash is missing.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            }  "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            readUserInput();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public static void inputEvent(String display) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            if (display.length() \u003d\u003d 5 || display.length() \u003d\u003d 6) { // \"event\" or \"event \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                throw new DukeException(\"â˜¹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            if (display.contains(\"/\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                int index \u003d display.indexOf(\"/\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                if (display.substring(index + 1).equals(\"\") "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                        || display.substring(index + 3).equals(\"\")"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                        || display.substring(index + 4 ).equals(\"\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                    throw new DukeException(\"â˜¹ OOPS!!! Please key in a valid date and time.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                String description \u003d display.substring(6, index);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                String eventDate \u003d display.substring(index + 4);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                Event event \u003d new Event(description, eventDate);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                taskList.add(event);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + event + \"\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                        + \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                throw new DukeException(\"â˜¹ OOPS!!! The format is wrong. A dash is missing.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            readUserInput();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public static void delete(String display) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            if (display.length() \u003d\u003d 6 || display.length() \u003d\u003d 7) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                throw new DukeException(\"ERROR: Specify the task number which you want to delete.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            int index \u003d Integer.parseInt(display.substring(7));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            if (index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                throw new DukeException(\"ERROR: Task does not exist\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            Task task \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            taskList.remove(index - 1);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task + \"\\n\" "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                    + \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            readUserInput();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public static void readUserInput() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        String display \u003d sc.nextLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        if (display.equals(\"bye\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        } else if (display.equals(\"list\")) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            inputList(display);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        } else if (display.startsWith(\"done\")) { "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            inputDone(display);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        } else if (display.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            inputTodo(display);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        } else if (display.startsWith(\"deadline\")) { "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            inputDeadline(display);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        } else if (display.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            inputEvent(display);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        } else if (display.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            delete(display);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "                readUserInput();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke \\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo + \"\\n\" + greeting);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        readUserInput();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaolingshan": 158,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaolingshan": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaolingshan": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaolingshan": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaolingshan": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "zhaolingshan": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaolingshan"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "zhaolingshan": 2,
      "-": 37
    }
  }
]
